(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["KoreGraphTemplatesPluginSDK"] = factory();
	else
		root["KoreGraphTemplatesPluginSDK"] = factory();
})(self, () => {
return /******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ 7711:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

/* module decorator */ module = __webpack_require__.nmd(module);
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

/* jshint maxerr: 10000 */

/* jslint unused: true */

/* jshint shadow: true */

/* jshint -W075 */
(function (ns) {
  var _ns$asciiList;

  // this list must be ordered from largest length of the value array, index 0, to the shortest
  ns.emojioneList = {
    ':kiss_ww:': ["1f469-200d-2764-fe0f-200d-1f48b-200d-1f469", "1f469-2764-1f48b-1f469"],
    ':couplekiss_ww:': ["1f469-200d-2764-fe0f-200d-1f48b-200d-1f469", "1f469-2764-1f48b-1f469"],
    ':kiss_mm:': ["1f468-200d-2764-fe0f-200d-1f48b-200d-1f468", "1f468-2764-1f48b-1f468"],
    ':couplekiss_mm:': ["1f468-200d-2764-fe0f-200d-1f48b-200d-1f468", "1f468-2764-1f48b-1f468"],
    ':family_mmbb:': ["1f468-200d-1f468-200d-1f466-200d-1f466", "1f468-1f468-1f466-1f466"],
    ':family_mmgb:': ["1f468-200d-1f468-200d-1f467-200d-1f466", "1f468-1f468-1f467-1f466"],
    ':family_mmgg:': ["1f468-200d-1f468-200d-1f467-200d-1f467", "1f468-1f468-1f467-1f467"],
    ':family_mwbb:': ["1f468-200d-1f469-200d-1f466-200d-1f466", "1f468-1f469-1f466-1f466"],
    ':family_mwgb:': ["1f468-200d-1f469-200d-1f467-200d-1f466", "1f468-1f469-1f467-1f466"],
    ':family_mwgg:': ["1f468-200d-1f469-200d-1f467-200d-1f467", "1f468-1f469-1f467-1f467"],
    ':family_wwbb:': ["1f469-200d-1f469-200d-1f466-200d-1f466", "1f469-1f469-1f466-1f466"],
    ':family_wwgb:': ["1f469-200d-1f469-200d-1f467-200d-1f466", "1f469-1f469-1f467-1f466"],
    ':family_wwgg:': ["1f469-200d-1f469-200d-1f467-200d-1f467", "1f469-1f469-1f467-1f467"],
    ':couple_ww:': ["1f469-200d-2764-fe0f-200d-1f469", "1f469-2764-1f469"],
    ':couple_with_heart_ww:': ["1f469-200d-2764-fe0f-200d-1f469", "1f469-2764-1f469"],
    ':couple_mm:': ["1f468-200d-2764-fe0f-200d-1f468", "1f468-2764-1f468"],
    ':couple_with_heart_mm:': ["1f468-200d-2764-fe0f-200d-1f468", "1f468-2764-1f468"],
    ':family_mmb:': ["1f468-200d-1f468-200d-1f466", "1f468-1f468-1f466"],
    ':family_mmg:': ["1f468-200d-1f468-200d-1f467", "1f468-1f468-1f467"],
    ':family_mwg:': ["1f468-200d-1f469-200d-1f467", "1f468-1f469-1f467"],
    ':family_wwb:': ["1f469-200d-1f469-200d-1f466", "1f469-1f469-1f466"],
    ':family_wwg:': ["1f469-200d-1f469-200d-1f467", "1f469-1f469-1f467"],
    ':eye_in_speech_bubble:': ["1f441-200d-1f5e8", "1f441-1f5e8"],
    ':hash:': ["0023-fe0f-20e3", "0023-20e3"],
    ':zero:': ["0030-fe0f-20e3", "0030-20e3"],
    ':one:': ["0031-fe0f-20e3", "0031-20e3"],
    ':two:': ["0032-fe0f-20e3", "0032-20e3"],
    ':three:': ["0033-fe0f-20e3", "0033-20e3"],
    ':four:': ["0034-fe0f-20e3", "0034-20e3"],
    ':five:': ["0035-fe0f-20e3", "0035-20e3"],
    ':six:': ["0036-fe0f-20e3", "0036-20e3"],
    ':seven:': ["0037-fe0f-20e3", "0037-20e3"],
    ':eight:': ["0038-fe0f-20e3", "0038-20e3"],
    ':nine:': ["0039-fe0f-20e3", "0039-20e3"],
    ':asterisk:': ["002a-fe0f-20e3", "002a-20e3"],
    ':keycap_asterisk:': ["002a-fe0f-20e3", "002a-20e3"],
    ':metal_tone5:': ["1f918-1f3ff"],
    ':sign_of_the_horns_tone5:': ["1f918-1f3ff"],
    ':metal_tone4:': ["1f918-1f3fe"],
    ':sign_of_the_horns_tone4:': ["1f918-1f3fe"],
    ':metal_tone3:': ["1f918-1f3fd"],
    ':sign_of_the_horns_tone3:': ["1f918-1f3fd"],
    ':metal_tone2:': ["1f918-1f3fc"],
    ':sign_of_the_horns_tone2:': ["1f918-1f3fc"],
    ':metal_tone1:': ["1f918-1f3fb"],
    ':sign_of_the_horns_tone1:': ["1f918-1f3fb"],
    ':bath_tone5:': ["1f6c0-1f3ff"],
    ':bath_tone4:': ["1f6c0-1f3fe"],
    ':bath_tone3:': ["1f6c0-1f3fd"],
    ':bath_tone2:': ["1f6c0-1f3fc"],
    ':bath_tone1:': ["1f6c0-1f3fb"],
    ':walking_tone5:': ["1f6b6-1f3ff"],
    ':walking_tone4:': ["1f6b6-1f3fe"],
    ':walking_tone3:': ["1f6b6-1f3fd"],
    ':walking_tone2:': ["1f6b6-1f3fc"],
    ':walking_tone1:': ["1f6b6-1f3fb"],
    ':mountain_bicyclist_tone5:': ["1f6b5-1f3ff"],
    ':mountain_bicyclist_tone4:': ["1f6b5-1f3fe"],
    ':mountain_bicyclist_tone3:': ["1f6b5-1f3fd"],
    ':mountain_bicyclist_tone2:': ["1f6b5-1f3fc"],
    ':mountain_bicyclist_tone1:': ["1f6b5-1f3fb"],
    ':bicyclist_tone5:': ["1f6b4-1f3ff"],
    ':bicyclist_tone4:': ["1f6b4-1f3fe"],
    ':bicyclist_tone3:': ["1f6b4-1f3fd"],
    ':bicyclist_tone2:': ["1f6b4-1f3fc"],
    ':bicyclist_tone1:': ["1f6b4-1f3fb"],
    ':rowboat_tone5:': ["1f6a3-1f3ff"],
    ':rowboat_tone4:': ["1f6a3-1f3fe"],
    ':rowboat_tone3:': ["1f6a3-1f3fd"],
    ':rowboat_tone2:': ["1f6a3-1f3fc"],
    ':rowboat_tone1:': ["1f6a3-1f3fb"],
    ':pray_tone5:': ["1f64f-1f3ff"],
    ':pray_tone4:': ["1f64f-1f3fe"],
    ':pray_tone3:': ["1f64f-1f3fd"],
    ':pray_tone2:': ["1f64f-1f3fc"],
    ':pray_tone1:': ["1f64f-1f3fb"],
    ':person_with_pouting_face_tone5:': ["1f64e-1f3ff"],
    ':person_with_pouting_face_tone4:': ["1f64e-1f3fe"],
    ':person_with_pouting_face_tone3:': ["1f64e-1f3fd"],
    ':person_with_pouting_face_tone2:': ["1f64e-1f3fc"],
    ':person_with_pouting_face_tone1:': ["1f64e-1f3fb"],
    ':person_frowning_tone5:': ["1f64d-1f3ff"],
    ':person_frowning_tone4:': ["1f64d-1f3fe"],
    ':person_frowning_tone3:': ["1f64d-1f3fd"],
    ':person_frowning_tone2:': ["1f64d-1f3fc"],
    ':person_frowning_tone1:': ["1f64d-1f3fb"],
    ':raised_hands_tone5:': ["1f64c-1f3ff"],
    ':raised_hands_tone4:': ["1f64c-1f3fe"],
    ':raised_hands_tone3:': ["1f64c-1f3fd"],
    ':raised_hands_tone2:': ["1f64c-1f3fc"],
    ':raised_hands_tone1:': ["1f64c-1f3fb"],
    ':raising_hand_tone5:': ["1f64b-1f3ff"],
    ':raising_hand_tone4:': ["1f64b-1f3fe"],
    ':raising_hand_tone3:': ["1f64b-1f3fd"],
    ':raising_hand_tone2:': ["1f64b-1f3fc"],
    ':raising_hand_tone1:': ["1f64b-1f3fb"],
    ':bow_tone5:': ["1f647-1f3ff"],
    ':bow_tone4:': ["1f647-1f3fe"],
    ':bow_tone3:': ["1f647-1f3fd"],
    ':bow_tone2:': ["1f647-1f3fc"],
    ':bow_tone1:': ["1f647-1f3fb"],
    ':ok_woman_tone5:': ["1f646-1f3ff"],
    ':ok_woman_tone4:': ["1f646-1f3fe"],
    ':ok_woman_tone3:': ["1f646-1f3fd"],
    ':ok_woman_tone2:': ["1f646-1f3fc"],
    ':ok_woman_tone1:': ["1f646-1f3fb"],
    ':no_good_tone5:': ["1f645-1f3ff"],
    ':no_good_tone4:': ["1f645-1f3fe"],
    ':no_good_tone3:': ["1f645-1f3fd"],
    ':no_good_tone2:': ["1f645-1f3fc"],
    ':no_good_tone1:': ["1f645-1f3fb"],
    ':vulcan_tone5:': ["1f596-1f3ff"],
    ':raised_hand_with_part_between_middle_and_ring_fingers_tone5:': ["1f596-1f3ff"],
    ':vulcan_tone4:': ["1f596-1f3fe"],
    ':raised_hand_with_part_between_middle_and_ring_fingers_tone4:': ["1f596-1f3fe"],
    ':vulcan_tone3:': ["1f596-1f3fd"],
    ':raised_hand_with_part_between_middle_and_ring_fingers_tone3:': ["1f596-1f3fd"],
    ':vulcan_tone2:': ["1f596-1f3fc"],
    ':raised_hand_with_part_between_middle_and_ring_fingers_tone2:': ["1f596-1f3fc"],
    ':vulcan_tone1:': ["1f596-1f3fb"],
    ':raised_hand_with_part_between_middle_and_ring_fingers_tone1:': ["1f596-1f3fb"],
    ':middle_finger_tone5:': ["1f595-1f3ff"],
    ':reversed_hand_with_middle_finger_extended_tone5:': ["1f595-1f3ff"],
    ':middle_finger_tone4:': ["1f595-1f3fe"],
    ':reversed_hand_with_middle_finger_extended_tone4:': ["1f595-1f3fe"],
    ':middle_finger_tone3:': ["1f595-1f3fd"],
    ':reversed_hand_with_middle_finger_extended_tone3:': ["1f595-1f3fd"],
    ':middle_finger_tone2:': ["1f595-1f3fc"],
    ':reversed_hand_with_middle_finger_extended_tone2:': ["1f595-1f3fc"],
    ':middle_finger_tone1:': ["1f595-1f3fb"],
    ':reversed_hand_with_middle_finger_extended_tone1:': ["1f595-1f3fb"],
    ':hand_splayed_tone5:': ["1f590-1f3ff"],
    ':raised_hand_with_fingers_splayed_tone5:': ["1f590-1f3ff"],
    ':hand_splayed_tone4:': ["1f590-1f3fe"],
    ':raised_hand_with_fingers_splayed_tone4:': ["1f590-1f3fe"],
    ':hand_splayed_tone3:': ["1f590-1f3fd"],
    ':raised_hand_with_fingers_splayed_tone3:': ["1f590-1f3fd"],
    ':hand_splayed_tone2:': ["1f590-1f3fc"],
    ':raised_hand_with_fingers_splayed_tone2:': ["1f590-1f3fc"],
    ':hand_splayed_tone1:': ["1f590-1f3fb"],
    ':raised_hand_with_fingers_splayed_tone1:': ["1f590-1f3fb"],
    ':spy_tone5:': ["1f575-1f3ff"],
    ':sleuth_or_spy_tone5:': ["1f575-1f3ff"],
    ':spy_tone4:': ["1f575-1f3fe"],
    ':sleuth_or_spy_tone4:': ["1f575-1f3fe"],
    ':spy_tone3:': ["1f575-1f3fd"],
    ':sleuth_or_spy_tone3:': ["1f575-1f3fd"],
    ':spy_tone2:': ["1f575-1f3fc"],
    ':sleuth_or_spy_tone2:': ["1f575-1f3fc"],
    ':spy_tone1:': ["1f575-1f3fb"],
    ':sleuth_or_spy_tone1:': ["1f575-1f3fb"],
    ':muscle_tone5:': ["1f4aa-1f3ff"],
    ':muscle_tone4:': ["1f4aa-1f3fe"],
    ':muscle_tone3:': ["1f4aa-1f3fd"],
    ':muscle_tone2:': ["1f4aa-1f3fc"],
    ':muscle_tone1:': ["1f4aa-1f3fb"],
    ':haircut_tone5:': ["1f487-1f3ff"],
    ':haircut_tone4:': ["1f487-1f3fe"],
    ':haircut_tone3:': ["1f487-1f3fd"],
    ':haircut_tone2:': ["1f487-1f3fc"],
    ':haircut_tone1:': ["1f487-1f3fb"],
    ':massage_tone5:': ["1f486-1f3ff"],
    ':massage_tone4:': ["1f486-1f3fe"],
    ':massage_tone3:': ["1f486-1f3fd"],
    ':massage_tone2:': ["1f486-1f3fc"],
    ':massage_tone1:': ["1f486-1f3fb"],
    ':nail_care_tone5:': ["1f485-1f3ff"],
    ':nail_care_tone4:': ["1f485-1f3fe"],
    ':nail_care_tone3:': ["1f485-1f3fd"],
    ':nail_care_tone2:': ["1f485-1f3fc"],
    ':nail_care_tone1:': ["1f485-1f3fb"],
    ':dancer_tone5:': ["1f483-1f3ff"],
    ':dancer_tone4:': ["1f483-1f3fe"],
    ':dancer_tone3:': ["1f483-1f3fd"],
    ':dancer_tone2:': ["1f483-1f3fc"],
    ':dancer_tone1:': ["1f483-1f3fb"],
    ':guardsman_tone5:': ["1f482-1f3ff"],
    ':guardsman_tone4:': ["1f482-1f3fe"],
    ':guardsman_tone3:': ["1f482-1f3fd"],
    ':guardsman_tone2:': ["1f482-1f3fc"],
    ':guardsman_tone1:': ["1f482-1f3fb"],
    ':information_desk_person_tone5:': ["1f481-1f3ff"],
    ':information_desk_person_tone4:': ["1f481-1f3fe"],
    ':information_desk_person_tone3:': ["1f481-1f3fd"],
    ':information_desk_person_tone2:': ["1f481-1f3fc"],
    ':information_desk_person_tone1:': ["1f481-1f3fb"],
    ':angel_tone5:': ["1f47c-1f3ff"],
    ':angel_tone4:': ["1f47c-1f3fe"],
    ':angel_tone3:': ["1f47c-1f3fd"],
    ':angel_tone2:': ["1f47c-1f3fc"],
    ':angel_tone1:': ["1f47c-1f3fb"],
    ':princess_tone5:': ["1f478-1f3ff"],
    ':princess_tone4:': ["1f478-1f3fe"],
    ':princess_tone3:': ["1f478-1f3fd"],
    ':princess_tone2:': ["1f478-1f3fc"],
    ':princess_tone1:': ["1f478-1f3fb"],
    ':construction_worker_tone5:': ["1f477-1f3ff"],
    ':construction_worker_tone4:': ["1f477-1f3fe"],
    ':construction_worker_tone3:': ["1f477-1f3fd"],
    ':construction_worker_tone2:': ["1f477-1f3fc"],
    ':construction_worker_tone1:': ["1f477-1f3fb"],
    ':baby_tone5:': ["1f476-1f3ff"],
    ':baby_tone4:': ["1f476-1f3fe"],
    ':baby_tone3:': ["1f476-1f3fd"],
    ':baby_tone2:': ["1f476-1f3fc"],
    ':baby_tone1:': ["1f476-1f3fb"],
    ':older_woman_tone5:': ["1f475-1f3ff"],
    ':grandma_tone5:': ["1f475-1f3ff"],
    ':older_woman_tone4:': ["1f475-1f3fe"],
    ':grandma_tone4:': ["1f475-1f3fe"],
    ':older_woman_tone3:': ["1f475-1f3fd"],
    ':grandma_tone3:': ["1f475-1f3fd"],
    ':older_woman_tone2:': ["1f475-1f3fc"],
    ':grandma_tone2:': ["1f475-1f3fc"],
    ':older_woman_tone1:': ["1f475-1f3fb"],
    ':grandma_tone1:': ["1f475-1f3fb"],
    ':older_man_tone5:': ["1f474-1f3ff"],
    ':older_man_tone4:': ["1f474-1f3fe"],
    ':older_man_tone3:': ["1f474-1f3fd"],
    ':older_man_tone2:': ["1f474-1f3fc"],
    ':older_man_tone1:': ["1f474-1f3fb"],
    ':man_with_turban_tone5:': ["1f473-1f3ff"],
    ':man_with_turban_tone4:': ["1f473-1f3fe"],
    ':man_with_turban_tone3:': ["1f473-1f3fd"],
    ':man_with_turban_tone2:': ["1f473-1f3fc"],
    ':man_with_turban_tone1:': ["1f473-1f3fb"],
    ':man_with_gua_pi_mao_tone5:': ["1f472-1f3ff"],
    ':man_with_gua_pi_mao_tone4:': ["1f472-1f3fe"],
    ':man_with_gua_pi_mao_tone3:': ["1f472-1f3fd"],
    ':man_with_gua_pi_mao_tone2:': ["1f472-1f3fc"],
    ':man_with_gua_pi_mao_tone1:': ["1f472-1f3fb"],
    ':person_with_blond_hair_tone5:': ["1f471-1f3ff"],
    ':person_with_blond_hair_tone4:': ["1f471-1f3fe"],
    ':person_with_blond_hair_tone3:': ["1f471-1f3fd"],
    ':person_with_blond_hair_tone2:': ["1f471-1f3fc"],
    ':person_with_blond_hair_tone1:': ["1f471-1f3fb"],
    ':bride_with_veil_tone5:': ["1f470-1f3ff"],
    ':bride_with_veil_tone4:': ["1f470-1f3fe"],
    ':bride_with_veil_tone3:': ["1f470-1f3fd"],
    ':bride_with_veil_tone2:': ["1f470-1f3fc"],
    ':bride_with_veil_tone1:': ["1f470-1f3fb"],
    ':cop_tone5:': ["1f46e-1f3ff"],
    ':cop_tone4:': ["1f46e-1f3fe"],
    ':cop_tone3:': ["1f46e-1f3fd"],
    ':cop_tone2:': ["1f46e-1f3fc"],
    ':cop_tone1:': ["1f46e-1f3fb"],
    ':woman_tone5:': ["1f469-1f3ff"],
    ':woman_tone4:': ["1f469-1f3fe"],
    ':woman_tone3:': ["1f469-1f3fd"],
    ':woman_tone2:': ["1f469-1f3fc"],
    ':woman_tone1:': ["1f469-1f3fb"],
    ':man_tone5:': ["1f468-1f3ff"],
    ':man_tone4:': ["1f468-1f3fe"],
    ':man_tone3:': ["1f468-1f3fd"],
    ':man_tone2:': ["1f468-1f3fc"],
    ':man_tone1:': ["1f468-1f3fb"],
    ':girl_tone5:': ["1f467-1f3ff"],
    ':girl_tone4:': ["1f467-1f3fe"],
    ':girl_tone3:': ["1f467-1f3fd"],
    ':girl_tone2:': ["1f467-1f3fc"],
    ':girl_tone1:': ["1f467-1f3fb"],
    ':boy_tone5:': ["1f466-1f3ff"],
    ':boy_tone4:': ["1f466-1f3fe"],
    ':boy_tone3:': ["1f466-1f3fd"],
    ':boy_tone2:': ["1f466-1f3fc"],
    ':boy_tone1:': ["1f466-1f3fb"],
    ':open_hands_tone5:': ["1f450-1f3ff"],
    ':open_hands_tone4:': ["1f450-1f3fe"],
    ':open_hands_tone3:': ["1f450-1f3fd"],
    ':open_hands_tone2:': ["1f450-1f3fc"],
    ':open_hands_tone1:': ["1f450-1f3fb"],
    ':clap_tone5:': ["1f44f-1f3ff"],
    ':clap_tone4:': ["1f44f-1f3fe"],
    ':clap_tone3:': ["1f44f-1f3fd"],
    ':clap_tone2:': ["1f44f-1f3fc"],
    ':clap_tone1:': ["1f44f-1f3fb"],
    ':thumbsdown_tone5:': ["1f44e-1f3ff"],
    ':-1_tone5:': ["1f44e-1f3ff"],
    ':thumbsdown_tone4:': ["1f44e-1f3fe"],
    ':-1_tone4:': ["1f44e-1f3fe"],
    ':thumbsdown_tone3:': ["1f44e-1f3fd"],
    ':-1_tone3:': ["1f44e-1f3fd"],
    ':thumbsdown_tone2:': ["1f44e-1f3fc"],
    ':-1_tone2:': ["1f44e-1f3fc"],
    ':thumbsdown_tone1:': ["1f44e-1f3fb"],
    ':-1_tone1:': ["1f44e-1f3fb"],
    ':thumbsup_tone5:': ["1f44d-1f3ff"],
    ':+1_tone5:': ["1f44d-1f3ff"],
    ':thumbsup_tone4:': ["1f44d-1f3fe"],
    ':+1_tone4:': ["1f44d-1f3fe"],
    ':thumbsup_tone3:': ["1f44d-1f3fd"],
    ':+1_tone3:': ["1f44d-1f3fd"],
    ':thumbsup_tone2:': ["1f44d-1f3fc"],
    ':+1_tone2:': ["1f44d-1f3fc"],
    ':thumbsup_tone1:': ["1f44d-1f3fb"],
    ':+1_tone1:': ["1f44d-1f3fb"],
    ':ok_hand_tone5:': ["1f44c-1f3ff"],
    ':ok_hand_tone4:': ["1f44c-1f3fe"],
    ':ok_hand_tone3:': ["1f44c-1f3fd"],
    ':ok_hand_tone2:': ["1f44c-1f3fc"],
    ':ok_hand_tone1:': ["1f44c-1f3fb"],
    ':wave_tone5:': ["1f44b-1f3ff"],
    ':wave_tone4:': ["1f44b-1f3fe"],
    ':wave_tone3:': ["1f44b-1f3fd"],
    ':wave_tone2:': ["1f44b-1f3fc"],
    ':wave_tone1:': ["1f44b-1f3fb"],
    ':punch_tone5:': ["1f44a-1f3ff"],
    ':punch_tone4:': ["1f44a-1f3fe"],
    ':punch_tone3:': ["1f44a-1f3fd"],
    ':punch_tone2:': ["1f44a-1f3fc"],
    ':punch_tone1:': ["1f44a-1f3fb"],
    ':point_right_tone5:': ["1f449-1f3ff"],
    ':point_right_tone4:': ["1f449-1f3fe"],
    ':point_right_tone3:': ["1f449-1f3fd"],
    ':point_right_tone2:': ["1f449-1f3fc"],
    ':point_right_tone1:': ["1f449-1f3fb"],
    ':point_left_tone5:': ["1f448-1f3ff"],
    ':point_left_tone4:': ["1f448-1f3fe"],
    ':point_left_tone3:': ["1f448-1f3fd"],
    ':point_left_tone2:': ["1f448-1f3fc"],
    ':point_left_tone1:': ["1f448-1f3fb"],
    ':point_down_tone5:': ["1f447-1f3ff"],
    ':point_down_tone4:': ["1f447-1f3fe"],
    ':point_down_tone3:': ["1f447-1f3fd"],
    ':point_down_tone2:': ["1f447-1f3fc"],
    ':point_down_tone1:': ["1f447-1f3fb"],
    ':point_up_2_tone5:': ["1f446-1f3ff"],
    ':point_up_2_tone4:': ["1f446-1f3fe"],
    ':point_up_2_tone3:': ["1f446-1f3fd"],
    ':point_up_2_tone2:': ["1f446-1f3fc"],
    ':point_up_2_tone1:': ["1f446-1f3fb"],
    ':nose_tone5:': ["1f443-1f3ff"],
    ':nose_tone4:': ["1f443-1f3fe"],
    ':nose_tone3:': ["1f443-1f3fd"],
    ':nose_tone2:': ["1f443-1f3fc"],
    ':nose_tone1:': ["1f443-1f3fb"],
    ':ear_tone5:': ["1f442-1f3ff"],
    ':ear_tone4:': ["1f442-1f3fe"],
    ':ear_tone3:': ["1f442-1f3fd"],
    ':ear_tone2:': ["1f442-1f3fc"],
    ':ear_tone1:': ["1f442-1f3fb"],
    ':lifter_tone5:': ["1f3cb-1f3ff"],
    ':weight_lifter_tone5:': ["1f3cb-1f3ff"],
    ':lifter_tone4:': ["1f3cb-1f3fe"],
    ':weight_lifter_tone4:': ["1f3cb-1f3fe"],
    ':lifter_tone3:': ["1f3cb-1f3fd"],
    ':weight_lifter_tone3:': ["1f3cb-1f3fd"],
    ':lifter_tone2:': ["1f3cb-1f3fc"],
    ':weight_lifter_tone2:': ["1f3cb-1f3fc"],
    ':lifter_tone1:': ["1f3cb-1f3fb"],
    ':weight_lifter_tone1:': ["1f3cb-1f3fb"],
    ':swimmer_tone5:': ["1f3ca-1f3ff"],
    ':swimmer_tone4:': ["1f3ca-1f3fe"],
    ':swimmer_tone3:': ["1f3ca-1f3fd"],
    ':swimmer_tone2:': ["1f3ca-1f3fc"],
    ':swimmer_tone1:': ["1f3ca-1f3fb"],
    ':horse_racing_tone5:': ["1f3c7-1f3ff"],
    ':horse_racing_tone4:': ["1f3c7-1f3fe"],
    ':horse_racing_tone3:': ["1f3c7-1f3fd"],
    ':horse_racing_tone2:': ["1f3c7-1f3fc"],
    ':horse_racing_tone1:': ["1f3c7-1f3fb"],
    ':surfer_tone5:': ["1f3c4-1f3ff"],
    ':surfer_tone4:': ["1f3c4-1f3fe"],
    ':surfer_tone3:': ["1f3c4-1f3fd"],
    ':surfer_tone2:': ["1f3c4-1f3fc"],
    ':surfer_tone1:': ["1f3c4-1f3fb"],
    ':runner_tone5:': ["1f3c3-1f3ff"],
    ':runner_tone4:': ["1f3c3-1f3fe"],
    ':runner_tone3:': ["1f3c3-1f3fd"],
    ':runner_tone2:': ["1f3c3-1f3fc"],
    ':runner_tone1:': ["1f3c3-1f3fb"],
    ':santa_tone5:': ["1f385-1f3ff"],
    ':santa_tone4:': ["1f385-1f3fe"],
    ':santa_tone3:': ["1f385-1f3fd"],
    ':santa_tone2:': ["1f385-1f3fc"],
    ':santa_tone1:': ["1f385-1f3fb"],
    ':flag_zw:': ["1f1ff-1f1fc"],
    ':zw:': ["1f1ff-1f1fc"],
    ':flag_zm:': ["1f1ff-1f1f2"],
    ':zm:': ["1f1ff-1f1f2"],
    ':flag_za:': ["1f1ff-1f1e6"],
    ':za:': ["1f1ff-1f1e6"],
    ':flag_yt:': ["1f1fe-1f1f9"],
    ':yt:': ["1f1fe-1f1f9"],
    ':flag_ye:': ["1f1fe-1f1ea"],
    ':ye:': ["1f1fe-1f1ea"],
    ':flag_xk:': ["1f1fd-1f1f0"],
    ':xk:': ["1f1fd-1f1f0"],
    ':flag_ws:': ["1f1fc-1f1f8"],
    ':ws:': ["1f1fc-1f1f8"],
    ':flag_wf:': ["1f1fc-1f1eb"],
    ':wf:': ["1f1fc-1f1eb"],
    ':flag_vu:': ["1f1fb-1f1fa"],
    ':vu:': ["1f1fb-1f1fa"],
    ':flag_vn:': ["1f1fb-1f1f3"],
    ':vn:': ["1f1fb-1f1f3"],
    ':flag_vi:': ["1f1fb-1f1ee"],
    ':vi:': ["1f1fb-1f1ee"],
    ':flag_vg:': ["1f1fb-1f1ec"],
    ':vg:': ["1f1fb-1f1ec"],
    ':flag_ve:': ["1f1fb-1f1ea"],
    ':ve:': ["1f1fb-1f1ea"],
    ':flag_vc:': ["1f1fb-1f1e8"],
    ':vc:': ["1f1fb-1f1e8"],
    ':flag_va:': ["1f1fb-1f1e6"],
    ':va:': ["1f1fb-1f1e6"],
    ':flag_uz:': ["1f1fa-1f1ff"],
    ':uz:': ["1f1fa-1f1ff"],
    ':flag_uy:': ["1f1fa-1f1fe"],
    ':uy:': ["1f1fa-1f1fe"],
    ':flag_us:': ["1f1fa-1f1f8"],
    ':us:': ["1f1fa-1f1f8"],
    ':flag_um:': ["1f1fa-1f1f2"],
    ':um:': ["1f1fa-1f1f2"],
    ':flag_ug:': ["1f1fa-1f1ec"],
    ':ug:': ["1f1fa-1f1ec"],
    ':flag_ua:': ["1f1fa-1f1e6"],
    ':ua:': ["1f1fa-1f1e6"],
    ':flag_tz:': ["1f1f9-1f1ff"],
    ':tz:': ["1f1f9-1f1ff"],
    ':flag_tw:': ["1f1f9-1f1fc"],
    ':tw:': ["1f1f9-1f1fc"],
    ':flag_tv:': ["1f1f9-1f1fb"],
    ':tuvalu:': ["1f1f9-1f1fb"],
    ':flag_tt:': ["1f1f9-1f1f9"],
    ':tt:': ["1f1f9-1f1f9"],
    ':flag_tr:': ["1f1f9-1f1f7"],
    ':tr:': ["1f1f9-1f1f7"],
    ':flag_to:': ["1f1f9-1f1f4"],
    ':to:': ["1f1f9-1f1f4"],
    ':flag_tn:': ["1f1f9-1f1f3"],
    ':tn:': ["1f1f9-1f1f3"],
    ':flag_tm:': ["1f1f9-1f1f2"],
    ':turkmenistan:': ["1f1f9-1f1f2"],
    ':flag_tl:': ["1f1f9-1f1f1"],
    ':tl:': ["1f1f9-1f1f1"],
    ':flag_tk:': ["1f1f9-1f1f0"],
    ':tk:': ["1f1f9-1f1f0"],
    ':flag_tj:': ["1f1f9-1f1ef"],
    ':tj:': ["1f1f9-1f1ef"],
    ':flag_th:': ["1f1f9-1f1ed"],
    ':th:': ["1f1f9-1f1ed"],
    ':flag_tg:': ["1f1f9-1f1ec"],
    ':tg:': ["1f1f9-1f1ec"],
    ':flag_tf:': ["1f1f9-1f1eb"],
    ':tf:': ["1f1f9-1f1eb"],
    ':flag_td:': ["1f1f9-1f1e9"],
    ':td:': ["1f1f9-1f1e9"],
    ':flag_tc:': ["1f1f9-1f1e8"],
    ':tc:': ["1f1f9-1f1e8"],
    ':flag_ta:': ["1f1f9-1f1e6"],
    ':ta:': ["1f1f9-1f1e6"],
    ':flag_sz:': ["1f1f8-1f1ff"],
    ':sz:': ["1f1f8-1f1ff"],
    ':flag_sy:': ["1f1f8-1f1fe"],
    ':sy:': ["1f1f8-1f1fe"],
    ':flag_sx:': ["1f1f8-1f1fd"],
    ':sx:': ["1f1f8-1f1fd"],
    ':flag_sv:': ["1f1f8-1f1fb"],
    ':sv:': ["1f1f8-1f1fb"],
    ':flag_st:': ["1f1f8-1f1f9"],
    ':st:': ["1f1f8-1f1f9"],
    ':flag_ss:': ["1f1f8-1f1f8"],
    ':ss:': ["1f1f8-1f1f8"],
    ':flag_sr:': ["1f1f8-1f1f7"],
    ':sr:': ["1f1f8-1f1f7"],
    ':flag_so:': ["1f1f8-1f1f4"],
    ':so:': ["1f1f8-1f1f4"],
    ':flag_sn:': ["1f1f8-1f1f3"],
    ':sn:': ["1f1f8-1f1f3"],
    ':flag_sm:': ["1f1f8-1f1f2"],
    ':sm:': ["1f1f8-1f1f2"],
    ':flag_sl:': ["1f1f8-1f1f1"],
    ':sl:': ["1f1f8-1f1f1"],
    ':flag_sk:': ["1f1f8-1f1f0"],
    ':sk:': ["1f1f8-1f1f0"],
    ':flag_sj:': ["1f1f8-1f1ef"],
    ':sj:': ["1f1f8-1f1ef"],
    ':flag_si:': ["1f1f8-1f1ee"],
    ':si:': ["1f1f8-1f1ee"],
    ':flag_sh:': ["1f1f8-1f1ed"],
    ':sh:': ["1f1f8-1f1ed"],
    ':flag_sg:': ["1f1f8-1f1ec"],
    ':sg:': ["1f1f8-1f1ec"],
    ':flag_se:': ["1f1f8-1f1ea"],
    ':se:': ["1f1f8-1f1ea"],
    ':flag_sd:': ["1f1f8-1f1e9"],
    ':sd:': ["1f1f8-1f1e9"],
    ':flag_sc:': ["1f1f8-1f1e8"],
    ':sc:': ["1f1f8-1f1e8"],
    ':flag_sb:': ["1f1f8-1f1e7"],
    ':sb:': ["1f1f8-1f1e7"],
    ':flag_sa:': ["1f1f8-1f1e6"],
    ':saudiarabia:': ["1f1f8-1f1e6"],
    ':saudi:': ["1f1f8-1f1e6"],
    ':flag_rw:': ["1f1f7-1f1fc"],
    ':rw:': ["1f1f7-1f1fc"],
    ':flag_ru:': ["1f1f7-1f1fa"],
    ':ru:': ["1f1f7-1f1fa"],
    ':flag_rs:': ["1f1f7-1f1f8"],
    ':rs:': ["1f1f7-1f1f8"],
    ':flag_ro:': ["1f1f7-1f1f4"],
    ':ro:': ["1f1f7-1f1f4"],
    ':flag_re:': ["1f1f7-1f1ea"],
    ':re:': ["1f1f7-1f1ea"],
    ':flag_qa:': ["1f1f6-1f1e6"],
    ':qa:': ["1f1f6-1f1e6"],
    ':flag_py:': ["1f1f5-1f1fe"],
    ':py:': ["1f1f5-1f1fe"],
    ':flag_pw:': ["1f1f5-1f1fc"],
    ':pw:': ["1f1f5-1f1fc"],
    ':flag_pt:': ["1f1f5-1f1f9"],
    ':pt:': ["1f1f5-1f1f9"],
    ':flag_ps:': ["1f1f5-1f1f8"],
    ':ps:': ["1f1f5-1f1f8"],
    ':flag_pr:': ["1f1f5-1f1f7"],
    ':pr:': ["1f1f5-1f1f7"],
    ':flag_pn:': ["1f1f5-1f1f3"],
    ':pn:': ["1f1f5-1f1f3"],
    ':flag_pm:': ["1f1f5-1f1f2"],
    ':pm:': ["1f1f5-1f1f2"],
    ':flag_pl:': ["1f1f5-1f1f1"],
    ':pl:': ["1f1f5-1f1f1"],
    ':flag_pk:': ["1f1f5-1f1f0"],
    ':pk:': ["1f1f5-1f1f0"],
    ':flag_ph:': ["1f1f5-1f1ed"],
    ':ph:': ["1f1f5-1f1ed"],
    ':flag_pg:': ["1f1f5-1f1ec"],
    ':pg:': ["1f1f5-1f1ec"],
    ':flag_pf:': ["1f1f5-1f1eb"],
    ':pf:': ["1f1f5-1f1eb"],
    ':flag_pe:': ["1f1f5-1f1ea"],
    ':pe:': ["1f1f5-1f1ea"],
    ':flag_pa:': ["1f1f5-1f1e6"],
    ':pa:': ["1f1f5-1f1e6"],
    ':flag_om:': ["1f1f4-1f1f2"],
    ':om:': ["1f1f4-1f1f2"],
    ':flag_nz:': ["1f1f3-1f1ff"],
    ':nz:': ["1f1f3-1f1ff"],
    ':flag_nu:': ["1f1f3-1f1fa"],
    ':nu:': ["1f1f3-1f1fa"],
    ':flag_nr:': ["1f1f3-1f1f7"],
    ':nr:': ["1f1f3-1f1f7"],
    ':flag_np:': ["1f1f3-1f1f5"],
    ':np:': ["1f1f3-1f1f5"],
    ':flag_no:': ["1f1f3-1f1f4"],
    ':no:': ["1f1f3-1f1f4"],
    ':flag_nl:': ["1f1f3-1f1f1"],
    ':nl:': ["1f1f3-1f1f1"],
    ':flag_ni:': ["1f1f3-1f1ee"],
    ':ni:': ["1f1f3-1f1ee"],
    ':flag_ng:': ["1f1f3-1f1ec"],
    ':nigeria:': ["1f1f3-1f1ec"],
    ':flag_nf:': ["1f1f3-1f1eb"],
    ':nf:': ["1f1f3-1f1eb"],
    ':flag_ne:': ["1f1f3-1f1ea"],
    ':ne:': ["1f1f3-1f1ea"],
    ':flag_nc:': ["1f1f3-1f1e8"],
    ':nc:': ["1f1f3-1f1e8"],
    ':flag_na:': ["1f1f3-1f1e6"],
    ':na:': ["1f1f3-1f1e6"],
    ':flag_mz:': ["1f1f2-1f1ff"],
    ':mz:': ["1f1f2-1f1ff"],
    ':flag_my:': ["1f1f2-1f1fe"],
    ':my:': ["1f1f2-1f1fe"],
    ':flag_mx:': ["1f1f2-1f1fd"],
    ':mx:': ["1f1f2-1f1fd"],
    ':flag_mw:': ["1f1f2-1f1fc"],
    ':mw:': ["1f1f2-1f1fc"],
    ':flag_mv:': ["1f1f2-1f1fb"],
    ':mv:': ["1f1f2-1f1fb"],
    ':flag_mu:': ["1f1f2-1f1fa"],
    ':mu:': ["1f1f2-1f1fa"],
    ':flag_mt:': ["1f1f2-1f1f9"],
    ':mt:': ["1f1f2-1f1f9"],
    ':flag_ms:': ["1f1f2-1f1f8"],
    ':ms:': ["1f1f2-1f1f8"],
    ':flag_mr:': ["1f1f2-1f1f7"],
    ':mr:': ["1f1f2-1f1f7"],
    ':flag_mq:': ["1f1f2-1f1f6"],
    ':mq:': ["1f1f2-1f1f6"],
    ':flag_mp:': ["1f1f2-1f1f5"],
    ':mp:': ["1f1f2-1f1f5"],
    ':flag_mo:': ["1f1f2-1f1f4"],
    ':mo:': ["1f1f2-1f1f4"],
    ':flag_mn:': ["1f1f2-1f1f3"],
    ':mn:': ["1f1f2-1f1f3"],
    ':flag_mm:': ["1f1f2-1f1f2"],
    ':mm:': ["1f1f2-1f1f2"],
    ':flag_ml:': ["1f1f2-1f1f1"],
    ':ml:': ["1f1f2-1f1f1"],
    ':flag_mk:': ["1f1f2-1f1f0"],
    ':mk:': ["1f1f2-1f1f0"],
    ':flag_mh:': ["1f1f2-1f1ed"],
    ':mh:': ["1f1f2-1f1ed"],
    ':flag_mg:': ["1f1f2-1f1ec"],
    ':mg:': ["1f1f2-1f1ec"],
    ':flag_mf:': ["1f1f2-1f1eb"],
    ':mf:': ["1f1f2-1f1eb"],
    ':flag_me:': ["1f1f2-1f1ea"],
    ':me:': ["1f1f2-1f1ea"],
    ':flag_md:': ["1f1f2-1f1e9"],
    ':md:': ["1f1f2-1f1e9"],
    ':flag_mc:': ["1f1f2-1f1e8"],
    ':mc:': ["1f1f2-1f1e8"],
    ':flag_ma:': ["1f1f2-1f1e6"],
    ':ma:': ["1f1f2-1f1e6"],
    ':flag_ly:': ["1f1f1-1f1fe"],
    ':ly:': ["1f1f1-1f1fe"],
    ':flag_lv:': ["1f1f1-1f1fb"],
    ':lv:': ["1f1f1-1f1fb"],
    ':flag_lu:': ["1f1f1-1f1fa"],
    ':lu:': ["1f1f1-1f1fa"],
    ':flag_lt:': ["1f1f1-1f1f9"],
    ':lt:': ["1f1f1-1f1f9"],
    ':flag_ls:': ["1f1f1-1f1f8"],
    ':ls:': ["1f1f1-1f1f8"],
    ':flag_lr:': ["1f1f1-1f1f7"],
    ':lr:': ["1f1f1-1f1f7"],
    ':flag_lk:': ["1f1f1-1f1f0"],
    ':lk:': ["1f1f1-1f1f0"],
    ':flag_li:': ["1f1f1-1f1ee"],
    ':li:': ["1f1f1-1f1ee"],
    ':flag_lc:': ["1f1f1-1f1e8"],
    ':lc:': ["1f1f1-1f1e8"],
    ':flag_lb:': ["1f1f1-1f1e7"],
    ':lb:': ["1f1f1-1f1e7"],
    ':flag_la:': ["1f1f1-1f1e6"],
    ':la:': ["1f1f1-1f1e6"],
    ':flag_kz:': ["1f1f0-1f1ff"],
    ':kz:': ["1f1f0-1f1ff"],
    ':flag_ky:': ["1f1f0-1f1fe"],
    ':ky:': ["1f1f0-1f1fe"],
    ':flag_kw:': ["1f1f0-1f1fc"],
    ':kw:': ["1f1f0-1f1fc"],
    ':flag_kr:': ["1f1f0-1f1f7"],
    ':kr:': ["1f1f0-1f1f7"],
    ':flag_kp:': ["1f1f0-1f1f5"],
    ':kp:': ["1f1f0-1f1f5"],
    ':flag_kn:': ["1f1f0-1f1f3"],
    ':kn:': ["1f1f0-1f1f3"],
    ':flag_km:': ["1f1f0-1f1f2"],
    ':km:': ["1f1f0-1f1f2"],
    ':flag_ki:': ["1f1f0-1f1ee"],
    ':ki:': ["1f1f0-1f1ee"],
    ':flag_kh:': ["1f1f0-1f1ed"],
    ':kh:': ["1f1f0-1f1ed"],
    ':flag_kg:': ["1f1f0-1f1ec"],
    ':kg:': ["1f1f0-1f1ec"],
    ':flag_ke:': ["1f1f0-1f1ea"],
    ':ke:': ["1f1f0-1f1ea"],
    ':flag_jp:': ["1f1ef-1f1f5"],
    ':jp:': ["1f1ef-1f1f5"],
    ':flag_jo:': ["1f1ef-1f1f4"],
    ':jo:': ["1f1ef-1f1f4"],
    ':flag_jm:': ["1f1ef-1f1f2"],
    ':jm:': ["1f1ef-1f1f2"],
    ':flag_je:': ["1f1ef-1f1ea"],
    ':je:': ["1f1ef-1f1ea"],
    ':flag_it:': ["1f1ee-1f1f9"],
    ':it:': ["1f1ee-1f1f9"],
    ':flag_is:': ["1f1ee-1f1f8"],
    ':is:': ["1f1ee-1f1f8"],
    ':flag_ir:': ["1f1ee-1f1f7"],
    ':ir:': ["1f1ee-1f1f7"],
    ':flag_iq:': ["1f1ee-1f1f6"],
    ':iq:': ["1f1ee-1f1f6"],
    ':flag_io:': ["1f1ee-1f1f4"],
    ':io:': ["1f1ee-1f1f4"],
    ':flag_in:': ["1f1ee-1f1f3"],
    ':in:': ["1f1ee-1f1f3"],
    ':flag_im:': ["1f1ee-1f1f2"],
    ':im:': ["1f1ee-1f1f2"],
    ':flag_il:': ["1f1ee-1f1f1"],
    ':il:': ["1f1ee-1f1f1"],
    ':flag_ie:': ["1f1ee-1f1ea"],
    ':ie:': ["1f1ee-1f1ea"],
    ':flag_id:': ["1f1ee-1f1e9"],
    ':indonesia:': ["1f1ee-1f1e9"],
    ':flag_ic:': ["1f1ee-1f1e8"],
    ':ic:': ["1f1ee-1f1e8"],
    ':flag_hu:': ["1f1ed-1f1fa"],
    ':hu:': ["1f1ed-1f1fa"],
    ':flag_ht:': ["1f1ed-1f1f9"],
    ':ht:': ["1f1ed-1f1f9"],
    ':flag_hr:': ["1f1ed-1f1f7"],
    ':hr:': ["1f1ed-1f1f7"],
    ':flag_hn:': ["1f1ed-1f1f3"],
    ':hn:': ["1f1ed-1f1f3"],
    ':flag_hm:': ["1f1ed-1f1f2"],
    ':hm:': ["1f1ed-1f1f2"],
    ':flag_hk:': ["1f1ed-1f1f0"],
    ':hk:': ["1f1ed-1f1f0"],
    ':flag_gy:': ["1f1ec-1f1fe"],
    ':gy:': ["1f1ec-1f1fe"],
    ':flag_gw:': ["1f1ec-1f1fc"],
    ':gw:': ["1f1ec-1f1fc"],
    ':flag_gu:': ["1f1ec-1f1fa"],
    ':gu:': ["1f1ec-1f1fa"],
    ':flag_gt:': ["1f1ec-1f1f9"],
    ':gt:': ["1f1ec-1f1f9"],
    ':flag_gs:': ["1f1ec-1f1f8"],
    ':gs:': ["1f1ec-1f1f8"],
    ':flag_gr:': ["1f1ec-1f1f7"],
    ':gr:': ["1f1ec-1f1f7"],
    ':flag_gq:': ["1f1ec-1f1f6"],
    ':gq:': ["1f1ec-1f1f6"],
    ':flag_gp:': ["1f1ec-1f1f5"],
    ':gp:': ["1f1ec-1f1f5"],
    ':flag_gn:': ["1f1ec-1f1f3"],
    ':gn:': ["1f1ec-1f1f3"],
    ':flag_gm:': ["1f1ec-1f1f2"],
    ':gm:': ["1f1ec-1f1f2"],
    ':flag_gl:': ["1f1ec-1f1f1"],
    ':gl:': ["1f1ec-1f1f1"],
    ':flag_gi:': ["1f1ec-1f1ee"],
    ':gi:': ["1f1ec-1f1ee"],
    ':flag_gh:': ["1f1ec-1f1ed"],
    ':gh:': ["1f1ec-1f1ed"],
    ':flag_gg:': ["1f1ec-1f1ec"],
    ':gg:': ["1f1ec-1f1ec"],
    ':flag_gf:': ["1f1ec-1f1eb"],
    ':gf:': ["1f1ec-1f1eb"],
    ':flag_ge:': ["1f1ec-1f1ea"],
    ':ge:': ["1f1ec-1f1ea"],
    ':flag_gd:': ["1f1ec-1f1e9"],
    ':gd:': ["1f1ec-1f1e9"],
    ':flag_gb:': ["1f1ec-1f1e7"],
    ':gb:': ["1f1ec-1f1e7"],
    ':flag_ga:': ["1f1ec-1f1e6"],
    ':ga:': ["1f1ec-1f1e6"],
    ':flag_fr:': ["1f1eb-1f1f7"],
    ':fr:': ["1f1eb-1f1f7"],
    ':flag_fo:': ["1f1eb-1f1f4"],
    ':fo:': ["1f1eb-1f1f4"],
    ':flag_fm:': ["1f1eb-1f1f2"],
    ':fm:': ["1f1eb-1f1f2"],
    ':flag_fk:': ["1f1eb-1f1f0"],
    ':fk:': ["1f1eb-1f1f0"],
    ':flag_fj:': ["1f1eb-1f1ef"],
    ':fj:': ["1f1eb-1f1ef"],
    ':flag_fi:': ["1f1eb-1f1ee"],
    ':fi:': ["1f1eb-1f1ee"],
    ':flag_eu:': ["1f1ea-1f1fa"],
    ':eu:': ["1f1ea-1f1fa"],
    ':flag_et:': ["1f1ea-1f1f9"],
    ':et:': ["1f1ea-1f1f9"],
    ':flag_es:': ["1f1ea-1f1f8"],
    ':es:': ["1f1ea-1f1f8"],
    ':flag_er:': ["1f1ea-1f1f7"],
    ':er:': ["1f1ea-1f1f7"],
    ':flag_eh:': ["1f1ea-1f1ed"],
    ':eh:': ["1f1ea-1f1ed"],
    ':flag_eg:': ["1f1ea-1f1ec"],
    ':eg:': ["1f1ea-1f1ec"],
    ':flag_ee:': ["1f1ea-1f1ea"],
    ':ee:': ["1f1ea-1f1ea"],
    ':flag_ec:': ["1f1ea-1f1e8"],
    ':ec:': ["1f1ea-1f1e8"],
    ':flag_ea:': ["1f1ea-1f1e6"],
    ':ea:': ["1f1ea-1f1e6"],
    ':flag_dz:': ["1f1e9-1f1ff"],
    ':dz:': ["1f1e9-1f1ff"],
    ':flag_do:': ["1f1e9-1f1f4"],
    ':do:': ["1f1e9-1f1f4"],
    ':flag_dm:': ["1f1e9-1f1f2"],
    ':dm:': ["1f1e9-1f1f2"],
    ':flag_dk:': ["1f1e9-1f1f0"],
    ':dk:': ["1f1e9-1f1f0"],
    ':flag_dj:': ["1f1e9-1f1ef"],
    ':dj:': ["1f1e9-1f1ef"],
    ':flag_dg:': ["1f1e9-1f1ec"],
    ':dg:': ["1f1e9-1f1ec"],
    ':flag_de:': ["1f1e9-1f1ea"],
    ':de:': ["1f1e9-1f1ea"],
    ':flag_cz:': ["1f1e8-1f1ff"],
    ':cz:': ["1f1e8-1f1ff"],
    ':flag_cy:': ["1f1e8-1f1fe"],
    ':cy:': ["1f1e8-1f1fe"],
    ':flag_cx:': ["1f1e8-1f1fd"],
    ':cx:': ["1f1e8-1f1fd"],
    ':flag_cw:': ["1f1e8-1f1fc"],
    ':cw:': ["1f1e8-1f1fc"],
    ':flag_cv:': ["1f1e8-1f1fb"],
    ':cv:': ["1f1e8-1f1fb"],
    ':flag_cu:': ["1f1e8-1f1fa"],
    ':cu:': ["1f1e8-1f1fa"],
    ':flag_cr:': ["1f1e8-1f1f7"],
    ':cr:': ["1f1e8-1f1f7"],
    ':flag_cp:': ["1f1e8-1f1f5"],
    ':cp:': ["1f1e8-1f1f5"],
    ':flag_co:': ["1f1e8-1f1f4"],
    ':co:': ["1f1e8-1f1f4"],
    ':flag_cn:': ["1f1e8-1f1f3"],
    ':cn:': ["1f1e8-1f1f3"],
    ':flag_cm:': ["1f1e8-1f1f2"],
    ':cm:': ["1f1e8-1f1f2"],
    ':flag_cl:': ["1f1e8-1f1f1"],
    ':chile:': ["1f1e8-1f1f1"],
    ':flag_ck:': ["1f1e8-1f1f0"],
    ':ck:': ["1f1e8-1f1f0"],
    ':flag_ci:': ["1f1e8-1f1ee"],
    ':ci:': ["1f1e8-1f1ee"],
    ':flag_ch:': ["1f1e8-1f1ed"],
    ':ch:': ["1f1e8-1f1ed"],
    ':flag_cg:': ["1f1e8-1f1ec"],
    ':cg:': ["1f1e8-1f1ec"],
    ':flag_cf:': ["1f1e8-1f1eb"],
    ':cf:': ["1f1e8-1f1eb"],
    ':flag_cd:': ["1f1e8-1f1e9"],
    ':congo:': ["1f1e8-1f1e9"],
    ':flag_cc:': ["1f1e8-1f1e8"],
    ':cc:': ["1f1e8-1f1e8"],
    ':flag_ca:': ["1f1e8-1f1e6"],
    ':ca:': ["1f1e8-1f1e6"],
    ':flag_bz:': ["1f1e7-1f1ff"],
    ':bz:': ["1f1e7-1f1ff"],
    ':flag_by:': ["1f1e7-1f1fe"],
    ':by:': ["1f1e7-1f1fe"],
    ':flag_bw:': ["1f1e7-1f1fc"],
    ':bw:': ["1f1e7-1f1fc"],
    ':flag_bv:': ["1f1e7-1f1fb"],
    ':bv:': ["1f1e7-1f1fb"],
    ':flag_bt:': ["1f1e7-1f1f9"],
    ':bt:': ["1f1e7-1f1f9"],
    ':flag_bs:': ["1f1e7-1f1f8"],
    ':bs:': ["1f1e7-1f1f8"],
    ':flag_br:': ["1f1e7-1f1f7"],
    ':br:': ["1f1e7-1f1f7"],
    ':flag_bq:': ["1f1e7-1f1f6"],
    ':bq:': ["1f1e7-1f1f6"],
    ':flag_bo:': ["1f1e7-1f1f4"],
    ':bo:': ["1f1e7-1f1f4"],
    ':flag_bn:': ["1f1e7-1f1f3"],
    ':bn:': ["1f1e7-1f1f3"],
    ':flag_bm:': ["1f1e7-1f1f2"],
    ':bm:': ["1f1e7-1f1f2"],
    ':flag_bl:': ["1f1e7-1f1f1"],
    ':bl:': ["1f1e7-1f1f1"],
    ':flag_bj:': ["1f1e7-1f1ef"],
    ':bj:': ["1f1e7-1f1ef"],
    ':flag_bi:': ["1f1e7-1f1ee"],
    ':bi:': ["1f1e7-1f1ee"],
    ':flag_bh:': ["1f1e7-1f1ed"],
    ':bh:': ["1f1e7-1f1ed"],
    ':flag_bg:': ["1f1e7-1f1ec"],
    ':bg:': ["1f1e7-1f1ec"],
    ':flag_bf:': ["1f1e7-1f1eb"],
    ':bf:': ["1f1e7-1f1eb"],
    ':flag_be:': ["1f1e7-1f1ea"],
    ':be:': ["1f1e7-1f1ea"],
    ':flag_bd:': ["1f1e7-1f1e9"],
    ':bd:': ["1f1e7-1f1e9"],
    ':flag_bb:': ["1f1e7-1f1e7"],
    ':bb:': ["1f1e7-1f1e7"],
    ':flag_ba:': ["1f1e7-1f1e6"],
    ':ba:': ["1f1e7-1f1e6"],
    ':flag_az:': ["1f1e6-1f1ff"],
    ':az:': ["1f1e6-1f1ff"],
    ':flag_ax:': ["1f1e6-1f1fd"],
    ':ax:': ["1f1e6-1f1fd"],
    ':flag_aw:': ["1f1e6-1f1fc"],
    ':aw:': ["1f1e6-1f1fc"],
    ':flag_au:': ["1f1e6-1f1fa"],
    ':au:': ["1f1e6-1f1fa"],
    ':flag_at:': ["1f1e6-1f1f9"],
    ':at:': ["1f1e6-1f1f9"],
    ':flag_as:': ["1f1e6-1f1f8"],
    ':as:': ["1f1e6-1f1f8"],
    ':flag_ar:': ["1f1e6-1f1f7"],
    ':ar:': ["1f1e6-1f1f7"],
    ':flag_aq:': ["1f1e6-1f1f6"],
    ':aq:': ["1f1e6-1f1f6"],
    ':flag_ao:': ["1f1e6-1f1f4"],
    ':ao:': ["1f1e6-1f1f4"],
    ':flag_am:': ["1f1e6-1f1f2"],
    ':am:': ["1f1e6-1f1f2"],
    ':flag_al:': ["1f1e6-1f1f1"],
    ':al:': ["1f1e6-1f1f1"],
    ':flag_ai:': ["1f1e6-1f1ee"],
    ':ai:': ["1f1e6-1f1ee"],
    ':flag_ag:': ["1f1e6-1f1ec"],
    ':ag:': ["1f1e6-1f1ec"],
    ':flag_af:': ["1f1e6-1f1eb"],
    ':af:': ["1f1e6-1f1eb"],
    ':flag_ae:': ["1f1e6-1f1ea"],
    ':ae:': ["1f1e6-1f1ea"],
    ':flag_ad:': ["1f1e6-1f1e9"],
    ':ad:': ["1f1e6-1f1e9"],
    ':flag_ac:': ["1f1e6-1f1e8"],
    ':ac:': ["1f1e6-1f1e8"],
    ':mahjong:': ["1f004-fe0f", "1f004"],
    ':parking:': ["1f17f-fe0f", "1f17f"],
    ':sa:': ["1f202-fe0f", "1f202"],
    ':u7121:': ["1f21a-fe0f", "1f21a"],
    ':u6307:': ["1f22f-fe0f", "1f22f"],
    ':u6708:': ["1f237-fe0f", "1f237"],
    ':film_frames:': ["1f39e-fe0f", "1f39e"],
    ':tickets:': ["1f39f-fe0f", "1f39f"],
    ':admission_tickets:': ["1f39f-fe0f", "1f39f"],
    ':lifter:': ["1f3cb-fe0f", "1f3cb"],
    ':weight_lifter:': ["1f3cb-fe0f", "1f3cb"],
    ':golfer:': ["1f3cc-fe0f", "1f3cc"],
    ':motorcycle:': ["1f3cd-fe0f", "1f3cd"],
    ':racing_motorcycle:': ["1f3cd-fe0f", "1f3cd"],
    ':race_car:': ["1f3ce-fe0f", "1f3ce"],
    ':racing_car:': ["1f3ce-fe0f", "1f3ce"],
    ':military_medal:': ["1f396-fe0f", "1f396"],
    ':reminder_ribbon:': ["1f397-fe0f", "1f397"],
    ':hot_pepper:': ["1f336-fe0f", "1f336"],
    ':cloud_rain:': ["1f327-fe0f", "1f327"],
    ':cloud_with_rain:': ["1f327-fe0f", "1f327"],
    ':cloud_snow:': ["1f328-fe0f", "1f328"],
    ':cloud_with_snow:': ["1f328-fe0f", "1f328"],
    ':cloud_lightning:': ["1f329-fe0f", "1f329"],
    ':cloud_with_lightning:': ["1f329-fe0f", "1f329"],
    ':cloud_tornado:': ["1f32a-fe0f", "1f32a"],
    ':cloud_with_tornado:': ["1f32a-fe0f", "1f32a"],
    ':fog:': ["1f32b-fe0f", "1f32b"],
    ':wind_blowing_face:': ["1f32c-fe0f", "1f32c"],
    ':chipmunk:': ["1f43f-fe0f", "1f43f"],
    ':spider:': ["1f577-fe0f", "1f577"],
    ':spider_web:': ["1f578-fe0f", "1f578"],
    ':thermometer:': ["1f321-fe0f", "1f321"],
    ':microphone2:': ["1f399-fe0f", "1f399"],
    ':studio_microphone:': ["1f399-fe0f", "1f399"],
    ':level_slider:': ["1f39a-fe0f", "1f39a"],
    ':control_knobs:': ["1f39b-fe0f", "1f39b"],
    ':flag_white:': ["1f3f3-fe0f", "1f3f3"],
    ':waving_white_flag:': ["1f3f3-fe0f", "1f3f3"],
    ':rosette:': ["1f3f5-fe0f", "1f3f5"],
    ':label:': ["1f3f7-fe0f", "1f3f7"],
    ':projector:': ["1f4fd-fe0f", "1f4fd"],
    ':film_projector:': ["1f4fd-fe0f", "1f4fd"],
    ':om_symbol:': ["1f549-fe0f", "1f549"],
    ':dove:': ["1f54a-fe0f", "1f54a"],
    ':dove_of_peace:': ["1f54a-fe0f", "1f54a"],
    ':candle:': ["1f56f-fe0f", "1f56f"],
    ':clock:': ["1f570-fe0f", "1f570"],
    ':mantlepiece_clock:': ["1f570-fe0f", "1f570"],
    ':hole:': ["1f573-fe0f", "1f573"],
    ':dark_sunglasses:': ["1f576-fe0f", "1f576"],
    ':joystick:': ["1f579-fe0f", "1f579"],
    ':paperclips:': ["1f587-fe0f", "1f587"],
    ':linked_paperclips:': ["1f587-fe0f", "1f587"],
    ':pen_ballpoint:': ["1f58a-fe0f", "1f58a"],
    ':lower_left_ballpoint_pen:': ["1f58a-fe0f", "1f58a"],
    ':pen_fountain:': ["1f58b-fe0f", "1f58b"],
    ':lower_left_fountain_pen:': ["1f58b-fe0f", "1f58b"],
    ':paintbrush:': ["1f58c-fe0f", "1f58c"],
    ':lower_left_paintbrush:': ["1f58c-fe0f", "1f58c"],
    ':crayon:': ["1f58d-fe0f", "1f58d"],
    ':lower_left_crayon:': ["1f58d-fe0f", "1f58d"],
    ':desktop:': ["1f5a5-fe0f", "1f5a5"],
    ':desktop_computer:': ["1f5a5-fe0f", "1f5a5"],
    ':printer:': ["1f5a8-fe0f", "1f5a8"],
    ':trackball:': ["1f5b2-fe0f", "1f5b2"],
    ':frame_photo:': ["1f5bc-fe0f", "1f5bc"],
    ':frame_with_picture:': ["1f5bc-fe0f", "1f5bc"],
    ':dividers:': ["1f5c2-fe0f", "1f5c2"],
    ':card_index_dividers:': ["1f5c2-fe0f", "1f5c2"],
    ':card_box:': ["1f5c3-fe0f", "1f5c3"],
    ':card_file_box:': ["1f5c3-fe0f", "1f5c3"],
    ':file_cabinet:': ["1f5c4-fe0f", "1f5c4"],
    ':wastebasket:': ["1f5d1-fe0f", "1f5d1"],
    ':notepad_spiral:': ["1f5d2-fe0f", "1f5d2"],
    ':spiral_note_pad:': ["1f5d2-fe0f", "1f5d2"],
    ':calendar_spiral:': ["1f5d3-fe0f", "1f5d3"],
    ':spiral_calendar_pad:': ["1f5d3-fe0f", "1f5d3"],
    ':compression:': ["1f5dc-fe0f", "1f5dc"],
    ':key2:': ["1f5dd-fe0f", "1f5dd"],
    ':old_key:': ["1f5dd-fe0f", "1f5dd"],
    ':newspaper2:': ["1f5de-fe0f", "1f5de"],
    ':rolled_up_newspaper:': ["1f5de-fe0f", "1f5de"],
    ':dagger:': ["1f5e1-fe0f", "1f5e1"],
    ':dagger_knife:': ["1f5e1-fe0f", "1f5e1"],
    ':speaking_head:': ["1f5e3-fe0f", "1f5e3"],
    ':speaking_head_in_silhouette:': ["1f5e3-fe0f", "1f5e3"],
    ':anger_right:': ["1f5ef-fe0f", "1f5ef"],
    ':right_anger_bubble:': ["1f5ef-fe0f", "1f5ef"],
    ':ballot_box:': ["1f5f3-fe0f", "1f5f3"],
    ':ballot_box_with_ballot:': ["1f5f3-fe0f", "1f5f3"],
    ':map:': ["1f5fa-fe0f", "1f5fa"],
    ':world_map:': ["1f5fa-fe0f", "1f5fa"],
    ':tools:': ["1f6e0-fe0f", "1f6e0"],
    ':hammer_and_wrench:': ["1f6e0-fe0f", "1f6e0"],
    ':shield:': ["1f6e1-fe0f", "1f6e1"],
    ':oil:': ["1f6e2-fe0f", "1f6e2"],
    ':oil_drum:': ["1f6e2-fe0f", "1f6e2"],
    ':satellite_orbital:': ["1f6f0-fe0f", "1f6f0"],
    ':fork_knife_plate:': ["1f37d-fe0f", "1f37d"],
    ':fork_and_knife_with_plate:': ["1f37d-fe0f", "1f37d"],
    ':eye:': ["1f441-fe0f", "1f441"],
    ':levitate:': ["1f574-fe0f", "1f574"],
    ':man_in_business_suit_levitating:': ["1f574-fe0f", "1f574"],
    ':spy:': ["1f575-fe0f", "1f575"],
    ':sleuth_or_spy:': ["1f575-fe0f", "1f575"],
    ':hand_splayed:': ["1f590-fe0f", "1f590"],
    ':raised_hand_with_fingers_splayed:': ["1f590-fe0f", "1f590"],
    ':mountain_snow:': ["1f3d4-fe0f", "1f3d4"],
    ':snow_capped_mountain:': ["1f3d4-fe0f", "1f3d4"],
    ':camping:': ["1f3d5-fe0f", "1f3d5"],
    ':beach:': ["1f3d6-fe0f", "1f3d6"],
    ':beach_with_umbrella:': ["1f3d6-fe0f", "1f3d6"],
    ':construction_site:': ["1f3d7-fe0f", "1f3d7"],
    ':building_construction:': ["1f3d7-fe0f", "1f3d7"],
    ':homes:': ["1f3d8-fe0f", "1f3d8"],
    ':house_buildings:': ["1f3d8-fe0f", "1f3d8"],
    ':cityscape:': ["1f3d9-fe0f", "1f3d9"],
    ':house_abandoned:': ["1f3da-fe0f", "1f3da"],
    ':derelict_house_building:': ["1f3da-fe0f", "1f3da"],
    ':classical_building:': ["1f3db-fe0f", "1f3db"],
    ':desert:': ["1f3dc-fe0f", "1f3dc"],
    ':island:': ["1f3dd-fe0f", "1f3dd"],
    ':desert_island:': ["1f3dd-fe0f", "1f3dd"],
    ':park:': ["1f3de-fe0f", "1f3de"],
    ':national_park:': ["1f3de-fe0f", "1f3de"],
    ':stadium:': ["1f3df-fe0f", "1f3df"],
    ':couch:': ["1f6cb-fe0f", "1f6cb"],
    ':couch_and_lamp:': ["1f6cb-fe0f", "1f6cb"],
    ':shopping_bags:': ["1f6cd-fe0f", "1f6cd"],
    ':bellhop:': ["1f6ce-fe0f", "1f6ce"],
    ':bellhop_bell:': ["1f6ce-fe0f", "1f6ce"],
    ':bed:': ["1f6cf-fe0f", "1f6cf"],
    ':motorway:': ["1f6e3-fe0f", "1f6e3"],
    ':railway_track:': ["1f6e4-fe0f", "1f6e4"],
    ':railroad_track:': ["1f6e4-fe0f", "1f6e4"],
    ':motorboat:': ["1f6e5-fe0f", "1f6e5"],
    ':airplane_small:': ["1f6e9-fe0f", "1f6e9"],
    ':small_airplane:': ["1f6e9-fe0f", "1f6e9"],
    ':cruise_ship:': ["1f6f3-fe0f", "1f6f3"],
    ':passenger_ship:': ["1f6f3-fe0f", "1f6f3"],
    ':white_sun_small_cloud:': ["1f324-fe0f", "1f324"],
    ':white_sun_with_small_cloud:': ["1f324-fe0f", "1f324"],
    ':white_sun_cloud:': ["1f325-fe0f", "1f325"],
    ':white_sun_behind_cloud:': ["1f325-fe0f", "1f325"],
    ':white_sun_rain_cloud:': ["1f326-fe0f", "1f326"],
    ':white_sun_behind_cloud_with_rain:': ["1f326-fe0f", "1f326"],
    ':mouse_three_button:': ["1f5b1-fe0f", "1f5b1"],
    ':three_button_mouse:': ["1f5b1-fe0f", "1f5b1"],
    ':point_up_tone1:': ["261d-1f3fb"],
    ':point_up_tone2:': ["261d-1f3fc"],
    ':point_up_tone3:': ["261d-1f3fd"],
    ':point_up_tone4:': ["261d-1f3fe"],
    ':point_up_tone5:': ["261d-1f3ff"],
    ':v_tone1:': ["270c-1f3fb"],
    ':v_tone2:': ["270c-1f3fc"],
    ':v_tone3:': ["270c-1f3fd"],
    ':v_tone4:': ["270c-1f3fe"],
    ':v_tone5:': ["270c-1f3ff"],
    ':fist_tone1:': ["270a-1f3fb"],
    ':fist_tone2:': ["270a-1f3fc"],
    ':fist_tone3:': ["270a-1f3fd"],
    ':fist_tone4:': ["270a-1f3fe"],
    ':fist_tone5:': ["270a-1f3ff"],
    ':raised_hand_tone1:': ["270b-1f3fb"],
    ':raised_hand_tone2:': ["270b-1f3fc"],
    ':raised_hand_tone3:': ["270b-1f3fd"],
    ':raised_hand_tone4:': ["270b-1f3fe"],
    ':raised_hand_tone5:': ["270b-1f3ff"],
    ':writing_hand_tone1:': ["270d-1f3fb"],
    ':writing_hand_tone2:': ["270d-1f3fc"],
    ':writing_hand_tone3:': ["270d-1f3fd"],
    ':writing_hand_tone4:': ["270d-1f3fe"],
    ':writing_hand_tone5:': ["270d-1f3ff"],
    ':basketball_player_tone1:': ["26f9-1f3fb"],
    ':person_with_ball_tone1:': ["26f9-1f3fb"],
    ':basketball_player_tone2:': ["26f9-1f3fc"],
    ':person_with_ball_tone2:': ["26f9-1f3fc"],
    ':basketball_player_tone3:': ["26f9-1f3fd"],
    ':person_with_ball_tone3:': ["26f9-1f3fd"],
    ':basketball_player_tone4:': ["26f9-1f3fe"],
    ':person_with_ball_tone4:': ["26f9-1f3fe"],
    ':basketball_player_tone5:': ["26f9-1f3ff"],
    ':person_with_ball_tone5:': ["26f9-1f3ff"],
    ':copyright:': ["00a9-fe0f", "00a9"],
    ':registered:': ["00ae-fe0f", "00ae"],
    ':bangbang:': ["203c-fe0f", "203c"],
    ':interrobang:': ["2049-fe0f", "2049"],
    ':tm:': ["2122-fe0f", "2122"],
    ':left_right_arrow:': ["2194-fe0f", "2194"],
    ':arrow_up_down:': ["2195-fe0f", "2195"],
    ':arrow_upper_left:': ["2196-fe0f", "2196"],
    ':arrow_upper_right:': ["2197-fe0f", "2197"],
    ':arrow_lower_right:': ["2198-fe0f", "2198"],
    ':arrow_lower_left:': ["2199-fe0f", "2199"],
    ':leftwards_arrow_with_hook:': ["21a9-fe0f", "21a9"],
    ':arrow_right_hook:': ["21aa-fe0f", "21aa"],
    ':watch:': ["231a-fe0f", "231a"],
    ':hourglass:': ["231b-fe0f", "231b"],
    ':m:': ["24c2-fe0f", "24c2"],
    ':black_small_square:': ["25aa-fe0f", "25aa"],
    ':white_small_square:': ["25ab-fe0f", "25ab"],
    ':arrow_forward:': ["25b6-fe0f", "25b6"],
    ':arrow_backward:': ["25c0-fe0f", "25c0"],
    ':white_medium_square:': ["25fb-fe0f", "25fb"],
    ':black_medium_square:': ["25fc-fe0f", "25fc"],
    ':white_medium_small_square:': ["25fd-fe0f", "25fd"],
    ':black_medium_small_square:': ["25fe-fe0f", "25fe"],
    ':sunny:': ["2600-fe0f", "2600"],
    ':cloud:': ["2601-fe0f", "2601"],
    ':telephone:': ["260e-fe0f", "260e"],
    ':ballot_box_with_check:': ["2611-fe0f", "2611"],
    ':umbrella:': ["2614-fe0f", "2614"],
    ':coffee:': ["2615-fe0f", "2615"],
    ':point_up:': ["261d-fe0f", "261d"],
    ':relaxed:': ["263a-fe0f", "263a"],
    ':aries:': ["2648-fe0f", "2648"],
    ':taurus:': ["2649-fe0f", "2649"],
    ':gemini:': ["264a-fe0f", "264a"],
    ':cancer:': ["264b-fe0f", "264b"],
    ':leo:': ["264c-fe0f", "264c"],
    ':virgo:': ["264d-fe0f", "264d"],
    ':libra:': ["264e-fe0f", "264e"],
    ':scorpius:': ["264f-fe0f", "264f"],
    ':sagittarius:': ["2650-fe0f", "2650"],
    ':capricorn:': ["2651-fe0f", "2651"],
    ':aquarius:': ["2652-fe0f", "2652"],
    ':pisces:': ["2653-fe0f", "2653"],
    ':spades:': ["2660-fe0f", "2660"],
    ':clubs:': ["2663-fe0f", "2663"],
    ':hearts:': ["2665-fe0f", "2665"],
    ':diamonds:': ["2666-fe0f", "2666"],
    ':hotsprings:': ["2668-fe0f", "2668"],
    ':recycle:': ["267b-fe0f", "267b"],
    ':wheelchair:': ["267f-fe0f", "267f"],
    ':anchor:': ["2693-fe0f", "2693"],
    ':warning:': ["26a0-fe0f", "26a0"],
    ':zap:': ["26a1-fe0f", "26a1"],
    ':white_circle:': ["26aa-fe0f", "26aa"],
    ':black_circle:': ["26ab-fe0f", "26ab"],
    ':soccer:': ["26bd-fe0f", "26bd"],
    ':baseball:': ["26be-fe0f", "26be"],
    ':snowman:': ["26c4-fe0f", "26c4"],
    ':partly_sunny:': ["26c5-fe0f", "26c5"],
    ':no_entry:': ["26d4-fe0f", "26d4"],
    ':church:': ["26ea-fe0f", "26ea"],
    ':fountain:': ["26f2-fe0f", "26f2"],
    ':golf:': ["26f3-fe0f", "26f3"],
    ':sailboat:': ["26f5-fe0f", "26f5"],
    ':tent:': ["26fa-fe0f", "26fa"],
    ':fuelpump:': ["26fd-fe0f", "26fd"],
    ':scissors:': ["2702-fe0f", "2702"],
    ':airplane:': ["2708-fe0f", "2708"],
    ':envelope:': ["2709-fe0f", "2709"],
    ':v:': ["270c-fe0f", "270c"],
    ':pencil2:': ["270f-fe0f", "270f"],
    ':black_nib:': ["2712-fe0f", "2712"],
    ':heavy_check_mark:': ["2714-fe0f", "2714"],
    ':heavy_multiplication_x:': ["2716-fe0f", "2716"],
    ':eight_spoked_asterisk:': ["2733-fe0f", "2733"],
    ':eight_pointed_black_star:': ["2734-fe0f", "2734"],
    ':snowflake:': ["2744-fe0f", "2744"],
    ':sparkle:': ["2747-fe0f", "2747"],
    ':exclamation:': ["2757-fe0f", "2757"],
    ':heart:': ["2764-fe0f", "2764"],
    ':arrow_right:': ["27a1-fe0f", "27a1"],
    ':arrow_heading_up:': ["2934-fe0f", "2934"],
    ':arrow_heading_down:': ["2935-fe0f", "2935"],
    ':arrow_left:': ["2b05-fe0f", "2b05"],
    ':arrow_up:': ["2b06-fe0f", "2b06"],
    ':arrow_down:': ["2b07-fe0f", "2b07"],
    ':black_large_square:': ["2b1b-fe0f", "2b1b"],
    ':white_large_square:': ["2b1c-fe0f", "2b1c"],
    ':star:': ["2b50-fe0f", "2b50"],
    ':o:': ["2b55-fe0f", "2b55"],
    ':wavy_dash:': ["3030-fe0f", "3030"],
    ':part_alternation_mark:': ["303d-fe0f", "303d"],
    ':congratulations:': ["3297-fe0f", "3297"],
    ':secret:': ["3299-fe0f", "3299"],
    ':cross:': ["271d-fe0f", "271d"],
    ':latin_cross:': ["271d-fe0f", "271d"],
    ':keyboard:': ["2328-fe0f", "2328"],
    ':writing_hand:': ["270d-fe0f", "270d"],
    ':track_next:': ["23ed-fe0f", "23ed"],
    ':next_track:': ["23ed-fe0f", "23ed"],
    ':track_previous:': ["23ee-fe0f", "23ee"],
    ':previous_track:': ["23ee-fe0f", "23ee"],
    ':play_pause:': ["23ef-fe0f", "23ef"],
    ':stopwatch:': ["23f1-fe0f", "23f1"],
    ':timer:': ["23f2-fe0f", "23f2"],
    ':timer_clock:': ["23f2-fe0f", "23f2"],
    ':pause_button:': ["23f8-fe0f", "23f8"],
    ':double_vertical_bar:': ["23f8-fe0f", "23f8"],
    ':stop_button:': ["23f9-fe0f", "23f9"],
    ':record_button:': ["23fa-fe0f", "23fa"],
    ':umbrella2:': ["2602-fe0f", "2602"],
    ':snowman2:': ["2603-fe0f", "2603"],
    ':comet:': ["2604-fe0f", "2604"],
    ':shamrock:': ["2618-fe0f", "2618"],
    ':skull_crossbones:': ["2620-fe0f", "2620"],
    ':skull_and_crossbones:': ["2620-fe0f", "2620"],
    ':radioactive:': ["2622-fe0f", "2622"],
    ':radioactive_sign:': ["2622-fe0f", "2622"],
    ':biohazard:': ["2623-fe0f", "2623"],
    ':biohazard_sign:': ["2623-fe0f", "2623"],
    ':orthodox_cross:': ["2626-fe0f", "2626"],
    ':star_and_crescent:': ["262a-fe0f", "262a"],
    ':peace:': ["262e-fe0f", "262e"],
    ':peace_symbol:': ["262e-fe0f", "262e"],
    ':yin_yang:': ["262f-fe0f", "262f"],
    ':wheel_of_dharma:': ["2638-fe0f", "2638"],
    ':frowning2:': ["2639-fe0f", "2639"],
    ':white_frowning_face:': ["2639-fe0f", "2639"],
    ':hammer_pick:': ["2692-fe0f", "2692"],
    ':hammer_and_pick:': ["2692-fe0f", "2692"],
    ':crossed_swords:': ["2694-fe0f", "2694"],
    ':scales:': ["2696-fe0f", "2696"],
    ':alembic:': ["2697-fe0f", "2697"],
    ':gear:': ["2699-fe0f", "2699"],
    ':atom:': ["269b-fe0f", "269b"],
    ':atom_symbol:': ["269b-fe0f", "269b"],
    ':fleur-de-lis:': ["269c-fe0f", "269c"],
    ':coffin:': ["26b0-fe0f", "26b0"],
    ':urn:': ["26b1-fe0f", "26b1"],
    ':funeral_urn:': ["26b1-fe0f", "26b1"],
    ':thunder_cloud_rain:': ["26c8-fe0f", "26c8"],
    ':thunder_cloud_and_rain:': ["26c8-fe0f", "26c8"],
    ':pick:': ["26cf-fe0f", "26cf"],
    ':helmet_with_cross:': ["26d1-fe0f", "26d1"],
    ':helmet_with_white_cross:': ["26d1-fe0f", "26d1"],
    ':chains:': ["26d3-fe0f", "26d3"],
    ':shinto_shrine:': ["26e9-fe0f", "26e9"],
    ':mountain:': ["26f0-fe0f", "26f0"],
    ':beach_umbrella:': ["26f1-fe0f", "26f1"],
    ':umbrella_on_ground:': ["26f1-fe0f", "26f1"],
    ':ferry:': ["26f4-fe0f", "26f4"],
    ':skier:': ["26f7-fe0f", "26f7"],
    ':ice_skate:': ["26f8-fe0f", "26f8"],
    ':basketball_player:': ["26f9-fe0f", "26f9"],
    ':person_with_ball:': ["26f9-fe0f", "26f9"],
    ':star_of_david:': ["2721-fe0f", "2721"],
    ':heart_exclamation:': ["2763-fe0f", "2763"],
    ':heavy_heart_exclamation_mark_ornament:': ["2763-fe0f", "2763"],
    ':black_joker:': ["1f0cf"],
    ':a:': ["1f170"],
    ':b:': ["1f171"],
    ':o2:': ["1f17e"],
    ':ab:': ["1f18e"],
    ':cl:': ["1f191"],
    ':cool:': ["1f192"],
    ':free:': ["1f193"],
    ':id:': ["1f194"],
    ':new:': ["1f195"],
    ':ng:': ["1f196"],
    ':ok:': ["1f197"],
    ':sos:': ["1f198"],
    ':up:': ["1f199"],
    ':vs:': ["1f19a"],
    ':koko:': ["1f201"],
    ':u7981:': ["1f232"],
    ':u7a7a:': ["1f233"],
    ':u5408:': ["1f234"],
    ':u6e80:': ["1f235"],
    ':u6709:': ["1f236"],
    ':u7533:': ["1f238"],
    ':u5272:': ["1f239"],
    ':u55b6:': ["1f23a"],
    ':ideograph_advantage:': ["1f250"],
    ':accept:': ["1f251"],
    ':cyclone:': ["1f300"],
    ':foggy:': ["1f301"],
    ':closed_umbrella:': ["1f302"],
    ':night_with_stars:': ["1f303"],
    ':sunrise_over_mountains:': ["1f304"],
    ':sunrise:': ["1f305"],
    ':city_dusk:': ["1f306"],
    ':city_sunset:': ["1f307"],
    ':city_sunrise:': ["1f307"],
    ':rainbow:': ["1f308"],
    ':bridge_at_night:': ["1f309"],
    ':ocean:': ["1f30a"],
    ':volcano:': ["1f30b"],
    ':milky_way:': ["1f30c"],
    ':earth_asia:': ["1f30f"],
    ':new_moon:': ["1f311"],
    ':first_quarter_moon:': ["1f313"],
    ':waxing_gibbous_moon:': ["1f314"],
    ':full_moon:': ["1f315"],
    ':crescent_moon:': ["1f319"],
    ':first_quarter_moon_with_face:': ["1f31b"],
    ':star2:': ["1f31f"],
    ':stars:': ["1f320"],
    ':chestnut:': ["1f330"],
    ':seedling:': ["1f331"],
    ':palm_tree:': ["1f334"],
    ':cactus:': ["1f335"],
    ':tulip:': ["1f337"],
    ':cherry_blossom:': ["1f338"],
    ':rose:': ["1f339"],
    ':hibiscus:': ["1f33a"],
    ':sunflower:': ["1f33b"],
    ':blossom:': ["1f33c"],
    ':corn:': ["1f33d"],
    ':ear_of_rice:': ["1f33e"],
    ':herb:': ["1f33f"],
    ':four_leaf_clover:': ["1f340"],
    ':maple_leaf:': ["1f341"],
    ':fallen_leaf:': ["1f342"],
    ':leaves:': ["1f343"],
    ':mushroom:': ["1f344"],
    ':tomato:': ["1f345"],
    ':eggplant:': ["1f346"],
    ':grapes:': ["1f347"],
    ':melon:': ["1f348"],
    ':watermelon:': ["1f349"],
    ':tangerine:': ["1f34a"],
    ':banana:': ["1f34c"],
    ':pineapple:': ["1f34d"],
    ':apple:': ["1f34e"],
    ':green_apple:': ["1f34f"],
    ':peach:': ["1f351"],
    ':cherries:': ["1f352"],
    ':strawberry:': ["1f353"],
    ':hamburger:': ["1f354"],
    ':pizza:': ["1f355"],
    ':meat_on_bone:': ["1f356"],
    ':poultry_leg:': ["1f357"],
    ':rice_cracker:': ["1f358"],
    ':rice_ball:': ["1f359"],
    ':rice:': ["1f35a"],
    ':curry:': ["1f35b"],
    ':ramen:': ["1f35c"],
    ':spaghetti:': ["1f35d"],
    ':bread:': ["1f35e"],
    ':fries:': ["1f35f"],
    ':sweet_potato:': ["1f360"],
    ':dango:': ["1f361"],
    ':oden:': ["1f362"],
    ':sushi:': ["1f363"],
    ':fried_shrimp:': ["1f364"],
    ':fish_cake:': ["1f365"],
    ':icecream:': ["1f366"],
    ':shaved_ice:': ["1f367"],
    ':ice_cream:': ["1f368"],
    ':doughnut:': ["1f369"],
    ':cookie:': ["1f36a"],
    ':chocolate_bar:': ["1f36b"],
    ':candy:': ["1f36c"],
    ':lollipop:': ["1f36d"],
    ':custard:': ["1f36e"],
    ':honey_pot:': ["1f36f"],
    ':cake:': ["1f370"],
    ':bento:': ["1f371"],
    ':stew:': ["1f372"],
    ':egg:': ["1f373"],
    ':fork_and_knife:': ["1f374"],
    ':tea:': ["1f375"],
    ':sake:': ["1f376"],
    ':wine_glass:': ["1f377"],
    ':cocktail:': ["1f378"],
    ':tropical_drink:': ["1f379"],
    ':beer:': ["1f37a"],
    ':beers:': ["1f37b"],
    ':ribbon:': ["1f380"],
    ':gift:': ["1f381"],
    ':birthday:': ["1f382"],
    ':jack_o_lantern:': ["1f383"],
    ':christmas_tree:': ["1f384"],
    ':santa:': ["1f385"],
    ':fireworks:': ["1f386"],
    ':sparkler:': ["1f387"],
    ':balloon:': ["1f388"],
    ':tada:': ["1f389"],
    ':confetti_ball:': ["1f38a"],
    ':tanabata_tree:': ["1f38b"],
    ':crossed_flags:': ["1f38c"],
    ':bamboo:': ["1f38d"],
    ':dolls:': ["1f38e"],
    ':flags:': ["1f38f"],
    ':wind_chime:': ["1f390"],
    ':rice_scene:': ["1f391"],
    ':school_satchel:': ["1f392"],
    ':mortar_board:': ["1f393"],
    ':carousel_horse:': ["1f3a0"],
    ':ferris_wheel:': ["1f3a1"],
    ':roller_coaster:': ["1f3a2"],
    ':fishing_pole_and_fish:': ["1f3a3"],
    ':microphone:': ["1f3a4"],
    ':movie_camera:': ["1f3a5"],
    ':cinema:': ["1f3a6"],
    ':headphones:': ["1f3a7"],
    ':art:': ["1f3a8"],
    ':tophat:': ["1f3a9"],
    ':circus_tent:': ["1f3aa"],
    ':ticket:': ["1f3ab"],
    ':clapper:': ["1f3ac"],
    ':performing_arts:': ["1f3ad"],
    ':video_game:': ["1f3ae"],
    ':dart:': ["1f3af"],
    ':slot_machine:': ["1f3b0"],
    ':8ball:': ["1f3b1"],
    ':game_die:': ["1f3b2"],
    ':bowling:': ["1f3b3"],
    ':flower_playing_cards:': ["1f3b4"],
    ':musical_note:': ["1f3b5"],
    ':notes:': ["1f3b6"],
    ':saxophone:': ["1f3b7"],
    ':guitar:': ["1f3b8"],
    ':musical_keyboard:': ["1f3b9"],
    ':trumpet:': ["1f3ba"],
    ':violin:': ["1f3bb"],
    ':musical_score:': ["1f3bc"],
    ':running_shirt_with_sash:': ["1f3bd"],
    ':tennis:': ["1f3be"],
    ':ski:': ["1f3bf"],
    ':basketball:': ["1f3c0"],
    ':checkered_flag:': ["1f3c1"],
    ':snowboarder:': ["1f3c2"],
    ':runner:': ["1f3c3"],
    ':surfer:': ["1f3c4"],
    ':trophy:': ["1f3c6"],
    ':football:': ["1f3c8"],
    ':swimmer:': ["1f3ca"],
    ':house:': ["1f3e0"],
    ':house_with_garden:': ["1f3e1"],
    ':office:': ["1f3e2"],
    ':post_office:': ["1f3e3"],
    ':hospital:': ["1f3e5"],
    ':bank:': ["1f3e6"],
    ':atm:': ["1f3e7"],
    ':hotel:': ["1f3e8"],
    ':love_hotel:': ["1f3e9"],
    ':convenience_store:': ["1f3ea"],
    ':school:': ["1f3eb"],
    ':department_store:': ["1f3ec"],
    ':factory:': ["1f3ed"],
    ':izakaya_lantern:': ["1f3ee"],
    ':japanese_castle:': ["1f3ef"],
    ':european_castle:': ["1f3f0"],
    ':snail:': ["1f40c"],
    ':snake:': ["1f40d"],
    ':racehorse:': ["1f40e"],
    ':sheep:': ["1f411"],
    ':monkey:': ["1f412"],
    ':chicken:': ["1f414"],
    ':boar:': ["1f417"],
    ':elephant:': ["1f418"],
    ':octopus:': ["1f419"],
    ':shell:': ["1f41a"],
    ':bug:': ["1f41b"],
    ':ant:': ["1f41c"],
    ':bee:': ["1f41d"],
    ':beetle:': ["1f41e"],
    ':fish:': ["1f41f"],
    ':tropical_fish:': ["1f420"],
    ':blowfish:': ["1f421"],
    ':turtle:': ["1f422"],
    ':hatching_chick:': ["1f423"],
    ':baby_chick:': ["1f424"],
    ':hatched_chick:': ["1f425"],
    ':bird:': ["1f426"],
    ':penguin:': ["1f427"],
    ':koala:': ["1f428"],
    ':poodle:': ["1f429"],
    ':camel:': ["1f42b"],
    ':dolphin:': ["1f42c"],
    ':mouse:': ["1f42d"],
    ':cow:': ["1f42e"],
    ':tiger:': ["1f42f"],
    ':rabbit:': ["1f430"],
    ':cat:': ["1f431"],
    ':dragon_face:': ["1f432"],
    ':whale:': ["1f433"],
    ':horse:': ["1f434"],
    ':monkey_face:': ["1f435"],
    ':dog:': ["1f436"],
    ':pig:': ["1f437"],
    ':frog:': ["1f438"],
    ':hamster:': ["1f439"],
    ':wolf:': ["1f43a"],
    ':bear:': ["1f43b"],
    ':panda_face:': ["1f43c"],
    ':pig_nose:': ["1f43d"],
    ':feet:': ["1f43e"],
    ':paw_prints:': ["1f43e"],
    ':eyes:': ["1f440"],
    ':ear:': ["1f442"],
    ':nose:': ["1f443"],
    ':lips:': ["1f444"],
    ':tongue:': ["1f445"],
    ':point_up_2:': ["1f446"],
    ':point_down:': ["1f447"],
    ':point_left:': ["1f448"],
    ':point_right:': ["1f449"],
    ':punch:': ["1f44a"],
    ':wave:': ["1f44b"],
    ':ok_hand:': ["1f44c"],
    ':thumbsup:': ["1f44d"],
    ':+1:': ["1f44d"],
    ':thumbsdown:': ["1f44e"],
    ':-1:': ["1f44e"],
    ':clap:': ["1f44f"],
    ':open_hands:': ["1f450"],
    ':crown:': ["1f451"],
    ':womans_hat:': ["1f452"],
    ':eyeglasses:': ["1f453"],
    ':necktie:': ["1f454"],
    ':shirt:': ["1f455"],
    ':jeans:': ["1f456"],
    ':dress:': ["1f457"],
    ':kimono:': ["1f458"],
    ':bikini:': ["1f459"],
    ':womans_clothes:': ["1f45a"],
    ':purse:': ["1f45b"],
    ':handbag:': ["1f45c"],
    ':pouch:': ["1f45d"],
    ':mans_shoe:': ["1f45e"],
    ':athletic_shoe:': ["1f45f"],
    ':high_heel:': ["1f460"],
    ':sandal:': ["1f461"],
    ':boot:': ["1f462"],
    ':footprints:': ["1f463"],
    ':bust_in_silhouette:': ["1f464"],
    ':boy:': ["1f466"],
    ':girl:': ["1f467"],
    ':man:': ["1f468"],
    ':woman:': ["1f469"],
    ':family:': ["1f46a"],
    ':couple:': ["1f46b"],
    ':cop:': ["1f46e"],
    ':dancers:': ["1f46f"],
    ':bride_with_veil:': ["1f470"],
    ':person_with_blond_hair:': ["1f471"],
    ':man_with_gua_pi_mao:': ["1f472"],
    ':man_with_turban:': ["1f473"],
    ':older_man:': ["1f474"],
    ':older_woman:': ["1f475"],
    ':grandma:': ["1f475"],
    ':baby:': ["1f476"],
    ':construction_worker:': ["1f477"],
    ':princess:': ["1f478"],
    ':japanese_ogre:': ["1f479"],
    ':japanese_goblin:': ["1f47a"],
    ':ghost:': ["1f47b"],
    ':angel:': ["1f47c"],
    ':alien:': ["1f47d"],
    ':space_invader:': ["1f47e"],
    ':imp:': ["1f47f"],
    ':skull:': ["1f480"],
    ':skeleton:': ["1f480"],
    ':card_index:': ["1f4c7"],
    ':information_desk_person:': ["1f481"],
    ':guardsman:': ["1f482"],
    ':dancer:': ["1f483"],
    ':lipstick:': ["1f484"],
    ':nail_care:': ["1f485"],
    ':ledger:': ["1f4d2"],
    ':massage:': ["1f486"],
    ':notebook:': ["1f4d3"],
    ':haircut:': ["1f487"],
    ':notebook_with_decorative_cover:': ["1f4d4"],
    ':barber:': ["1f488"],
    ':closed_book:': ["1f4d5"],
    ':syringe:': ["1f489"],
    ':book:': ["1f4d6"],
    ':pill:': ["1f48a"],
    ':green_book:': ["1f4d7"],
    ':kiss:': ["1f48b"],
    ':blue_book:': ["1f4d8"],
    ':love_letter:': ["1f48c"],
    ':orange_book:': ["1f4d9"],
    ':ring:': ["1f48d"],
    ':books:': ["1f4da"],
    ':gem:': ["1f48e"],
    ':name_badge:': ["1f4db"],
    ':couplekiss:': ["1f48f"],
    ':scroll:': ["1f4dc"],
    ':bouquet:': ["1f490"],
    ':pencil:': ["1f4dd"],
    ':couple_with_heart:': ["1f491"],
    ':telephone_receiver:': ["1f4de"],
    ':wedding:': ["1f492"],
    ':pager:': ["1f4df"],
    ':fax:': ["1f4e0"],
    ':heartbeat:': ["1f493"],
    ':satellite:': ["1f4e1"],
    ':loudspeaker:': ["1f4e2"],
    ':broken_heart:': ["1f494"],
    ':mega:': ["1f4e3"],
    ':outbox_tray:': ["1f4e4"],
    ':two_hearts:': ["1f495"],
    ':inbox_tray:': ["1f4e5"],
    ':package:': ["1f4e6"],
    ':sparkling_heart:': ["1f496"],
    ':e-mail:': ["1f4e7"],
    ':email:': ["1f4e7"],
    ':incoming_envelope:': ["1f4e8"],
    ':heartpulse:': ["1f497"],
    ':envelope_with_arrow:': ["1f4e9"],
    ':mailbox_closed:': ["1f4ea"],
    ':cupid:': ["1f498"],
    ':mailbox:': ["1f4eb"],
    ':postbox:': ["1f4ee"],
    ':blue_heart:': ["1f499"],
    ':newspaper:': ["1f4f0"],
    ':iphone:': ["1f4f1"],
    ':green_heart:': ["1f49a"],
    ':calling:': ["1f4f2"],
    ':vibration_mode:': ["1f4f3"],
    ':yellow_heart:': ["1f49b"],
    ':mobile_phone_off:': ["1f4f4"],
    ':signal_strength:': ["1f4f6"],
    ':purple_heart:': ["1f49c"],
    ':camera:': ["1f4f7"],
    ':video_camera:': ["1f4f9"],
    ':gift_heart:': ["1f49d"],
    ':tv:': ["1f4fa"],
    ':radio:': ["1f4fb"],
    ':revolving_hearts:': ["1f49e"],
    ':vhs:': ["1f4fc"],
    ':arrows_clockwise:': ["1f503"],
    ':heart_decoration:': ["1f49f"],
    ':loud_sound:': ["1f50a"],
    ':battery:': ["1f50b"],
    ':diamond_shape_with_a_dot_inside:': ["1f4a0"],
    ':electric_plug:': ["1f50c"],
    ':mag:': ["1f50d"],
    ':bulb:': ["1f4a1"],
    ':mag_right:': ["1f50e"],
    ':lock_with_ink_pen:': ["1f50f"],
    ':anger:': ["1f4a2"],
    ':closed_lock_with_key:': ["1f510"],
    ':key:': ["1f511"],
    ':bomb:': ["1f4a3"],
    ':lock:': ["1f512"],
    ':unlock:': ["1f513"],
    ':zzz:': ["1f4a4"],
    ':bell:': ["1f514"],
    ':bookmark:': ["1f516"],
    ':boom:': ["1f4a5"],
    ':link:': ["1f517"],
    ':radio_button:': ["1f518"],
    ':sweat_drops:': ["1f4a6"],
    ':back:': ["1f519"],
    ':end:': ["1f51a"],
    ':droplet:': ["1f4a7"],
    ':on:': ["1f51b"],
    ':soon:': ["1f51c"],
    ':dash:': ["1f4a8"],
    ':top:': ["1f51d"],
    ':underage:': ["1f51e"],
    ':poop:': ["1f4a9"],
    ':shit:': ["1f4a9"],
    ':hankey:': ["1f4a9"],
    ':poo:': ["1f4a9"],
    ':ten:': ["1f51f"],
    ':muscle:': ["1f4aa"],
    ':capital_abcd:': ["1f520"],
    ':abcd:': ["1f521"],
    ':dizzy:': ["1f4ab"],
    ':1234:': ["1f522"],
    ':symbols:': ["1f523"],
    ':speech_balloon:': ["1f4ac"],
    ':abc:': ["1f524"],
    ':fire:': ["1f525"],
    ':flame:': ["1f525"],
    ':white_flower:': ["1f4ae"],
    ':flashlight:': ["1f526"],
    ':wrench:': ["1f527"],
    ':100:': ["1f4af"],
    ':hammer:': ["1f528"],
    ':nut_and_bolt:': ["1f529"],
    ':moneybag:': ["1f4b0"],
    ':knife:': ["1f52a"],
    ':gun:': ["1f52b"],
    ':currency_exchange:': ["1f4b1"],
    ':crystal_ball:': ["1f52e"],
    ':heavy_dollar_sign:': ["1f4b2"],
    ':six_pointed_star:': ["1f52f"],
    ':credit_card:': ["1f4b3"],
    ':beginner:': ["1f530"],
    ':trident:': ["1f531"],
    ':yen:': ["1f4b4"],
    ':black_square_button:': ["1f532"],
    ':white_square_button:': ["1f533"],
    ':dollar:': ["1f4b5"],
    ':red_circle:': ["1f534"],
    ':large_blue_circle:': ["1f535"],
    ':money_with_wings:': ["1f4b8"],
    ':large_orange_diamond:': ["1f536"],
    ':large_blue_diamond:': ["1f537"],
    ':chart:': ["1f4b9"],
    ':small_orange_diamond:': ["1f538"],
    ':small_blue_diamond:': ["1f539"],
    ':seat:': ["1f4ba"],
    ':small_red_triangle:': ["1f53a"],
    ':small_red_triangle_down:': ["1f53b"],
    ':computer:': ["1f4bb"],
    ':arrow_up_small:': ["1f53c"],
    ':briefcase:': ["1f4bc"],
    ':arrow_down_small:': ["1f53d"],
    ':clock1:': ["1f550"],
    ':minidisc:': ["1f4bd"],
    ':clock2:': ["1f551"],
    ':floppy_disk:': ["1f4be"],
    ':clock3:': ["1f552"],
    ':cd:': ["1f4bf"],
    ':clock4:': ["1f553"],
    ':dvd:': ["1f4c0"],
    ':clock5:': ["1f554"],
    ':clock6:': ["1f555"],
    ':file_folder:': ["1f4c1"],
    ':clock7:': ["1f556"],
    ':clock8:': ["1f557"],
    ':open_file_folder:': ["1f4c2"],
    ':clock9:': ["1f558"],
    ':clock10:': ["1f559"],
    ':page_with_curl:': ["1f4c3"],
    ':clock11:': ["1f55a"],
    ':clock12:': ["1f55b"],
    ':page_facing_up:': ["1f4c4"],
    ':mount_fuji:': ["1f5fb"],
    ':tokyo_tower:': ["1f5fc"],
    ':date:': ["1f4c5"],
    ':statue_of_liberty:': ["1f5fd"],
    ':japan:': ["1f5fe"],
    ':calendar:': ["1f4c6"],
    ':moyai:': ["1f5ff"],
    ':grin:': ["1f601"],
    ':joy:': ["1f602"],
    ':smiley:': ["1f603"],
    ':chart_with_upwards_trend:': ["1f4c8"],
    ':smile:': ["1f604"],
    ':sweat_smile:': ["1f605"],
    ':chart_with_downwards_trend:': ["1f4c9"],
    ':laughing:': ["1f606"],
    ':satisfied:': ["1f606"],
    ':wink:': ["1f609"],
    ':bar_chart:': ["1f4ca"],
    ':blush:': ["1f60a"],
    ':yum:': ["1f60b"],
    ':clipboard:': ["1f4cb"],
    ':relieved:': ["1f60c"],
    ':heart_eyes:': ["1f60d"],
    ':pushpin:': ["1f4cc"],
    ':smirk:': ["1f60f"],
    ':unamused:': ["1f612"],
    ':round_pushpin:': ["1f4cd"],
    ':sweat:': ["1f613"],
    ':pensive:': ["1f614"],
    ':paperclip:': ["1f4ce"],
    ':confounded:': ["1f616"],
    ':kissing_heart:': ["1f618"],
    ':straight_ruler:': ["1f4cf"],
    ':kissing_closed_eyes:': ["1f61a"],
    ':stuck_out_tongue_winking_eye:': ["1f61c"],
    ':triangular_ruler:': ["1f4d0"],
    ':stuck_out_tongue_closed_eyes:': ["1f61d"],
    ':disappointed:': ["1f61e"],
    ':bookmark_tabs:': ["1f4d1"],
    ':angry:': ["1f620"],
    ':rage:': ["1f621"],
    ':cry:': ["1f622"],
    ':persevere:': ["1f623"],
    ':triumph:': ["1f624"],
    ':disappointed_relieved:': ["1f625"],
    ':fearful:': ["1f628"],
    ':weary:': ["1f629"],
    ':sleepy:': ["1f62a"],
    ':tired_face:': ["1f62b"],
    ':sob:': ["1f62d"],
    ':cold_sweat:': ["1f630"],
    ':scream:': ["1f631"],
    ':astonished:': ["1f632"],
    ':flushed:': ["1f633"],
    ':dizzy_face:': ["1f635"],
    ':mask:': ["1f637"],
    ':smile_cat:': ["1f638"],
    ':joy_cat:': ["1f639"],
    ':smiley_cat:': ["1f63a"],
    ':heart_eyes_cat:': ["1f63b"],
    ':smirk_cat:': ["1f63c"],
    ':kissing_cat:': ["1f63d"],
    ':pouting_cat:': ["1f63e"],
    ':crying_cat_face:': ["1f63f"],
    ':scream_cat:': ["1f640"],
    ':no_good:': ["1f645"],
    ':ok_woman:': ["1f646"],
    ':bow:': ["1f647"],
    ':see_no_evil:': ["1f648"],
    ':hear_no_evil:': ["1f649"],
    ':speak_no_evil:': ["1f64a"],
    ':raising_hand:': ["1f64b"],
    ':raised_hands:': ["1f64c"],
    ':person_frowning:': ["1f64d"],
    ':person_with_pouting_face:': ["1f64e"],
    ':pray:': ["1f64f"],
    ':rocket:': ["1f680"],
    ':railway_car:': ["1f683"],
    ':bullettrain_side:': ["1f684"],
    ':bullettrain_front:': ["1f685"],
    ':metro:': ["1f687"],
    ':station:': ["1f689"],
    ':bus:': ["1f68c"],
    ':busstop:': ["1f68f"],
    ':ambulance:': ["1f691"],
    ':fire_engine:': ["1f692"],
    ':police_car:': ["1f693"],
    ':taxi:': ["1f695"],
    ':red_car:': ["1f697"],
    ':blue_car:': ["1f699"],
    ':truck:': ["1f69a"],
    ':ship:': ["1f6a2"],
    ':speedboat:': ["1f6a4"],
    ':traffic_light:': ["1f6a5"],
    ':construction:': ["1f6a7"],
    ':rotating_light:': ["1f6a8"],
    ':triangular_flag_on_post:': ["1f6a9"],
    ':door:': ["1f6aa"],
    ':no_entry_sign:': ["1f6ab"],
    ':smoking:': ["1f6ac"],
    ':no_smoking:': ["1f6ad"],
    ':bike:': ["1f6b2"],
    ':walking:': ["1f6b6"],
    ':mens:': ["1f6b9"],
    ':womens:': ["1f6ba"],
    ':restroom:': ["1f6bb"],
    ':baby_symbol:': ["1f6bc"],
    ':toilet:': ["1f6bd"],
    ':wc:': ["1f6be"],
    ':bath:': ["1f6c0"],
    ':metal:': ["1f918"],
    ':sign_of_the_horns:': ["1f918"],
    ':grinning:': ["1f600"],
    ':innocent:': ["1f607"],
    ':smiling_imp:': ["1f608"],
    ':sunglasses:': ["1f60e"],
    ':neutral_face:': ["1f610"],
    ':expressionless:': ["1f611"],
    ':confused:': ["1f615"],
    ':kissing:': ["1f617"],
    ':kissing_smiling_eyes:': ["1f619"],
    ':stuck_out_tongue:': ["1f61b"],
    ':worried:': ["1f61f"],
    ':frowning:': ["1f626"],
    ':anguished:': ["1f627"],
    ':grimacing:': ["1f62c"],
    ':open_mouth:': ["1f62e"],
    ':hushed:': ["1f62f"],
    ':sleeping:': ["1f634"],
    ':no_mouth:': ["1f636"],
    ':helicopter:': ["1f681"],
    ':steam_locomotive:': ["1f682"],
    ':train2:': ["1f686"],
    ':light_rail:': ["1f688"],
    ':tram:': ["1f68a"],
    ':oncoming_bus:': ["1f68d"],
    ':trolleybus:': ["1f68e"],
    ':minibus:': ["1f690"],
    ':oncoming_police_car:': ["1f694"],
    ':oncoming_taxi:': ["1f696"],
    ':oncoming_automobile:': ["1f698"],
    ':articulated_lorry:': ["1f69b"],
    ':tractor:': ["1f69c"],
    ':monorail:': ["1f69d"],
    ':mountain_railway:': ["1f69e"],
    ':suspension_railway:': ["1f69f"],
    ':mountain_cableway:': ["1f6a0"],
    ':aerial_tramway:': ["1f6a1"],
    ':rowboat:': ["1f6a3"],
    ':vertical_traffic_light:': ["1f6a6"],
    ':put_litter_in_its_place:': ["1f6ae"],
    ':do_not_litter:': ["1f6af"],
    ':potable_water:': ["1f6b0"],
    ':non-potable_water:': ["1f6b1"],
    ':no_bicycles:': ["1f6b3"],
    ':bicyclist:': ["1f6b4"],
    ':mountain_bicyclist:': ["1f6b5"],
    ':no_pedestrians:': ["1f6b7"],
    ':children_crossing:': ["1f6b8"],
    ':shower:': ["1f6bf"],
    ':bathtub:': ["1f6c1"],
    ':passport_control:': ["1f6c2"],
    ':customs:': ["1f6c3"],
    ':baggage_claim:': ["1f6c4"],
    ':left_luggage:': ["1f6c5"],
    ':earth_africa:': ["1f30d"],
    ':earth_americas:': ["1f30e"],
    ':globe_with_meridians:': ["1f310"],
    ':waxing_crescent_moon:': ["1f312"],
    ':waning_gibbous_moon:': ["1f316"],
    ':last_quarter_moon:': ["1f317"],
    ':waning_crescent_moon:': ["1f318"],
    ':new_moon_with_face:': ["1f31a"],
    ':last_quarter_moon_with_face:': ["1f31c"],
    ':full_moon_with_face:': ["1f31d"],
    ':sun_with_face:': ["1f31e"],
    ':evergreen_tree:': ["1f332"],
    ':deciduous_tree:': ["1f333"],
    ':lemon:': ["1f34b"],
    ':pear:': ["1f350"],
    ':baby_bottle:': ["1f37c"],
    ':horse_racing:': ["1f3c7"],
    ':rugby_football:': ["1f3c9"],
    ':european_post_office:': ["1f3e4"],
    ':rat:': ["1f400"],
    ':mouse2:': ["1f401"],
    ':ox:': ["1f402"],
    ':water_buffalo:': ["1f403"],
    ':cow2:': ["1f404"],
    ':tiger2:': ["1f405"],
    ':leopard:': ["1f406"],
    ':rabbit2:': ["1f407"],
    ':cat2:': ["1f408"],
    ':dragon:': ["1f409"],
    ':crocodile:': ["1f40a"],
    ':whale2:': ["1f40b"],
    ':ram:': ["1f40f"],
    ':goat:': ["1f410"],
    ':rooster:': ["1f413"],
    ':dog2:': ["1f415"],
    ':pig2:': ["1f416"],
    ':dromedary_camel:': ["1f42a"],
    ':busts_in_silhouette:': ["1f465"],
    ':two_men_holding_hands:': ["1f46c"],
    ':two_women_holding_hands:': ["1f46d"],
    ':thought_balloon:': ["1f4ad"],
    ':euro:': ["1f4b6"],
    ':pound:': ["1f4b7"],
    ':mailbox_with_mail:': ["1f4ec"],
    ':mailbox_with_no_mail:': ["1f4ed"],
    ':postal_horn:': ["1f4ef"],
    ':no_mobile_phones:': ["1f4f5"],
    ':twisted_rightwards_arrows:': ["1f500"],
    ':repeat:': ["1f501"],
    ':repeat_one:': ["1f502"],
    ':arrows_counterclockwise:': ["1f504"],
    ':low_brightness:': ["1f505"],
    ':high_brightness:': ["1f506"],
    ':mute:': ["1f507"],
    ':sound:': ["1f509"],
    ':no_bell:': ["1f515"],
    ':microscope:': ["1f52c"],
    ':telescope:': ["1f52d"],
    ':clock130:': ["1f55c"],
    ':clock230:': ["1f55d"],
    ':clock330:': ["1f55e"],
    ':clock430:': ["1f55f"],
    ':clock530:': ["1f560"],
    ':clock630:': ["1f561"],
    ':clock730:': ["1f562"],
    ':clock830:': ["1f563"],
    ':clock930:': ["1f564"],
    ':clock1030:': ["1f565"],
    ':clock1130:': ["1f566"],
    ':clock1230:': ["1f567"],
    ':speaker:': ["1f508"],
    ':train:': ["1f68b"],
    ':medal:': ["1f3c5"],
    ':sports_medal:': ["1f3c5"],
    ':flag_black:': ["1f3f4"],
    ':waving_black_flag:': ["1f3f4"],
    ':camera_with_flash:': ["1f4f8"],
    ':sleeping_accommodation:': ["1f6cc"],
    ':middle_finger:': ["1f595"],
    ':reversed_hand_with_middle_finger_extended:': ["1f595"],
    ':vulcan:': ["1f596"],
    ':raised_hand_with_part_between_middle_and_ring_fingers:': ["1f596"],
    ':slight_frown:': ["1f641"],
    ':slightly_frowning_face:': ["1f641"],
    ':slight_smile:': ["1f642"],
    ':slightly_smiling_face:': ["1f642"],
    ':airplane_departure:': ["1f6eb"],
    ':airplane_arriving:': ["1f6ec"],
    ':tone1:': ["1f3fb"],
    ':tone2:': ["1f3fc"],
    ':tone3:': ["1f3fd"],
    ':tone4:': ["1f3fe"],
    ':tone5:': ["1f3ff"],
    ':upside_down:': ["1f643"],
    ':upside_down_face:': ["1f643"],
    ':money_mouth:': ["1f911"],
    ':money_mouth_face:': ["1f911"],
    ':nerd:': ["1f913"],
    ':nerd_face:': ["1f913"],
    ':hugging:': ["1f917"],
    ':hugging_face:': ["1f917"],
    ':rolling_eyes:': ["1f644"],
    ':face_with_rolling_eyes:': ["1f644"],
    ':thinking:': ["1f914"],
    ':thinking_face:': ["1f914"],
    ':zipper_mouth:': ["1f910"],
    ':zipper_mouth_face:': ["1f910"],
    ':thermometer_face:': ["1f912"],
    ':face_with_thermometer:': ["1f912"],
    ':head_bandage:': ["1f915"],
    ':face_with_head_bandage:': ["1f915"],
    ':robot:': ["1f916"],
    ':robot_face:': ["1f916"],
    ':lion_face:': ["1f981"],
    ':lion:': ["1f981"],
    ':unicorn:': ["1f984"],
    ':unicorn_face:': ["1f984"],
    ':scorpion:': ["1f982"],
    ':crab:': ["1f980"],
    ':turkey:': ["1f983"],
    ':cheese:': ["1f9c0"],
    ':cheese_wedge:': ["1f9c0"],
    ':hotdog:': ["1f32d"],
    ':hot_dog:': ["1f32d"],
    ':taco:': ["1f32e"],
    ':burrito:': ["1f32f"],
    ':popcorn:': ["1f37f"],
    ':champagne:': ["1f37e"],
    ':bottle_with_popping_cork:': ["1f37e"],
    ':bow_and_arrow:': ["1f3f9"],
    ':archery:': ["1f3f9"],
    ':amphora:': ["1f3fa"],
    ':place_of_worship:': ["1f6d0"],
    ':worship_symbol:': ["1f6d0"],
    ':kaaba:': ["1f54b"],
    ':mosque:': ["1f54c"],
    ':synagogue:': ["1f54d"],
    ':menorah:': ["1f54e"],
    ':prayer_beads:': ["1f4ff"],
    ':cricket:': ["1f3cf"],
    ':cricket_bat_ball:': ["1f3cf"],
    ':volleyball:': ["1f3d0"],
    ':field_hockey:': ["1f3d1"],
    ':hockey:': ["1f3d2"],
    ':ping_pong:': ["1f3d3"],
    ':table_tennis:': ["1f3d3"],
    ':badminton:': ["1f3f8"],
    ':fast_forward:': ["23e9"],
    ':rewind:': ["23ea"],
    ':arrow_double_up:': ["23eb"],
    ':arrow_double_down:': ["23ec"],
    ':alarm_clock:': ["23f0"],
    ':hourglass_flowing_sand:': ["23f3"],
    ':ophiuchus:': ["26ce"],
    ':white_check_mark:': ["2705"],
    ':fist:': ["270a"],
    ':raised_hand:': ["270b"],
    ':sparkles:': ["2728"],
    ':x:': ["274c"],
    ':negative_squared_cross_mark:': ["274e"],
    ':question:': ["2753"],
    ':grey_question:': ["2754"],
    ':grey_exclamation:': ["2755"],
    ':heavy_plus_sign:': ["2795"],
    ':heavy_minus_sign:': ["2796"],
    ':heavy_division_sign:': ["2797"],
    ':curly_loop:': ["27b0"],
    ':loop:': ["27bf"]
  }; //ns.emojioneList = {':flag_zw:':["1f1ff-1f1fc"],':zw:':["1f1ff-1f1fc"],':flag_zm:':["1f1ff-1f1f2"],':zm:':["1f1ff-1f1f2"],':flag_ye:':["1f1fe-1f1ea"],':ye:':["1f1fe-1f1ea"],':flag_eh:':["1f1ea-1f1ed"],':eh:':["1f1ea-1f1ed"],':flag_wf:':["1f1fc-1f1eb"],':wf:':["1f1fc-1f1eb"],':flag_ve:':["1f1fb-1f1ea"],':ve:':["1f1fb-1f1ea"],':flag_va:':["1f1fb-1f1e6"],':va:':["1f1fb-1f1e6"],':flag_vu:':["1f1fb-1f1fa"],':vu:':["1f1fb-1f1fa"],':flag_uz:':["1f1fa-1f1ff"],':uz:':["1f1fa-1f1ff"],':flag_uy:':["1f1fa-1f1fe"],':uy:':["1f1fa-1f1fe"],':flag_ua:':["1f1fa-1f1e6"],':ua:':["1f1fa-1f1e6"],':flag_ug:':["1f1fa-1f1ec"],':ug:':["1f1fa-1f1ec"],':flag_vi:':["1f1fb-1f1ee"],':vi:':["1f1fb-1f1ee"],':flag_tv:':["1f1f9-1f1fb"],':tuvalu:':["1f1f9-1f1fb"],':flag_tm:':["1f1f9-1f1f2"],':turkmenistan:':["1f1f9-1f1f2"],':flag_tn:':["1f1f9-1f1f3"],':tn:':["1f1f9-1f1f3"],':flag_tt:':["1f1f9-1f1f9"],':tt:':["1f1f9-1f1f9"],':flag_to:':["1f1f9-1f1f4"],':to:':["1f1f9-1f1f4"],':flag_tg:':["1f1f9-1f1ec"],':tg:':["1f1f9-1f1ec"],':flag_th:':["1f1f9-1f1ed"],':th:':["1f1f9-1f1ed"],':flag_tz:':["1f1f9-1f1ff"],':tz:':["1f1f9-1f1ff"],':flag_tj:':["1f1f9-1f1ef"],':tj:':["1f1f9-1f1ef"],':flag_tw:':["1f1f9-1f1fc"],':tw:':["1f1f9-1f1fc"],':flag_sy:':["1f1f8-1f1fe"],':sy:':["1f1f8-1f1fe"],':flag_sz:':["1f1f8-1f1ff"],':sz:':["1f1f8-1f1ff"],':flag_sr:':["1f1f8-1f1f7"],':sr:':["1f1f8-1f1f7"],':flag_sd:':["1f1f8-1f1e9"],':sd:':["1f1f8-1f1e9"],':flag_lk:':["1f1f1-1f1f0"],':lk:':["1f1f1-1f1f0"],':flag_so:':["1f1f8-1f1f4"],':so:':["1f1f8-1f1f4"],':flag_sb:':["1f1f8-1f1e7"],':sb:':["1f1f8-1f1e7"],':flag_si:':["1f1f8-1f1ee"],':si:':["1f1f8-1f1ee"],':flag_sk:':["1f1f8-1f1f0"],':sk:':["1f1f8-1f1f0"],':flag_sl:':["1f1f8-1f1f1"],':sl:':["1f1f8-1f1f1"],':flag_sc:':["1f1f8-1f1e8"],':sc:':["1f1f8-1f1e8"],':flag_rs:':["1f1f7-1f1f8"],':rs:':["1f1f7-1f1f8"],':flag_sn:':["1f1f8-1f1f3"],':sn:':["1f1f8-1f1f3"],':flag_st:':["1f1f8-1f1f9"],':st:':["1f1f8-1f1f9"],':flag_sm:':["1f1f8-1f1f2"],':sm:':["1f1f8-1f1f2"],':flag_ws:':["1f1fc-1f1f8"],':ws:':["1f1fc-1f1f8"],':flag_vc:':["1f1fb-1f1e8"],':vc:':["1f1fb-1f1e8"],':flag_lc:':["1f1f1-1f1e8"],':lc:':["1f1f1-1f1e8"],':flag_kn:':["1f1f0-1f1f3"],':kn:':["1f1f0-1f1f3"],':flag_sh:':["1f1f8-1f1ed"],':sh:':["1f1f8-1f1ed"],':flag_rw:':["1f1f7-1f1fc"],':rw:':["1f1f7-1f1fc"],':flag_ro:':["1f1f7-1f1f4"],':ro:':["1f1f7-1f1f4"],':flag_qa:':["1f1f6-1f1e6"],':qa:':["1f1f6-1f1e6"],':flag_pe:':["1f1f5-1f1ea"],':pe:':["1f1f5-1f1ea"],':flag_py:':["1f1f5-1f1fe"],':py:':["1f1f5-1f1fe"],':flag_pg:':["1f1f5-1f1ec"],':pg:':["1f1f5-1f1ec"],':flag_pa:':["1f1f5-1f1e6"],':pa:':["1f1f5-1f1e6"],':flag_ps:':["1f1f5-1f1f8"],':ps:':["1f1f5-1f1f8"],':flag_pw:':["1f1f5-1f1fc"],':pw:':["1f1f5-1f1fc"],':flag_pk:':["1f1f5-1f1f0"],':pk:':["1f1f5-1f1f0"],':flag_om:':["1f1f4-1f1f2"],':om:':["1f1f4-1f1f2"],':flag_kp:':["1f1f0-1f1f5"],':kp:':["1f1f0-1f1f5"],':flag_nu:':["1f1f3-1f1fa"],':nu:':["1f1f3-1f1fa"],':flag_ng:':["1f1f3-1f1ec"],':nigeria:':["1f1f3-1f1ec"],':flag_ne:':["1f1f3-1f1ea"],':ne:':["1f1f3-1f1ea"],':flag_ni:':["1f1f3-1f1ee"],':ni:':["1f1f3-1f1ee"],':flag_nc:':["1f1f3-1f1e8"],':nc:':["1f1f3-1f1e8"],':flag_np:':["1f1f3-1f1f5"],':np:':["1f1f3-1f1f5"],':flag_nr:':["1f1f3-1f1f7"],':nr:':["1f1f3-1f1f7"],':flag_na:':["1f1f3-1f1e6"],':na:':["1f1f3-1f1e6"],':flag_mm:':["1f1f2-1f1f2"],':mm:':["1f1f2-1f1f2"],':flag_mz:':["1f1f2-1f1ff"],':mz:':["1f1f2-1f1ff"],':flag_ma:':["1f1f2-1f1e6"],':ma:':["1f1f2-1f1e6"],':flag_ms:':["1f1f2-1f1f8"],':ms:':["1f1f2-1f1f8"],':flag_me:':["1f1f2-1f1ea"],':me:':["1f1f2-1f1ea"],':flag_mn:':["1f1f2-1f1f3"],':mn:':["1f1f2-1f1f3"],':flag_mc:':["1f1f2-1f1e8"],':mc:':["1f1f2-1f1e8"],':flag_md:':["1f1f2-1f1e9"],':md:':["1f1f2-1f1e9"],':flag_fm:':["1f1eb-1f1f2"],':fm:':["1f1eb-1f1f2"],':flag_mu:':["1f1f2-1f1fa"],':mu:':["1f1f2-1f1fa"],':flag_mr:':["1f1f2-1f1f7"],':mr:':["1f1f2-1f1f7"],':flag_mh:':["1f1f2-1f1ed"],':mh:':["1f1f2-1f1ed"],':flag_mt:':["1f1f2-1f1f9"],':mt:':["1f1f2-1f1f9"],':flag_ml:':["1f1f2-1f1f1"],':ml:':["1f1f2-1f1f1"],':flag_mv:':["1f1f2-1f1fb"],':mv:':["1f1f2-1f1fb"],':flag_mw:':["1f1f2-1f1fc"],':mw:':["1f1f2-1f1fc"],':flag_mg:':["1f1f2-1f1ec"],':mg:':["1f1f2-1f1ec"],':flag_mk:':["1f1f2-1f1f0"],':mk:':["1f1f2-1f1f0"],':flag_lu:':["1f1f1-1f1fa"],':lu:':["1f1f1-1f1fa"],':flag_lt:':["1f1f1-1f1f9"],':lt:':["1f1f1-1f1f9"],':flag_li:':["1f1f1-1f1ee"],':li:':["1f1f1-1f1ee"],':flag_ly:':["1f1f1-1f1fe"],':ly:':["1f1f1-1f1fe"],':flag_lr:':["1f1f1-1f1f7"],':lr:':["1f1f1-1f1f7"],':flag_ls:':["1f1f1-1f1f8"],':ls:':["1f1f1-1f1f8"],':flag_lb:':["1f1f1-1f1e7"],':lb:':["1f1f1-1f1e7"],':flag_lv:':["1f1f1-1f1fb"],':lv:':["1f1f1-1f1fb"],':flag_la:':["1f1f1-1f1e6"],':la:':["1f1f1-1f1e6"],':flag_kg:':["1f1f0-1f1ec"],':kg:':["1f1f0-1f1ec"],':flag_kw:':["1f1f0-1f1fc"],':kw:':["1f1f0-1f1fc"],':flag_xk:':["1f1fd-1f1f0"],':xk:':["1f1fd-1f1f0"],':flag_ki:':["1f1f0-1f1ee"],':ki:':["1f1f0-1f1ee"],':flag_ke:':["1f1f0-1f1ea"],':ke:':["1f1f0-1f1ea"],':flag_kz:':["1f1f0-1f1ff"],':kz:':["1f1f0-1f1ff"],':flag_jo:':["1f1ef-1f1f4"],':jo:':["1f1ef-1f1f4"],':flag_je:':["1f1ef-1f1ea"],':je:':["1f1ef-1f1ea"],':flag_jm:':["1f1ef-1f1f2"],':jm:':["1f1ef-1f1f2"],':flag_iq:':["1f1ee-1f1f6"],':iq:':["1f1ee-1f1f6"],':flag_ir:':["1f1ee-1f1f7"],':ir:':["1f1ee-1f1f7"],':flag_is:':["1f1ee-1f1f8"],':is:':["1f1ee-1f1f8"],':flag_hu:':["1f1ed-1f1fa"],':hu:':["1f1ed-1f1fa"],':flag_hn:':["1f1ed-1f1f3"],':hn:':["1f1ed-1f1f3"],':flag_ht:':["1f1ed-1f1f9"],':ht:':["1f1ed-1f1f9"],':flag_gy:':["1f1ec-1f1fe"],':gy:':["1f1ec-1f1fe"],':flag_gw:':["1f1ec-1f1fc"],':gw:':["1f1ec-1f1fc"],':flag_gn:':["1f1ec-1f1f3"],':gn:':["1f1ec-1f1f3"],':flag_gt:':["1f1ec-1f1f9"],':gt:':["1f1ec-1f1f9"],':flag_gu:':["1f1ec-1f1fa"],':gu:':["1f1ec-1f1fa"],':flag_gd:':["1f1ec-1f1e9"],':gd:':["1f1ec-1f1e9"],':flag_gl:':["1f1ec-1f1f1"],':gl:':["1f1ec-1f1f1"],':flag_gr:':["1f1ec-1f1f7"],':gr:':["1f1ec-1f1f7"],':flag_gi:':["1f1ec-1f1ee"],':gi:':["1f1ec-1f1ee"],':flag_gh:':["1f1ec-1f1ed"],':gh:':["1f1ec-1f1ed"],':flag_ge:':["1f1ec-1f1ea"],':ge:':["1f1ec-1f1ea"],':flag_gm:':["1f1ec-1f1f2"],':gm:':["1f1ec-1f1f2"],':flag_ga:':["1f1ec-1f1e6"],':ga:':["1f1ec-1f1e6"],':flag_pf:':["1f1f5-1f1eb"],':pf:':["1f1f5-1f1eb"],':flag_fj:':["1f1eb-1f1ef"],':fj:':["1f1eb-1f1ef"],':flag_fo:':["1f1eb-1f1f4"],':fo:':["1f1eb-1f1f4"],':flag_fk:':["1f1eb-1f1f0"],':fk:':["1f1eb-1f1f0"],':flag_et:':["1f1ea-1f1f9"],':et:':["1f1ea-1f1f9"],':flag_ee:':["1f1ea-1f1ea"],':ee:':["1f1ea-1f1ea"],':flag_er:':["1f1ea-1f1f7"],':er:':["1f1ea-1f1f7"],':flag_gq:':["1f1ec-1f1f6"],':gq:':["1f1ec-1f1f6"],':flag_sv:':["1f1f8-1f1fb"],':sv:':["1f1f8-1f1fb"],':flag_eg:':["1f1ea-1f1ec"],':eg:':["1f1ea-1f1ec"],':flag_ec:':["1f1ea-1f1e8"],':ec:':["1f1ea-1f1e8"],':flag_tl:':["1f1f9-1f1f1"],':tl:':["1f1f9-1f1f1"],':flag_do:':["1f1e9-1f1f4"],':do:':["1f1e9-1f1f4"],':flag_dm:':["1f1e9-1f1f2"],':dm:':["1f1e9-1f1f2"],':flag_dj:':["1f1e9-1f1ef"],':dj:':["1f1e9-1f1ef"],':flag_cz:':["1f1e8-1f1ff"],':cz:':["1f1e8-1f1ff"],':flag_cy:':["1f1e8-1f1fe"],':cy:':["1f1e8-1f1fe"],':flag_cu:':["1f1e8-1f1fa"],':cu:':["1f1e8-1f1fa"],':flag_hr:':["1f1ed-1f1f7"],':hr:':["1f1ed-1f1f7"],':flag_ci:':["1f1e8-1f1ee"],':ci:':["1f1e8-1f1ee"],':flag_cr:':["1f1e8-1f1f7"],':cr:':["1f1e8-1f1f7"],':flag_td:':["1f1f9-1f1e9"],':td:':["1f1f9-1f1e9"],':flag_cg:':["1f1e8-1f1ec"],':cg:':["1f1e8-1f1ec"],':flag_cd:':["1f1e8-1f1e9"],':congo:':["1f1e8-1f1e9"],':flag_km:':["1f1f0-1f1f2"],':km:':["1f1f0-1f1f2"],':flag_cf:':["1f1e8-1f1eb"],':cf:':["1f1e8-1f1eb"],':flag_ky:':["1f1f0-1f1fe"],':ky:':["1f1f0-1f1fe"],':flag_cv:':["1f1e8-1f1fb"],':cv:':["1f1e8-1f1fb"],':flag_cm:':["1f1e8-1f1f2"],':cm:':["1f1e8-1f1f2"],':flag_kh:':["1f1f0-1f1ed"],':kh:':["1f1f0-1f1ed"],':flag_bi:':["1f1e7-1f1ee"],':bi:':["1f1e7-1f1ee"],':flag_bf:':["1f1e7-1f1eb"],':bf:':["1f1e7-1f1eb"],':flag_bg:':["1f1e7-1f1ec"],':bg:':["1f1e7-1f1ec"],':flag_bn:':["1f1e7-1f1f3"],':bn:':["1f1e7-1f1f3"],':flag_bw:':["1f1e7-1f1fc"],':bw:':["1f1e7-1f1fc"],':flag_ba:':["1f1e7-1f1e6"],':ba:':["1f1e7-1f1e6"],':flag_bo:':["1f1e7-1f1f4"],':bo:':["1f1e7-1f1f4"],':flag_bt:':["1f1e7-1f1f9"],':bt:':["1f1e7-1f1f9"],':flag_bm:':["1f1e7-1f1f2"],':bm:':["1f1e7-1f1f2"],':flag_bj:':["1f1e7-1f1ef"],':bj:':["1f1e7-1f1ef"],':flag_bz:':["1f1e7-1f1ff"],':bz:':["1f1e7-1f1ff"],':flag_by:':["1f1e7-1f1fe"],':by:':["1f1e7-1f1fe"],':flag_bb:':["1f1e7-1f1e7"],':bb:':["1f1e7-1f1e7"],':flag_bd:':["1f1e7-1f1e9"],':bd:':["1f1e7-1f1e9"],':flag_bh:':["1f1e7-1f1ed"],':bh:':["1f1e7-1f1ed"],':flag_bs:':["1f1e7-1f1f8"],':bs:':["1f1e7-1f1f8"],':flag_az:':["1f1e6-1f1ff"],':az:':["1f1e6-1f1ff"],':flag_ac:':["1f1e6-1f1e8"],':ac:':["1f1e6-1f1e8"],':flag_aw:':["1f1e6-1f1fc"],':aw:':["1f1e6-1f1fc"],':flag_am:':["1f1e6-1f1f2"],':am:':["1f1e6-1f1f2"],':flag_ar:':["1f1e6-1f1f7"],':ar:':["1f1e6-1f1f7"],':flag_ag:':["1f1e6-1f1ec"],':ag:':["1f1e6-1f1ec"],':flag_ai:':["1f1e6-1f1ee"],':ai:':["1f1e6-1f1ee"],':flag_ao:':["1f1e6-1f1f4"],':ao:':["1f1e6-1f1f4"],':flag_ad:':["1f1e6-1f1e9"],':ad:':["1f1e6-1f1e9"],':flag_dz:':["1f1e9-1f1ff"],':dz:':["1f1e9-1f1ff"],':flag_al:':["1f1e6-1f1f1"],':al:':["1f1e6-1f1f1"],':flag_af:':["1f1e6-1f1eb"],':af:':["1f1e6-1f1eb"],':flag_vn:':["1f1fb-1f1f3"],':vn:':["1f1fb-1f1f3"],':flag_ae:':["1f1e6-1f1ea"],':ae:':["1f1e6-1f1ea"],':flag_us:':["1f1fa-1f1f8"],':us:':["1f1fa-1f1f8"],':flag_gb:':["1f1ec-1f1e7"],':gb:':["1f1ec-1f1e7"],':flag_tr:':["1f1f9-1f1f7"],':tr:':["1f1f9-1f1f7"],':flag_ch:':["1f1e8-1f1ed"],':ch:':["1f1e8-1f1ed"],':flag_se:':["1f1f8-1f1ea"],':se:':["1f1f8-1f1ea"],':flag_es:':["1f1ea-1f1f8"],':es:':["1f1ea-1f1f8"],':flag_za:':["1f1ff-1f1e6"],':za:':["1f1ff-1f1e6"],':flag_sg:':["1f1f8-1f1ec"],':sg:':["1f1f8-1f1ec"],':flag_sa:':["1f1f8-1f1e6"],':saudiarabia:':["1f1f8-1f1e6"],':saudi:':["1f1f8-1f1e6"],':flag_ru:':["1f1f7-1f1fa"],':ru:':["1f1f7-1f1fa"],':flag_pr:':["1f1f5-1f1f7"],':pr:':["1f1f5-1f1f7"],':flag_pt:':["1f1f5-1f1f9"],':pt:':["1f1f5-1f1f9"],':flag_pl:':["1f1f5-1f1f1"],':pl:':["1f1f5-1f1f1"],':flag_ph:':["1f1f5-1f1ed"],':ph:':["1f1f5-1f1ed"],':flag_no:':["1f1f3-1f1f4"],':no:':["1f1f3-1f1f4"],':flag_nz:':["1f1f3-1f1ff"],':nz:':["1f1f3-1f1ff"],':flag_nl:':["1f1f3-1f1f1"],':nl:':["1f1f3-1f1f1"],':flag_mx:':["1f1f2-1f1fd"],':mx:':["1f1f2-1f1fd"],':flag_my:':["1f1f2-1f1fe"],':my:':["1f1f2-1f1fe"],':flag_mo:':["1f1f2-1f1f4"],':mo:':["1f1f2-1f1f4"],':flag_kr:':["1f1f0-1f1f7"],':kr:':["1f1f0-1f1f7"],':flag_jp:':["1f1ef-1f1f5"],':jp:':["1f1ef-1f1f5"],':flag_it:':["1f1ee-1f1f9"],':it:':["1f1ee-1f1f9"],':flag_il:':["1f1ee-1f1f1"],':il:':["1f1ee-1f1f1"],':flag_ie:':["1f1ee-1f1ea"],':ie:':["1f1ee-1f1ea"],':flag_id:':["1f1ee-1f1e9"],':indonesia:':["1f1ee-1f1e9"],':flag_in:':["1f1ee-1f1f3"],':in:':["1f1ee-1f1f3"],':flag_hk:':["1f1ed-1f1f0"],':hk:':["1f1ed-1f1f0"],':flag_de:':["1f1e9-1f1ea"],':de:':["1f1e9-1f1ea"],':flag_fr:':["1f1eb-1f1f7"],':fr:':["1f1eb-1f1f7"],':flag_fi:':["1f1eb-1f1ee"],':fi:':["1f1eb-1f1ee"],':flag_dk:':["1f1e9-1f1f0"],':dk:':["1f1e9-1f1f0"],':flag_co:':["1f1e8-1f1f4"],':co:':["1f1e8-1f1f4"],':flag_cn:':["1f1e8-1f1f3"],':cn:':["1f1e8-1f1f3"],':flag_cl:':["1f1e8-1f1f1"],':chile:':["1f1e8-1f1f1"],':flag_ca:':["1f1e8-1f1e6"],':ca:':["1f1e8-1f1e6"],':flag_br:':["1f1e7-1f1f7"],':br:':["1f1e7-1f1f7"],':flag_be:':["1f1e7-1f1ea"],':be:':["1f1e7-1f1ea"],':flag_at:':["1f1e6-1f1f9"],':at:':["1f1e6-1f1f9"],':flag_au:':["1f1e6-1f1fa"],':au:':["1f1e6-1f1fa"],':map:':["1f5fa"],':world_map:':["1f5fa"],':school:':["1f3eb"],':convenience_store:':["1f3ea"],':church:':["26ea-fe0f","26ea"],':wedding:':["1f492"],':love_hotel:':["1f3e9"],':hotel:':["1f3e8"],':bank:':["1f3e6"],':hospital:':["1f3e5"],':european_post_office:':["1f3e4"],':post_office:':["1f3e3"],':factory:':["1f3ed"],':department_store:':["1f3ec"],':office:':["1f3e2"],':contruction_site:':["1f3d7"],':building_construction:':["1f3d7"],':house-abandoned:':["1f3da"],':derelict_house_building:':["1f3da"],':house_with_garden:':["1f3e1"],':homes:':["1f3d8"],':house_buildings:':["1f3d8"],':house:':["1f3e0"],':bridge_at_night:':["1f309"],':night_with_stars:':["1f303"],':city_dusk:':["1f306"],':city_sunset:':["1f307"],':city_sunrise:':["1f307"],':cityscape:':["1f3d9"],':cityscape:':["1f3d9"],':park:':["1f3de"],':national_park:':["1f3de"],':island:':["1f3dd"],':desert_island:':["1f3dd"],':desert:':["1f3dc"],':beach:':["1f3d6"],':beach_with_umbrella:':["1f3d6"],':camping:':["1f3d5"],':mountain_snow:':["1f3d4"],':snow_capped_mountain:':["1f3d4"],':stadium:':["1f3df"],':classical_building:':["1f3db"],':japanese_castle:':["1f3ef"],':european_castle:':["1f3f0"],':fountain:':["26f2-fe0f","26f2"],':tokyo_tower:':["1f5fc"],':foggy:':["1f301"],':moyai:':["1f5ff"],':statue_of_liberty:':["1f5fd"],':shopping_bags:':["1f6cd"],':shopping_bags:':["1f6cd"],':fork_knife_plate:':["1f37d"],':fork_and_knife_with_plate:':["1f37d"],':couch:':["1f6cb"],':couch_and_lamp:':["1f6cb"],':bed:':["1f6cf"],':bellhop:':["1f6ce"],':bellhop_bell:':["1f6ce"],':dollar:':["1f4b5"],':pound:':["1f4b7"],':euro:':["1f4b6"],':yen:':["1f4b4"],':left_luggage:':["1f6c5"],':baggage_claim:':["1f6c4"],':customs:':["1f6c3"],':passport_control:':["1f6c2"],':suspension_railway:':["1f69f"],':mountain_cableway:':["1f6a0"],':aerial_tramway:':["1f6a1"],':sailboat:':["26f5-fe0f","26f5"],':speedboat:':["1f6a4"],':motorboat:':["1f6e5"],':cruise_ship:':["1f6f3"],':passenger_ship:':["1f6f3"],':ship:':["1f6a2"],':anchor:':["2693-fe0f","2693"],':seat:':["1f4ba"],':airplane_arriving:':["1f6ec"],':airplane_departure:':["1f6eb"],':airplane_small:':["1f6e9"],':small_airplane:':["1f6e9"],':airplane_northeast:':["1f6ea"],':northeast_pointing_airplane:':["1f6ea"],':jet_up:':["1f6e6"],':up_pointing_military_airplane:':["1f6e6"],':airplane_small_up:':["1f6e8"],':up_pointing_small_airplane:':["1f6e8"],':airplane_up:':["1f6e7"],':up_pointing_airplane:':["1f6e7"],':airplane:':["2708-fe0f","2708"],':helicopter:':["1f681"],':rocket:':["1f680"],':traffic_light:':["1f6a5"],':vertical_traffic_light:':["1f6a6"],':construction:':["1f6a7"],':fuelpump:':["26fd-fe0f","26fd"],':busstop:':["1f68f"],':motorway:':["1f6e3"],':bike:':["1f6b2"],':tractor:':["1f69c"],':articulated_lorry:':["1f69b"],':truck:':["1f69a"],':blue_car:':["1f699"],':oncoming_automobile:':["1f698"],':red_car:':["1f697"],':oncoming_taxi:':["1f696"],':taxi:':["1f695"],':rotating_light:':["1f6a8"],':oncoming_police_car:':["1f694"],':police_car:':["1f693"],':fire_engine_oncoming:':["1f6f1"],':oncoming_fire_engine:':["1f6f1"],':fire_engine:':["1f692"],':ambulance:':["1f691"],':minibus:':["1f690"],':trolleybus:':["1f68e"],':oncoming_bus:':["1f68d"],':bus:':["1f68c"],':railway_track:':["1f6e4"],':railroad_track:':["1f6e4"],':tram:':["1f68a"],':station:':["1f689"],':light_rail:':["1f688"],':metro:':["1f687"],':train2:':["1f686"],':bullettrain_front:':["1f685"],':bullettrain_side:':["1f684"],':monorail:':["1f69d"],':train:':["1f68b"],':train_diesel:':["1f6f2"],':diesel_locomotive:':["1f6f2"],':steam_locomotive:':["1f682"],':mountain_railway:':["1f69e"],':railway_car:':["1f683"],':clock1230:':["1f567"],':clock1130:':["1f566"],':clock1030:':["1f565"],':clock930:':["1f564"],':clock830:':["1f563"],':clock730:':["1f562"],':clock630:':["1f561"],':clock530:':["1f560"],':clock430:':["1f55f"],':clock330:':["1f55e"],':clock230:':["1f55d"],':clock130:':["1f55c"],':clock12:':["1f55b"],':clock11:':["1f55a"],':clock10:':["1f559"],':clock9:':["1f558"],':clock8:':["1f557"],':clock7:':["1f556"],':clock6:':["1f555"],':clock5:':["1f554"],':clock4:':["1f553"],':clock3:':["1f552"],':clock2:':["1f551"],':clock1:':["1f550"],':white_square_button:':["1f533"],':black_square_button:':["1f532"],':white_medium_small_square:':["25fd-fe0f","25fd"],':black_medium_small_square:':["25fe-fe0f","25fe"],':white_medium_square:':["25fb-fe0f","25fb"],':black_medium_square:':["25fc-fe0f","25fc"],':white_large_square:':["2b1c-fe0f","2b1c"],':black_large_square:':["2b1b-fe0f","2b1b"],':white_small_square:':["25ab-fe0f","25ab"],':black_small_square:':["25aa-fe0f","25aa"],':large_blue_diamond:':["1f537"],':large_orange_diamond:':["1f536"],':small_blue_diamond:':["1f539"],':small_orange_diamond:':["1f538"],':small_red_triangle_down:':["1f53b"],':small_red_triangle:':["1f53a"],':large_blue_circle:':["1f535"],':red_circle:':["1f534"],':radio_button:':["1f518"],':black_circle:':["26ab-fe0f","26ab"],':white_circle:':["26aa-fe0f","26aa"],':ballot_box_x:':["1f5f5"],':ballot_box_with_script_x:':["1f5f5"],':ballot_x:':["1f5f4"],':ballot_script_x:':["1f5f4"],':ballot_box_check:':["1f5f9"],':ballot_box_with_bold_check:':["1f5f9"],':light_check_mark:':["1f5f8"],':light_mark:':["1f5f8"],':ballot_box_with_check:':["2611-fe0f","2611"],':diamonds:':["2666-fe0f","2666"],':hearts:':["2665-fe0f","2665"],':clubs:':["2663-fe0f","2663"],':spades:':["2660-fe0f","2660"],':diamond_shape_with_a_dot_inside:':["1f4a0"],':anger:':["1f4a2"],':recycle:':["267b-fe0f","267b"],':rosette_black:':["1f3f6"],':rosette:':["1f3f5"],':hotsprings:':["2668-fe0f","2668"],':warning:':["26a0-fe0f","26a0"],':trident:':["1f531"],':mood_lightning:':["1f5f2"],':lightning_mood:':["1f5f2"],':beginner:':["1f530"],':six_pointed_star:':["1f52f"],':ophiuchus:':["26ce"],':info:':["1f6c8"],':circled_information_source:':["1f6c8"],':m:':["24c2-fe0f","24c2"],':cyclone:':["1f300"],':soon:':["1f51c"],':top:':["1f51d"],':on:':["1f51b"],':back:':["1f519"],':end:':["1f51a"],':100:':["1f4af"],':o:':["2b55-fe0f","2b55"],':x:':["274c"],':triangle_round:':["1f6c6"],':triangle_with_rounded_corners:':["1f6c6"],':interrobang:':["2049-fe0f","2049"],':bangbang:':["203c-fe0f","203c"],':grey_question:':["2754"],':grey_exclamation:':["2755"],':question:':["2753"],':exclamation:':["2757-fe0f","2757"],':part_alternation_mark:':["303d-fe0f","303d"],':loop:':["27bf"],':curly_loop:':["27b0"],':heavy_dollar_sign:':["1f4b2"],':currency_exchange:':["1f4b1"],':registered:':["00ae"],':copyright:':["00a9"],':tm:':["2122"],':clockwise_arrows:':["1f5d8"],':clockwise_right_and_left_semicircle_arrows:':["1f5d8"],':arrows_clockwise:':["1f503"],':cancellation_x:':["1f5d9"],':heavy_check_mark:':["2714-fe0f","2714"],':heavy_multiplication_x:':["2716-fe0f","2716"],':heavy_division_sign:':["2797"],':wavy_dash:':["3030"],':heavy_minus_sign:':["2796"],':heavy_plus_sign:':["2795"],':symbols:':["1f523"],':cinema:':["1f3a6"],':signal_strength:':["1f4f6"],':information_source:':["2139-fe0f","2139"],':capital_abcd:':["1f520"],':abcd:':["1f521"],':abc:':["1f524"],':1234:':["1f522"],':keycap_ten:':["1f51f"],':nine:':["0039-fe0f-20e3","0039-20e3"],':eight:':["0038-fe0f-20e3","0038-20e3"],':seven:':["0037-fe0f-20e3","0037-20e3"],':six:':["0036-fe0f-20e3","0036-20e3"],':five:':["0035-fe0f-20e3","0035-20e3"],':four:':["0034-fe0f-20e3","0034-20e3"],':three:':["0033-fe0f-20e3","0033-20e3"],':two:':["0032-fe0f-20e3","0032-20e3"],':one:':["0031-fe0f-20e3","0031-20e3"],':zero:':["0030-fe0f-20e3","0030-20e3"],':hash:':["0023-fe0f-20e3","0023-20e3"],':repeat_one:':["1f502"],':repeat:':["1f501"],':twisted_rightwards_arrows:':["1f500"],':arrow_heading_down:':["2935-fe0f","2935"],':arrow_heading_up:':["2934-fe0f","2934"],':leftwards_arrow_with_hook:':["21a9-fe0f","21a9"],':arrow_right_hook:':["21aa-fe0f","21aa"],':arrows_counterclockwise:':["1f504"],':left_right_arrow:':["2194-fe0f","2194"],':arrow_up_down:':["2195-fe0f","2195"],':arrow_upper_left:':["2196-fe0f","2196"],':arrow_lower_left:':["2199-fe0f","2199"],':arrow_lower_right:':["2198-fe0f","2198"],':arrow_upper_right:':["2197-fe0f","2197"],':arrow_down:':["2b07-fe0f","2b07"],':arrow_up:':["2b06-fe0f","2b06"],':arrow_left:':["2b05-fe0f","2b05"],':arrow_right:':["27a1-fe0f","27a1"],':arrow_double_down:':["23ec"],':arrow_double_up:':["23eb"],':rewind:':["23ea"],':fast_forward:':["23e9"],':arrow_down_small:':["1f53d"],':arrow_up_small:':["1f53c"],':arrow_backward:':["25c0-fe0f","25c0"],':arrow_forward:':["25b6-fe0f","25b6"],':put_litter_in_its_place:':["1f6ae"],':no_smoking:':["1f6ad"],':potable_water:':["1f6b0"],':wheelchair:':["267f-fe0f","267f"],':baby_symbol:':["1f6bc"],':girls_symbol:':["1f6ca"],':boys_symbol:':["1f6c9"],':womens:':["1f6ba"],':mens:':["1f6b9"],':restroom:':["1f6bb"],':pisces:':["2653-fe0f","2653"],':aquarius:':["2652-fe0f","2652"],':capricorn:':["2651-fe0f","2651"],':sagittarius:':["2650-fe0f","2650"],':scorpius:':["264f-fe0f","264f"],':libra:':["264e-fe0f","264e"],':virgo:':["264d-fe0f","264d"],':leo:':["264c-fe0f","264c"],':cancer:':["264b-fe0f","264b"],':gemini:':["264a-fe0f","264a"],':taurus:':["2649-fe0f","2649"],':aries:':["2648-fe0f","2648"],':atm:':["1f3e7"],':up:':["1f199"],':ok:':["1f197"],':ng:':["1f196"],':new:':["1f195"],':free:':["1f193"],':cool:':["1f192"],':wc:':["1f6be"],':parking:':["1f17f-fe0f","1f17f"],':id:':["1f194"],':sos:':["1f198"],':o2:':["1f17e"],':cl:':["1f191"],':ab:':["1f18e"],':b:':["1f171"],':a:':["1f170"],':vs:':["1f19a"],':mobile_phone_off:':["1f4f4"],':vibration_mode:':["1f4f3"],':eight_pointed_black_star:':["2734-fe0f","2734"],':white_check_mark:':["2705"],':negative_squared_cross_mark:':["274e"],':eight_spoked_asterisk:':["2733-fe0f","2733"],':sparkle:':["2747-fe0f","2747"],':chart:':["1f4b9"],':u6307:':["1f22f-fe0f","1f22f"],':koko:':["1f201"],':sa:':["1f202"],':u7a7a:':["1f233"],':u5272:':["1f239"],':u6708:':["1f237"],':u55b6:':["1f23a"],':u7533:':["1f238"],':u7121:':["1f21a-fe0f","1f21a"],':u6709:':["1f236"],':u7981:':["1f232"],':u6e80:':["1f235"],':u5408:':["1f234"],':congratulations:':["3297-fe0f","3297"],':secret:':["3299-fe0f","3299"],':white_flower:':["1f4ae"],':ideograph_advantage:':["1f250"],':accept:':["1f251"],':piracy:':["1f572"],':no_piracy:':["1f572"],':underage:':["1f51e"],':no_mobile_phones:':["1f4f5"],':non-potable_water:':["1f6b1"],':no_bicycles:':["1f6b3"],':do_not_litter:':["1f6af"],':no_pedestrians:':["1f6b7"],':name_badge:':["1f4db"],':no_entry:':["26d4-fe0f","26d4"],':no_entry_sign:':["1f6ab"],':prohibited:':["1f6c7"],':prohibited_sign:':["1f6c7"],':sleeping_accommodation:':["1f6cc"],':speaking_head:':["1f5e3"],':speaking_head_in_silhouette:':["1f5e3"],':mag_right:':["1f50e"],':mag:':["1f50d"],':shield:':["1f6e1"],':children_crossing:':["1f6b8"],':mood_bubble_lightning:':["1f5f1"],':lightning_mood_bubble:':["1f5f1"],':mood_bubble:':["1f5f0"],':anger_right:':["1f5ef"],':right_anger_bubble:':["1f5ef"],':anger_left:':["1f5ee"],':left_anger_bubble:':["1f5ee"],':thought_right:':["1f5ed"],':right_thought_bubble:':["1f5ed"],':thought_left:':["1f5ec"],':left_thought_bubble:':["1f5ec"],':speech_three:':["1f5eb"],':three_speech_bubbles:':["1f5eb"],':speech_two:':["1f5ea"],':two_speech_bubbles:':["1f5ea"],':speech_right:':["1f5e9"],':right_speech_bubble:':["1f5e9"],':speech_left:':["1f5e8"],':left_speech_bubble:':["1f5e8"],':speech_balloon:':["1f4ac"],':thought_balloon:':["1f4ad"],':dove:':["1f54a"],':dove_of_peace:':["1f54a"],':om_symbol:':["1f549"],':celtic_cross:':["1f548"],':cross_heavy:':["1f547"],':heavy_latin_cross:':["1f547"],':cross_white:':["1f546"],':white_latin_cross:':["1f546"],':descending_notes:':["1f39d"],':ascending_notes:':["1f39c"],':ringing_bell:':["1f56d"],':no_bell:':["1f515"],':bell:':["1f514"],':zzz:':["1f4a4"],':bullhorn_waves:':["1f56c"],':bullhorn_with_sound_waves:':["1f56c"],':bullhorn:':["1f56b"],':right_speaker_three:':["1f56a"],':right_speaker_with_three_sound_waves:':["1f56a"],':right_speaker_one:':["1f569"],':right_speaker_with_one_sound_wave:':["1f569"],':right_speaker:':["1f568"],':mute:':["1f507"],':loud_sound:':["1f50a"],':sound:':["1f509"],':speaker:':["1f508"],':loudspeaker:':["1f4e2"],':mega:':["1f4e3"],':unlock:':["1f513"],':lock:':["1f512"],':closed_lock_with_key:':["1f510"],':lock_with_ink_pen:':["1f50f"],':pencil:':["1f4dd"],':crayon:':["1f58d"],':lower_left_crayon:':["1f58d"],':paintbrush:':["1f58c"],':lower_left_paintbrush:':["1f58c"],':pen_fountain:':["1f58b"],':lower_left_fountain_pen:':["1f58b"],':pen_ballpoint:':["1f58a"],':lower_left_ballpoint_pen:':["1f58a"],':pencil3:':["1f589"],':lower_left_pencil:':["1f589"],':pencil2:':["270f-fe0f","270f"],':black_nib:':["2712-fe0f","2712"],':file_cabinet:':["1f5c4"],':open_file_folder:':["1f4c2"],':file_folder:':["1f4c1"],':folder_open:':["1f5c1"],':open_folder:':["1f5c1"],':folder:':["1f5c0"],':hole:':["1f573"],':flag_black:':["1f3f4"],':waving_black_flag:':["1f3f4"],':flag_white:':["1f3f3"],':waving_white_flag:':["1f3f3"],':pennant_black:':["1f3f2"],':black_pennant:':["1f3f2"],':pennant_white:':["1f3f1"],':white_pennant:':["1f3f1"],':triangular_flag_on_post:':["1f6a9"],':straight_ruler:':["1f4cf"],':round_pushpin:':["1f4cd"],':triangular_ruler:':["1f4d0"],':scissors:':["2702-fe0f","2702"],':pushpin_black:':["1f588"],':pushpin:':["1f4cc"],':paperclips:':["1f587"],':linked_paperclips:':["1f587"],':paperclip:':["1f4ce"],':link:':["1f517"],':card_box:':["1f5c3"],':card_file_box:':["1f5c3"],':dividers:':["1f5c2"],':card_index_dividers:':["1f5c2"],':card_index:':["1f4c7"],':books:':["1f4da"],':orange_book:':["1f4d9"],':blue_book:':["1f4d8"],':green_book:':["1f4d7"],':closed_book:':["1f4d5"],':ledger:':["1f4d2"],':notebook_with_decorative_cover:':["1f4d4"],':notebook:':["1f4d3"],':book:':["1f4d6"],':book2:':["1f56e"],':clipboard:':["1f4cb"],':scroll:':["1f4dc"],':frame_tiles:':["1f5bd"],':frame_with_tiles:':["1f5bd"],':frame_photo:':["1f5bc"],':frame_with_picture:':["1f5bc"],':frame_x:':["1f5be"],':frame_with_an_x:':["1f5be"],':compression:':["1f5dc"],':high_brightness:':["1f506"],':low_brightness:':["1f505"],':ballot_box:':["1f5f3"],':ballot_box_with_ballot:':["1f5f3"],':calendar_spiral:':["1f5d3"],':spiral_calendar_pad:':["1f5d3"],':calendar:':["1f4c6"],':date:':["1f4c5"],':stock_chart:':["1f5e0"],':bar_chart:':["1f4ca"],':chart_with_downwards_trend:':["1f4c9"],':chart_with_upwards_trend:':["1f4c8"],':notepad-spiral:':["1f5d2"],':spiral_note_pad:':["1f5d2"],':notepad:':["1f5ca"],':note_pad:':["1f5ca"],':note:':["1f5c9"],':note_page:':["1f5c9"],':notepad_empty:':["1f5c7"],':empty_note_pad:':["1f5c7"],':note_empty:':["1f5c6"],':empty_note_page:':["1f5c6"],':wastebasket:':["1f5d1"],':bookmark_tabs:':["1f4d1"],':pages:':["1f5d0"],':page_with_curl:':["1f4c3"],':page_facing_up:':["1f4c4"],':page:':["1f5cf"],':document_text:':["1f5b9"],':document_with_text:':["1f5b9"],':document:':["1f5ce"],':mailbox_with_mail:':["1f4ec"],':mailbox_with_no_mail:':["1f4ed"],':mailbox:':["1f4eb"],':mailbox_closed:':["1f4ea"],':postbox:':["1f4ee"],':postal_horn:':["1f4ef"],':package:':["1f4e6"],':outbox_tray:':["1f4e4"],':inbox_tray:':["1f4e5"],':e-mail:':["1f4e7"],':email:':["1f4e7"],':incoming_envelope:':["1f4e8"],':envelope_with_arrow:':["1f4e9"],':envelope_stamped_pen:':["1f586"],':pen_over_stamped_envelope:':["1f586"],':envelope_flying:':["1f585"],':flying_envelope:':["1f585"],':envelope_stamped:':["1f583"],':stamped_envelope:':["1f583"],':envelope_back:':["1f582"],':back_of_envelope:':["1f582"],':envelope:':["2709-fe0f","2709"],':key2:':["1f5dd"],':old_key:':["1f5dd"],':key:':["1f511"],':label:':["1f3f7"],':thermometer:':["1f321"],':newspaper2:':["1f5de"],':rolled_up_newspaper:':["1f5de"],':newspaper:':["1f4f0"],':bookmark:':["1f516"],':gun:':["1f52b"],':crossbones:':["1f571"],':black_skull_and_crossbones:':["1f571"],':smoking:':["1f6ac"],':bomb:':["1f4a3"],':oil:':["1f6e2"],':oil_drum:':["1f6e2"],':tools:':["1f6e0"],':hammer_and_wrench:':["1f6e0"],':hammer:':["1f528"],':nut_and_bolt:':["1f529"],':dagger:':["1f5e1"],':dagger_knife:':["1f5e1"],':knife:':["1f52a"],':wrench:':["1f527"],':crystal_ball:':["1f52e"],':telescope:':["1f52d"],':microscope:':["1f52c"],':pill:':["1f48a"],':syringe:':["1f489"],':barber:':["1f488"],':toilet:':["1f6bd"],':bathtub:':["1f6c1"],':shower:':["1f6bf"],':door:':["1f6aa"],':jeans:':["1f456"],':necktie:':["1f454"],':shirt:':["1f455"],':womans_clothes:':["1f45a"],':kimono:':["1f458"],':dress:':["1f457"],':bikini:':["1f459"],':athletic_shoe:':["1f45f"],':mans_shoe:':["1f45e"],':boot:':["1f462"],':high_heel:':["1f460"],':sandal:':["1f461"],':womans_hat:':["1f452"],':dark_sunglasses:':["1f576"],':eyeglasses:':["1f453"],':lipstick:':["1f484"],':school_satchel:':["1f392"],':briefcase:':["1f4bc"],':handbag:':["1f45c"],':purse:':["1f45b"],':pouch:':["1f45d"],':closed_umbrella:':["1f302"],':gem:':["1f48e"],':moneybag:':["1f4b0"],':money_with_wings:':["1f4b8"],':credit_card:':["1f4b3"],':satellite_orbital:':["1f6f0"],':satellite:':["1f4e1"],':candle:':["1f56f"],':flashlight:':["1f526"],':bulb:':["1f4a1"],':electric_plug:':["1f50c"],':battery:':["1f50b"],':vhs:':["1f4fc"],':optical_disk:':["1f5b8"],':optical_disc_icon:':["1f5b8"],':dvd:':["1f4c0"],':cd:':["1f4bf"],':hard_disk:':["1f5b4"],':cartridge:':["1f5ad"],':tape_cartridge:':["1f5ad"],':floppy_white:':["1f5ab"],':white_hard_shell_floppy_disk:':["1f5ab"],':floppy_black:':["1f5aa"],':black_hard_shell_floppy_disk:':["1f5aa"],':floppy_disk:':["1f4be"],':minidisc:':["1f4bd"],':fax:':["1f4e0"],':flip_phone:':["1f581"],':clamshell_mobile_phone:':["1f581"],':telephone_black:':["1f57f"],':black_touchtone_telephone:':["1f57f"],':telephone_white:':["1f57e"],':white_touchtone_telephone:':["1f57e"],':telephone:':["260e-fe0f","260e"],':left_receiver:':["1f57b"],':left_hand_telephone_receiver:':["1f57b"],':telephone_receiver:':["1f4de"],':joystick:':["1f579"],':pager:':["1f4df"],':stereo:':["1f4fe"],':portable_stereo:':["1f4fe"],':radio:':["1f4fb"],':control_knobs:':["1f39b"],':level_slider:':["1f39a"],':microphone2:':["1f399"],':studio_microphone:':["1f399"],':keyboard_with_jacks:':["1f398"],':musical_keyboard_with_jacks:':["1f398"],':tv:':["1f4fa"],':projector:':["1f4fd"],':film_projector:':["1f4fd"],':movie_camera:':["1f3a5"],':video_camera:':["1f4f9"],':camera_with_flash:':["1f4f8"],':camera:':["1f4f7"],':hourglass:':["231b-fe0f","231b"],':hourglass_flowing_sand:':["23f3"],':clock:':["1f570"],':mantlepiece_clock:':["1f570"],':alarm_clock:':["23f0"],':calculator:':["1f5a9"],':pocket calculator:':["1f5a9"],':desktop_window:':["1f5d4"],':printer:':["1f5a8"],':network:':["1f5a7"],':three_networked_computers:':["1f5a7"],':keyboard_mouse:':["1f5a6"],':keyboard_and_mouse:':["1f5a6"],':trackball:':["1f5b2"],':mouse-one:':["1f5af"],':one_button_mouse:':["1f5af"],':keyboard:':["1f5ae"],':wired_keyboard:':["1f5ae"],':computer_old:':["1f5b3"],':old_personal_computer:':["1f5b3"],':desktop:':["1f5a5"],':desktop_computer:':["1f5a5"],':computer:':["1f4bb"],':calling:':["1f4f2"],':iphone:':["1f4f1"],':watch:':["231a-fe0f","231a"],':baby_bottle:':["1f37c"],':beers:':["1f37b"],':beer:':["1f37a"],':tropical_drink:':["1f379"],':cocktail:':["1f378"],':wine_glass:':["1f377"],':sake:':["1f376"],':coffee:':["2615-fe0f","2615"],':tea:':["1f375"],':fork_and_knife:':["1f374"],':egg:':["1f373"],':stew:':["1f372"],':bento:':["1f371"],':cake:':["1f370"],':honey_pot:':["1f36f"],':custard:':["1f36e"],':lollipop:':["1f36d"],':candy:':["1f36c"],':chocolate_bar:':["1f36b"],':cookie:':["1f36a"],':doughnut:':["1f369"],':ice_cream:':["1f368"],':shaved_ice:':["1f367"],':icecream:':["1f366"],':fish_cake:':["1f365"],':fried_shrimp:':["1f364"],':sushi:':["1f363"],':oden:':["1f362"],':dango:':["1f361"],':fries:':["1f35f"],':bread:':["1f35e"],':spaghetti:':["1f35d"],':ramen:':["1f35c"],':curry:':["1f35b"],':rice:':["1f35a"],':rice_ball:':["1f359"],':rice_cracker:':["1f358"],':poultry_leg:':["1f357"],':meat_on_bone:':["1f356"],':pizza:':["1f355"],':hamburger:':["1f354"],':strawberry:':["1f353"],':cherries:':["1f352"],':peach:':["1f351"],':pear:':["1f350"],':green_apple:':["1f34f"],':apple:':["1f34e"],':pineapple:':["1f34d"],':banana:':["1f34c"],':lemon:':["1f34b"],':tangerine:':["1f34a"],':watermelon:':["1f349"],':melon:':["1f348"],':grapes:':["1f347"],':hot_pepper:':["1f336"],':sweet_potato:':["1f360"],':corn:':["1f33d"],':eggplant:':["1f346"],':tomato:':["1f345"],':roller_coaster:':["1f3a2"],':ferris_wheel:':["1f3a1"],':carousel_horse:':["1f3a0"],':mahjong:':["1f004-fe0f","1f004"],':black_joker:':["1f0cf"],':flower_playing_cards:':["1f3b4"],':video_game:':["1f3ae"],':game_die:':["1f3b2"],':slot_machine:':["1f3b0"],':bowling:':["1f3b3"],':8ball:':["1f3b1"],':dart:':["1f3af"],':art:':["1f3a8"],':tickets:':["1f39f"],':admission_tickets:':["1f39f"],':film_frames:':["1f39e"],':clapper:':["1f3ac"],':circus_tent:':["1f3aa"],':tophat:':["1f3a9"],':ticket:':["1f3ab"],':performing_arts:':["1f3ad"],':microphone:':["1f3a4"],':headphones:':["1f3a7"],':musical_score:':["1f3bc"],':notes:':["1f3b6"],':musical_note:':["1f3b5"],':trumpet:':["1f3ba"],':saxophone:':["1f3b7"],':violin:':["1f3bb"],':guitar:':["1f3b8"],':musical_keyboard:':["1f3b9"],':checkered_flag:':["1f3c1"],':running_shirt_with_sash:':["1f3bd"],':medal:':["1f3c5"],':sports_medal:':["1f3c5"],':trophy:':["1f3c6"],':golf:':["26f3-fe0f","26f3"],':rugby_football:':["1f3c9"],':tennis:':["1f3be"],':baseball:':["26be-fe0f","26be"],':football:':["1f3c8"],':basketball:':["1f3c0"],':soccer:':["26bd-fe0f","26bd"],':fishing_pole_and_fish:':["1f3a3"],':tent:':["26fa-fe0f","26fa"],':horse_racing:':["1f3c7"],':race_car:':["1f3ce"],':racing_car:':["1f3ce"],':motorcycle:':["1f3cd"],':racing_motorcycle:':["1f3cd"],':mountain_bicyclist:':["1f6b5"],':bicyclist:':["1f6b4"],':snowman:':["26c4-fe0f","26c4"],':ski:':["1f3bf"],':snowboarder:':["1f3c2"],':bath:':["1f6c0"],':surfer:':["1f3c4"],':swimmer:':["1f3ca"],':rowboat:':["1f6a3"],':golfer:':["1f3cc"],':lifter:':["1f3cb"],':weight_lifter:':["1f3cb"],':dancer:':["1f483"],':walking:':["1f6b6"],':runner:':["1f3c3"],':blue_heart:':["1f499"],':green_heart:':["1f49a"],':yellow_heart:':["1f49b"],':purple_heart:':["1f49c"],':heart_decoration:':["1f49f"],':heart_tip:':["1f394"],':heart_with_tip_on_the_left:':["1f394"],':gift_heart:':["1f49d"],':cupid:':["1f498"],':sparkling_heart:':["1f496"],':heartpulse:':["1f497"],':heartbeat:':["1f493"],':revolving_hearts:':["1f49e"],':two_hearts:':["1f495"],':love_letter:':["1f48c"],':broken_heart:':["1f494"],':heart:':["2764-fe0f","2764"],':bouquet2:':["1f395"],':bouquet_of_flowers:':["1f395"],':ring:':["1f48d"],':izakaya_lantern:':["1f3ee"],':crossed_flags:':["1f38c"],':wind_chime:':["1f390"],':flags:':["1f38f"],':dolls:':["1f38e"],':military_medal:':["1f396"],':reminder_ribbon:':["1f397"],':crown:':["1f451"],':mortar_board:':["1f393"],':boom:':["1f4a5"],':sparkles:':["2728"],':dizzy:':["1f4ab"],':balloon:':["1f388"],':confetti_ball:':["1f38a"],':tada:':["1f389"],':sparkler:':["1f387"],':fireworks:':["1f386"],':rice_scene:':["1f391"],':bamboo:':["1f38d"],':tanabata_tree:':["1f38b"],':christmas_tree:':["1f384"],':jack_o_lantern:':["1f383"],':birthday:':["1f382"],':gift:':["1f381"],':ribbon:':["1f380"],':wind_blowing_face:':["1f32c"],':sun_with_face:':["1f31e"],':last_quarter_moon_with_face:':["1f31c"],':first_quarter_moon_with_face:':["1f31b"],':full_moon_with_face:':["1f31d"],':new_moon_with_face:':["1f31a"],':waning_crescent_moon:':["1f318"],':last_quarter_moon:':["1f317"],':waning_gibbous_moon:':["1f316"],':full_moon:':["1f315"],':waxing_gibbous_moon:':["1f314"],':first_quarter_moon:':["1f313"],':waxing_crescent_moon:':["1f312"],':new_moon:':["1f311"],':earth_asia:':["1f30f"],':earth_americas:':["1f30e"],':earth_africa:':["1f30d"],':globe_with_meridians:':["1f310"],':japan:':["1f5fe"],':mount_fuji:':["1f5fb"],':milky_way:':["1f30c"],':volcano:':["1f30b"],':ocean:':["1f30a"],':rainbow:':["1f308"],':sunrise:':["1f305"],':sunrise_over_mountains:':["1f304"],':stars:':["1f320"],':star:':["2b50-fe0f","2b50"],':star2:':["1f31f"],':snowflake:':["2744-fe0f","2744"],':dash:':["1f4a8"],':fog:':["1f32b"],':umbrella:':["2614-fe0f","2614"],':sweat_drops:':["1f4a6"],':droplet:':["1f4a7"],':cloud_tornado:':["1f32a"],':cloud_with_tornado:':["1f32a"],':cloud_lightning:':["1f329"],':cloud_with_lightning:':["1f329"],':cloud_snow:':["1f328"],':cloud_with_snow:':["1f328"],':cloud_rain:':["1f327"],':cloud_with_rain:':["1f327"],':cloud:':["2601-fe0f","2601"],':partly_sunny:':["26c5-fe0f","26c5"],':sunny:':["2600-fe0f","2600"],':crescent_moon:':["1f319"],':fire:':["1f525"],':flame:':["1f525"],':zap:':["26a1-fe0f","26a1"],':feet:':["1f43e"],':spider_web:':["1f578"],':spider:':["1f577"],':beetle:':["1f41e"],':bee:':["1f41d"],':ant:':["1f41c"],':bug:':["1f41b"],':snail:':["1f40c"],':shell:':["1f41a"],':blowfish:':["1f421"],':tropical_fish:':["1f420"],':fish:':["1f41f"],':octopus:':["1f419"],':dolphin:':["1f42c"],':whale:':["1f433"],':whale2:':["1f40b"],':frog:':["1f438"],':turtle:':["1f422"],':snake:':["1f40d"],':crocodile:':["1f40a"],':dragon_face:':["1f432"],':dragon:':["1f409"],':monkey:':["1f412"],':speak_no_evil:':["1f64a"],':hear_no_evil:':["1f649"],':see_no_evil:':["1f648"],':monkey_face:':["1f435"],':panda_face:':["1f43c"],':koala:':["1f428"],':bear:':["1f43b"],':wolf:':["1f43a"],':dog:':["1f436"],':poodle:':["1f429"],':dog2:':["1f415"],':pig_nose:':["1f43d"],':pig:':["1f437"],':pig2:':["1f416"],':boar:':["1f417"],':camel:':["1f42b"],':dromedary_camel:':["1f42a"],':elephant:':["1f418"],':penguin:':["1f427"],':bird:':["1f426"],':hatched_chick:':["1f425"],':hatching_chick:':["1f423"],':baby_chick:':["1f424"],':chicken:':["1f414"],':rooster:':["1f413"],':goat:':["1f410"],':sheep:':["1f411"],':ram:':["1f40f"],':horse:':["1f434"],':racehorse:':["1f40e"],':cat:':["1f431"],':cat2:':["1f408"],':rabbit:':["1f430"],':rabbit2:':["1f407"],':chipmunk:':["1f43f"],':tiger:':["1f42f"],':leopard:':["1f406"],':tiger2:':["1f405"],':cow:':["1f42e"],':cow2:':["1f404"],':water_buffalo:':["1f403"],':ox:':["1f402"],':hamster:':["1f439"],':mouse:':["1f42d"],':mouse2:':["1f401"],':rat:':["1f400"],':chestnut:':["1f330"],':mushroom:':["1f344"],':leaves:':["1f343"],':fallen_leaf:':["1f342"],':maple_leaf:':["1f341"],':four_leaf_clover:':["1f340"],':herb:':["1f33f"],':ear_of_rice:':["1f33e"],':bouquet:':["1f490"],':blossom:':["1f33c"],':sunflower:':["1f33b"],':hibiscus:':["1f33a"],':rose:':["1f339"],':cherry_blossom:':["1f338"],':tulip:':["1f337"],':cactus:':["1f335"],':palm_tree:':["1f334"],':deciduous_tree:':["1f333"],':evergreen_tree:':["1f332"],':seedling:':["1f331"],':pray:':["1f64f"],':finger_pointing_down2:':["1f59f"],':sideways_white_down_pointing_index:':["1f59f"],':finger_pointing_up:':["1f59e"],':sideways_white_up_pointing_index:':["1f59e"],':finger_pointing_right:':["1f599"],':sideways_white_right_pointing_index:':["1f599"],':finger_pointing_left:':["1f598"],':sideways_white_left_pointing_index:':["1f598"],':finger_pointing_down:':["1f597"],':white_down_pointing_left_hand_index:':["1f597"],':vulcan:':["1f596"],':raised_hand_with_part_between_middle_and_ring_fingers:':["1f596"],':middle_finger:':["1f595"],':reversed_hand_with_middle_finger_extended:':["1f595"],':hand_victory:':["1f594"],':reversed_victory_hand:':["1f594"],':thumbs_down_reverse:':["1f593"],':reversed_thumbs_down_sign:':["1f593"],':thumbs_up_reverse:':["1f592"],':reversed_thumbs_up_sign:':["1f592"],':hand_splayed_reverse:':["1f591"],':reversed_raised_hand_with_fingers_splayed:':["1f591"],':hand_splayed:':["1f590"],':raised_hand_with_fingers_splayed:':["1f590"],':turned_ok_hand:':["1f58f"],':turned_ok_hand_sign:':["1f58f"],':writing_hand:':["1f58e"],':left_writing_hand:':["1f58e"],':open_hands:':["1f450"],':muscle:':["1f4aa"],':raised_hand:':["270b"],':fist:':["270a"],':punch:':["1f44a"],':v:':["270c-fe0f","270c"],':ok_hand:':["1f44c"],':point_right:':["1f449"],':point_left:':["1f448"],':point_down:':["1f447"],':point_up_2:':["1f446"],':point_up:':["261d-fe0f","261d"],':thumbsdown:':["1f44e"],':-1:':["1f44e"],':thumbsup:':["1f44d"],':+1:':["1f44d"],':wave:':["1f44b"],':nail_care:':["1f485"],':tongue:':["1f445"],':kiss:':["1f48b"],':lips2:':["1f5e2"],':lips:':["1f444"],':nose:':["1f443"],':eyes:':["1f440"],':eye:':["1f441"],':ear:':["1f442"],':clap:':["1f44f"],':raised_hands:':["1f64c"],':kiss_mm:':["1f468-200d-2764-fe0f-200d-1f48b-200d-1f468","1f468-2764-1f48b-1f468"],':couplekiss_mm:':["1f468-2764-1f48b-1f468"],':kiss_ww:':["1f469-200d-2764-fe0f-200d-1f48b-200d-1f469","1f469-2764-1f48b-1f469"],':couplekiss_ww:':["1f469-2764-1f48b-1f469"],':couplekiss:':["1f48f"],':couple_mm:':["1f468-200d-2764-fe0f-200d-1f468","1f468-2764-1f468"],':couple_with_heart_mm:':["1f468-2764-1f468"],':couple_ww:':["1f469-200d-2764-fe0f-200d-1f469","1f469-2764-1f469"],':couple_with_heart_ww:':["1f469-2764-1f469"],':couple_with_heart:':["1f491"],':haircut:':["1f487"],':massage:':["1f486"],':person_frowning:':["1f64d"],':person_with_pouting_face:':["1f64e"],':raising_hand:':["1f64b"],':ok_woman:':["1f646"],':no_good:':["1f645"],':information_desk_person:':["1f481"],':bow:':["1f647"],':space_invader:':["1f47e"],':alien:':["1f47d"],':skull:':["1f480"],':skeleton:':["1f480"],':poop:':["1f4a9"],':shit:':["1f4a9"],':hankey:':["1f4a9"],':poo:':["1f4a9"],':japanese_goblin:':["1f47a"],':japanese_ogre:':["1f479"],':ghost:':["1f47b"],':santa:':["1f385"],':angel:':["1f47c"],':guardsman:':["1f482"],':princess:':["1f478"],':construction_worker:':["1f477"],':cop:':["1f46e"],':older_woman:':["1f475"],':grandma:':["1f475"],':older_man:':["1f474"],':man_with_turban:':["1f473"],':man_with_gua_pi_mao:':["1f472"],':person_with_blond_hair:':["1f471"],':bride_with_veil:':["1f470"],':dancers:':["1f46f"],':two_women_holding_hands:':["1f46d"],':two_men_holding_hands:':["1f46c"],':couple:':["1f46b"],':family_mmgg:':["1f468-200d-1f468-200d-1f467-200d-1f467","1f468-1f468-1f467-1f467"],':family_mmbb:':["1f468-200d-1f468-200d-1f466-200d-1f466","1f468-1f468-1f466-1f466"],':family_mmgb:':["1f468-200d-1f468-200d-1f467","1f468-1f468-1f467-1f466"],':family_mmg:':["1f468-200d-1f468-200d-1f467","1f468-1f468-1f467"],':family_mmb:':["1f468-200d-1f468-200d-1f466","1f468-1f468-1f466"],':family_wwgg:':["1f469-200d-1f469-200d-1f467-200d-1f467","1f469-1f469-1f467-1f467"],':family_wwbb:':["1f469-200d-1f469-200d-1f466-200d-1f466","1f469-1f469-1f466-1f466"],':family_wwgb:':["1f469-200d-1f469-200d-1f467-200d-1f466","1f469-1f469-1f467-1f466"],':family_wwg:':["1f469-200d-1f469-200d-1f467","1f469-1f469-1f467"],':family_wwb:':["1f469-200d-1f469-200d-1f466","1f469-1f469-1f466"],':family_mwgg:':["1f468-200d-1f469-200d-1f467-200d-1f467","1f468-1f469-1f467-1f467"],':family_mwbb:':["1f468-200d-1f469-200d-1f466-200d-1f466","1f468-1f469-1f466-1f466"],':family_mwgb:':["1f468-200d-1f469-200d-1f467-200d-1f466","1f468-1f469-1f467-1f466"],':family_mwg:':["1f468-200d-1f469-200d-1f467","1f468-1f469-1f467"],':family:':["1f46a"],':woman:':["1f469"],':man:':["1f468"],':girl:':["1f467"],':boy:':["1f466"],':baby:':["1f476"],':spy:':["1f575"],':sleuth_or_spy:':["1f575"],':levitate:':["1f574"],':man_in_business_suit_levitating:':["1f574"],':busts_in_silhouette:':["1f465"],':bust_in_silhouette:':["1f464"],':footprints:':["1f463"],':scream_cat:':["1f640"],':crying_cat_face:':["1f63f"],':pouting_cat:':["1f63e"],':kissing_cat:':["1f63d"],':smirk_cat:':["1f63c"],':heart_eyes_cat:':["1f63b"],':smiley_cat:':["1f63a"],':joy_cat:':["1f639"],':smile_cat:':["1f638"],':slight_smile:':["1f642"],':slightly_smiling_face:':["1f642"],':slight_frown:':["1f641"],':slightly_frowning_face:':["1f641"],':mask:':["1f637"],':no_mouth:':["1f636"],':dizzy_face:':["1f635"],':sleeping:':["1f634"],':flushed:':["1f633"],':astonished:':["1f632"],':scream:':["1f631"],':cold_sweat:':["1f630"],':hushed:':["1f62f"],':open_mouth:':["1f62e"],':sob:':["1f62d"],':grimacing:':["1f62c"],':tired_face:':["1f62b"],':sleepy:':["1f62a"],':weary:':["1f629"],':fearful:':["1f628"],':anguished:':["1f627"],':frowning:':["1f626"],':disappointed_relieved:':["1f625"],':triumph:':["1f624"],':persevere:':["1f623"],':cry:':["1f622"],':rage:':["1f621"],':angry:':["1f620"],':worried:':["1f61f"],':disappointed:':["1f61e"],':stuck_out_tongue_closed_eyes:':["1f61d"],':stuck_out_tongue_winking_eye:':["1f61c"],':stuck_out_tongue:':["1f61b"],':kissing_closed_eyes:':["1f61a"],':kissing_smiling_eyes:':["1f619"],':kissing_heart:':["1f618"],':kissing:':["1f617"],':confounded:':["1f616"],':confused:':["1f615"],':pensive:':["1f614"],':sweat:':["1f613"],':unamused:':["1f612"],':expressionless:':["1f611"],':neutral_face:':["1f610"],':smirk:':["1f60f"],':sunglasses:':["1f60e"],':heart_eyes:':["1f60d"],':relieved:':["1f60c"],':yum:':["1f60b"],':relaxed:':["263a-fe0f","263a"],':blush:':["1f60a"],':wink:':["1f609"],':imp:':["1f47f"],':smiling_imp:':["1f608"],':innocent:':["1f607"],':laughing:':["1f606"],':satisfied:':["1f606"],':sweat_smile:':["1f605"],':smile:':["1f604"],':smiley:':["1f603"],':joy:':["1f602"],':grin:':["1f601"],':grinning:':["1f600"]};

  var tmpShortNames = [],
      emoji;

  for (emoji in ns.emojioneList) {
    if (!ns.emojioneList.hasOwnProperty(emoji)) continue;
    tmpShortNames.push(emoji.replace(/[+]/g, "\\$&"));
  }

  ns.shortnames = tmpShortNames.join('|');
  ns.asciiList = (_ns$asciiList = {
    '<3': '2764',
    '</3': '1f494',
    ':\')': '1f602',
    ':\'-)': '1f602',
    ':D': '1f603',
    ':-D': '1f603',
    '=D': '1f603',
    ':)': '1f642',
    ':-)': '1f642',
    '=]': '1f642',
    '=)': '1f642',
    ':]': '1f642',
    '\':)': '1f605',
    '\':-)': '1f605',
    '\'=)': '1f605',
    '\':D': '1f605',
    '\':-D': '1f605',
    '\'=D': '1f605',
    '>:)': '1f606',
    '>;)': '1f606',
    '>:-)': '1f606',
    '>=)': '1f606',
    ';)': '1f609',
    ';-)': '1f609',
    '*-)': '1f609',
    '*)': '1f609',
    ';-]': '1f609',
    ';]': '1f609',
    ';D': '1f609',
    ';^)': '1f609',
    '\':(': '1f613',
    '\':-(': '1f613',
    '\'=(': '1f613',
    ':*': '1f618',
    ':-*': '1f618',
    '=*': '1f618',
    ':^*': '1f618',
    '>:P': '1f61c',
    'X-P': '1f61c',
    'x-p': '1f61c',
    '>:[': '1f61e',
    ':-(': '1f61e',
    ':(': '1f61e',
    ':-[': '1f61e',
    ':[': '1f61e',
    '=(': '1f61e',
    '>:(': '1f620',
    '>:-(': '1f620',
    ':@': '1f620',
    ':\'(': '1f622',
    ':\'-(': '1f622',
    ';(': '1f622',
    ';-(': '1f622',
    '>.<': '1f623',
    'D:': '1f628',
    ':$': '1f633',
    '=$': '1f633',
    '#-)': '1f635',
    '#)': '1f635',
    '%-)': '1f635',
    '%)': '1f635',
    'X)': '1f635',
    'X-)': '1f635',
    '*\\0/*': '1f646',
    '\\0/': '1f646',
    '*\\O/*': '1f646',
    '\\O/': '1f646',
    'O:-)': '1f607',
    '0:-3': '1f607',
    '0:3': '1f607',
    '0:-)': '1f607',
    '0:)': '1f607',
    '0;^)': '1f607',
    'O:)': '1f607',
    'O;-)': '1f607',
    'O=)': '1f607',
    '0;-)': '1f607',
    'O:-3': '1f607',
    'O:3': '1f607',
    'B-)': '1f60e',
    'B)': '1f60e',
    '8)': '1f60e',
    '8-)': '1f60e',
    'B-D': '1f60e',
    '8-D': '1f60e',
    '-_-': '1f611',
    '-__-': '1f611',
    '-___-': '1f611',
    '>:\\': '1f615',
    '>:/': '1f615',
    ':-/': '1f615',
    ':-.': '1f615',
    ':/': '1f615',
    ':\\': '1f615',
    '=/': '1f615',
    '=\\': '1f615',
    ':L': '1f615',
    '=L': '1f615',
    ':P': '1f61b',
    ':-P': '1f61b',
    '=P': '1f61b',
    ':-p': '1f61b',
    ':p': '1f61b',
    '=p': '1f61b',
    ':-?': '1f61b',
    ':?': '1f61b'
  }, _defineProperty(_ns$asciiList, ":?", '1f61b'), _defineProperty(_ns$asciiList, ":-?", '1f61b'), _defineProperty(_ns$asciiList, ':-b', '1f61b'), _defineProperty(_ns$asciiList, ':b', '1f61b'), _defineProperty(_ns$asciiList, 'd:', '1f61b'), _defineProperty(_ns$asciiList, ':-O', '1f62e'), _defineProperty(_ns$asciiList, ':O', '1f62e'), _defineProperty(_ns$asciiList, ':-o', '1f62e'), _defineProperty(_ns$asciiList, ':o', '1f62e'), _defineProperty(_ns$asciiList, 'O_O', '1f62e'), _defineProperty(_ns$asciiList, '>:O', '1f62e'), _defineProperty(_ns$asciiList, ':-X', '1f636'), _defineProperty(_ns$asciiList, ':X', '1f636'), _defineProperty(_ns$asciiList, ':-#', '1f636'), _defineProperty(_ns$asciiList, ':#', '1f636'), _defineProperty(_ns$asciiList, '=X', '1f636'), _defineProperty(_ns$asciiList, '=x', '1f636'), _defineProperty(_ns$asciiList, ':x', '1f636'), _defineProperty(_ns$asciiList, ':-x', '1f636'), _defineProperty(_ns$asciiList, '=#', '1f636'), _ns$asciiList);
  /**/

  ns.asciiRegexp = '(\\<3|&lt;3|\\<\\/3|&lt;\\/3|\\:\'\\)|\\:\'\\-\\)|\\:D|\\:\\-D|\\=D|\\:\\)|\\:\\-\\)|\\=\\]|\\=\\)|\\:\\]|\'\\:\\)|\'\\:\\-\\)|\'\\=\\)|\'\\:D|\'\\:\\-D|\'\\=D|\\>\\:\\)|&gt;\\:\\)|\\>;\\)|&gt;;\\)|\\>\\:\\-\\)|&gt;\\:\\-\\)|\\>\\=\\)|&gt;\\=\\)|;\\)|;\\-\\)|\\*\\-\\)|\\*\\)|;\\-\\]|;\\]|;D|;\\^\\)|\'\\:\\(|\'\\:\\-\\(|\'\\=\\(|\\:\\*|\\:\\-\\*|\\=\\*|\\:\\^\\*|\\>\\:P|&gt;\\:P|X\\-P|x\\-p|\\>\\:\\[|&gt;\\:\\[|\\:\\-\\(|\\:\\(|\\:\\-\\[|\\:\\[|\\=\\(|\\>\\:\\(|&gt;\\:\\(|\\>\\:\\-\\(|&gt;\\:\\-\\(|\\:@|\\:\'\\(|\\:\'\\-\\(|;\\(|;\\-\\(|\\>\\.\\<|&gt;\\.&lt;|D\\:|\\:\\$|\\=\\$|#\\-\\)|#\\)|%\\-\\)|%\\)|X\\)|X\\-\\)|\\*\\\\0\\/\\*|\\\\0\\/|\\*\\\\O\\/\\*|\\\\O\\/|O\\:\\-\\)|0\\:\\-3|0\\:3|0\\:\\-\\)|0\\:\\)|0;\\^\\)|O\\:\\-\\)|O\\:\\)|O;\\-\\)|O\\=\\)|0;\\-\\)|O\\:\\-3|O\\:3|B\\-\\)|B\\)|8\\)|8\\-\\)|B\\-D|8\\-D|\\-_\\-|\\-__\\-|\\-___\\-|\\>\\:\\\\|&gt;\\:\\\\|\\>\\:\\/|&gt;\\:\\/|\\:\\-\\/|\\:\\-\\.|\\:\\/|\\:\\\\|\\=\\/|\\=\\\\|\\:L|\\=L|\\:P|\\:\\-P|\\=P|\\:\\-p|\\:p|\\=p|\\:\\-?|\\:\\-&THORN;|\\:?|\\:&THORN;|\\:?|\\:&thorn;|\\:\\-?|\\:\\-&thorn;|\\:\\-b|\\:b|d\\:|\\:\\-O|\\:O|\\:\\-o|\\:o|O_O|\\>\\:O|&gt;\\:O|\\:\\-X|\\:X|\\:\\-#|\\:#|\\=X|\\=x|\\:x|\\:\\-x|\\=#)'; // javascript escapes here must be ordered from largest length to shortest

  ns.unicodeRegexp = "(\\uD83D\\uDC69\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC8B\\u200D\\uD83D\\uDC69|\\uD83D\\uDC68\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC8B\\u200D\\uD83D\\uDC68|\\uD83D\\uDC68\\u200D\\uD83D\\uDC68\\u200D\\uD83D\\uDC67\\u200D\\uD83D\\uDC66|\\uD83D\\uDC68\\u200D\\uD83D\\uDC68\\u200D\\uD83D\\uDC67\\u200D\\uD83D\\uDC67|\\uD83D\\uDC68\\u200D\\uD83D\\uDC69\\u200D\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC68\\u200D\\uD83D\\uDC69\\u200D\\uD83D\\uDC67\\u200D\\uD83D\\uDC66|\\uD83D\\uDC68\\u200D\\uD83D\\uDC69\\u200D\\uD83D\\uDC67\\u200D\\uD83D\\uDC67|\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D\\uD83D\\uDC67\\u200D\\uD83D\\uDC66|\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D\\uD83D\\uDC67\\u200D\\uD83D\\uDC67|\\uD83D\\uDC68\\u200D\\uD83D\\uDC68\\u200D\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC68\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC68|\\uD83D\\uDC68\\u200D\\uD83D\\uDC68\\u200D\\uD83D\\uDC67|\\uD83D\\uDC68\\u200D\\uD83D\\uDC69\\u200D\\uD83D\\uDC67|\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D\\uD83D\\uDC66|\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D\\uD83D\\uDC67|\\uD83D\\uDC69\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC69|\\uD83D\\uDC68\\u200D\\uD83D\\uDC68\\u200D\\uD83D\\uDC66|\\uD83D\\uDC41\\u200D\\uD83D\\uDDE8|\\uD83C\\uDDE6\\uD83C\\uDDE9|\\uD83C\\uDDE6\\uD83C\\uDDEA|\\uD83C\\uDDE6\\uD83C\\uDDEB|\\uD83C\\uDDE6\\uD83C\\uDDEC|\\uD83C\\uDDE6\\uD83C\\uDDEE|\\uD83C\\uDDE6\\uD83C\\uDDF1|\\uD83C\\uDDE6\\uD83C\\uDDF2|\\uD83C\\uDDE6\\uD83C\\uDDF4|\\uD83C\\uDDE6\\uD83C\\uDDF6|\\uD83C\\uDDE6\\uD83C\\uDDF7|\\uD83C\\uDDE6\\uD83C\\uDDF8|\\uD83E\\uDD18\\uD83C\\uDFFF|\\uD83E\\uDD18\\uD83C\\uDFFE|\\uD83E\\uDD18\\uD83C\\uDFFD|\\uD83E\\uDD18\\uD83C\\uDFFC|\\uD83E\\uDD18\\uD83C\\uDFFB|\\uD83D\\uDEC0\\uD83C\\uDFFF|\\uD83D\\uDEC0\\uD83C\\uDFFE|\\uD83D\\uDEC0\\uD83C\\uDFFD|\\uD83D\\uDEC0\\uD83C\\uDFFC|\\uD83D\\uDEC0\\uD83C\\uDFFB|\\uD83D\\uDEB6\\uD83C\\uDFFF|\\uD83D\\uDEB6\\uD83C\\uDFFE|\\uD83D\\uDEB6\\uD83C\\uDFFD|\\uD83D\\uDEB6\\uD83C\\uDFFC|\\uD83D\\uDEB6\\uD83C\\uDFFB|\\uD83D\\uDEB5\\uD83C\\uDFFF|\\uD83D\\uDEB5\\uD83C\\uDFFE|\\uD83D\\uDEB5\\uD83C\\uDFFD|\\uD83D\\uDEB5\\uD83C\\uDFFC|\\uD83D\\uDEB5\\uD83C\\uDFFB|\\uD83D\\uDEB4\\uD83C\\uDFFF|\\uD83D\\uDEB4\\uD83C\\uDFFE|\\uD83D\\uDEB4\\uD83C\\uDFFD|\\uD83D\\uDEB4\\uD83C\\uDFFC|\\uD83D\\uDEB4\\uD83C\\uDFFB|\\uD83D\\uDEA3\\uD83C\\uDFFF|\\uD83D\\uDEA3\\uD83C\\uDFFE|\\uD83D\\uDEA3\\uD83C\\uDFFD|\\uD83D\\uDEA3\\uD83C\\uDFFC|\\uD83D\\uDEA3\\uD83C\\uDFFB|\\uD83D\\uDE4F\\uD83C\\uDFFF|\\uD83D\\uDE4F\\uD83C\\uDFFE|\\uD83D\\uDE4F\\uD83C\\uDFFD|\\uD83D\\uDE4F\\uD83C\\uDFFC|\\uD83D\\uDE4F\\uD83C\\uDFFB|\\uD83D\\uDE4E\\uD83C\\uDFFF|\\uD83D\\uDE4E\\uD83C\\uDFFE|\\uD83D\\uDE4E\\uD83C\\uDFFD|\\uD83D\\uDE4E\\uD83C\\uDFFC|\\uD83D\\uDE4E\\uD83C\\uDFFB|\\uD83D\\uDE4D\\uD83C\\uDFFF|\\uD83D\\uDE4D\\uD83C\\uDFFE|\\uD83D\\uDE4D\\uD83C\\uDFFD|\\uD83D\\uDE4D\\uD83C\\uDFFC|\\uD83D\\uDE4D\\uD83C\\uDFFB|\\uD83D\\uDE4C\\uD83C\\uDFFF|\\uD83D\\uDE4C\\uD83C\\uDFFE|\\uD83D\\uDE4C\\uD83C\\uDFFD|\\uD83D\\uDE4C\\uD83C\\uDFFC|\\uD83D\\uDE4C\\uD83C\\uDFFB|\\uD83D\\uDE4B\\uD83C\\uDFFF|\\uD83D\\uDE4B\\uD83C\\uDFFE|\\uD83D\\uDE4B\\uD83C\\uDFFD|\\uD83D\\uDE4B\\uD83C\\uDFFC|\\uD83D\\uDE4B\\uD83C\\uDFFB|\\uD83D\\uDE47\\uD83C\\uDFFF|\\uD83D\\uDE47\\uD83C\\uDFFE|\\uD83D\\uDE47\\uD83C\\uDFFD|\\uD83D\\uDE47\\uD83C\\uDFFC|\\uD83D\\uDE47\\uD83C\\uDFFB|\\uD83D\\uDE46\\uD83C\\uDFFF|\\uD83D\\uDE46\\uD83C\\uDFFE|\\uD83D\\uDE46\\uD83C\\uDFFD|\\uD83D\\uDE46\\uD83C\\uDFFC|\\uD83D\\uDE46\\uD83C\\uDFFB|\\uD83D\\uDE45\\uD83C\\uDFFF|\\uD83D\\uDE45\\uD83C\\uDFFE|\\uD83D\\uDE45\\uD83C\\uDFFD|\\uD83D\\uDE45\\uD83C\\uDFFC|\\uD83D\\uDE45\\uD83C\\uDFFB|\\uD83D\\uDD96\\uD83C\\uDFFF|\\uD83D\\uDD96\\uD83C\\uDFFE|\\uD83D\\uDD96\\uD83C\\uDFFD|\\uD83D\\uDD96\\uD83C\\uDFFC|\\uD83D\\uDD96\\uD83C\\uDFFB|\\uD83D\\uDD95\\uD83C\\uDFFF|\\uD83D\\uDD95\\uD83C\\uDFFE|\\uD83D\\uDD95\\uD83C\\uDFFD|\\uD83D\\uDD95\\uD83C\\uDFFC|\\uD83D\\uDD95\\uD83C\\uDFFB|\\uD83D\\uDD90\\uD83C\\uDFFF|\\uD83D\\uDD90\\uD83C\\uDFFE|\\uD83D\\uDD90\\uD83C\\uDFFD|\\uD83D\\uDD90\\uD83C\\uDFFC|\\uD83D\\uDD90\\uD83C\\uDFFB|\\uD83D\\uDD75\\uD83C\\uDFFF|\\uD83D\\uDD75\\uD83C\\uDFFE|\\uD83D\\uDD75\\uD83C\\uDFFD|\\uD83D\\uDD75\\uD83C\\uDFFC|\\uD83D\\uDD75\\uD83C\\uDFFB|\\uD83D\\uDCAA\\uD83C\\uDFFF|\\uD83D\\uDCAA\\uD83C\\uDFFE|\\uD83D\\uDCAA\\uD83C\\uDFFD|\\uD83D\\uDCAA\\uD83C\\uDFFC|\\uD83D\\uDCAA\\uD83C\\uDFFB|\\uD83D\\uDC87\\uD83C\\uDFFF|\\uD83D\\uDC87\\uD83C\\uDFFE|\\uD83D\\uDC87\\uD83C\\uDFFD|\\uD83D\\uDC87\\uD83C\\uDFFC|\\uD83D\\uDC87\\uD83C\\uDFFB|\\uD83D\\uDC86\\uD83C\\uDFFF|\\uD83D\\uDC86\\uD83C\\uDFFE|\\uD83D\\uDC86\\uD83C\\uDFFD|\\uD83D\\uDC86\\uD83C\\uDFFC|\\uD83D\\uDC86\\uD83C\\uDFFB|\\uD83D\\uDC85\\uD83C\\uDFFF|\\uD83D\\uDC85\\uD83C\\uDFFE|\\uD83D\\uDC85\\uD83C\\uDFFD|\\uD83D\\uDC85\\uD83C\\uDFFC|\\uD83D\\uDC85\\uD83C\\uDFFB|\\uD83D\\uDC83\\uD83C\\uDFFF|\\uD83D\\uDC83\\uD83C\\uDFFE|\\uD83D\\uDC83\\uD83C\\uDFFD|\\uD83D\\uDC83\\uD83C\\uDFFC|\\uD83D\\uDC83\\uD83C\\uDFFB|\\uD83D\\uDC82\\uD83C\\uDFFF|\\uD83D\\uDC82\\uD83C\\uDFFE|\\uD83D\\uDC82\\uD83C\\uDFFD|\\uD83D\\uDC82\\uD83C\\uDFFC|\\uD83D\\uDC82\\uD83C\\uDFFB|\\uD83D\\uDC81\\uD83C\\uDFFF|\\uD83D\\uDC81\\uD83C\\uDFFE|\\uD83D\\uDC81\\uD83C\\uDFFD|\\uD83D\\uDC81\\uD83C\\uDFFC|\\uD83D\\uDC81\\uD83C\\uDFFB|\\uD83D\\uDC7C\\uD83C\\uDFFF|\\uD83D\\uDC7C\\uD83C\\uDFFE|\\uD83D\\uDC7C\\uD83C\\uDFFD|\\uD83D\\uDC7C\\uD83C\\uDFFC|\\uD83D\\uDC7C\\uD83C\\uDFFB|\\uD83D\\uDC78\\uD83C\\uDFFF|\\uD83D\\uDC78\\uD83C\\uDFFE|\\uD83D\\uDC78\\uD83C\\uDFFD|\\uD83D\\uDC78\\uD83C\\uDFFC|\\uD83D\\uDC78\\uD83C\\uDFFB|\\uD83D\\uDC77\\uD83C\\uDFFF|\\uD83D\\uDC77\\uD83C\\uDFFE|\\uD83D\\uDC77\\uD83C\\uDFFD|\\uD83D\\uDC77\\uD83C\\uDFFC|\\uD83D\\uDC77\\uD83C\\uDFFB|\\uD83D\\uDC76\\uD83C\\uDFFF|\\uD83D\\uDC76\\uD83C\\uDFFE|\\uD83D\\uDC76\\uD83C\\uDFFD|\\uD83D\\uDC76\\uD83C\\uDFFC|\\uD83D\\uDC76\\uD83C\\uDFFB|\\uD83D\\uDC75\\uD83C\\uDFFF|\\uD83D\\uDC75\\uD83C\\uDFFE|\\uD83D\\uDC75\\uD83C\\uDFFD|\\uD83D\\uDC75\\uD83C\\uDFFC|\\uD83D\\uDC75\\uD83C\\uDFFB|\\uD83D\\uDC74\\uD83C\\uDFFF|\\uD83D\\uDC74\\uD83C\\uDFFE|\\uD83D\\uDC74\\uD83C\\uDFFD|\\uD83D\\uDC74\\uD83C\\uDFFC|\\uD83D\\uDC74\\uD83C\\uDFFB|\\uD83D\\uDC73\\uD83C\\uDFFF|\\uD83D\\uDC73\\uD83C\\uDFFE|\\uD83D\\uDC73\\uD83C\\uDFFD|\\uD83D\\uDC73\\uD83C\\uDFFC|\\uD83D\\uDC73\\uD83C\\uDFFB|\\uD83D\\uDC72\\uD83C\\uDFFF|\\uD83D\\uDC72\\uD83C\\uDFFE|\\uD83D\\uDC72\\uD83C\\uDFFD|\\uD83D\\uDC72\\uD83C\\uDFFC|\\uD83D\\uDC72\\uD83C\\uDFFB|\\uD83D\\uDC71\\uD83C\\uDFFF|\\uD83D\\uDC71\\uD83C\\uDFFE|\\uD83D\\uDC71\\uD83C\\uDFFD|\\uD83D\\uDC71\\uD83C\\uDFFC|\\uD83D\\uDC71\\uD83C\\uDFFB|\\uD83D\\uDC70\\uD83C\\uDFFF|\\uD83D\\uDC70\\uD83C\\uDFFE|\\uD83D\\uDC70\\uD83C\\uDFFD|\\uD83D\\uDC70\\uD83C\\uDFFC|\\uD83D\\uDC70\\uD83C\\uDFFB|\\uD83D\\uDC6E\\uD83C\\uDFFF|\\uD83D\\uDC6E\\uD83C\\uDFFE|\\uD83D\\uDC6E\\uD83C\\uDFFD|\\uD83D\\uDC6E\\uD83C\\uDFFC|\\uD83D\\uDC6E\\uD83C\\uDFFB|\\uD83D\\uDC69\\uD83C\\uDFFF|\\uD83D\\uDC69\\uD83C\\uDFFE|\\uD83D\\uDC69\\uD83C\\uDFFD|\\uD83D\\uDC69\\uD83C\\uDFFC|\\uD83D\\uDC69\\uD83C\\uDFFB|\\uD83D\\uDC68\\uD83C\\uDFFF|\\uD83D\\uDC68\\uD83C\\uDFFE|\\uD83D\\uDC68\\uD83C\\uDFFD|\\uD83D\\uDC68\\uD83C\\uDFFC|\\uD83D\\uDC68\\uD83C\\uDFFB|\\uD83D\\uDC67\\uD83C\\uDFFF|\\uD83D\\uDC67\\uD83C\\uDFFE|\\uD83D\\uDC67\\uD83C\\uDFFD|\\uD83D\\uDC67\\uD83C\\uDFFC|\\uD83D\\uDC67\\uD83C\\uDFFB|\\uD83D\\uDC66\\uD83C\\uDFFF|\\uD83D\\uDC66\\uD83C\\uDFFE|\\uD83D\\uDC66\\uD83C\\uDFFD|\\uD83D\\uDC66\\uD83C\\uDFFC|\\uD83D\\uDC66\\uD83C\\uDFFB|\\uD83D\\uDC50\\uD83C\\uDFFF|\\uD83D\\uDC50\\uD83C\\uDFFE|\\uD83D\\uDC50\\uD83C\\uDFFD|\\uD83D\\uDC50\\uD83C\\uDFFC|\\uD83D\\uDC50\\uD83C\\uDFFB|\\uD83D\\uDC4F\\uD83C\\uDFFF|\\uD83D\\uDC4F\\uD83C\\uDFFE|\\uD83D\\uDC4F\\uD83C\\uDFFD|\\uD83D\\uDC4F\\uD83C\\uDFFC|\\uD83D\\uDC4F\\uD83C\\uDFFB|\\uD83D\\uDC4E\\uD83C\\uDFFF|\\uD83D\\uDC4E\\uD83C\\uDFFE|\\uD83D\\uDC4E\\uD83C\\uDFFD|\\uD83D\\uDC4E\\uD83C\\uDFFC|\\uD83D\\uDC4E\\uD83C\\uDFFB|\\uD83D\\uDC4D\\uD83C\\uDFFF|\\uD83D\\uDC4D\\uD83C\\uDFFE|\\uD83D\\uDC4D\\uD83C\\uDFFD|\\uD83D\\uDC4D\\uD83C\\uDFFC|\\uD83D\\uDC4D\\uD83C\\uDFFB|\\uD83D\\uDC4C\\uD83C\\uDFFF|\\uD83D\\uDC4C\\uD83C\\uDFFE|\\uD83D\\uDC4C\\uD83C\\uDFFD|\\uD83D\\uDC4C\\uD83C\\uDFFC|\\uD83D\\uDC4C\\uD83C\\uDFFB|\\uD83D\\uDC4B\\uD83C\\uDFFF|\\uD83D\\uDC4B\\uD83C\\uDFFE|\\uD83D\\uDC4B\\uD83C\\uDFFD|\\uD83D\\uDC4B\\uD83C\\uDFFC|\\uD83D\\uDC4B\\uD83C\\uDFFB|\\uD83D\\uDC4A\\uD83C\\uDFFF|\\uD83D\\uDC4A\\uD83C\\uDFFE|\\uD83D\\uDC4A\\uD83C\\uDFFD|\\uD83D\\uDC4A\\uD83C\\uDFFC|\\uD83D\\uDC4A\\uD83C\\uDFFB|\\uD83D\\uDC49\\uD83C\\uDFFF|\\uD83D\\uDC49\\uD83C\\uDFFE|\\uD83D\\uDC49\\uD83C\\uDFFD|\\uD83D\\uDC49\\uD83C\\uDFFC|\\uD83D\\uDC49\\uD83C\\uDFFB|\\uD83D\\uDC48\\uD83C\\uDFFF|\\uD83D\\uDC48\\uD83C\\uDFFE|\\uD83D\\uDC48\\uD83C\\uDFFD|\\uD83D\\uDC48\\uD83C\\uDFFC|\\uD83D\\uDC48\\uD83C\\uDFFB|\\uD83D\\uDC47\\uD83C\\uDFFF|\\uD83D\\uDC47\\uD83C\\uDFFE|\\uD83D\\uDC47\\uD83C\\uDFFD|\\uD83D\\uDC47\\uD83C\\uDFFC|\\uD83D\\uDC47\\uD83C\\uDFFB|\\uD83D\\uDC46\\uD83C\\uDFFF|\\uD83D\\uDC46\\uD83C\\uDFFE|\\uD83D\\uDC46\\uD83C\\uDFFD|\\uD83D\\uDC46\\uD83C\\uDFFC|\\uD83D\\uDC46\\uD83C\\uDFFB|\\uD83D\\uDC43\\uD83C\\uDFFF|\\uD83D\\uDC43\\uD83C\\uDFFE|\\uD83D\\uDC43\\uD83C\\uDFFD|\\uD83D\\uDC43\\uD83C\\uDFFC|\\uD83D\\uDC43\\uD83C\\uDFFB|\\uD83D\\uDC42\\uD83C\\uDFFF|\\uD83D\\uDC42\\uD83C\\uDFFE|\\uD83D\\uDC42\\uD83C\\uDFFD|\\uD83D\\uDC42\\uD83C\\uDFFC|\\uD83D\\uDC42\\uD83C\\uDFFB|\\uD83C\\uDFCB\\uD83C\\uDFFF|\\uD83C\\uDFCB\\uD83C\\uDFFE|\\uD83C\\uDFCB\\uD83C\\uDFFD|\\uD83C\\uDFCB\\uD83C\\uDFFC|\\uD83C\\uDFCB\\uD83C\\uDFFB|\\uD83C\\uDFCA\\uD83C\\uDFFF|\\uD83C\\uDFCA\\uD83C\\uDFFE|\\uD83C\\uDFCA\\uD83C\\uDFFD|\\uD83C\\uDFCA\\uD83C\\uDFFC|\\uD83C\\uDFCA\\uD83C\\uDFFB|\\uD83C\\uDFC7\\uD83C\\uDFFF|\\uD83C\\uDFC7\\uD83C\\uDFFE|\\uD83C\\uDFC7\\uD83C\\uDFFD|\\uD83C\\uDFC7\\uD83C\\uDFFC|\\uD83C\\uDFC7\\uD83C\\uDFFB|\\uD83C\\uDFC4\\uD83C\\uDFFF|\\uD83C\\uDFC4\\uD83C\\uDFFE|\\uD83C\\uDFC4\\uD83C\\uDFFD|\\uD83C\\uDFC4\\uD83C\\uDFFC|\\uD83C\\uDFC4\\uD83C\\uDFFB|\\uD83C\\uDFC3\\uD83C\\uDFFF|\\uD83C\\uDFC3\\uD83C\\uDFFE|\\uD83C\\uDFC3\\uD83C\\uDFFD|\\uD83C\\uDFC3\\uD83C\\uDFFC|\\uD83C\\uDFC3\\uD83C\\uDFFB|\\uD83C\\uDF85\\uD83C\\uDFFF|\\uD83C\\uDF85\\uD83C\\uDFFE|\\uD83C\\uDF85\\uD83C\\uDFFD|\\uD83C\\uDF85\\uD83C\\uDFFC|\\uD83C\\uDF85\\uD83C\\uDFFB|\\uD83C\\uDDFF\\uD83C\\uDDFC|\\uD83C\\uDDFF\\uD83C\\uDDF2|\\uD83C\\uDDFF\\uD83C\\uDDE6|\\uD83C\\uDDFE\\uD83C\\uDDF9|\\uD83C\\uDDFE\\uD83C\\uDDEA|\\uD83C\\uDDFD\\uD83C\\uDDF0|\\uD83C\\uDDFC\\uD83C\\uDDF8|\\uD83C\\uDDFC\\uD83C\\uDDEB|\\uD83C\\uDDFB\\uD83C\\uDDFA|\\uD83C\\uDDFB\\uD83C\\uDDF3|\\uD83C\\uDDFB\\uD83C\\uDDEE|\\uD83C\\uDDFB\\uD83C\\uDDEC|\\uD83C\\uDDFB\\uD83C\\uDDEA|\\uD83C\\uDDFB\\uD83C\\uDDE8|\\uD83C\\uDDFB\\uD83C\\uDDE6|\\uD83C\\uDDFA\\uD83C\\uDDFF|\\uD83C\\uDDFA\\uD83C\\uDDFE|\\uD83C\\uDDFA\\uD83C\\uDDF8|\\uD83C\\uDDFA\\uD83C\\uDDF2|\\uD83C\\uDDFA\\uD83C\\uDDEC|\\uD83C\\uDDFA\\uD83C\\uDDE6|\\uD83C\\uDDF9\\uD83C\\uDDFF|\\uD83C\\uDDF9\\uD83C\\uDDFC|\\uD83C\\uDDF9\\uD83C\\uDDFB|\\uD83C\\uDDF9\\uD83C\\uDDF9|\\uD83C\\uDDF9\\uD83C\\uDDF7|\\uD83C\\uDDF9\\uD83C\\uDDF4|\\uD83C\\uDDF9\\uD83C\\uDDF3|\\uD83C\\uDDF9\\uD83C\\uDDF2|\\uD83C\\uDDF9\\uD83C\\uDDF1|\\uD83C\\uDDF9\\uD83C\\uDDF0|\\uD83C\\uDDF9\\uD83C\\uDDEF|\\uD83C\\uDDF9\\uD83C\\uDDED|\\uD83C\\uDDF9\\uD83C\\uDDEC|\\uD83C\\uDDF9\\uD83C\\uDDEB|\\uD83C\\uDDE6\\uD83C\\uDDE8|\\uD83C\\uDDF9\\uD83C\\uDDE8|\\uD83C\\uDDF9\\uD83C\\uDDE6|\\uD83C\\uDDF8\\uD83C\\uDDFF|\\uD83C\\uDDF8\\uD83C\\uDDFE|\\uD83C\\uDDF8\\uD83C\\uDDFD|\\uD83C\\uDDF8\\uD83C\\uDDFB|\\uD83C\\uDDF8\\uD83C\\uDDF9|\\uD83C\\uDDF8\\uD83C\\uDDF8|\\uD83C\\uDDF8\\uD83C\\uDDF7|\\uD83C\\uDDF8\\uD83C\\uDDF4|\\uD83C\\uDDF8\\uD83C\\uDDF3|\\uD83C\\uDDF8\\uD83C\\uDDF2|\\uD83C\\uDDF8\\uD83C\\uDDF1|\\uD83C\\uDDF8\\uD83C\\uDDF0|\\uD83C\\uDDF8\\uD83C\\uDDEF|\\uD83C\\uDDF8\\uD83C\\uDDEE|\\uD83C\\uDDF8\\uD83C\\uDDED|\\uD83C\\uDDF8\\uD83C\\uDDEC|\\uD83C\\uDDF8\\uD83C\\uDDEA|\\uD83C\\uDDF8\\uD83C\\uDDE9|\\uD83C\\uDDF8\\uD83C\\uDDE8|\\uD83C\\uDDF8\\uD83C\\uDDE7|\\uD83C\\uDDF8\\uD83C\\uDDE6|\\uD83C\\uDDF7\\uD83C\\uDDFC|\\uD83C\\uDDF7\\uD83C\\uDDFA|\\uD83C\\uDDF7\\uD83C\\uDDF8|\\uD83C\\uDDF7\\uD83C\\uDDF4|\\uD83C\\uDDF7\\uD83C\\uDDEA|\\uD83C\\uDDF6\\uD83C\\uDDE6|\\uD83C\\uDDF5\\uD83C\\uDDFE|\\uD83C\\uDDF5\\uD83C\\uDDFC|\\uD83C\\uDDF5\\uD83C\\uDDF9|\\uD83C\\uDDF5\\uD83C\\uDDF8|\\uD83C\\uDDF5\\uD83C\\uDDF7|\\uD83C\\uDDF5\\uD83C\\uDDF3|\\uD83C\\uDDF5\\uD83C\\uDDF2|\\uD83C\\uDDF5\\uD83C\\uDDF1|\\uD83C\\uDDF5\\uD83C\\uDDF0|\\uD83C\\uDDF5\\uD83C\\uDDED|\\uD83C\\uDDF5\\uD83C\\uDDEC|\\uD83C\\uDDF5\\uD83C\\uDDEB|\\uD83C\\uDDF5\\uD83C\\uDDEA|\\uD83C\\uDDF5\\uD83C\\uDDE6|\\uD83C\\uDDF4\\uD83C\\uDDF2|\\uD83C\\uDDF3\\uD83C\\uDDFF|\\uD83C\\uDDF3\\uD83C\\uDDFA|\\uD83C\\uDDF3\\uD83C\\uDDF7|\\uD83C\\uDDF3\\uD83C\\uDDF5|\\uD83C\\uDDF3\\uD83C\\uDDF4|\\uD83C\\uDDF3\\uD83C\\uDDF1|\\uD83C\\uDDF3\\uD83C\\uDDEE|\\uD83C\\uDDF3\\uD83C\\uDDEC|\\uD83C\\uDDF3\\uD83C\\uDDEB|\\uD83C\\uDDF3\\uD83C\\uDDEA|\\uD83C\\uDDF3\\uD83C\\uDDE8|\\uD83C\\uDDF3\\uD83C\\uDDE6|\\uD83C\\uDDF2\\uD83C\\uDDFF|\\uD83C\\uDDF2\\uD83C\\uDDFE|\\uD83C\\uDDF2\\uD83C\\uDDFD|\\uD83C\\uDDF2\\uD83C\\uDDFC|\\uD83C\\uDDF2\\uD83C\\uDDFB|\\uD83C\\uDDF2\\uD83C\\uDDFA|\\uD83C\\uDDF2\\uD83C\\uDDF9|\\uD83C\\uDDF2\\uD83C\\uDDF8|\\uD83C\\uDDF2\\uD83C\\uDDF7|\\uD83C\\uDDF2\\uD83C\\uDDF6|\\uD83C\\uDDF2\\uD83C\\uDDF5|\\uD83C\\uDDF2\\uD83C\\uDDF4|\\uD83C\\uDDF2\\uD83C\\uDDF3|\\uD83C\\uDDF2\\uD83C\\uDDF2|\\uD83C\\uDDF2\\uD83C\\uDDF1|\\uD83C\\uDDF2\\uD83C\\uDDF0|\\uD83C\\uDDF2\\uD83C\\uDDED|\\uD83C\\uDDF2\\uD83C\\uDDEC|\\uD83C\\uDDF2\\uD83C\\uDDEB|\\uD83C\\uDDF2\\uD83C\\uDDEA|\\uD83C\\uDDF2\\uD83C\\uDDE9|\\uD83C\\uDDF2\\uD83C\\uDDE8|\\uD83C\\uDDF2\\uD83C\\uDDE6|\\uD83C\\uDDF1\\uD83C\\uDDFE|\\uD83C\\uDDF1\\uD83C\\uDDFB|\\uD83C\\uDDF1\\uD83C\\uDDFA|\\uD83C\\uDDF1\\uD83C\\uDDF9|\\uD83C\\uDDF1\\uD83C\\uDDF8|\\uD83C\\uDDF1\\uD83C\\uDDF7|\\uD83C\\uDDF1\\uD83C\\uDDF0|\\uD83C\\uDDF1\\uD83C\\uDDEE|\\uD83C\\uDDF1\\uD83C\\uDDE8|\\uD83C\\uDDF1\\uD83C\\uDDE7|\\uD83C\\uDDF1\\uD83C\\uDDE6|\\uD83C\\uDDF0\\uD83C\\uDDFF|\\uD83C\\uDDF0\\uD83C\\uDDFE|\\uD83C\\uDDF0\\uD83C\\uDDFC|\\uD83C\\uDDF0\\uD83C\\uDDF7|\\uD83C\\uDDF0\\uD83C\\uDDF5|\\uD83C\\uDDF0\\uD83C\\uDDF3|\\uD83C\\uDDF0\\uD83C\\uDDF2|\\uD83C\\uDDF0\\uD83C\\uDDEE|\\uD83C\\uDDF0\\uD83C\\uDDED|\\uD83C\\uDDF0\\uD83C\\uDDEC|\\uD83C\\uDDF0\\uD83C\\uDDEA|\\uD83C\\uDDEF\\uD83C\\uDDF5|\\uD83C\\uDDEF\\uD83C\\uDDF4|\\uD83C\\uDDEF\\uD83C\\uDDF2|\\uD83C\\uDDEF\\uD83C\\uDDEA|\\uD83C\\uDDEE\\uD83C\\uDDF9|\\uD83C\\uDDEE\\uD83C\\uDDF8|\\uD83C\\uDDEE\\uD83C\\uDDF7|\\uD83C\\uDDEE\\uD83C\\uDDF6|\\uD83C\\uDDEE\\uD83C\\uDDF4|\\uD83C\\uDDEE\\uD83C\\uDDF3|\\uD83C\\uDDEE\\uD83C\\uDDF2|\\uD83C\\uDDEE\\uD83C\\uDDF1|\\uD83C\\uDDEE\\uD83C\\uDDEA|\\uD83C\\uDDEE\\uD83C\\uDDE9|\\uD83C\\uDDEE\\uD83C\\uDDE8|\\uD83C\\uDDED\\uD83C\\uDDFA|\\uD83C\\uDDED\\uD83C\\uDDF9|\\uD83C\\uDDED\\uD83C\\uDDF7|\\uD83C\\uDDED\\uD83C\\uDDF3|\\uD83C\\uDDED\\uD83C\\uDDF2|\\uD83C\\uDDED\\uD83C\\uDDF0|\\uD83C\\uDDEC\\uD83C\\uDDFE|\\uD83C\\uDDEC\\uD83C\\uDDFC|\\uD83C\\uDDEC\\uD83C\\uDDFA|\\uD83C\\uDDEC\\uD83C\\uDDF9|\\uD83C\\uDDEC\\uD83C\\uDDF8|\\uD83C\\uDDEC\\uD83C\\uDDF7|\\uD83C\\uDDEC\\uD83C\\uDDF6|\\uD83C\\uDDEC\\uD83C\\uDDF5|\\uD83C\\uDDEC\\uD83C\\uDDF3|\\uD83C\\uDDEC\\uD83C\\uDDF2|\\uD83C\\uDDEC\\uD83C\\uDDF1|\\uD83C\\uDDEC\\uD83C\\uDDEE|\\uD83C\\uDDEC\\uD83C\\uDDED|\\uD83C\\uDDEC\\uD83C\\uDDEC|\\uD83C\\uDDEC\\uD83C\\uDDEB|\\uD83C\\uDDEC\\uD83C\\uDDEA|\\uD83C\\uDDEC\\uD83C\\uDDE9|\\uD83C\\uDDEC\\uD83C\\uDDE7|\\uD83C\\uDDEC\\uD83C\\uDDE6|\\uD83C\\uDDEB\\uD83C\\uDDF7|\\uD83C\\uDDEB\\uD83C\\uDDF4|\\uD83C\\uDDEB\\uD83C\\uDDF2|\\uD83C\\uDDEB\\uD83C\\uDDF0|\\uD83C\\uDDEB\\uD83C\\uDDEF|\\uD83C\\uDDEB\\uD83C\\uDDEE|\\uD83C\\uDDEA\\uD83C\\uDDFA|\\uD83C\\uDDEA\\uD83C\\uDDF9|\\uD83C\\uDDEA\\uD83C\\uDDF8|\\uD83C\\uDDEA\\uD83C\\uDDF7|\\uD83C\\uDDEA\\uD83C\\uDDED|\\uD83C\\uDDEA\\uD83C\\uDDEC|\\uD83C\\uDDEA\\uD83C\\uDDEA|\\uD83C\\uDDEA\\uD83C\\uDDE8|\\uD83C\\uDDEA\\uD83C\\uDDE6|\\uD83C\\uDDE9\\uD83C\\uDDFF|\\uD83C\\uDDE9\\uD83C\\uDDF4|\\uD83C\\uDDE9\\uD83C\\uDDF2|\\uD83C\\uDDE9\\uD83C\\uDDF0|\\uD83C\\uDDE9\\uD83C\\uDDEF|\\uD83C\\uDDE9\\uD83C\\uDDEC|\\uD83C\\uDDE9\\uD83C\\uDDEA|\\uD83C\\uDDE8\\uD83C\\uDDFF|\\uD83C\\uDDE8\\uD83C\\uDDFE|\\uD83C\\uDDE8\\uD83C\\uDDFD|\\uD83C\\uDDE8\\uD83C\\uDDFC|\\uD83C\\uDDE8\\uD83C\\uDDFB|\\uD83C\\uDDE8\\uD83C\\uDDFA|\\uD83C\\uDDE8\\uD83C\\uDDF7|\\uD83C\\uDDE8\\uD83C\\uDDF5|\\uD83C\\uDDE8\\uD83C\\uDDF4|\\uD83C\\uDDE8\\uD83C\\uDDF3|\\uD83C\\uDDE8\\uD83C\\uDDF2|\\uD83C\\uDDE8\\uD83C\\uDDF1|\\uD83C\\uDDE8\\uD83C\\uDDF0|\\uD83C\\uDDE8\\uD83C\\uDDEE|\\uD83C\\uDDE8\\uD83C\\uDDED|\\uD83C\\uDDE8\\uD83C\\uDDEC|\\uD83C\\uDDE8\\uD83C\\uDDEB|\\uD83C\\uDDE8\\uD83C\\uDDE9|\\uD83C\\uDDE8\\uD83C\\uDDE8|\\uD83C\\uDDE8\\uD83C\\uDDE6|\\uD83C\\uDDE7\\uD83C\\uDDFF|\\uD83C\\uDDE7\\uD83C\\uDDFE|\\uD83C\\uDDE7\\uD83C\\uDDFC|\\uD83C\\uDDE7\\uD83C\\uDDFB|\\uD83C\\uDDE7\\uD83C\\uDDF9|\\uD83C\\uDDE7\\uD83C\\uDDF8|\\uD83C\\uDDE7\\uD83C\\uDDF7|\\uD83C\\uDDE7\\uD83C\\uDDF6|\\uD83C\\uDDE7\\uD83C\\uDDF4|\\uD83C\\uDDE7\\uD83C\\uDDF3|\\uD83C\\uDDE7\\uD83C\\uDDF2|\\uD83C\\uDDE7\\uD83C\\uDDF1|\\uD83C\\uDDE7\\uD83C\\uDDEF|\\uD83C\\uDDE7\\uD83C\\uDDEE|\\uD83C\\uDDE7\\uD83C\\uDDED|\\uD83C\\uDDE7\\uD83C\\uDDEC|\\uD83C\\uDDE7\\uD83C\\uDDEB|\\uD83C\\uDDE7\\uD83C\\uDDEA|\\uD83C\\uDDE7\\uD83C\\uDDE9|\\uD83C\\uDDE7\\uD83C\\uDDE7|\\uD83C\\uDDE7\\uD83C\\uDDE6|\\uD83C\\uDDE6\\uD83C\\uDDFF|\\uD83C\\uDDE6\\uD83C\\uDDFD|\\uD83C\\uDDE6\\uD83C\\uDDFC|\\uD83C\\uDDE6\\uD83C\\uDDFA|\\uD83C\\uDDE6\\uD83C\\uDDF9|\\uD83C\\uDDF9\\uD83C\\uDDE9|\\uD83D\\uDDE1\\uFE0F|\\u26F9\\uD83C\\uDFFF|\\u26F9\\uD83C\\uDFFE|\\u26F9\\uD83C\\uDFFD|\\u26F9\\uD83C\\uDFFC|\\u26F9\\uD83C\\uDFFB|\\u270D\\uD83C\\uDFFF|\\u270D\\uD83C\\uDFFE|\\u270D\\uD83C\\uDFFD|\\u270D\\uD83C\\uDFFC|\\u270D\\uD83C\\uDFFB|\\uD83C\\uDC04\\uFE0F|\\uD83C\\uDD7F\\uFE0F|\\uD83C\\uDE02\\uFE0F|\\uD83C\\uDE1A\\uFE0F|\\uD83C\\uDE2F\\uFE0F|\\uD83C\\uDE37\\uFE0F|\\uD83C\\uDF9E\\uFE0F|\\uD83C\\uDF9F\\uFE0F|\\uD83C\\uDFCB\\uFE0F|\\uD83C\\uDFCC\\uFE0F|\\uD83C\\uDFCD\\uFE0F|\\uD83C\\uDFCE\\uFE0F|\\uD83C\\uDF96\\uFE0F|\\uD83C\\uDF97\\uFE0F|\\uD83C\\uDF36\\uFE0F|\\uD83C\\uDF27\\uFE0F|\\uD83C\\uDF28\\uFE0F|\\uD83C\\uDF29\\uFE0F|\\uD83C\\uDF2A\\uFE0F|\\uD83C\\uDF2B\\uFE0F|\\uD83C\\uDF2C\\uFE0F|\\uD83D\\uDC3F\\uFE0F|\\uD83D\\uDD77\\uFE0F|\\uD83D\\uDD78\\uFE0F|\\uD83C\\uDF21\\uFE0F|\\uD83C\\uDF99\\uFE0F|\\uD83C\\uDF9A\\uFE0F|\\uD83C\\uDF9B\\uFE0F|\\uD83C\\uDFF3\\uFE0F|\\uD83C\\uDFF5\\uFE0F|\\uD83C\\uDFF7\\uFE0F|\\uD83D\\uDCFD\\uFE0F|\\uD83D\\uDD49\\uFE0F|\\uD83D\\uDD4A\\uFE0F|\\uD83D\\uDD6F\\uFE0F|\\uD83D\\uDD70\\uFE0F|\\uD83D\\uDD73\\uFE0F|\\uD83D\\uDD76\\uFE0F|\\uD83D\\uDD79\\uFE0F|\\uD83D\\uDD87\\uFE0F|\\uD83D\\uDD8A\\uFE0F|\\uD83D\\uDD8B\\uFE0F|\\uD83D\\uDD8C\\uFE0F|\\uD83D\\uDD8D\\uFE0F|\\uD83D\\uDDA5\\uFE0F|\\uD83D\\uDDA8\\uFE0F|\\uD83D\\uDDB2\\uFE0F|\\uD83D\\uDDBC\\uFE0F|\\uD83D\\uDDC2\\uFE0F|\\uD83D\\uDDC3\\uFE0F|\\uD83D\\uDDC4\\uFE0F|\\uD83D\\uDDD1\\uFE0F|\\uD83D\\uDDD2\\uFE0F|\\uD83D\\uDDD3\\uFE0F|\\uD83D\\uDDDC\\uFE0F|\\uD83D\\uDDDD\\uFE0F|\\uD83D\\uDDDE\\uFE0F|\\u270B\\uD83C\\uDFFF|\\uD83D\\uDDE3\\uFE0F|\\uD83D\\uDDEF\\uFE0F|\\uD83D\\uDDF3\\uFE0F|\\uD83D\\uDDFA\\uFE0F|\\uD83D\\uDEE0\\uFE0F|\\uD83D\\uDEE1\\uFE0F|\\uD83D\\uDEE2\\uFE0F|\\uD83D\\uDEF0\\uFE0F|\\uD83C\\uDF7D\\uFE0F|\\uD83D\\uDC41\\uFE0F|\\uD83D\\uDD74\\uFE0F|\\uD83D\\uDD75\\uFE0F|\\uD83D\\uDD90\\uFE0F|\\uD83C\\uDFD4\\uFE0F|\\uD83C\\uDFD5\\uFE0F|\\uD83C\\uDFD6\\uFE0F|\\uD83C\\uDFD7\\uFE0F|\\uD83C\\uDFD8\\uFE0F|\\uD83C\\uDFD9\\uFE0F|\\uD83C\\uDFDA\\uFE0F|\\uD83C\\uDFDB\\uFE0F|\\uD83C\\uDFDC\\uFE0F|\\uD83C\\uDFDD\\uFE0F|\\uD83C\\uDFDE\\uFE0F|\\uD83C\\uDFDF\\uFE0F|\\uD83D\\uDECB\\uFE0F|\\uD83D\\uDECD\\uFE0F|\\uD83D\\uDECE\\uFE0F|\\uD83D\\uDECF\\uFE0F|\\uD83D\\uDEE3\\uFE0F|\\uD83D\\uDEE4\\uFE0F|\\uD83D\\uDEE5\\uFE0F|\\uD83D\\uDEE9\\uFE0F|\\uD83D\\uDEF3\\uFE0F|\\uD83C\\uDF24\\uFE0F|\\uD83C\\uDF25\\uFE0F|\\uD83C\\uDF26\\uFE0F|\\uD83D\\uDDB1\\uFE0F|\\u261D\\uD83C\\uDFFB|\\u261D\\uD83C\\uDFFC|\\u261D\\uD83C\\uDFFD|\\u261D\\uD83C\\uDFFE|\\u261D\\uD83C\\uDFFF|\\u270C\\uD83C\\uDFFB|\\u270C\\uD83C\\uDFFC|\\u270C\\uD83C\\uDFFD|\\u270C\\uD83C\\uDFFE|\\u270C\\uD83C\\uDFFF|\\u270A\\uD83C\\uDFFB|\\u270A\\uD83C\\uDFFC|\\u270A\\uD83C\\uDFFD|\\u270A\\uD83C\\uDFFE|\\u270A\\uD83C\\uDFFF|\\u270B\\uD83C\\uDFFB|\\u270B\\uD83C\\uDFFC|\\u270B\\uD83C\\uDFFD|\\u270B\\uD83C\\uDFFE|4\\uFE0F\\u20E3|9\\uFE0F\\u20E3|0\\uFE0F\\u20E3|1\\uFE0F\\u20E3|2\\uFE0F\\u20E3|3\\uFE0F\\u20E3|#\\uFE0F\\u20E3|5\\uFE0F\\u20E3|6\\uFE0F\\u20E3|7\\uFE0F\\u20E3|8\\uFE0F\\u20E3|\\*\\uFE0F\\u20E3|\\u00A9\\uFE0F|\\u00AE\\uFE0F|\\u203C\\uFE0F|\\u2049\\uFE0F|\\u2122\\uFE0F|\\u2194\\uFE0F|\\u2195\\uFE0F|\\u2196\\uFE0F|\\u2197\\uFE0F|\\u2198\\uFE0F|\\u2199\\uFE0F|\\u21A9\\uFE0F|\\u21AA\\uFE0F|\\u231A\\uFE0F|\\u231B\\uFE0F|\\u24C2\\uFE0F|\\u25AA\\uFE0F|\\u25AB\\uFE0F|\\u25B6\\uFE0F|\\u25C0\\uFE0F|\\u25FB\\uFE0F|\\u25FC\\uFE0F|\\u25FD\\uFE0F|\\u25FE\\uFE0F|\\u2600\\uFE0F|\\u2601\\uFE0F|\\u260E\\uFE0F|\\u2611\\uFE0F|\\u2614\\uFE0F|\\u2615\\uFE0F|\\u261D\\uFE0F|\\u263A\\uFE0F|\\u2648\\uFE0F|\\u2649\\uFE0F|\\u264A\\uFE0F|\\u264B\\uFE0F|\\u264C\\uFE0F|\\u264D\\uFE0F|\\u264E\\uFE0F|\\u264F\\uFE0F|\\u2650\\uFE0F|\\u2651\\uFE0F|\\u2652\\uFE0F|\\u2653\\uFE0F|\\u2660\\uFE0F|\\u2663\\uFE0F|\\u2665\\uFE0F|\\u2666\\uFE0F|\\u2668\\uFE0F|\\u267B\\uFE0F|\\u267F\\uFE0F|\\u2693\\uFE0F|\\u26A0\\uFE0F|\\u26A1\\uFE0F|\\u26AA\\uFE0F|\\u26AB\\uFE0F|\\u26BD\\uFE0F|\\u26BE\\uFE0F|\\u26C4\\uFE0F|\\u26C5\\uFE0F|\\u26D4\\uFE0F|\\u26EA\\uFE0F|\\u26F2\\uFE0F|\\u26F3\\uFE0F|\\u26F5\\uFE0F|\\u26FA\\uFE0F|\\u26FD\\uFE0F|\\u2702\\uFE0F|\\u2708\\uFE0F|\\u2709\\uFE0F|\\u270C\\uFE0F|\\u270F\\uFE0F|\\u2712\\uFE0F|\\u2714\\uFE0F|\\u2716\\uFE0F|\\u2733\\uFE0F|\\u2734\\uFE0F|\\u2744\\uFE0F|\\u2747\\uFE0F|\\u2757\\uFE0F|\\u2764\\uFE0F|\\u27A1\\uFE0F|\\u2934\\uFE0F|\\u2935\\uFE0F|\\u2B05\\uFE0F|\\u2B06\\uFE0F|\\u2B07\\uFE0F|\\u2B1B\\uFE0F|\\u2B1C\\uFE0F|\\u2B50\\uFE0F|\\u2B55\\uFE0F|\\u3030\\uFE0F|\\u303D\\uFE0F|\\u3297\\uFE0F|\\u3299\\uFE0F|\\u271D\\uFE0F|\\u2328\\uFE0F|\\u270D\\uFE0F|\\u23ED\\uFE0F|\\u23EE\\uFE0F|\\u23EF\\uFE0F|\\u23F1\\uFE0F|\\u23F2\\uFE0F|\\u23F8\\uFE0F|\\u23F9\\uFE0F|\\u23FA\\uFE0F|\\u2602\\uFE0F|\\u2603\\uFE0F|\\u2604\\uFE0F|\\u2618\\uFE0F|\\u2620\\uFE0F|\\u2622\\uFE0F|\\u2623\\uFE0F|\\u2626\\uFE0F|\\u262A\\uFE0F|\\u262E\\uFE0F|\\u262F\\uFE0F|\\u2638\\uFE0F|\\u2639\\uFE0F|\\u2692\\uFE0F|\\u2694\\uFE0F|\\u2696\\uFE0F|\\u2697\\uFE0F|\\u2699\\uFE0F|\\u269B\\uFE0F|\\u269C\\uFE0F|\\u26B0\\uFE0F|\\u26B1\\uFE0F|\\u26C8\\uFE0F|\\u26CF\\uFE0F|\\u26D1\\uFE0F|\\u26D3\\uFE0F|\\u26E9\\uFE0F|\\u26F0\\uFE0F|\\u26F1\\uFE0F|\\u26F4\\uFE0F|\\u26F7\\uFE0F|\\u26F8\\uFE0F|\\u26F9\\uFE0F|\\u2721\\uFE0F|\\u2763\\uFE0F|\\uD83C\\uDCCF|\\uD83C\\uDD70|\\uD83C\\uDD71|\\uD83C\\uDD7E|\\uD83C\\uDD8E|\\uD83C\\uDD91|\\uD83C\\uDD92|\\uD83C\\uDD93|\\uD83C\\uDD94|\\uD83C\\uDD95|\\uD83C\\uDD96|\\uD83C\\uDD97|\\uD83C\\uDD98|\\uD83C\\uDD99|\\uD83C\\uDD9A|\\uD83C\\uDE01|\\uD83C\\uDE32|\\uD83C\\uDE33|\\uD83C\\uDE34|\\uD83C\\uDE35|\\uD83C\\uDE36|\\uD83C\\uDE38|\\uD83C\\uDE39|\\uD83C\\uDE3A|\\uD83C\\uDE50|\\uD83C\\uDE51|\\uD83C\\uDF00|\\uD83C\\uDF01|\\uD83C\\uDF02|\\uD83C\\uDF03|\\uD83C\\uDF04|\\uD83C\\uDF05|\\uD83C\\uDF06|\\uD83C\\uDF07|\\uD83C\\uDF08|\\uD83C\\uDF09|\\uD83C\\uDF0A|\\uD83C\\uDF0B|\\uD83C\\uDF0C|\\uD83C\\uDF0F|\\uD83C\\uDF11|\\uD83C\\uDF13|\\uD83C\\uDF14|\\uD83C\\uDF15|\\uD83C\\uDF19|\\uD83C\\uDF1B|\\uD83C\\uDF1F|\\uD83C\\uDF20|\\uD83C\\uDF30|\\uD83C\\uDF31|\\uD83C\\uDF34|\\uD83C\\uDF35|\\uD83C\\uDF37|\\uD83C\\uDF38|\\uD83C\\uDF39|\\uD83C\\uDF3A|\\uD83C\\uDF3B|\\uD83C\\uDF3C|\\uD83C\\uDF3D|\\uD83C\\uDF3E|\\uD83C\\uDF3F|\\uD83C\\uDF40|\\uD83C\\uDF41|\\uD83C\\uDF42|\\uD83C\\uDF43|\\uD83C\\uDF44|\\uD83C\\uDF45|\\uD83C\\uDF46|\\uD83C\\uDF47|\\uD83C\\uDF48|\\uD83C\\uDF49|\\uD83C\\uDF4A|\\uD83C\\uDF4C|\\uD83C\\uDF4D|\\uD83C\\uDF4E|\\uD83C\\uDF4F|\\uD83C\\uDF51|\\uD83C\\uDF52|\\uD83C\\uDF53|\\uD83C\\uDF54|\\uD83C\\uDF55|\\uD83C\\uDF56|\\uD83C\\uDF57|\\uD83C\\uDF58|\\uD83C\\uDF59|\\uD83C\\uDF5A|\\uD83C\\uDF5B|\\uD83C\\uDF5C|\\uD83C\\uDF5D|\\uD83C\\uDF5E|\\uD83C\\uDF5F|\\uD83C\\uDF60|\\uD83C\\uDF61|\\uD83C\\uDF62|\\uD83C\\uDF63|\\uD83C\\uDF64|\\uD83C\\uDF65|\\uD83C\\uDF66|\\uD83C\\uDF67|\\uD83C\\uDF68|\\uD83C\\uDF69|\\uD83C\\uDF6A|\\uD83C\\uDF6B|\\uD83C\\uDF6C|\\uD83C\\uDF6D|\\uD83C\\uDF6E|\\uD83C\\uDF6F|\\uD83C\\uDF70|\\uD83C\\uDF71|\\uD83C\\uDF72|\\uD83C\\uDF73|\\uD83C\\uDF74|\\uD83C\\uDF75|\\uD83C\\uDF76|\\uD83C\\uDF77|\\uD83C\\uDF78|\\uD83C\\uDF79|\\uD83C\\uDF7A|\\uD83C\\uDF7B|\\uD83C\\uDF80|\\uD83C\\uDF81|\\uD83C\\uDF82|\\uD83C\\uDF83|\\uD83C\\uDF84|\\uD83C\\uDF85|\\uD83C\\uDF86|\\uD83C\\uDF87|\\uD83C\\uDF88|\\uD83C\\uDF89|\\uD83C\\uDF8A|\\uD83C\\uDF8B|\\uD83C\\uDF8C|\\uD83C\\uDF8D|\\uD83C\\uDF8E|\\uD83C\\uDF8F|\\uD83C\\uDF90|\\uD83C\\uDF91|\\uD83C\\uDF92|\\uD83C\\uDF93|\\uD83C\\uDFA0|\\uD83C\\uDFA1|\\uD83C\\uDFA2|\\uD83C\\uDFA3|\\uD83C\\uDFA4|\\uD83C\\uDFA5|\\uD83C\\uDFA6|\\uD83C\\uDFA7|\\uD83C\\uDFA8|\\uD83C\\uDFA9|\\uD83C\\uDFAA|\\uD83C\\uDFAB|\\uD83C\\uDFAC|\\uD83C\\uDFAD|\\uD83C\\uDFAE|\\uD83C\\uDFAF|\\uD83C\\uDFB0|\\uD83C\\uDFB1|\\uD83C\\uDFB2|\\uD83C\\uDFB3|\\uD83C\\uDFB4|\\uD83C\\uDFB5|\\uD83C\\uDFB6|\\uD83C\\uDFB7|\\uD83C\\uDFB8|\\uD83C\\uDFB9|\\uD83C\\uDFBA|\\uD83C\\uDFBB|\\uD83C\\uDFBC|\\uD83C\\uDFBD|\\uD83C\\uDFBE|\\uD83C\\uDFBF|\\uD83C\\uDFC0|\\uD83C\\uDFC1|\\uD83C\\uDFC2|\\uD83C\\uDFC3|\\uD83C\\uDFC4|\\uD83C\\uDFC6|\\uD83C\\uDFC8|\\uD83C\\uDFCA|\\uD83C\\uDFE0|\\uD83D\\uDDB1|\\uD83C\\uDFE2|\\uD83C\\uDFE3|\\uD83C\\uDFE5|\\uD83C\\uDFE6|\\uD83C\\uDFE7|\\uD83C\\uDFE8|\\uD83C\\uDFE9|\\uD83C\\uDFEA|\\uD83C\\uDFEB|\\uD83C\\uDFEC|\\uD83C\\uDFED|\\uD83C\\uDFEE|\\uD83C\\uDFEF|\\uD83C\\uDFF0|\\uD83D\\uDC0C|\\uD83D\\uDC0D|\\uD83D\\uDC0E|\\uD83D\\uDC11|\\uD83D\\uDC12|\\uD83D\\uDC14|\\uD83D\\uDC17|\\uD83D\\uDC18|\\uD83D\\uDC19|\\uD83D\\uDC1A|\\uD83D\\uDC1B|\\uD83D\\uDC1C|\\uD83D\\uDC1D|\\uD83D\\uDC1E|\\uD83D\\uDC1F|\\uD83D\\uDC20|\\uD83D\\uDC21|\\uD83D\\uDC22|\\uD83D\\uDC23|\\uD83D\\uDC24|\\uD83D\\uDC25|\\uD83D\\uDC26|\\uD83D\\uDC27|\\uD83D\\uDC28|\\uD83D\\uDC29|\\uD83D\\uDC2B|\\uD83D\\uDC2C|\\uD83D\\uDC2D|\\uD83D\\uDC2E|\\uD83D\\uDC2F|\\uD83D\\uDC30|\\uD83D\\uDC31|\\uD83D\\uDC32|\\uD83D\\uDC33|\\uD83D\\uDC34|\\uD83D\\uDC35|\\uD83D\\uDC36|\\uD83D\\uDC37|\\uD83D\\uDC38|\\uD83D\\uDC39|\\uD83D\\uDC3A|\\uD83D\\uDC3B|\\uD83D\\uDC3C|\\uD83D\\uDC3D|\\uD83D\\uDC3E|\\uD83D\\uDC40|\\uD83D\\uDC42|\\uD83D\\uDC43|\\uD83D\\uDC44|\\uD83D\\uDC45|\\uD83D\\uDC46|\\uD83D\\uDC47|\\uD83D\\uDC48|\\uD83D\\uDC49|\\uD83D\\uDC4A|\\uD83D\\uDC4B|\\uD83D\\uDC4C|\\uD83D\\uDC4D|\\uD83D\\uDC4E|\\uD83D\\uDC4F|\\uD83D\\uDC50|\\uD83D\\uDC51|\\uD83D\\uDC52|\\uD83D\\uDC53|\\uD83D\\uDC54|\\uD83D\\uDC55|\\uD83D\\uDC56|\\uD83D\\uDC57|\\uD83D\\uDC58|\\uD83D\\uDC59|\\uD83D\\uDC5A|\\uD83D\\uDC5B|\\uD83D\\uDC5C|\\uD83D\\uDC5D|\\uD83D\\uDC5E|\\uD83D\\uDC5F|\\uD83D\\uDC60|\\uD83D\\uDC61|\\uD83D\\uDC62|\\uD83D\\uDC63|\\uD83D\\uDC64|\\uD83D\\uDC66|\\uD83D\\uDC67|\\uD83D\\uDC68|\\uD83D\\uDC69|\\uD83D\\uDC6A|\\uD83D\\uDC6B|\\uD83D\\uDC6E|\\uD83D\\uDC6F|\\uD83D\\uDC70|\\uD83D\\uDC71|\\uD83D\\uDC72|\\uD83D\\uDC73|\\uD83D\\uDC74|\\uD83D\\uDC75|\\uD83D\\uDC76|\\uD83D\\uDC77|\\uD83D\\uDC78|\\uD83D\\uDC79|\\uD83D\\uDC7A|\\uD83D\\uDC7B|\\uD83D\\uDC7C|\\uD83D\\uDC7D|\\uD83D\\uDC7E|\\uD83D\\uDC7F|\\uD83D\\uDC80|\\uD83D\\uDCC7|\\uD83D\\uDC81|\\uD83D\\uDC82|\\uD83D\\uDC83|\\uD83D\\uDC84|\\uD83D\\uDC85|\\uD83D\\uDCD2|\\uD83D\\uDC86|\\uD83D\\uDCD3|\\uD83D\\uDC87|\\uD83D\\uDCD4|\\uD83D\\uDC88|\\uD83D\\uDCD5|\\uD83D\\uDC89|\\uD83D\\uDCD6|\\uD83D\\uDC8A|\\uD83D\\uDCD7|\\uD83D\\uDC8B|\\uD83D\\uDCD8|\\uD83D\\uDC8C|\\uD83D\\uDCD9|\\uD83D\\uDC8D|\\uD83D\\uDCDA|\\uD83D\\uDC8E|\\uD83D\\uDCDB|\\uD83D\\uDC8F|\\uD83D\\uDCDC|\\uD83D\\uDC90|\\uD83D\\uDCDD|\\uD83D\\uDC91|\\uD83D\\uDCDE|\\uD83D\\uDC92|\\uD83D\\uDCDF|\\uD83D\\uDCE0|\\uD83D\\uDC93|\\uD83D\\uDCE1|\\uD83D\\uDCE2|\\uD83D\\uDC94|\\uD83D\\uDCE3|\\uD83D\\uDCE4|\\uD83D\\uDC95|\\uD83D\\uDCE5|\\uD83D\\uDCE6|\\uD83D\\uDC96|\\uD83D\\uDCE7|\\uD83D\\uDCE8|\\uD83D\\uDC97|\\uD83D\\uDCE9|\\uD83D\\uDCEA|\\uD83D\\uDC98|\\uD83D\\uDCEB|\\uD83D\\uDCEE|\\uD83D\\uDC99|\\uD83D\\uDCF0|\\uD83D\\uDCF1|\\uD83D\\uDC9A|\\uD83D\\uDCF2|\\uD83D\\uDCF3|\\uD83D\\uDC9B|\\uD83D\\uDCF4|\\uD83D\\uDCF6|\\uD83D\\uDC9C|\\uD83D\\uDCF7|\\uD83D\\uDCF9|\\uD83D\\uDC9D|\\uD83D\\uDCFA|\\uD83D\\uDCFB|\\uD83D\\uDC9E|\\uD83D\\uDCFC|\\uD83D\\uDD03|\\uD83D\\uDC9F|\\uD83D\\uDD0A|\\uD83D\\uDD0B|\\uD83D\\uDCA0|\\uD83D\\uDD0C|\\uD83D\\uDD0D|\\uD83D\\uDCA1|\\uD83D\\uDD0E|\\uD83D\\uDD0F|\\uD83D\\uDCA2|\\uD83D\\uDD10|\\uD83D\\uDD11|\\uD83D\\uDCA3|\\uD83D\\uDD12|\\uD83D\\uDD13|\\uD83D\\uDCA4|\\uD83D\\uDD14|\\uD83D\\uDD16|\\uD83D\\uDCA5|\\uD83D\\uDD17|\\uD83D\\uDD18|\\uD83D\\uDCA6|\\uD83D\\uDD19|\\uD83D\\uDD1A|\\uD83D\\uDCA7|\\uD83D\\uDD1B|\\uD83D\\uDD1C|\\uD83D\\uDCA8|\\uD83D\\uDD1D|\\uD83D\\uDD1E|\\uD83D\\uDCA9|\\uD83D\\uDD1F|\\uD83D\\uDCAA|\\uD83D\\uDD20|\\uD83D\\uDD21|\\uD83D\\uDCAB|\\uD83D\\uDD22|\\uD83D\\uDD23|\\uD83D\\uDCAC|\\uD83D\\uDD24|\\uD83D\\uDD25|\\uD83D\\uDCAE|\\uD83D\\uDD26|\\uD83D\\uDD27|\\uD83D\\uDCAF|\\uD83D\\uDD28|\\uD83D\\uDD29|\\uD83D\\uDCB0|\\uD83D\\uDD2A|\\uD83D\\uDD2B|\\uD83D\\uDCB1|\\uD83D\\uDD2E|\\uD83D\\uDCB2|\\uD83D\\uDD2F|\\uD83D\\uDCB3|\\uD83D\\uDD30|\\uD83D\\uDD31|\\uD83D\\uDCB4|\\uD83D\\uDD32|\\uD83D\\uDD33|\\uD83D\\uDCB5|\\uD83D\\uDD34|\\uD83D\\uDD35|\\uD83D\\uDCB8|\\uD83D\\uDD36|\\uD83D\\uDD37|\\uD83D\\uDCB9|\\uD83D\\uDD38|\\uD83D\\uDD39|\\uD83D\\uDCBA|\\uD83D\\uDD3A|\\uD83D\\uDD3B|\\uD83D\\uDCBB|\\uD83D\\uDD3C|\\uD83D\\uDCBC|\\uD83D\\uDD3D|\\uD83D\\uDD50|\\uD83D\\uDCBD|\\uD83D\\uDD51|\\uD83D\\uDCBE|\\uD83D\\uDD52|\\uD83D\\uDCBF|\\uD83D\\uDD53|\\uD83D\\uDCC0|\\uD83D\\uDD54|\\uD83D\\uDD55|\\uD83D\\uDCC1|\\uD83D\\uDD56|\\uD83D\\uDD57|\\uD83D\\uDCC2|\\uD83D\\uDD58|\\uD83D\\uDD59|\\uD83D\\uDCC3|\\uD83D\\uDD5A|\\uD83D\\uDD5B|\\uD83D\\uDCC4|\\uD83D\\uDDFB|\\uD83D\\uDDFC|\\uD83D\\uDCC5|\\uD83D\\uDDFD|\\uD83D\\uDDFE|\\uD83D\\uDCC6|\\uD83D\\uDDFF|\\uD83D\\uDE01|\\uD83D\\uDE02|\\uD83D\\uDE03|\\uD83D\\uDCC8|\\uD83D\\uDE04|\\uD83D\\uDE05|\\uD83D\\uDCC9|\\uD83D\\uDE06|\\uD83D\\uDE09|\\uD83D\\uDCCA|\\uD83D\\uDE0A|\\uD83D\\uDE0B|\\uD83D\\uDCCB|\\uD83D\\uDE0C|\\uD83D\\uDE0D|\\uD83D\\uDCCC|\\uD83D\\uDE0F|\\uD83D\\uDE12|\\uD83D\\uDCCD|\\uD83D\\uDE13|\\uD83D\\uDE14|\\uD83D\\uDCCE|\\uD83D\\uDE16|\\uD83D\\uDE18|\\uD83D\\uDCCF|\\uD83D\\uDE1A|\\uD83D\\uDE1C|\\uD83D\\uDCD0|\\uD83D\\uDE1D|\\uD83D\\uDE1E|\\uD83D\\uDCD1|\\uD83D\\uDE20|\\uD83D\\uDE21|\\uD83D\\uDE22|\\uD83D\\uDE23|\\uD83D\\uDE24|\\uD83D\\uDE25|\\uD83D\\uDE28|\\uD83D\\uDE29|\\uD83D\\uDE2A|\\uD83D\\uDE2B|\\uD83D\\uDE2D|\\uD83D\\uDE30|\\uD83D\\uDE31|\\uD83D\\uDE32|\\uD83D\\uDE33|\\uD83D\\uDE35|\\uD83D\\uDE37|\\uD83D\\uDE38|\\uD83D\\uDE39|\\uD83D\\uDE3A|\\uD83D\\uDE3B|\\uD83D\\uDE3C|\\uD83D\\uDE3D|\\uD83D\\uDE3E|\\uD83D\\uDE3F|\\uD83D\\uDE40|\\uD83D\\uDE45|\\uD83D\\uDE46|\\uD83D\\uDE47|\\uD83D\\uDE48|\\uD83D\\uDE49|\\uD83D\\uDE4A|\\uD83D\\uDE4B|\\uD83D\\uDE4C|\\uD83D\\uDE4D|\\uD83D\\uDE4E|\\uD83D\\uDE4F|\\uD83D\\uDE80|\\uD83D\\uDE83|\\uD83D\\uDE84|\\uD83D\\uDE85|\\uD83D\\uDE87|\\uD83D\\uDE89|\\uD83D\\uDE8C|\\uD83D\\uDE8F|\\uD83D\\uDE91|\\uD83D\\uDE92|\\uD83D\\uDE93|\\uD83D\\uDE95|\\uD83D\\uDE97|\\uD83D\\uDE99|\\uD83D\\uDE9A|\\uD83D\\uDEA2|\\uD83D\\uDEA4|\\uD83D\\uDEA5|\\uD83D\\uDEA7|\\uD83D\\uDEA8|\\uD83D\\uDEA9|\\uD83D\\uDEAA|\\uD83D\\uDEAB|\\uD83D\\uDEAC|\\uD83D\\uDEAD|\\uD83D\\uDEB2|\\uD83D\\uDEB6|\\uD83D\\uDEB9|\\uD83D\\uDEBA|\\uD83D\\uDEBB|\\uD83D\\uDEBC|\\uD83D\\uDEBD|\\uD83D\\uDEBE|\\uD83D\\uDEC0|\\uD83E\\uDD18|\\uD83D\\uDE00|\\uD83D\\uDE07|\\uD83D\\uDE08|\\uD83D\\uDE0E|\\uD83D\\uDE10|\\uD83D\\uDE11|\\uD83D\\uDE15|\\uD83D\\uDE17|\\uD83D\\uDE19|\\uD83D\\uDE1B|\\uD83D\\uDE1F|\\uD83D\\uDE26|\\uD83D\\uDE27|\\uD83D\\uDE2C|\\uD83D\\uDE2E|\\uD83D\\uDE2F|\\uD83D\\uDE34|\\uD83D\\uDE36|\\uD83D\\uDE81|\\uD83D\\uDE82|\\uD83D\\uDE86|\\uD83D\\uDE88|\\uD83D\\uDE8A|\\uD83D\\uDE8D|\\uD83D\\uDE8E|\\uD83D\\uDE90|\\uD83D\\uDE94|\\uD83D\\uDE96|\\uD83D\\uDE98|\\uD83D\\uDE9B|\\uD83D\\uDE9C|\\uD83D\\uDE9D|\\uD83D\\uDE9E|\\uD83D\\uDE9F|\\uD83D\\uDEA0|\\uD83D\\uDEA1|\\uD83D\\uDEA3|\\uD83D\\uDEA6|\\uD83D\\uDEAE|\\uD83D\\uDEAF|\\uD83D\\uDEB0|\\uD83D\\uDEB1|\\uD83D\\uDEB3|\\uD83D\\uDEB4|\\uD83D\\uDEB5|\\uD83D\\uDEB7|\\uD83D\\uDEB8|\\uD83D\\uDEBF|\\uD83D\\uDEC1|\\uD83D\\uDEC2|\\uD83D\\uDEC3|\\uD83D\\uDEC4|\\uD83D\\uDEC5|\\uD83C\\uDF0D|\\uD83C\\uDF0E|\\uD83C\\uDF10|\\uD83C\\uDF12|\\uD83C\\uDF16|\\uD83C\\uDF17|\\uD83C\\uDF18|\\uD83C\\uDF1A|\\uD83C\\uDF1C|\\uD83C\\uDF1D|\\uD83C\\uDF1E|\\uD83C\\uDF32|\\uD83C\\uDF33|\\uD83C\\uDF4B|\\uD83C\\uDF50|\\uD83C\\uDF7C|\\uD83C\\uDFC7|\\uD83C\\uDFC9|\\uD83C\\uDFE4|\\uD83D\\uDC00|\\uD83D\\uDC01|\\uD83D\\uDC02|\\uD83D\\uDC03|\\uD83D\\uDC04|\\uD83D\\uDC05|\\uD83D\\uDC06|\\uD83D\\uDC07|\\uD83D\\uDC08|\\uD83D\\uDC09|\\uD83D\\uDC0A|\\uD83D\\uDC0B|\\uD83D\\uDC0F|\\uD83D\\uDC10|\\uD83D\\uDC13|\\uD83D\\uDC15|\\uD83D\\uDC16|\\uD83D\\uDC2A|\\uD83D\\uDC65|\\uD83D\\uDC6C|\\uD83D\\uDC6D|\\uD83D\\uDCAD|\\uD83D\\uDCB6|\\uD83D\\uDCB7|\\uD83D\\uDCEC|\\uD83D\\uDCED|\\uD83D\\uDCEF|\\uD83D\\uDCF5|\\uD83D\\uDD00|\\uD83D\\uDD01|\\uD83D\\uDD02|\\uD83D\\uDD04|\\uD83D\\uDD05|\\uD83D\\uDD06|\\uD83D\\uDD07|\\uD83D\\uDD09|\\uD83D\\uDD15|\\uD83D\\uDD2C|\\uD83D\\uDD2D|\\uD83D\\uDD5C|\\uD83D\\uDD5D|\\uD83D\\uDD5E|\\uD83D\\uDD5F|\\uD83D\\uDD60|\\uD83D\\uDD61|\\uD83D\\uDD62|\\uD83D\\uDD63|\\uD83D\\uDD64|\\uD83D\\uDD65|\\uD83D\\uDD66|\\uD83D\\uDD67|\\uD83D\\uDD08|\\uD83D\\uDE8B|\\uD83C\\uDFC5|\\uD83C\\uDFF4|\\uD83D\\uDCF8|\\uD83D\\uDECC|\\uD83D\\uDD95|\\uD83D\\uDD96|\\uD83D\\uDE41|\\uD83D\\uDE42|\\uD83D\\uDEEB|\\uD83D\\uDEEC|\\uD83C\\uDFFB|\\uD83C\\uDFFC|\\uD83C\\uDFFD|\\uD83C\\uDFFE|\\uD83C\\uDFFF|\\uD83D\\uDE43|\\uD83E\\uDD11|\\uD83E\\uDD13|\\uD83E\\uDD17|\\uD83D\\uDE44|\\uD83E\\uDD14|\\uD83E\\uDD10|\\uD83E\\uDD12|\\uD83E\\uDD15|\\uD83E\\uDD16|\\uD83E\\uDD81|\\uD83E\\uDD84|\\uD83E\\uDD82|\\uD83E\\uDD80|\\uD83E\\uDD83|\\uD83E\\uDDC0|\\uD83C\\uDF2D|\\uD83C\\uDF2E|\\uD83C\\uDF2F|\\uD83C\\uDF7F|\\uD83C\\uDF7E|\\uD83C\\uDFF9|\\uD83C\\uDFFA|\\uD83D\\uDED0|\\uD83D\\uDD4B|\\uD83D\\uDD4C|\\uD83D\\uDD4D|\\uD83D\\uDD4E|\\uD83D\\uDCFF|\\uD83C\\uDFCF|\\uD83C\\uDFD0|\\uD83C\\uDFD1|\\uD83C\\uDFD2|\\uD83C\\uDFD3|\\uD83C\\uDFF8|\\uD83C\\uDF26|\\uD83C\\uDF25|\\uD83C\\uDF24|\\uD83D\\uDEF3|\\uD83D\\uDEE9|\\uD83D\\uDEE5|\\uD83D\\uDEE4|\\uD83D\\uDEE3|\\uD83D\\uDECF|\\uD83D\\uDECE|\\uD83D\\uDECD|\\uD83D\\uDECB|\\uD83C\\uDFDF|\\uD83C\\uDFDE|\\uD83C\\uDFDD|\\uD83C\\uDFDC|\\uD83C\\uDFDB|\\uD83C\\uDFDA|\\uD83C\\uDFD9|\\uD83C\\uDFD8|\\uD83C\\uDFD7|\\uD83C\\uDFD6|\\uD83C\\uDFD5|\\uD83C\\uDFD4|\\uD83D\\uDD90|\\uD83D\\uDD75|\\uD83D\\uDD74|\\uD83D\\uDC41|\\uD83C\\uDF7D|\\uD83D\\uDEF0|\\uD83D\\uDEE2|\\uD83D\\uDEE1|\\uD83D\\uDEE0|\\uD83D\\uDDFA|\\uD83D\\uDDF3|\\uD83D\\uDDEF|\\uD83D\\uDDE3|\\uD83D\\uDDE1|\\uD83D\\uDDDE|\\uD83D\\uDDDD|\\uD83D\\uDDDC|\\uD83D\\uDDD3|\\uD83D\\uDDD2|\\uD83D\\uDDD1|\\uD83D\\uDDC4|\\uD83D\\uDDC3|\\uD83D\\uDDC2|\\uD83D\\uDDBC|\\uD83D\\uDDB2|\\uD83D\\uDDA8|\\uD83D\\uDDA5|\\uD83D\\uDD8D|\\uD83D\\uDD8C|\\uD83D\\uDD8B|\\uD83D\\uDD8A|\\uD83D\\uDD87|\\uD83D\\uDD79|\\uD83D\\uDD76|\\uD83D\\uDD73|\\uD83D\\uDD70|\\uD83D\\uDD6F|\\uD83D\\uDD4A|\\uD83D\\uDD49|\\uD83D\\uDCFD|\\uD83C\\uDFF7|\\uD83C\\uDFF5|\\uD83C\\uDFF3|\\uD83C\\uDF9B|\\uD83C\\uDF9A|\\uD83C\\uDF99|\\uD83C\\uDF21|\\uD83D\\uDD78|\\uD83D\\uDD77|\\uD83D\\uDC3F|\\uD83C\\uDF2C|\\uD83C\\uDF2B|\\uD83C\\uDF2A|\\uD83C\\uDF29|\\uD83C\\uDF28|\\uD83C\\uDF27|\\uD83C\\uDF36|\\uD83C\\uDF97|\\uD83C\\uDF96|\\uD83C\\uDFCE|\\uD83C\\uDFCD|\\uD83C\\uDFCC|\\uD83C\\uDFCB|\\uD83C\\uDF9F|\\uD83C\\uDF9E|\\uD83C\\uDE37|\\uD83C\\uDE2F|\\uD83C\\uDE1A|\\uD83C\\uDE02|\\uD83C\\uDD7F|\\uD83C\\uDC04|\\uD83C\\uDFE1|\\u2714|\\u2733|\\u2734|\\u2744|\\u2747|\\u2757|\\u2764|\\u27A1|\\u2934|\\u2935|\\u2B05|\\u2B06|\\u2B07|\\u2B1B|\\u2B1C|\\u2B50|\\u2B55|\\u3030|\\u303D|\\u3297|\\u3299|\\u2712|\\u270F|\\u270C|\\u2709|\\u2708|\\u2702|\\u26FD|\\u26FA|\\u26F5|\\u26F3|\\u26F2|\\u26EA|\\u26D4|\\u26C5|\\u26C4|\\u26BE|\\u26BD|\\u26AB|\\u26AA|\\u26A1|\\u26A0|\\u2693|\\u267F|\\u267B|\\u2668|\\u2666|\\u2665|\\u2663|\\u2660|\\u2653|\\u2652|\\u2651|\\u271D|\\u2650|\\u264F|\\u264E|\\u264D|\\u264C|\\u264B|\\u264A|\\u2649|\\u2648|\\u263A|\\u261D|\\u2615|\\u2614|\\u2611|\\u2328|\\u260E|\\u2601|\\u2600|\\u25FE|\\u25FD|\\u25FC|\\u25FB|\\u25C0|\\u25B6|\\u25AB|\\u25AA|\\u24C2|\\u2716|\\u231A|\\u21AA|\\u21A9|\\u2199|\\u2198|\\u2197|\\u2196|\\u2195|\\u2194|\\u2139|\\u2122|\\u270D|\\u2049|\\u203C|\\u00AE|\\u00A9|\\u27BF|\\u27B0|\\u2797|\\u2796|\\u2795|\\u2755|\\u2754|\\u2753|\\u274E|\\u274C|\\u2728|\\u270B|\\u270A|\\u2705|\\u26CE|\\u23F3|\\u23F0|\\u23EC|\\u23ED|\\u23EE|\\u23EF|\\u23F1|\\u23F2|\\u23F8|\\u23F9|\\u23FA|\\u2602|\\u2603|\\u2604|\\u2618|\\u2620|\\u2622|\\u2623|\\u2626|\\u262A|\\u262E|\\u262F|\\u2638|\\u2639|\\u2692|\\u2694|\\u2696|\\u2697|\\u2699|\\u269B|\\u269C|\\u26B0|\\u26B1|\\u26C8|\\u26CF|\\u26D1|\\u26D3|\\u26E9|\\u26F0|\\u26F1|\\u26F4|\\u26F7|\\u26F8|\\u26F9|\\u2721|\\u2763|\\u23EB|\\u23EA|\\u23E9|\\u231B)";
  ns.jsecapeMap = {
    "\uD83D\uDC69\u200D\u2764\uFE0F\u200D\uD83D\uDC8B\u200D\uD83D\uDC69": "1f469-2764-1f48b-1f469",
    "\uD83D\uDC68\u200D\u2764\uFE0F\u200D\uD83D\uDC8B\u200D\uD83D\uDC68": "1f468-2764-1f48b-1f468",
    "\uD83D\uDC68\u200D\uD83D\uDC68\u200D\uD83D\uDC66\u200D\uD83D\uDC66": "1f468-1f468-1f466-1f466",
    "\uD83D\uDC68\u200D\uD83D\uDC68\u200D\uD83D\uDC67\u200D\uD83D\uDC66": "1f468-1f468-1f467-1f466",
    "\uD83D\uDC68\u200D\uD83D\uDC68\u200D\uD83D\uDC67\u200D\uD83D\uDC67": "1f468-1f468-1f467-1f467",
    "\uD83D\uDC68\u200D\uD83D\uDC69\u200D\uD83D\uDC66\u200D\uD83D\uDC66": "1f468-1f469-1f466-1f466",
    "\uD83D\uDC68\u200D\uD83D\uDC69\u200D\uD83D\uDC67\u200D\uD83D\uDC66": "1f468-1f469-1f467-1f466",
    "\uD83D\uDC68\u200D\uD83D\uDC69\u200D\uD83D\uDC67\u200D\uD83D\uDC67": "1f468-1f469-1f467-1f467",
    "\uD83D\uDC69\u200D\uD83D\uDC69\u200D\uD83D\uDC66\u200D\uD83D\uDC66": "1f469-1f469-1f466-1f466",
    "\uD83D\uDC69\u200D\uD83D\uDC69\u200D\uD83D\uDC67\u200D\uD83D\uDC66": "1f469-1f469-1f467-1f466",
    "\uD83D\uDC69\u200D\uD83D\uDC69\u200D\uD83D\uDC67\u200D\uD83D\uDC67": "1f469-1f469-1f467-1f467",
    "\uD83D\uDC69\u200D\u2764\uFE0F\u200D\uD83D\uDC69": "1f469-2764-1f469",
    "\uD83D\uDC68\u200D\u2764\uFE0F\u200D\uD83D\uDC68": "1f468-2764-1f468",
    "\uD83D\uDC68\u200D\uD83D\uDC68\u200D\uD83D\uDC66": "1f468-1f468-1f466",
    "\uD83D\uDC68\u200D\uD83D\uDC68\u200D\uD83D\uDC67": "1f468-1f468-1f467",
    "\uD83D\uDC68\u200D\uD83D\uDC69\u200D\uD83D\uDC67": "1f468-1f469-1f467",
    "\uD83D\uDC69\u200D\uD83D\uDC69\u200D\uD83D\uDC66": "1f469-1f469-1f466",
    "\uD83D\uDC69\u200D\uD83D\uDC69\u200D\uD83D\uDC67": "1f469-1f469-1f467",
    "\uD83D\uDC41\u200D\uD83D\uDDE8": "1f441-1f5e8",
    "#\uFE0F\u20E3": "0023-20e3",
    "0\uFE0F\u20E3": "0030-20e3",
    "1\uFE0F\u20E3": "0031-20e3",
    "2\uFE0F\u20E3": "0032-20e3",
    "3\uFE0F\u20E3": "0033-20e3",
    "4\uFE0F\u20E3": "0034-20e3",
    "5\uFE0F\u20E3": "0035-20e3",
    "6\uFE0F\u20E3": "0036-20e3",
    "7\uFE0F\u20E3": "0037-20e3",
    "8\uFE0F\u20E3": "0038-20e3",
    "9\uFE0F\u20E3": "0039-20e3",
    "*\uFE0F\u20E3": "002a-20e3",
    "\uD83E\uDD18\uD83C\uDFFF": "1f918-1f3ff",
    "\uD83E\uDD18\uD83C\uDFFE": "1f918-1f3fe",
    "\uD83E\uDD18\uD83C\uDFFD": "1f918-1f3fd",
    "\uD83E\uDD18\uD83C\uDFFC": "1f918-1f3fc",
    "\uD83E\uDD18\uD83C\uDFFB": "1f918-1f3fb",
    "\uD83D\uDEC0\uD83C\uDFFF": "1f6c0-1f3ff",
    "\uD83D\uDEC0\uD83C\uDFFE": "1f6c0-1f3fe",
    "\uD83D\uDEC0\uD83C\uDFFD": "1f6c0-1f3fd",
    "\uD83D\uDEC0\uD83C\uDFFC": "1f6c0-1f3fc",
    "\uD83D\uDEC0\uD83C\uDFFB": "1f6c0-1f3fb",
    "\uD83D\uDEB6\uD83C\uDFFF": "1f6b6-1f3ff",
    "\uD83D\uDEB6\uD83C\uDFFE": "1f6b6-1f3fe",
    "\uD83D\uDEB6\uD83C\uDFFD": "1f6b6-1f3fd",
    "\uD83D\uDEB6\uD83C\uDFFC": "1f6b6-1f3fc",
    "\uD83D\uDEB6\uD83C\uDFFB": "1f6b6-1f3fb",
    "\uD83D\uDEB5\uD83C\uDFFF": "1f6b5-1f3ff",
    "\uD83D\uDEB5\uD83C\uDFFE": "1f6b5-1f3fe",
    "\uD83D\uDEB5\uD83C\uDFFD": "1f6b5-1f3fd",
    "\uD83D\uDEB5\uD83C\uDFFC": "1f6b5-1f3fc",
    "\uD83D\uDEB5\uD83C\uDFFB": "1f6b5-1f3fb",
    "\uD83D\uDEB4\uD83C\uDFFF": "1f6b4-1f3ff",
    "\uD83D\uDEB4\uD83C\uDFFE": "1f6b4-1f3fe",
    "\uD83D\uDEB4\uD83C\uDFFD": "1f6b4-1f3fd",
    "\uD83D\uDEB4\uD83C\uDFFC": "1f6b4-1f3fc",
    "\uD83D\uDEB4\uD83C\uDFFB": "1f6b4-1f3fb",
    "\uD83D\uDEA3\uD83C\uDFFF": "1f6a3-1f3ff",
    "\uD83D\uDEA3\uD83C\uDFFE": "1f6a3-1f3fe",
    "\uD83D\uDEA3\uD83C\uDFFD": "1f6a3-1f3fd",
    "\uD83D\uDEA3\uD83C\uDFFC": "1f6a3-1f3fc",
    "\uD83D\uDEA3\uD83C\uDFFB": "1f6a3-1f3fb",
    "\uD83D\uDE4F\uD83C\uDFFF": "1f64f-1f3ff",
    "\uD83D\uDE4F\uD83C\uDFFE": "1f64f-1f3fe",
    "\uD83D\uDE4F\uD83C\uDFFD": "1f64f-1f3fd",
    "\uD83D\uDE4F\uD83C\uDFFC": "1f64f-1f3fc",
    "\uD83D\uDE4F\uD83C\uDFFB": "1f64f-1f3fb",
    "\uD83D\uDE4E\uD83C\uDFFF": "1f64e-1f3ff",
    "\uD83D\uDE4E\uD83C\uDFFE": "1f64e-1f3fe",
    "\uD83D\uDE4E\uD83C\uDFFD": "1f64e-1f3fd",
    "\uD83D\uDE4E\uD83C\uDFFC": "1f64e-1f3fc",
    "\uD83D\uDE4E\uD83C\uDFFB": "1f64e-1f3fb",
    "\uD83D\uDE4D\uD83C\uDFFF": "1f64d-1f3ff",
    "\uD83D\uDE4D\uD83C\uDFFE": "1f64d-1f3fe",
    "\uD83D\uDE4D\uD83C\uDFFD": "1f64d-1f3fd",
    "\uD83D\uDE4D\uD83C\uDFFC": "1f64d-1f3fc",
    "\uD83D\uDE4D\uD83C\uDFFB": "1f64d-1f3fb",
    "\uD83D\uDE4C\uD83C\uDFFF": "1f64c-1f3ff",
    "\uD83D\uDE4C\uD83C\uDFFE": "1f64c-1f3fe",
    "\uD83D\uDE4C\uD83C\uDFFD": "1f64c-1f3fd",
    "\uD83D\uDE4C\uD83C\uDFFC": "1f64c-1f3fc",
    "\uD83D\uDE4C\uD83C\uDFFB": "1f64c-1f3fb",
    "\uD83D\uDE4B\uD83C\uDFFF": "1f64b-1f3ff",
    "\uD83D\uDE4B\uD83C\uDFFE": "1f64b-1f3fe",
    "\uD83D\uDE4B\uD83C\uDFFD": "1f64b-1f3fd",
    "\uD83D\uDE4B\uD83C\uDFFC": "1f64b-1f3fc",
    "\uD83D\uDE4B\uD83C\uDFFB": "1f64b-1f3fb",
    "\uD83D\uDE47\uD83C\uDFFF": "1f647-1f3ff",
    "\uD83D\uDE47\uD83C\uDFFE": "1f647-1f3fe",
    "\uD83D\uDE47\uD83C\uDFFD": "1f647-1f3fd",
    "\uD83D\uDE47\uD83C\uDFFC": "1f647-1f3fc",
    "\uD83D\uDE47\uD83C\uDFFB": "1f647-1f3fb",
    "\uD83D\uDE46\uD83C\uDFFF": "1f646-1f3ff",
    "\uD83D\uDE46\uD83C\uDFFE": "1f646-1f3fe",
    "\uD83D\uDE46\uD83C\uDFFD": "1f646-1f3fd",
    "\uD83D\uDE46\uD83C\uDFFC": "1f646-1f3fc",
    "\uD83D\uDE46\uD83C\uDFFB": "1f646-1f3fb",
    "\uD83D\uDE45\uD83C\uDFFF": "1f645-1f3ff",
    "\uD83D\uDE45\uD83C\uDFFE": "1f645-1f3fe",
    "\uD83D\uDE45\uD83C\uDFFD": "1f645-1f3fd",
    "\uD83D\uDE45\uD83C\uDFFC": "1f645-1f3fc",
    "\uD83D\uDE45\uD83C\uDFFB": "1f645-1f3fb",
    "\uD83D\uDD96\uD83C\uDFFF": "1f596-1f3ff",
    "\uD83D\uDD96\uD83C\uDFFE": "1f596-1f3fe",
    "\uD83D\uDD96\uD83C\uDFFD": "1f596-1f3fd",
    "\uD83D\uDD96\uD83C\uDFFC": "1f596-1f3fc",
    "\uD83D\uDD96\uD83C\uDFFB": "1f596-1f3fb",
    "\uD83D\uDD95\uD83C\uDFFF": "1f595-1f3ff",
    "\uD83D\uDD95\uD83C\uDFFE": "1f595-1f3fe",
    "\uD83D\uDD95\uD83C\uDFFD": "1f595-1f3fd",
    "\uD83D\uDD95\uD83C\uDFFC": "1f595-1f3fc",
    "\uD83D\uDD95\uD83C\uDFFB": "1f595-1f3fb",
    "\uD83D\uDD90\uD83C\uDFFF": "1f590-1f3ff",
    "\uD83D\uDD90\uD83C\uDFFE": "1f590-1f3fe",
    "\uD83D\uDD90\uD83C\uDFFD": "1f590-1f3fd",
    "\uD83D\uDD90\uD83C\uDFFC": "1f590-1f3fc",
    "\uD83D\uDD90\uD83C\uDFFB": "1f590-1f3fb",
    "\uD83D\uDD75\uD83C\uDFFF": "1f575-1f3ff",
    "\uD83D\uDD75\uD83C\uDFFE": "1f575-1f3fe",
    "\uD83D\uDD75\uD83C\uDFFD": "1f575-1f3fd",
    "\uD83D\uDD75\uD83C\uDFFC": "1f575-1f3fc",
    "\uD83D\uDD75\uD83C\uDFFB": "1f575-1f3fb",
    "\uD83D\uDCAA\uD83C\uDFFF": "1f4aa-1f3ff",
    "\uD83D\uDCAA\uD83C\uDFFE": "1f4aa-1f3fe",
    "\uD83D\uDCAA\uD83C\uDFFD": "1f4aa-1f3fd",
    "\uD83D\uDCAA\uD83C\uDFFC": "1f4aa-1f3fc",
    "\uD83D\uDCAA\uD83C\uDFFB": "1f4aa-1f3fb",
    "\uD83D\uDC87\uD83C\uDFFF": "1f487-1f3ff",
    "\uD83D\uDC87\uD83C\uDFFE": "1f487-1f3fe",
    "\uD83D\uDC87\uD83C\uDFFD": "1f487-1f3fd",
    "\uD83D\uDC87\uD83C\uDFFC": "1f487-1f3fc",
    "\uD83D\uDC87\uD83C\uDFFB": "1f487-1f3fb",
    "\uD83D\uDC86\uD83C\uDFFF": "1f486-1f3ff",
    "\uD83D\uDC86\uD83C\uDFFE": "1f486-1f3fe",
    "\uD83D\uDC86\uD83C\uDFFD": "1f486-1f3fd",
    "\uD83D\uDC86\uD83C\uDFFC": "1f486-1f3fc",
    "\uD83D\uDC86\uD83C\uDFFB": "1f486-1f3fb",
    "\uD83D\uDC85\uD83C\uDFFF": "1f485-1f3ff",
    "\uD83D\uDC85\uD83C\uDFFE": "1f485-1f3fe",
    "\uD83D\uDC85\uD83C\uDFFD": "1f485-1f3fd",
    "\uD83D\uDC85\uD83C\uDFFC": "1f485-1f3fc",
    "\uD83D\uDC85\uD83C\uDFFB": "1f485-1f3fb",
    "\uD83D\uDC83\uD83C\uDFFF": "1f483-1f3ff",
    "\uD83D\uDC83\uD83C\uDFFE": "1f483-1f3fe",
    "\uD83D\uDC83\uD83C\uDFFD": "1f483-1f3fd",
    "\uD83D\uDC83\uD83C\uDFFC": "1f483-1f3fc",
    "\uD83D\uDC83\uD83C\uDFFB": "1f483-1f3fb",
    "\uD83D\uDC82\uD83C\uDFFF": "1f482-1f3ff",
    "\uD83D\uDC82\uD83C\uDFFE": "1f482-1f3fe",
    "\uD83D\uDC82\uD83C\uDFFD": "1f482-1f3fd",
    "\uD83D\uDC82\uD83C\uDFFC": "1f482-1f3fc",
    "\uD83D\uDC82\uD83C\uDFFB": "1f482-1f3fb",
    "\uD83D\uDC81\uD83C\uDFFF": "1f481-1f3ff",
    "\uD83D\uDC81\uD83C\uDFFE": "1f481-1f3fe",
    "\uD83D\uDC81\uD83C\uDFFD": "1f481-1f3fd",
    "\uD83D\uDC81\uD83C\uDFFC": "1f481-1f3fc",
    "\uD83D\uDC81\uD83C\uDFFB": "1f481-1f3fb",
    "\uD83D\uDC7C\uD83C\uDFFF": "1f47c-1f3ff",
    "\uD83D\uDC7C\uD83C\uDFFE": "1f47c-1f3fe",
    "\uD83D\uDC7C\uD83C\uDFFD": "1f47c-1f3fd",
    "\uD83D\uDC7C\uD83C\uDFFC": "1f47c-1f3fc",
    "\uD83D\uDC7C\uD83C\uDFFB": "1f47c-1f3fb",
    "\uD83D\uDC78\uD83C\uDFFF": "1f478-1f3ff",
    "\uD83D\uDC78\uD83C\uDFFE": "1f478-1f3fe",
    "\uD83D\uDC78\uD83C\uDFFD": "1f478-1f3fd",
    "\uD83D\uDC78\uD83C\uDFFC": "1f478-1f3fc",
    "\uD83D\uDC78\uD83C\uDFFB": "1f478-1f3fb",
    "\uD83D\uDC77\uD83C\uDFFF": "1f477-1f3ff",
    "\uD83D\uDC77\uD83C\uDFFE": "1f477-1f3fe",
    "\uD83D\uDC77\uD83C\uDFFD": "1f477-1f3fd",
    "\uD83D\uDC77\uD83C\uDFFC": "1f477-1f3fc",
    "\uD83D\uDC77\uD83C\uDFFB": "1f477-1f3fb",
    "\uD83D\uDC76\uD83C\uDFFF": "1f476-1f3ff",
    "\uD83D\uDC76\uD83C\uDFFE": "1f476-1f3fe",
    "\uD83D\uDC76\uD83C\uDFFD": "1f476-1f3fd",
    "\uD83D\uDC76\uD83C\uDFFC": "1f476-1f3fc",
    "\uD83D\uDC76\uD83C\uDFFB": "1f476-1f3fb",
    "\uD83D\uDC75\uD83C\uDFFF": "1f475-1f3ff",
    "\uD83D\uDC75\uD83C\uDFFE": "1f475-1f3fe",
    "\uD83D\uDC75\uD83C\uDFFD": "1f475-1f3fd",
    "\uD83D\uDC75\uD83C\uDFFC": "1f475-1f3fc",
    "\uD83D\uDC75\uD83C\uDFFB": "1f475-1f3fb",
    "\uD83D\uDC74\uD83C\uDFFF": "1f474-1f3ff",
    "\uD83D\uDC74\uD83C\uDFFE": "1f474-1f3fe",
    "\uD83D\uDC74\uD83C\uDFFD": "1f474-1f3fd",
    "\uD83D\uDC74\uD83C\uDFFC": "1f474-1f3fc",
    "\uD83D\uDC74\uD83C\uDFFB": "1f474-1f3fb",
    "\uD83D\uDC73\uD83C\uDFFF": "1f473-1f3ff",
    "\uD83D\uDC73\uD83C\uDFFE": "1f473-1f3fe",
    "\uD83D\uDC73\uD83C\uDFFD": "1f473-1f3fd",
    "\uD83D\uDC73\uD83C\uDFFC": "1f473-1f3fc",
    "\uD83D\uDC73\uD83C\uDFFB": "1f473-1f3fb",
    "\uD83D\uDC72\uD83C\uDFFF": "1f472-1f3ff",
    "\uD83D\uDC72\uD83C\uDFFE": "1f472-1f3fe",
    "\uD83D\uDC72\uD83C\uDFFD": "1f472-1f3fd",
    "\uD83D\uDC72\uD83C\uDFFC": "1f472-1f3fc",
    "\uD83D\uDC72\uD83C\uDFFB": "1f472-1f3fb",
    "\uD83D\uDC71\uD83C\uDFFF": "1f471-1f3ff",
    "\uD83D\uDC71\uD83C\uDFFE": "1f471-1f3fe",
    "\uD83D\uDC71\uD83C\uDFFD": "1f471-1f3fd",
    "\uD83D\uDC71\uD83C\uDFFC": "1f471-1f3fc",
    "\uD83D\uDC71\uD83C\uDFFB": "1f471-1f3fb",
    "\uD83D\uDC70\uD83C\uDFFF": "1f470-1f3ff",
    "\uD83D\uDC70\uD83C\uDFFE": "1f470-1f3fe",
    "\uD83D\uDC70\uD83C\uDFFD": "1f470-1f3fd",
    "\uD83D\uDC70\uD83C\uDFFC": "1f470-1f3fc",
    "\uD83D\uDC70\uD83C\uDFFB": "1f470-1f3fb",
    "\uD83D\uDC6E\uD83C\uDFFF": "1f46e-1f3ff",
    "\uD83D\uDC6E\uD83C\uDFFE": "1f46e-1f3fe",
    "\uD83D\uDC6E\uD83C\uDFFD": "1f46e-1f3fd",
    "\uD83D\uDC6E\uD83C\uDFFC": "1f46e-1f3fc",
    "\uD83D\uDC6E\uD83C\uDFFB": "1f46e-1f3fb",
    "\uD83D\uDC69\uD83C\uDFFF": "1f469-1f3ff",
    "\uD83D\uDC69\uD83C\uDFFE": "1f469-1f3fe",
    "\uD83D\uDC69\uD83C\uDFFD": "1f469-1f3fd",
    "\uD83D\uDC69\uD83C\uDFFC": "1f469-1f3fc",
    "\uD83D\uDC69\uD83C\uDFFB": "1f469-1f3fb",
    "\uD83D\uDC68\uD83C\uDFFF": "1f468-1f3ff",
    "\uD83D\uDC68\uD83C\uDFFE": "1f468-1f3fe",
    "\uD83D\uDC68\uD83C\uDFFD": "1f468-1f3fd",
    "\uD83D\uDC68\uD83C\uDFFC": "1f468-1f3fc",
    "\uD83D\uDC68\uD83C\uDFFB": "1f468-1f3fb",
    "\uD83D\uDC67\uD83C\uDFFF": "1f467-1f3ff",
    "\uD83D\uDC67\uD83C\uDFFE": "1f467-1f3fe",
    "\uD83D\uDC67\uD83C\uDFFD": "1f467-1f3fd",
    "\uD83D\uDC67\uD83C\uDFFC": "1f467-1f3fc",
    "\uD83D\uDC67\uD83C\uDFFB": "1f467-1f3fb",
    "\uD83D\uDC66\uD83C\uDFFF": "1f466-1f3ff",
    "\uD83D\uDC66\uD83C\uDFFE": "1f466-1f3fe",
    "\uD83D\uDC66\uD83C\uDFFD": "1f466-1f3fd",
    "\uD83D\uDC66\uD83C\uDFFC": "1f466-1f3fc",
    "\uD83D\uDC66\uD83C\uDFFB": "1f466-1f3fb",
    "\uD83D\uDC50\uD83C\uDFFF": "1f450-1f3ff",
    "\uD83D\uDC50\uD83C\uDFFE": "1f450-1f3fe",
    "\uD83D\uDC50\uD83C\uDFFD": "1f450-1f3fd",
    "\uD83D\uDC50\uD83C\uDFFC": "1f450-1f3fc",
    "\uD83D\uDC50\uD83C\uDFFB": "1f450-1f3fb",
    "\uD83D\uDC4F\uD83C\uDFFF": "1f44f-1f3ff",
    "\uD83D\uDC4F\uD83C\uDFFE": "1f44f-1f3fe",
    "\uD83D\uDC4F\uD83C\uDFFD": "1f44f-1f3fd",
    "\uD83D\uDC4F\uD83C\uDFFC": "1f44f-1f3fc",
    "\uD83D\uDC4F\uD83C\uDFFB": "1f44f-1f3fb",
    "\uD83D\uDC4E\uD83C\uDFFF": "1f44e-1f3ff",
    "\uD83D\uDC4E\uD83C\uDFFE": "1f44e-1f3fe",
    "\uD83D\uDC4E\uD83C\uDFFD": "1f44e-1f3fd",
    "\uD83D\uDC4E\uD83C\uDFFC": "1f44e-1f3fc",
    "\uD83D\uDC4E\uD83C\uDFFB": "1f44e-1f3fb",
    "\uD83D\uDC4D\uD83C\uDFFF": "1f44d-1f3ff",
    "\uD83D\uDC4D\uD83C\uDFFE": "1f44d-1f3fe",
    "\uD83D\uDC4D\uD83C\uDFFD": "1f44d-1f3fd",
    "\uD83D\uDC4D\uD83C\uDFFC": "1f44d-1f3fc",
    "\uD83D\uDC4D\uD83C\uDFFB": "1f44d-1f3fb",
    "\uD83D\uDC4C\uD83C\uDFFF": "1f44c-1f3ff",
    "\uD83D\uDC4C\uD83C\uDFFE": "1f44c-1f3fe",
    "\uD83D\uDC4C\uD83C\uDFFD": "1f44c-1f3fd",
    "\uD83D\uDC4C\uD83C\uDFFC": "1f44c-1f3fc",
    "\uD83D\uDC4C\uD83C\uDFFB": "1f44c-1f3fb",
    "\uD83D\uDC4B\uD83C\uDFFF": "1f44b-1f3ff",
    "\uD83D\uDC4B\uD83C\uDFFE": "1f44b-1f3fe",
    "\uD83D\uDC4B\uD83C\uDFFD": "1f44b-1f3fd",
    "\uD83D\uDC4B\uD83C\uDFFC": "1f44b-1f3fc",
    "\uD83D\uDC4B\uD83C\uDFFB": "1f44b-1f3fb",
    "\uD83D\uDC4A\uD83C\uDFFF": "1f44a-1f3ff",
    "\uD83D\uDC4A\uD83C\uDFFE": "1f44a-1f3fe",
    "\uD83D\uDC4A\uD83C\uDFFD": "1f44a-1f3fd",
    "\uD83D\uDC4A\uD83C\uDFFC": "1f44a-1f3fc",
    "\uD83D\uDC4A\uD83C\uDFFB": "1f44a-1f3fb",
    "\uD83D\uDC49\uD83C\uDFFF": "1f449-1f3ff",
    "\uD83D\uDC49\uD83C\uDFFE": "1f449-1f3fe",
    "\uD83D\uDC49\uD83C\uDFFD": "1f449-1f3fd",
    "\uD83D\uDC49\uD83C\uDFFC": "1f449-1f3fc",
    "\uD83D\uDC49\uD83C\uDFFB": "1f449-1f3fb",
    "\uD83D\uDC48\uD83C\uDFFF": "1f448-1f3ff",
    "\uD83D\uDC48\uD83C\uDFFE": "1f448-1f3fe",
    "\uD83D\uDC48\uD83C\uDFFD": "1f448-1f3fd",
    "\uD83D\uDC48\uD83C\uDFFC": "1f448-1f3fc",
    "\uD83D\uDC48\uD83C\uDFFB": "1f448-1f3fb",
    "\uD83D\uDC47\uD83C\uDFFF": "1f447-1f3ff",
    "\uD83D\uDC47\uD83C\uDFFE": "1f447-1f3fe",
    "\uD83D\uDC47\uD83C\uDFFD": "1f447-1f3fd",
    "\uD83D\uDC47\uD83C\uDFFC": "1f447-1f3fc",
    "\uD83D\uDC47\uD83C\uDFFB": "1f447-1f3fb",
    "\uD83D\uDC46\uD83C\uDFFF": "1f446-1f3ff",
    "\uD83D\uDC46\uD83C\uDFFE": "1f446-1f3fe",
    "\uD83D\uDC46\uD83C\uDFFD": "1f446-1f3fd",
    "\uD83D\uDC46\uD83C\uDFFC": "1f446-1f3fc",
    "\uD83D\uDC46\uD83C\uDFFB": "1f446-1f3fb",
    "\uD83D\uDC43\uD83C\uDFFF": "1f443-1f3ff",
    "\uD83D\uDC43\uD83C\uDFFE": "1f443-1f3fe",
    "\uD83D\uDC43\uD83C\uDFFD": "1f443-1f3fd",
    "\uD83D\uDC43\uD83C\uDFFC": "1f443-1f3fc",
    "\uD83D\uDC43\uD83C\uDFFB": "1f443-1f3fb",
    "\uD83D\uDC42\uD83C\uDFFF": "1f442-1f3ff",
    "\uD83D\uDC42\uD83C\uDFFE": "1f442-1f3fe",
    "\uD83D\uDC42\uD83C\uDFFD": "1f442-1f3fd",
    "\uD83D\uDC42\uD83C\uDFFC": "1f442-1f3fc",
    "\uD83D\uDC42\uD83C\uDFFB": "1f442-1f3fb",
    "\uD83C\uDFCB\uD83C\uDFFF": "1f3cb-1f3ff",
    "\uD83C\uDFCB\uD83C\uDFFE": "1f3cb-1f3fe",
    "\uD83C\uDFCB\uD83C\uDFFD": "1f3cb-1f3fd",
    "\uD83C\uDFCB\uD83C\uDFFC": "1f3cb-1f3fc",
    "\uD83C\uDFCB\uD83C\uDFFB": "1f3cb-1f3fb",
    "\uD83C\uDFCA\uD83C\uDFFF": "1f3ca-1f3ff",
    "\uD83C\uDFCA\uD83C\uDFFE": "1f3ca-1f3fe",
    "\uD83C\uDFCA\uD83C\uDFFD": "1f3ca-1f3fd",
    "\uD83C\uDFCA\uD83C\uDFFC": "1f3ca-1f3fc",
    "\uD83C\uDFCA\uD83C\uDFFB": "1f3ca-1f3fb",
    "\uD83C\uDFC7\uD83C\uDFFF": "1f3c7-1f3ff",
    "\uD83C\uDFC7\uD83C\uDFFE": "1f3c7-1f3fe",
    "\uD83C\uDFC7\uD83C\uDFFD": "1f3c7-1f3fd",
    "\uD83C\uDFC7\uD83C\uDFFC": "1f3c7-1f3fc",
    "\uD83C\uDFC7\uD83C\uDFFB": "1f3c7-1f3fb",
    "\uD83C\uDFC4\uD83C\uDFFF": "1f3c4-1f3ff",
    "\uD83C\uDFC4\uD83C\uDFFE": "1f3c4-1f3fe",
    "\uD83C\uDFC4\uD83C\uDFFD": "1f3c4-1f3fd",
    "\uD83C\uDFC4\uD83C\uDFFC": "1f3c4-1f3fc",
    "\uD83C\uDFC4\uD83C\uDFFB": "1f3c4-1f3fb",
    "\uD83C\uDFC3\uD83C\uDFFF": "1f3c3-1f3ff",
    "\uD83C\uDFC3\uD83C\uDFFE": "1f3c3-1f3fe",
    "\uD83C\uDFC3\uD83C\uDFFD": "1f3c3-1f3fd",
    "\uD83C\uDFC3\uD83C\uDFFC": "1f3c3-1f3fc",
    "\uD83C\uDFC3\uD83C\uDFFB": "1f3c3-1f3fb",
    "\uD83C\uDF85\uD83C\uDFFF": "1f385-1f3ff",
    "\uD83C\uDF85\uD83C\uDFFE": "1f385-1f3fe",
    "\uD83C\uDF85\uD83C\uDFFD": "1f385-1f3fd",
    "\uD83C\uDF85\uD83C\uDFFC": "1f385-1f3fc",
    "\uD83C\uDF85\uD83C\uDFFB": "1f385-1f3fb",
    "\uD83C\uDDFF\uD83C\uDDFC": "1f1ff-1f1fc",
    "\uD83C\uDDFF\uD83C\uDDF2": "1f1ff-1f1f2",
    "\uD83C\uDDFF\uD83C\uDDE6": "1f1ff-1f1e6",
    "\uD83C\uDDFE\uD83C\uDDF9": "1f1fe-1f1f9",
    "\uD83C\uDDFE\uD83C\uDDEA": "1f1fe-1f1ea",
    "\uD83C\uDDFD\uD83C\uDDF0": "1f1fd-1f1f0",
    "\uD83C\uDDFC\uD83C\uDDF8": "1f1fc-1f1f8",
    "\uD83C\uDDFC\uD83C\uDDEB": "1f1fc-1f1eb",
    "\uD83C\uDDFB\uD83C\uDDFA": "1f1fb-1f1fa",
    "\uD83C\uDDFB\uD83C\uDDF3": "1f1fb-1f1f3",
    "\uD83C\uDDFB\uD83C\uDDEE": "1f1fb-1f1ee",
    "\uD83C\uDDFB\uD83C\uDDEC": "1f1fb-1f1ec",
    "\uD83C\uDDFB\uD83C\uDDEA": "1f1fb-1f1ea",
    "\uD83C\uDDFB\uD83C\uDDE8": "1f1fb-1f1e8",
    "\uD83C\uDDFB\uD83C\uDDE6": "1f1fb-1f1e6",
    "\uD83C\uDDFA\uD83C\uDDFF": "1f1fa-1f1ff",
    "\uD83C\uDDFA\uD83C\uDDFE": "1f1fa-1f1fe",
    "\uD83C\uDDFA\uD83C\uDDF8": "1f1fa-1f1f8",
    "\uD83C\uDDFA\uD83C\uDDF2": "1f1fa-1f1f2",
    "\uD83C\uDDFA\uD83C\uDDEC": "1f1fa-1f1ec",
    "\uD83C\uDDFA\uD83C\uDDE6": "1f1fa-1f1e6",
    "\uD83C\uDDF9\uD83C\uDDFF": "1f1f9-1f1ff",
    "\uD83C\uDDF9\uD83C\uDDFC": "1f1f9-1f1fc",
    "\uD83C\uDDF9\uD83C\uDDFB": "1f1f9-1f1fb",
    "\uD83C\uDDF9\uD83C\uDDF9": "1f1f9-1f1f9",
    "\uD83C\uDDF9\uD83C\uDDF7": "1f1f9-1f1f7",
    "\uD83C\uDDF9\uD83C\uDDF4": "1f1f9-1f1f4",
    "\uD83C\uDDF9\uD83C\uDDF3": "1f1f9-1f1f3",
    "\uD83C\uDDF9\uD83C\uDDF2": "1f1f9-1f1f2",
    "\uD83C\uDDF9\uD83C\uDDF1": "1f1f9-1f1f1",
    "\uD83C\uDDF9\uD83C\uDDF0": "1f1f9-1f1f0",
    "\uD83C\uDDF9\uD83C\uDDEF": "1f1f9-1f1ef",
    "\uD83C\uDDF9\uD83C\uDDED": "1f1f9-1f1ed",
    "\uD83C\uDDF9\uD83C\uDDEC": "1f1f9-1f1ec",
    "\uD83C\uDDF9\uD83C\uDDEB": "1f1f9-1f1eb",
    "\uD83C\uDDF9\uD83C\uDDE9": "1f1f9-1f1e9",
    "\uD83C\uDDF9\uD83C\uDDE8": "1f1f9-1f1e8",
    "\uD83C\uDDF9\uD83C\uDDE6": "1f1f9-1f1e6",
    "\uD83C\uDDF8\uD83C\uDDFF": "1f1f8-1f1ff",
    "\uD83C\uDDF8\uD83C\uDDFE": "1f1f8-1f1fe",
    "\uD83C\uDDF8\uD83C\uDDFD": "1f1f8-1f1fd",
    "\uD83C\uDDF8\uD83C\uDDFB": "1f1f8-1f1fb",
    "\uD83C\uDDF8\uD83C\uDDF9": "1f1f8-1f1f9",
    "\uD83C\uDDF8\uD83C\uDDF8": "1f1f8-1f1f8",
    "\uD83C\uDDF8\uD83C\uDDF7": "1f1f8-1f1f7",
    "\uD83C\uDDF8\uD83C\uDDF4": "1f1f8-1f1f4",
    "\uD83C\uDDF8\uD83C\uDDF3": "1f1f8-1f1f3",
    "\uD83C\uDDF8\uD83C\uDDF2": "1f1f8-1f1f2",
    "\uD83C\uDDF8\uD83C\uDDF1": "1f1f8-1f1f1",
    "\uD83C\uDDF8\uD83C\uDDF0": "1f1f8-1f1f0",
    "\uD83C\uDDF8\uD83C\uDDEF": "1f1f8-1f1ef",
    "\uD83C\uDDF8\uD83C\uDDEE": "1f1f8-1f1ee",
    "\uD83C\uDDF8\uD83C\uDDED": "1f1f8-1f1ed",
    "\uD83C\uDDF8\uD83C\uDDEC": "1f1f8-1f1ec",
    "\uD83C\uDDF8\uD83C\uDDEA": "1f1f8-1f1ea",
    "\uD83C\uDDF8\uD83C\uDDE9": "1f1f8-1f1e9",
    "\uD83C\uDDF8\uD83C\uDDE8": "1f1f8-1f1e8",
    "\uD83C\uDDF8\uD83C\uDDE7": "1f1f8-1f1e7",
    "\uD83C\uDDF8\uD83C\uDDE6": "1f1f8-1f1e6",
    "\uD83C\uDDF7\uD83C\uDDFC": "1f1f7-1f1fc",
    "\uD83C\uDDF7\uD83C\uDDFA": "1f1f7-1f1fa",
    "\uD83C\uDDF7\uD83C\uDDF8": "1f1f7-1f1f8",
    "\uD83C\uDDF7\uD83C\uDDF4": "1f1f7-1f1f4",
    "\uD83C\uDDF7\uD83C\uDDEA": "1f1f7-1f1ea",
    "\uD83C\uDDF6\uD83C\uDDE6": "1f1f6-1f1e6",
    "\uD83C\uDDF5\uD83C\uDDFE": "1f1f5-1f1fe",
    "\uD83C\uDDF5\uD83C\uDDFC": "1f1f5-1f1fc",
    "\uD83C\uDDF5\uD83C\uDDF9": "1f1f5-1f1f9",
    "\uD83C\uDDF5\uD83C\uDDF8": "1f1f5-1f1f8",
    "\uD83C\uDDF5\uD83C\uDDF7": "1f1f5-1f1f7",
    "\uD83C\uDDF5\uD83C\uDDF3": "1f1f5-1f1f3",
    "\uD83C\uDDF5\uD83C\uDDF2": "1f1f5-1f1f2",
    "\uD83C\uDDF5\uD83C\uDDF1": "1f1f5-1f1f1",
    "\uD83C\uDDF5\uD83C\uDDF0": "1f1f5-1f1f0",
    "\uD83C\uDDF5\uD83C\uDDED": "1f1f5-1f1ed",
    "\uD83C\uDDF5\uD83C\uDDEC": "1f1f5-1f1ec",
    "\uD83C\uDDF5\uD83C\uDDEB": "1f1f5-1f1eb",
    "\uD83C\uDDF5\uD83C\uDDEA": "1f1f5-1f1ea",
    "\uD83C\uDDF5\uD83C\uDDE6": "1f1f5-1f1e6",
    "\uD83C\uDDF4\uD83C\uDDF2": "1f1f4-1f1f2",
    "\uD83C\uDDF3\uD83C\uDDFF": "1f1f3-1f1ff",
    "\uD83C\uDDF3\uD83C\uDDFA": "1f1f3-1f1fa",
    "\uD83C\uDDF3\uD83C\uDDF7": "1f1f3-1f1f7",
    "\uD83C\uDDF3\uD83C\uDDF5": "1f1f3-1f1f5",
    "\uD83C\uDDF3\uD83C\uDDF4": "1f1f3-1f1f4",
    "\uD83C\uDDF3\uD83C\uDDF1": "1f1f3-1f1f1",
    "\uD83C\uDDF3\uD83C\uDDEE": "1f1f3-1f1ee",
    "\uD83C\uDDF3\uD83C\uDDEC": "1f1f3-1f1ec",
    "\uD83C\uDDF3\uD83C\uDDEB": "1f1f3-1f1eb",
    "\uD83C\uDDF3\uD83C\uDDEA": "1f1f3-1f1ea",
    "\uD83C\uDDF3\uD83C\uDDE8": "1f1f3-1f1e8",
    "\uD83C\uDDF3\uD83C\uDDE6": "1f1f3-1f1e6",
    "\uD83C\uDDF2\uD83C\uDDFF": "1f1f2-1f1ff",
    "\uD83C\uDDF2\uD83C\uDDFE": "1f1f2-1f1fe",
    "\uD83C\uDDF2\uD83C\uDDFD": "1f1f2-1f1fd",
    "\uD83C\uDDF2\uD83C\uDDFC": "1f1f2-1f1fc",
    "\uD83C\uDDF2\uD83C\uDDFB": "1f1f2-1f1fb",
    "\uD83C\uDDF2\uD83C\uDDFA": "1f1f2-1f1fa",
    "\uD83C\uDDF2\uD83C\uDDF9": "1f1f2-1f1f9",
    "\uD83C\uDDF2\uD83C\uDDF8": "1f1f2-1f1f8",
    "\uD83C\uDDF2\uD83C\uDDF7": "1f1f2-1f1f7",
    "\uD83C\uDDF2\uD83C\uDDF6": "1f1f2-1f1f6",
    "\uD83C\uDDF2\uD83C\uDDF5": "1f1f2-1f1f5",
    "\uD83C\uDDF2\uD83C\uDDF4": "1f1f2-1f1f4",
    "\uD83C\uDDF2\uD83C\uDDF3": "1f1f2-1f1f3",
    "\uD83C\uDDF2\uD83C\uDDF2": "1f1f2-1f1f2",
    "\uD83C\uDDF2\uD83C\uDDF1": "1f1f2-1f1f1",
    "\uD83C\uDDF2\uD83C\uDDF0": "1f1f2-1f1f0",
    "\uD83C\uDDF2\uD83C\uDDED": "1f1f2-1f1ed",
    "\uD83C\uDDF2\uD83C\uDDEC": "1f1f2-1f1ec",
    "\uD83C\uDDF2\uD83C\uDDEB": "1f1f2-1f1eb",
    "\uD83C\uDDF2\uD83C\uDDEA": "1f1f2-1f1ea",
    "\uD83C\uDDF2\uD83C\uDDE9": "1f1f2-1f1e9",
    "\uD83C\uDDF2\uD83C\uDDE8": "1f1f2-1f1e8",
    "\uD83C\uDDF2\uD83C\uDDE6": "1f1f2-1f1e6",
    "\uD83C\uDDF1\uD83C\uDDFE": "1f1f1-1f1fe",
    "\uD83C\uDDF1\uD83C\uDDFB": "1f1f1-1f1fb",
    "\uD83C\uDDF1\uD83C\uDDFA": "1f1f1-1f1fa",
    "\uD83C\uDDF1\uD83C\uDDF9": "1f1f1-1f1f9",
    "\uD83C\uDDF1\uD83C\uDDF8": "1f1f1-1f1f8",
    "\uD83C\uDDF1\uD83C\uDDF7": "1f1f1-1f1f7",
    "\uD83C\uDDF1\uD83C\uDDF0": "1f1f1-1f1f0",
    "\uD83C\uDDF1\uD83C\uDDEE": "1f1f1-1f1ee",
    "\uD83C\uDDF1\uD83C\uDDE8": "1f1f1-1f1e8",
    "\uD83C\uDDF1\uD83C\uDDE7": "1f1f1-1f1e7",
    "\uD83C\uDDF1\uD83C\uDDE6": "1f1f1-1f1e6",
    "\uD83C\uDDF0\uD83C\uDDFF": "1f1f0-1f1ff",
    "\uD83C\uDDF0\uD83C\uDDFE": "1f1f0-1f1fe",
    "\uD83C\uDDF0\uD83C\uDDFC": "1f1f0-1f1fc",
    "\uD83C\uDDF0\uD83C\uDDF7": "1f1f0-1f1f7",
    "\uD83C\uDDF0\uD83C\uDDF5": "1f1f0-1f1f5",
    "\uD83C\uDDF0\uD83C\uDDF3": "1f1f0-1f1f3",
    "\uD83C\uDDF0\uD83C\uDDF2": "1f1f0-1f1f2",
    "\uD83C\uDDF0\uD83C\uDDEE": "1f1f0-1f1ee",
    "\uD83C\uDDF0\uD83C\uDDED": "1f1f0-1f1ed",
    "\uD83C\uDDF0\uD83C\uDDEC": "1f1f0-1f1ec",
    "\uD83C\uDDF0\uD83C\uDDEA": "1f1f0-1f1ea",
    "\uD83C\uDDEF\uD83C\uDDF5": "1f1ef-1f1f5",
    "\uD83C\uDDEF\uD83C\uDDF4": "1f1ef-1f1f4",
    "\uD83C\uDDEF\uD83C\uDDF2": "1f1ef-1f1f2",
    "\uD83C\uDDEF\uD83C\uDDEA": "1f1ef-1f1ea",
    "\uD83C\uDDEE\uD83C\uDDF9": "1f1ee-1f1f9",
    "\uD83C\uDDEE\uD83C\uDDF8": "1f1ee-1f1f8",
    "\uD83C\uDDEE\uD83C\uDDF7": "1f1ee-1f1f7",
    "\uD83C\uDDEE\uD83C\uDDF6": "1f1ee-1f1f6",
    "\uD83C\uDDEE\uD83C\uDDF4": "1f1ee-1f1f4",
    "\uD83C\uDDEE\uD83C\uDDF3": "1f1ee-1f1f3",
    "\uD83C\uDDEE\uD83C\uDDF2": "1f1ee-1f1f2",
    "\uD83C\uDDEE\uD83C\uDDF1": "1f1ee-1f1f1",
    "\uD83C\uDDEE\uD83C\uDDEA": "1f1ee-1f1ea",
    "\uD83C\uDDEE\uD83C\uDDE9": "1f1ee-1f1e9",
    "\uD83C\uDDEE\uD83C\uDDE8": "1f1ee-1f1e8",
    "\uD83C\uDDED\uD83C\uDDFA": "1f1ed-1f1fa",
    "\uD83C\uDDED\uD83C\uDDF9": "1f1ed-1f1f9",
    "\uD83C\uDDED\uD83C\uDDF7": "1f1ed-1f1f7",
    "\uD83C\uDDED\uD83C\uDDF3": "1f1ed-1f1f3",
    "\uD83C\uDDED\uD83C\uDDF2": "1f1ed-1f1f2",
    "\uD83C\uDDED\uD83C\uDDF0": "1f1ed-1f1f0",
    "\uD83C\uDDEC\uD83C\uDDFE": "1f1ec-1f1fe",
    "\uD83C\uDDEC\uD83C\uDDFC": "1f1ec-1f1fc",
    "\uD83C\uDDEC\uD83C\uDDFA": "1f1ec-1f1fa",
    "\uD83C\uDDEC\uD83C\uDDF9": "1f1ec-1f1f9",
    "\uD83C\uDDEC\uD83C\uDDF8": "1f1ec-1f1f8",
    "\uD83C\uDDEC\uD83C\uDDF7": "1f1ec-1f1f7",
    "\uD83C\uDDEC\uD83C\uDDF6": "1f1ec-1f1f6",
    "\uD83C\uDDEC\uD83C\uDDF5": "1f1ec-1f1f5",
    "\uD83C\uDDEC\uD83C\uDDF3": "1f1ec-1f1f3",
    "\uD83C\uDDEC\uD83C\uDDF2": "1f1ec-1f1f2",
    "\uD83C\uDDEC\uD83C\uDDF1": "1f1ec-1f1f1",
    "\uD83C\uDDEC\uD83C\uDDEE": "1f1ec-1f1ee",
    "\uD83C\uDDEC\uD83C\uDDED": "1f1ec-1f1ed",
    "\uD83C\uDDEC\uD83C\uDDEC": "1f1ec-1f1ec",
    "\uD83C\uDDEC\uD83C\uDDEB": "1f1ec-1f1eb",
    "\uD83C\uDDEC\uD83C\uDDEA": "1f1ec-1f1ea",
    "\uD83C\uDDEC\uD83C\uDDE9": "1f1ec-1f1e9",
    "\uD83C\uDDEC\uD83C\uDDE7": "1f1ec-1f1e7",
    "\uD83C\uDDEC\uD83C\uDDE6": "1f1ec-1f1e6",
    "\uD83C\uDDEB\uD83C\uDDF7": "1f1eb-1f1f7",
    "\uD83C\uDDEB\uD83C\uDDF4": "1f1eb-1f1f4",
    "\uD83C\uDDEB\uD83C\uDDF2": "1f1eb-1f1f2",
    "\uD83C\uDDEB\uD83C\uDDF0": "1f1eb-1f1f0",
    "\uD83C\uDDEB\uD83C\uDDEF": "1f1eb-1f1ef",
    "\uD83C\uDDEB\uD83C\uDDEE": "1f1eb-1f1ee",
    "\uD83C\uDDEA\uD83C\uDDFA": "1f1ea-1f1fa",
    "\uD83C\uDDEA\uD83C\uDDF9": "1f1ea-1f1f9",
    "\uD83C\uDDEA\uD83C\uDDF8": "1f1ea-1f1f8",
    "\uD83C\uDDEA\uD83C\uDDF7": "1f1ea-1f1f7",
    "\uD83C\uDDEA\uD83C\uDDED": "1f1ea-1f1ed",
    "\uD83C\uDDEA\uD83C\uDDEC": "1f1ea-1f1ec",
    "\uD83C\uDDEA\uD83C\uDDEA": "1f1ea-1f1ea",
    "\uD83C\uDDEA\uD83C\uDDE8": "1f1ea-1f1e8",
    "\uD83C\uDDEA\uD83C\uDDE6": "1f1ea-1f1e6",
    "\uD83C\uDDE9\uD83C\uDDFF": "1f1e9-1f1ff",
    "\uD83C\uDDE9\uD83C\uDDF4": "1f1e9-1f1f4",
    "\uD83C\uDDE9\uD83C\uDDF2": "1f1e9-1f1f2",
    "\uD83C\uDDE9\uD83C\uDDF0": "1f1e9-1f1f0",
    "\uD83C\uDDE9\uD83C\uDDEF": "1f1e9-1f1ef",
    "\uD83C\uDDE9\uD83C\uDDEC": "1f1e9-1f1ec",
    "\uD83C\uDDE9\uD83C\uDDEA": "1f1e9-1f1ea",
    "\uD83C\uDDE8\uD83C\uDDFF": "1f1e8-1f1ff",
    "\uD83C\uDDE8\uD83C\uDDFE": "1f1e8-1f1fe",
    "\uD83C\uDDE8\uD83C\uDDFD": "1f1e8-1f1fd",
    "\uD83C\uDDE8\uD83C\uDDFC": "1f1e8-1f1fc",
    "\uD83C\uDDE8\uD83C\uDDFB": "1f1e8-1f1fb",
    "\uD83C\uDDE8\uD83C\uDDFA": "1f1e8-1f1fa",
    "\uD83C\uDDE8\uD83C\uDDF7": "1f1e8-1f1f7",
    "\uD83C\uDDE8\uD83C\uDDF5": "1f1e8-1f1f5",
    "\uD83C\uDDE8\uD83C\uDDF4": "1f1e8-1f1f4",
    "\uD83C\uDDE8\uD83C\uDDF3": "1f1e8-1f1f3",
    "\uD83C\uDDE8\uD83C\uDDF2": "1f1e8-1f1f2",
    "\uD83C\uDDE8\uD83C\uDDF1": "1f1e8-1f1f1",
    "\uD83C\uDDE8\uD83C\uDDF0": "1f1e8-1f1f0",
    "\uD83C\uDDE8\uD83C\uDDEE": "1f1e8-1f1ee",
    "\uD83C\uDDE8\uD83C\uDDED": "1f1e8-1f1ed",
    "\uD83C\uDDE8\uD83C\uDDEC": "1f1e8-1f1ec",
    "\uD83C\uDDE8\uD83C\uDDEB": "1f1e8-1f1eb",
    "\uD83C\uDDE8\uD83C\uDDE9": "1f1e8-1f1e9",
    "\uD83C\uDDE8\uD83C\uDDE8": "1f1e8-1f1e8",
    "\uD83C\uDDE8\uD83C\uDDE6": "1f1e8-1f1e6",
    "\uD83C\uDDE7\uD83C\uDDFF": "1f1e7-1f1ff",
    "\uD83C\uDDE7\uD83C\uDDFE": "1f1e7-1f1fe",
    "\uD83C\uDDE7\uD83C\uDDFC": "1f1e7-1f1fc",
    "\uD83C\uDDE7\uD83C\uDDFB": "1f1e7-1f1fb",
    "\uD83C\uDDE7\uD83C\uDDF9": "1f1e7-1f1f9",
    "\uD83C\uDDE7\uD83C\uDDF8": "1f1e7-1f1f8",
    "\uD83C\uDDE7\uD83C\uDDF7": "1f1e7-1f1f7",
    "\uD83C\uDDE7\uD83C\uDDF6": "1f1e7-1f1f6",
    "\uD83C\uDDE7\uD83C\uDDF4": "1f1e7-1f1f4",
    "\uD83C\uDDE7\uD83C\uDDF3": "1f1e7-1f1f3",
    "\uD83C\uDDE7\uD83C\uDDF2": "1f1e7-1f1f2",
    "\uD83C\uDDE7\uD83C\uDDF1": "1f1e7-1f1f1",
    "\uD83C\uDDE7\uD83C\uDDEF": "1f1e7-1f1ef",
    "\uD83C\uDDE7\uD83C\uDDEE": "1f1e7-1f1ee",
    "\uD83C\uDDE7\uD83C\uDDED": "1f1e7-1f1ed",
    "\uD83C\uDDE7\uD83C\uDDEC": "1f1e7-1f1ec",
    "\uD83C\uDDE7\uD83C\uDDEB": "1f1e7-1f1eb",
    "\uD83C\uDDE7\uD83C\uDDEA": "1f1e7-1f1ea",
    "\uD83C\uDDE7\uD83C\uDDE9": "1f1e7-1f1e9",
    "\uD83C\uDDE7\uD83C\uDDE7": "1f1e7-1f1e7",
    "\uD83C\uDDE7\uD83C\uDDE6": "1f1e7-1f1e6",
    "\uD83C\uDDE6\uD83C\uDDFF": "1f1e6-1f1ff",
    "\uD83C\uDDE6\uD83C\uDDFD": "1f1e6-1f1fd",
    "\uD83C\uDDE6\uD83C\uDDFC": "1f1e6-1f1fc",
    "\uD83C\uDDE6\uD83C\uDDFA": "1f1e6-1f1fa",
    "\uD83C\uDDE6\uD83C\uDDF9": "1f1e6-1f1f9",
    "\uD83C\uDDE6\uD83C\uDDF8": "1f1e6-1f1f8",
    "\uD83C\uDDE6\uD83C\uDDF7": "1f1e6-1f1f7",
    "\uD83C\uDDE6\uD83C\uDDF6": "1f1e6-1f1f6",
    "\uD83C\uDDE6\uD83C\uDDF4": "1f1e6-1f1f4",
    "\uD83C\uDDE6\uD83C\uDDF2": "1f1e6-1f1f2",
    "\uD83C\uDDE6\uD83C\uDDF1": "1f1e6-1f1f1",
    "\uD83C\uDDE6\uD83C\uDDEE": "1f1e6-1f1ee",
    "\uD83C\uDDE6\uD83C\uDDEC": "1f1e6-1f1ec",
    "\uD83C\uDDE6\uD83C\uDDEB": "1f1e6-1f1eb",
    "\uD83C\uDDE6\uD83C\uDDEA": "1f1e6-1f1ea",
    "\uD83C\uDDE6\uD83C\uDDE9": "1f1e6-1f1e9",
    "\uD83C\uDDE6\uD83C\uDDE8": "1f1e6-1f1e8",
    "\uD83C\uDC04\uFE0F": "1f004",
    "\uD83C\uDD7F\uFE0F": "1f17f",
    "\uD83C\uDE02\uFE0F": "1f202",
    "\uD83C\uDE1A\uFE0F": "1f21a",
    "\uD83C\uDE2F\uFE0F": "1f22f",
    "\uD83C\uDE37\uFE0F": "1f237",
    "\uD83C\uDF9E\uFE0F": "1f39e",
    "\uD83C\uDF9F\uFE0F": "1f39f",
    "\uD83C\uDFCB\uFE0F": "1f3cb",
    "\uD83C\uDFCC\uFE0F": "1f3cc",
    "\uD83C\uDFCD\uFE0F": "1f3cd",
    "\uD83C\uDFCE\uFE0F": "1f3ce",
    "\uD83C\uDF96\uFE0F": "1f396",
    "\uD83C\uDF97\uFE0F": "1f397",
    "\uD83C\uDF36\uFE0F": "1f336",
    "\uD83C\uDF27\uFE0F": "1f327",
    "\uD83C\uDF28\uFE0F": "1f328",
    "\uD83C\uDF29\uFE0F": "1f329",
    "\uD83C\uDF2A\uFE0F": "1f32a",
    "\uD83C\uDF2B\uFE0F": "1f32b",
    "\uD83C\uDF2C\uFE0F": "1f32c",
    "\uD83D\uDC3F\uFE0F": "1f43f",
    "\uD83D\uDD77\uFE0F": "1f577",
    "\uD83D\uDD78\uFE0F": "1f578",
    "\uD83C\uDF21\uFE0F": "1f321",
    "\uD83C\uDF99\uFE0F": "1f399",
    "\uD83C\uDF9A\uFE0F": "1f39a",
    "\uD83C\uDF9B\uFE0F": "1f39b",
    "\uD83C\uDFF3\uFE0F": "1f3f3",
    "\uD83C\uDFF5\uFE0F": "1f3f5",
    "\uD83C\uDFF7\uFE0F": "1f3f7",
    "\uD83D\uDCFD\uFE0F": "1f4fd",
    "\uD83D\uDD49\uFE0F": "1f549",
    "\uD83D\uDD4A\uFE0F": "1f54a",
    "\uD83D\uDD6F\uFE0F": "1f56f",
    "\uD83D\uDD70\uFE0F": "1f570",
    "\uD83D\uDD73\uFE0F": "1f573",
    "\uD83D\uDD76\uFE0F": "1f576",
    "\uD83D\uDD79\uFE0F": "1f579",
    "\uD83D\uDD87\uFE0F": "1f587",
    "\uD83D\uDD8A\uFE0F": "1f58a",
    "\uD83D\uDD8B\uFE0F": "1f58b",
    "\uD83D\uDD8C\uFE0F": "1f58c",
    "\uD83D\uDD8D\uFE0F": "1f58d",
    "\uD83D\uDDA5\uFE0F": "1f5a5",
    "\uD83D\uDDA8\uFE0F": "1f5a8",
    "\uD83D\uDDB2\uFE0F": "1f5b2",
    "\uD83D\uDDBC\uFE0F": "1f5bc",
    "\uD83D\uDDC2\uFE0F": "1f5c2",
    "\uD83D\uDDC3\uFE0F": "1f5c3",
    "\uD83D\uDDC4\uFE0F": "1f5c4",
    "\uD83D\uDDD1\uFE0F": "1f5d1",
    "\uD83D\uDDD2\uFE0F": "1f5d2",
    "\uD83D\uDDD3\uFE0F": "1f5d3",
    "\uD83D\uDDDC\uFE0F": "1f5dc",
    "\uD83D\uDDDD\uFE0F": "1f5dd",
    "\uD83D\uDDDE\uFE0F": "1f5de",
    "\uD83D\uDDE1\uFE0F": "1f5e1",
    "\uD83D\uDDE3\uFE0F": "1f5e3",
    "\uD83D\uDDEF\uFE0F": "1f5ef",
    "\uD83D\uDDF3\uFE0F": "1f5f3",
    "\uD83D\uDDFA\uFE0F": "1f5fa",
    "\uD83D\uDEE0\uFE0F": "1f6e0",
    "\uD83D\uDEE1\uFE0F": "1f6e1",
    "\uD83D\uDEE2\uFE0F": "1f6e2",
    "\uD83D\uDEF0\uFE0F": "1f6f0",
    "\uD83C\uDF7D\uFE0F": "1f37d",
    "\uD83D\uDC41\uFE0F": "1f441",
    "\uD83D\uDD74\uFE0F": "1f574",
    "\uD83D\uDD75\uFE0F": "1f575",
    "\uD83D\uDD90\uFE0F": "1f590",
    "\uD83C\uDFD4\uFE0F": "1f3d4",
    "\uD83C\uDFD5\uFE0F": "1f3d5",
    "\uD83C\uDFD6\uFE0F": "1f3d6",
    "\uD83C\uDFD7\uFE0F": "1f3d7",
    "\uD83C\uDFD8\uFE0F": "1f3d8",
    "\uD83C\uDFD9\uFE0F": "1f3d9",
    "\uD83C\uDFDA\uFE0F": "1f3da",
    "\uD83C\uDFDB\uFE0F": "1f3db",
    "\uD83C\uDFDC\uFE0F": "1f3dc",
    "\uD83C\uDFDD\uFE0F": "1f3dd",
    "\uD83C\uDFDE\uFE0F": "1f3de",
    "\uD83C\uDFDF\uFE0F": "1f3df",
    "\uD83D\uDECB\uFE0F": "1f6cb",
    "\uD83D\uDECD\uFE0F": "1f6cd",
    "\uD83D\uDECE\uFE0F": "1f6ce",
    "\uD83D\uDECF\uFE0F": "1f6cf",
    "\uD83D\uDEE3\uFE0F": "1f6e3",
    "\uD83D\uDEE4\uFE0F": "1f6e4",
    "\uD83D\uDEE5\uFE0F": "1f6e5",
    "\uD83D\uDEE9\uFE0F": "1f6e9",
    "\uD83D\uDEF3\uFE0F": "1f6f3",
    "\uD83C\uDF24\uFE0F": "1f324",
    "\uD83C\uDF25\uFE0F": "1f325",
    "\uD83C\uDF26\uFE0F": "1f326",
    "\uD83D\uDDB1\uFE0F": "1f5b1",
    "\u261D\uD83C\uDFFB": "261d-1f3fb",
    "\u261D\uD83C\uDFFC": "261d-1f3fc",
    "\u261D\uD83C\uDFFD": "261d-1f3fd",
    "\u261D\uD83C\uDFFE": "261d-1f3fe",
    "\u261D\uD83C\uDFFF": "261d-1f3ff",
    "\u270C\uD83C\uDFFB": "270c-1f3fb",
    "\u270C\uD83C\uDFFC": "270c-1f3fc",
    "\u270C\uD83C\uDFFD": "270c-1f3fd",
    "\u270C\uD83C\uDFFE": "270c-1f3fe",
    "\u270C\uD83C\uDFFF": "270c-1f3ff",
    "\u270A\uD83C\uDFFB": "270a-1f3fb",
    "\u270A\uD83C\uDFFC": "270a-1f3fc",
    "\u270A\uD83C\uDFFD": "270a-1f3fd",
    "\u270A\uD83C\uDFFE": "270a-1f3fe",
    "\u270A\uD83C\uDFFF": "270a-1f3ff",
    "\u270B\uD83C\uDFFB": "270b-1f3fb",
    "\u270B\uD83C\uDFFC": "270b-1f3fc",
    "\u270B\uD83C\uDFFD": "270b-1f3fd",
    "\u270B\uD83C\uDFFE": "270b-1f3fe",
    "\u270B\uD83C\uDFFF": "270b-1f3ff",
    "\u270D\uD83C\uDFFB": "270d-1f3fb",
    "\u270D\uD83C\uDFFC": "270d-1f3fc",
    "\u270D\uD83C\uDFFD": "270d-1f3fd",
    "\u270D\uD83C\uDFFE": "270d-1f3fe",
    "\u270D\uD83C\uDFFF": "270d-1f3ff",
    "\u26F9\uD83C\uDFFB": "26f9-1f3fb",
    "\u26F9\uD83C\uDFFC": "26f9-1f3fc",
    "\u26F9\uD83C\uDFFD": "26f9-1f3fd",
    "\u26F9\uD83C\uDFFE": "26f9-1f3fe",
    "\u26F9\uD83C\uDFFF": "26f9-1f3ff",
    "\xA9\uFE0F": "00a9",
    "\xAE\uFE0F": "00ae",
    "\u203C\uFE0F": "203c",
    "\u2049\uFE0F": "2049",
    "\u2122\uFE0F": "2122",
    "\u2194\uFE0F": "2194",
    "\u2195\uFE0F": "2195",
    "\u2196\uFE0F": "2196",
    "\u2197\uFE0F": "2197",
    "\u2198\uFE0F": "2198",
    "\u2199\uFE0F": "2199",
    "\u21A9\uFE0F": "21a9",
    "\u21AA\uFE0F": "21aa",
    "\u231A\uFE0F": "231a",
    "\u231B\uFE0F": "231b",
    "\u24C2\uFE0F": "24c2",
    "\u25AA\uFE0F": "25aa",
    "\u25AB\uFE0F": "25ab",
    "\u25B6\uFE0F": "25b6",
    "\u25C0\uFE0F": "25c0",
    "\u25FB\uFE0F": "25fb",
    "\u25FC\uFE0F": "25fc",
    "\u25FD\uFE0F": "25fd",
    "\u25FE\uFE0F": "25fe",
    "\u2600\uFE0F": "2600",
    "\u2601\uFE0F": "2601",
    "\u260E\uFE0F": "260e",
    "\u2611\uFE0F": "2611",
    "\u2614\uFE0F": "2614",
    "\u2615\uFE0F": "2615",
    "\u261D\uFE0F": "261d",
    "\u263A\uFE0F": "263a",
    "\u2648\uFE0F": "2648",
    "\u2649\uFE0F": "2649",
    "\u264A\uFE0F": "264a",
    "\u264B\uFE0F": "264b",
    "\u264C\uFE0F": "264c",
    "\u264D\uFE0F": "264d",
    "\u264E\uFE0F": "264e",
    "\u264F\uFE0F": "264f",
    "\u2650\uFE0F": "2650",
    "\u2651\uFE0F": "2651",
    "\u2652\uFE0F": "2652",
    "\u2653\uFE0F": "2653",
    "\u2660\uFE0F": "2660",
    "\u2663\uFE0F": "2663",
    "\u2665\uFE0F": "2665",
    "\u2666\uFE0F": "2666",
    "\u2668\uFE0F": "2668",
    "\u267B\uFE0F": "267b",
    "\u267F\uFE0F": "267f",
    "\u2693\uFE0F": "2693",
    "\u26A0\uFE0F": "26a0",
    "\u26A1\uFE0F": "26a1",
    "\u26AA\uFE0F": "26aa",
    "\u26AB\uFE0F": "26ab",
    "\u26BD\uFE0F": "26bd",
    "\u26BE\uFE0F": "26be",
    "\u26C4\uFE0F": "26c4",
    "\u26C5\uFE0F": "26c5",
    "\u26D4\uFE0F": "26d4",
    "\u26EA\uFE0F": "26ea",
    "\u26F2\uFE0F": "26f2",
    "\u26F3\uFE0F": "26f3",
    "\u26F5\uFE0F": "26f5",
    "\u26FA\uFE0F": "26fa",
    "\u26FD\uFE0F": "26fd",
    "\u2702\uFE0F": "2702",
    "\u2708\uFE0F": "2708",
    "\u2709\uFE0F": "2709",
    "\u270C\uFE0F": "270c",
    "\u270F\uFE0F": "270f",
    "\u2712\uFE0F": "2712",
    "\u2714\uFE0F": "2714",
    "\u2716\uFE0F": "2716",
    "\u2733\uFE0F": "2733",
    "\u2734\uFE0F": "2734",
    "\u2744\uFE0F": "2744",
    "\u2747\uFE0F": "2747",
    "\u2757\uFE0F": "2757",
    "\u2764\uFE0F": "2764",
    "\u27A1\uFE0F": "27a1",
    "\u2934\uFE0F": "2934",
    "\u2935\uFE0F": "2935",
    "\u2B05\uFE0F": "2b05",
    "\u2B06\uFE0F": "2b06",
    "\u2B07\uFE0F": "2b07",
    "\u2B1B\uFE0F": "2b1b",
    "\u2B1C\uFE0F": "2b1c",
    "\u2B50\uFE0F": "2b50",
    "\u2B55\uFE0F": "2b55",
    "\u3030\uFE0F": "3030",
    "\u303D\uFE0F": "303d",
    "\u3297\uFE0F": "3297",
    "\u3299\uFE0F": "3299",
    "\u271D\uFE0F": "271d",
    "\u2328\uFE0F": "2328",
    "\u270D\uFE0F": "270d",
    "\u23ED\uFE0F": "23ed",
    "\u23EE\uFE0F": "23ee",
    "\u23EF\uFE0F": "23ef",
    "\u23F1\uFE0F": "23f1",
    "\u23F2\uFE0F": "23f2",
    "\u23F8\uFE0F": "23f8",
    "\u23F9\uFE0F": "23f9",
    "\u23FA\uFE0F": "23fa",
    "\u2602\uFE0F": "2602",
    "\u2603\uFE0F": "2603",
    "\u2604\uFE0F": "2604",
    "\u2618\uFE0F": "2618",
    "\u2620\uFE0F": "2620",
    "\u2622\uFE0F": "2622",
    "\u2623\uFE0F": "2623",
    "\u2626\uFE0F": "2626",
    "\u262A\uFE0F": "262a",
    "\u262E\uFE0F": "262e",
    "\u262F\uFE0F": "262f",
    "\u2638\uFE0F": "2638",
    "\u2639\uFE0F": "2639",
    "\u2692\uFE0F": "2692",
    "\u2694\uFE0F": "2694",
    "\u2696\uFE0F": "2696",
    "\u2697\uFE0F": "2697",
    "\u2699\uFE0F": "2699",
    "\u269B\uFE0F": "269b",
    "\u269C\uFE0F": "269c",
    "\u26B0\uFE0F": "26b0",
    "\u26B1\uFE0F": "26b1",
    "\u26C8\uFE0F": "26c8",
    "\u26CF\uFE0F": "26cf",
    "\u26D1\uFE0F": "26d1",
    "\u26D3\uFE0F": "26d3",
    "\u26E9\uFE0F": "26e9",
    "\u26F0\uFE0F": "26f0",
    "\u26F1\uFE0F": "26f1",
    "\u26F4\uFE0F": "26f4",
    "\u26F7\uFE0F": "26f7",
    "\u26F8\uFE0F": "26f8",
    "\u26F9\uFE0F": "26f9",
    "\u2721\uFE0F": "2721",
    "\u2763\uFE0F": "2763",
    "\uD83C\uDCCF": "1f0cf",
    "\uD83C\uDD70": "1f170",
    "\uD83C\uDD71": "1f171",
    "\uD83C\uDD7E": "1f17e",
    "\uD83C\uDD8E": "1f18e",
    "\uD83C\uDD91": "1f191",
    "\uD83C\uDD92": "1f192",
    "\uD83C\uDD93": "1f193",
    "\uD83C\uDD94": "1f194",
    "\uD83C\uDD95": "1f195",
    "\uD83C\uDD96": "1f196",
    "\uD83C\uDD97": "1f197",
    "\uD83C\uDD98": "1f198",
    "\uD83C\uDD99": "1f199",
    "\uD83C\uDD9A": "1f19a",
    "\uD83C\uDE01": "1f201",
    "\uD83C\uDE32": "1f232",
    "\uD83C\uDE33": "1f233",
    "\uD83C\uDE34": "1f234",
    "\uD83C\uDE35": "1f235",
    "\uD83C\uDE36": "1f236",
    "\uD83C\uDE38": "1f238",
    "\uD83C\uDE39": "1f239",
    "\uD83C\uDE3A": "1f23a",
    "\uD83C\uDE50": "1f250",
    "\uD83C\uDE51": "1f251",
    "\uD83C\uDF00": "1f300",
    "\uD83C\uDF01": "1f301",
    "\uD83C\uDF02": "1f302",
    "\uD83C\uDF03": "1f303",
    "\uD83C\uDF04": "1f304",
    "\uD83C\uDF05": "1f305",
    "\uD83C\uDF06": "1f306",
    "\uD83C\uDF07": "1f307",
    "\uD83C\uDF08": "1f308",
    "\uD83C\uDF09": "1f309",
    "\uD83C\uDF0A": "1f30a",
    "\uD83C\uDF0B": "1f30b",
    "\uD83C\uDF0C": "1f30c",
    "\uD83C\uDF0F": "1f30f",
    "\uD83C\uDF11": "1f311",
    "\uD83C\uDF13": "1f313",
    "\uD83C\uDF14": "1f314",
    "\uD83C\uDF15": "1f315",
    "\uD83C\uDF19": "1f319",
    "\uD83C\uDF1B": "1f31b",
    "\uD83C\uDF1F": "1f31f",
    "\uD83C\uDF20": "1f320",
    "\uD83C\uDF30": "1f330",
    "\uD83C\uDF31": "1f331",
    "\uD83C\uDF34": "1f334",
    "\uD83C\uDF35": "1f335",
    "\uD83C\uDF37": "1f337",
    "\uD83C\uDF38": "1f338",
    "\uD83C\uDF39": "1f339",
    "\uD83C\uDF3A": "1f33a",
    "\uD83C\uDF3B": "1f33b",
    "\uD83C\uDF3C": "1f33c",
    "\uD83C\uDF3D": "1f33d",
    "\uD83C\uDF3E": "1f33e",
    "\uD83C\uDF3F": "1f33f",
    "\uD83C\uDF40": "1f340",
    "\uD83C\uDF41": "1f341",
    "\uD83C\uDF42": "1f342",
    "\uD83C\uDF43": "1f343",
    "\uD83C\uDF44": "1f344",
    "\uD83C\uDF45": "1f345",
    "\uD83C\uDF46": "1f346",
    "\uD83C\uDF47": "1f347",
    "\uD83C\uDF48": "1f348",
    "\uD83C\uDF49": "1f349",
    "\uD83C\uDF4A": "1f34a",
    "\uD83C\uDF4C": "1f34c",
    "\uD83C\uDF4D": "1f34d",
    "\uD83C\uDF4E": "1f34e",
    "\uD83C\uDF4F": "1f34f",
    "\uD83C\uDF51": "1f351",
    "\uD83C\uDF52": "1f352",
    "\uD83C\uDF53": "1f353",
    "\uD83C\uDF54": "1f354",
    "\uD83C\uDF55": "1f355",
    "\uD83C\uDF56": "1f356",
    "\uD83C\uDF57": "1f357",
    "\uD83C\uDF58": "1f358",
    "\uD83C\uDF59": "1f359",
    "\uD83C\uDF5A": "1f35a",
    "\uD83C\uDF5B": "1f35b",
    "\uD83C\uDF5C": "1f35c",
    "\uD83C\uDF5D": "1f35d",
    "\uD83C\uDF5E": "1f35e",
    "\uD83C\uDF5F": "1f35f",
    "\uD83C\uDF60": "1f360",
    "\uD83C\uDF61": "1f361",
    "\uD83C\uDF62": "1f362",
    "\uD83C\uDF63": "1f363",
    "\uD83C\uDF64": "1f364",
    "\uD83C\uDF65": "1f365",
    "\uD83C\uDF66": "1f366",
    "\uD83C\uDF67": "1f367",
    "\uD83C\uDF68": "1f368",
    "\uD83C\uDF69": "1f369",
    "\uD83C\uDF6A": "1f36a",
    "\uD83C\uDF6B": "1f36b",
    "\uD83C\uDF6C": "1f36c",
    "\uD83C\uDF6D": "1f36d",
    "\uD83C\uDF6E": "1f36e",
    "\uD83C\uDF6F": "1f36f",
    "\uD83C\uDF70": "1f370",
    "\uD83C\uDF71": "1f371",
    "\uD83C\uDF72": "1f372",
    "\uD83C\uDF73": "1f373",
    "\uD83C\uDF74": "1f374",
    "\uD83C\uDF75": "1f375",
    "\uD83C\uDF76": "1f376",
    "\uD83C\uDF77": "1f377",
    "\uD83C\uDF78": "1f378",
    "\uD83C\uDF79": "1f379",
    "\uD83C\uDF7A": "1f37a",
    "\uD83C\uDF7B": "1f37b",
    "\uD83C\uDF80": "1f380",
    "\uD83C\uDF81": "1f381",
    "\uD83C\uDF82": "1f382",
    "\uD83C\uDF83": "1f383",
    "\uD83C\uDF84": "1f384",
    "\uD83C\uDF85": "1f385",
    "\uD83C\uDF86": "1f386",
    "\uD83C\uDF87": "1f387",
    "\uD83C\uDF88": "1f388",
    "\uD83C\uDF89": "1f389",
    "\uD83C\uDF8A": "1f38a",
    "\uD83C\uDF8B": "1f38b",
    "\uD83C\uDF8C": "1f38c",
    "\uD83C\uDF8D": "1f38d",
    "\uD83C\uDF8E": "1f38e",
    "\uD83C\uDF8F": "1f38f",
    "\uD83C\uDF90": "1f390",
    "\uD83C\uDF91": "1f391",
    "\uD83C\uDF92": "1f392",
    "\uD83C\uDF93": "1f393",
    "\uD83C\uDFA0": "1f3a0",
    "\uD83C\uDFA1": "1f3a1",
    "\uD83C\uDFA2": "1f3a2",
    "\uD83C\uDFA3": "1f3a3",
    "\uD83C\uDFA4": "1f3a4",
    "\uD83C\uDFA5": "1f3a5",
    "\uD83C\uDFA6": "1f3a6",
    "\uD83C\uDFA7": "1f3a7",
    "\uD83C\uDFA8": "1f3a8",
    "\uD83C\uDFA9": "1f3a9",
    "\uD83C\uDFAA": "1f3aa",
    "\uD83C\uDFAB": "1f3ab",
    "\uD83C\uDFAC": "1f3ac",
    "\uD83C\uDFAD": "1f3ad",
    "\uD83C\uDFAE": "1f3ae",
    "\uD83C\uDFAF": "1f3af",
    "\uD83C\uDFB0": "1f3b0",
    "\uD83C\uDFB1": "1f3b1",
    "\uD83C\uDFB2": "1f3b2",
    "\uD83C\uDFB3": "1f3b3",
    "\uD83C\uDFB4": "1f3b4",
    "\uD83C\uDFB5": "1f3b5",
    "\uD83C\uDFB6": "1f3b6",
    "\uD83C\uDFB7": "1f3b7",
    "\uD83C\uDFB8": "1f3b8",
    "\uD83C\uDFB9": "1f3b9",
    "\uD83C\uDFBA": "1f3ba",
    "\uD83C\uDFBB": "1f3bb",
    "\uD83C\uDFBC": "1f3bc",
    "\uD83C\uDFBD": "1f3bd",
    "\uD83C\uDFBE": "1f3be",
    "\uD83C\uDFBF": "1f3bf",
    "\uD83C\uDFC0": "1f3c0",
    "\uD83C\uDFC1": "1f3c1",
    "\uD83C\uDFC2": "1f3c2",
    "\uD83C\uDFC3": "1f3c3",
    "\uD83C\uDFC4": "1f3c4",
    "\uD83C\uDFC6": "1f3c6",
    "\uD83C\uDFC8": "1f3c8",
    "\uD83C\uDFCA": "1f3ca",
    "\uD83C\uDFE0": "1f3e0",
    "\uD83C\uDFE1": "1f3e1",
    "\uD83C\uDFE2": "1f3e2",
    "\uD83C\uDFE3": "1f3e3",
    "\uD83C\uDFE5": "1f3e5",
    "\uD83C\uDFE6": "1f3e6",
    "\uD83C\uDFE7": "1f3e7",
    "\uD83C\uDFE8": "1f3e8",
    "\uD83C\uDFE9": "1f3e9",
    "\uD83C\uDFEA": "1f3ea",
    "\uD83C\uDFEB": "1f3eb",
    "\uD83C\uDFEC": "1f3ec",
    "\uD83C\uDFED": "1f3ed",
    "\uD83C\uDFEE": "1f3ee",
    "\uD83C\uDFEF": "1f3ef",
    "\uD83C\uDFF0": "1f3f0",
    "\uD83D\uDC0C": "1f40c",
    "\uD83D\uDC0D": "1f40d",
    "\uD83D\uDC0E": "1f40e",
    "\uD83D\uDC11": "1f411",
    "\uD83D\uDC12": "1f412",
    "\uD83D\uDC14": "1f414",
    "\uD83D\uDC17": "1f417",
    "\uD83D\uDC18": "1f418",
    "\uD83D\uDC19": "1f419",
    "\uD83D\uDC1A": "1f41a",
    "\uD83D\uDC1B": "1f41b",
    "\uD83D\uDC1C": "1f41c",
    "\uD83D\uDC1D": "1f41d",
    "\uD83D\uDC1E": "1f41e",
    "\uD83D\uDC1F": "1f41f",
    "\uD83D\uDC20": "1f420",
    "\uD83D\uDC21": "1f421",
    "\uD83D\uDC22": "1f422",
    "\uD83D\uDC23": "1f423",
    "\uD83D\uDC24": "1f424",
    "\uD83D\uDC25": "1f425",
    "\uD83D\uDC26": "1f426",
    "\uD83D\uDC27": "1f427",
    "\uD83D\uDC28": "1f428",
    "\uD83D\uDC29": "1f429",
    "\uD83D\uDC2B": "1f42b",
    "\uD83D\uDC2C": "1f42c",
    "\uD83D\uDC2D": "1f42d",
    "\uD83D\uDC2E": "1f42e",
    "\uD83D\uDC2F": "1f42f",
    "\uD83D\uDC30": "1f430",
    "\uD83D\uDC31": "1f431",
    "\uD83D\uDC32": "1f432",
    "\uD83D\uDC33": "1f433",
    "\uD83D\uDC34": "1f434",
    "\uD83D\uDC35": "1f435",
    "\uD83D\uDC36": "1f436",
    "\uD83D\uDC37": "1f437",
    "\uD83D\uDC38": "1f438",
    "\uD83D\uDC39": "1f439",
    "\uD83D\uDC3A": "1f43a",
    "\uD83D\uDC3B": "1f43b",
    "\uD83D\uDC3C": "1f43c",
    "\uD83D\uDC3D": "1f43d",
    "\uD83D\uDC3E": "1f43e",
    "\uD83D\uDC40": "1f440",
    "\uD83D\uDC42": "1f442",
    "\uD83D\uDC43": "1f443",
    "\uD83D\uDC44": "1f444",
    "\uD83D\uDC45": "1f445",
    "\uD83D\uDC46": "1f446",
    "\uD83D\uDC47": "1f447",
    "\uD83D\uDC48": "1f448",
    "\uD83D\uDC49": "1f449",
    "\uD83D\uDC4A": "1f44a",
    "\uD83D\uDC4B": "1f44b",
    "\uD83D\uDC4C": "1f44c",
    "\uD83D\uDC4D": "1f44d",
    "\uD83D\uDC4E": "1f44e",
    "\uD83D\uDC4F": "1f44f",
    "\uD83D\uDC50": "1f450",
    "\uD83D\uDC51": "1f451",
    "\uD83D\uDC52": "1f452",
    "\uD83D\uDC53": "1f453",
    "\uD83D\uDC54": "1f454",
    "\uD83D\uDC55": "1f455",
    "\uD83D\uDC56": "1f456",
    "\uD83D\uDC57": "1f457",
    "\uD83D\uDC58": "1f458",
    "\uD83D\uDC59": "1f459",
    "\uD83D\uDC5A": "1f45a",
    "\uD83D\uDC5B": "1f45b",
    "\uD83D\uDC5C": "1f45c",
    "\uD83D\uDC5D": "1f45d",
    "\uD83D\uDC5E": "1f45e",
    "\uD83D\uDC5F": "1f45f",
    "\uD83D\uDC60": "1f460",
    "\uD83D\uDC61": "1f461",
    "\uD83D\uDC62": "1f462",
    "\uD83D\uDC63": "1f463",
    "\uD83D\uDC64": "1f464",
    "\uD83D\uDC66": "1f466",
    "\uD83D\uDC67": "1f467",
    "\uD83D\uDC68": "1f468",
    "\uD83D\uDC69": "1f469",
    "\uD83D\uDC6A": "1f46a",
    "\uD83D\uDC6B": "1f46b",
    "\uD83D\uDC6E": "1f46e",
    "\uD83D\uDC6F": "1f46f",
    "\uD83D\uDC70": "1f470",
    "\uD83D\uDC71": "1f471",
    "\uD83D\uDC72": "1f472",
    "\uD83D\uDC73": "1f473",
    "\uD83D\uDC74": "1f474",
    "\uD83D\uDC75": "1f475",
    "\uD83D\uDC76": "1f476",
    "\uD83D\uDC77": "1f477",
    "\uD83D\uDC78": "1f478",
    "\uD83D\uDC79": "1f479",
    "\uD83D\uDC7A": "1f47a",
    "\uD83D\uDC7B": "1f47b",
    "\uD83D\uDC7C": "1f47c",
    "\uD83D\uDC7D": "1f47d",
    "\uD83D\uDC7E": "1f47e",
    "\uD83D\uDC7F": "1f47f",
    "\uD83D\uDC80": "1f480",
    "\uD83D\uDCC7": "1f4c7",
    "\uD83D\uDC81": "1f481",
    "\uD83D\uDC82": "1f482",
    "\uD83D\uDC83": "1f483",
    "\uD83D\uDC84": "1f484",
    "\uD83D\uDC85": "1f485",
    "\uD83D\uDCD2": "1f4d2",
    "\uD83D\uDC86": "1f486",
    "\uD83D\uDCD3": "1f4d3",
    "\uD83D\uDC87": "1f487",
    "\uD83D\uDCD4": "1f4d4",
    "\uD83D\uDC88": "1f488",
    "\uD83D\uDCD5": "1f4d5",
    "\uD83D\uDC89": "1f489",
    "\uD83D\uDCD6": "1f4d6",
    "\uD83D\uDC8A": "1f48a",
    "\uD83D\uDCD7": "1f4d7",
    "\uD83D\uDC8B": "1f48b",
    "\uD83D\uDCD8": "1f4d8",
    "\uD83D\uDC8C": "1f48c",
    "\uD83D\uDCD9": "1f4d9",
    "\uD83D\uDC8D": "1f48d",
    "\uD83D\uDCDA": "1f4da",
    "\uD83D\uDC8E": "1f48e",
    "\uD83D\uDCDB": "1f4db",
    "\uD83D\uDC8F": "1f48f",
    "\uD83D\uDCDC": "1f4dc",
    "\uD83D\uDC90": "1f490",
    "\uD83D\uDCDD": "1f4dd",
    "\uD83D\uDC91": "1f491",
    "\uD83D\uDCDE": "1f4de",
    "\uD83D\uDC92": "1f492",
    "\uD83D\uDCDF": "1f4df",
    "\uD83D\uDCE0": "1f4e0",
    "\uD83D\uDC93": "1f493",
    "\uD83D\uDCE1": "1f4e1",
    "\uD83D\uDCE2": "1f4e2",
    "\uD83D\uDC94": "1f494",
    "\uD83D\uDCE3": "1f4e3",
    "\uD83D\uDCE4": "1f4e4",
    "\uD83D\uDC95": "1f495",
    "\uD83D\uDCE5": "1f4e5",
    "\uD83D\uDCE6": "1f4e6",
    "\uD83D\uDC96": "1f496",
    "\uD83D\uDCE7": "1f4e7",
    "\uD83D\uDCE8": "1f4e8",
    "\uD83D\uDC97": "1f497",
    "\uD83D\uDCE9": "1f4e9",
    "\uD83D\uDCEA": "1f4ea",
    "\uD83D\uDC98": "1f498",
    "\uD83D\uDCEB": "1f4eb",
    "\uD83D\uDCEE": "1f4ee",
    "\uD83D\uDC99": "1f499",
    "\uD83D\uDCF0": "1f4f0",
    "\uD83D\uDCF1": "1f4f1",
    "\uD83D\uDC9A": "1f49a",
    "\uD83D\uDCF2": "1f4f2",
    "\uD83D\uDCF3": "1f4f3",
    "\uD83D\uDC9B": "1f49b",
    "\uD83D\uDCF4": "1f4f4",
    "\uD83D\uDCF6": "1f4f6",
    "\uD83D\uDC9C": "1f49c",
    "\uD83D\uDCF7": "1f4f7",
    "\uD83D\uDCF9": "1f4f9",
    "\uD83D\uDC9D": "1f49d",
    "\uD83D\uDCFA": "1f4fa",
    "\uD83D\uDCFB": "1f4fb",
    "\uD83D\uDC9E": "1f49e",
    "\uD83D\uDCFC": "1f4fc",
    "\uD83D\uDD03": "1f503",
    "\uD83D\uDC9F": "1f49f",
    "\uD83D\uDD0A": "1f50a",
    "\uD83D\uDD0B": "1f50b",
    "\uD83D\uDCA0": "1f4a0",
    "\uD83D\uDD0C": "1f50c",
    "\uD83D\uDD0D": "1f50d",
    "\uD83D\uDCA1": "1f4a1",
    "\uD83D\uDD0E": "1f50e",
    "\uD83D\uDD0F": "1f50f",
    "\uD83D\uDCA2": "1f4a2",
    "\uD83D\uDD10": "1f510",
    "\uD83D\uDD11": "1f511",
    "\uD83D\uDCA3": "1f4a3",
    "\uD83D\uDD12": "1f512",
    "\uD83D\uDD13": "1f513",
    "\uD83D\uDCA4": "1f4a4",
    "\uD83D\uDD14": "1f514",
    "\uD83D\uDD16": "1f516",
    "\uD83D\uDCA5": "1f4a5",
    "\uD83D\uDD17": "1f517",
    "\uD83D\uDD18": "1f518",
    "\uD83D\uDCA6": "1f4a6",
    "\uD83D\uDD19": "1f519",
    "\uD83D\uDD1A": "1f51a",
    "\uD83D\uDCA7": "1f4a7",
    "\uD83D\uDD1B": "1f51b",
    "\uD83D\uDD1C": "1f51c",
    "\uD83D\uDCA8": "1f4a8",
    "\uD83D\uDD1D": "1f51d",
    "\uD83D\uDD1E": "1f51e",
    "\uD83D\uDCA9": "1f4a9",
    "\uD83D\uDD1F": "1f51f",
    "\uD83D\uDCAA": "1f4aa",
    "\uD83D\uDD20": "1f520",
    "\uD83D\uDD21": "1f521",
    "\uD83D\uDCAB": "1f4ab",
    "\uD83D\uDD22": "1f522",
    "\uD83D\uDD23": "1f523",
    "\uD83D\uDCAC": "1f4ac",
    "\uD83D\uDD24": "1f524",
    "\uD83D\uDD25": "1f525",
    "\uD83D\uDCAE": "1f4ae",
    "\uD83D\uDD26": "1f526",
    "\uD83D\uDD27": "1f527",
    "\uD83D\uDCAF": "1f4af",
    "\uD83D\uDD28": "1f528",
    "\uD83D\uDD29": "1f529",
    "\uD83D\uDCB0": "1f4b0",
    "\uD83D\uDD2A": "1f52a",
    "\uD83D\uDD2B": "1f52b",
    "\uD83D\uDCB1": "1f4b1",
    "\uD83D\uDD2E": "1f52e",
    "\uD83D\uDCB2": "1f4b2",
    "\uD83D\uDD2F": "1f52f",
    "\uD83D\uDCB3": "1f4b3",
    "\uD83D\uDD30": "1f530",
    "\uD83D\uDD31": "1f531",
    "\uD83D\uDCB4": "1f4b4",
    "\uD83D\uDD32": "1f532",
    "\uD83D\uDD33": "1f533",
    "\uD83D\uDCB5": "1f4b5",
    "\uD83D\uDD34": "1f534",
    "\uD83D\uDD35": "1f535",
    "\uD83D\uDCB8": "1f4b8",
    "\uD83D\uDD36": "1f536",
    "\uD83D\uDD37": "1f537",
    "\uD83D\uDCB9": "1f4b9",
    "\uD83D\uDD38": "1f538",
    "\uD83D\uDD39": "1f539",
    "\uD83D\uDCBA": "1f4ba",
    "\uD83D\uDD3A": "1f53a",
    "\uD83D\uDD3B": "1f53b",
    "\uD83D\uDCBB": "1f4bb",
    "\uD83D\uDD3C": "1f53c",
    "\uD83D\uDCBC": "1f4bc",
    "\uD83D\uDD3D": "1f53d",
    "\uD83D\uDD50": "1f550",
    "\uD83D\uDCBD": "1f4bd",
    "\uD83D\uDD51": "1f551",
    "\uD83D\uDCBE": "1f4be",
    "\uD83D\uDD52": "1f552",
    "\uD83D\uDCBF": "1f4bf",
    "\uD83D\uDD53": "1f553",
    "\uD83D\uDCC0": "1f4c0",
    "\uD83D\uDD54": "1f554",
    "\uD83D\uDD55": "1f555",
    "\uD83D\uDCC1": "1f4c1",
    "\uD83D\uDD56": "1f556",
    "\uD83D\uDD57": "1f557",
    "\uD83D\uDCC2": "1f4c2",
    "\uD83D\uDD58": "1f558",
    "\uD83D\uDD59": "1f559",
    "\uD83D\uDCC3": "1f4c3",
    "\uD83D\uDD5A": "1f55a",
    "\uD83D\uDD5B": "1f55b",
    "\uD83D\uDCC4": "1f4c4",
    "\uD83D\uDDFB": "1f5fb",
    "\uD83D\uDDFC": "1f5fc",
    "\uD83D\uDCC5": "1f4c5",
    "\uD83D\uDDFD": "1f5fd",
    "\uD83D\uDDFE": "1f5fe",
    "\uD83D\uDCC6": "1f4c6",
    "\uD83D\uDDFF": "1f5ff",
    "\uD83D\uDE01": "1f601",
    "\uD83D\uDE02": "1f602",
    "\uD83D\uDE03": "1f603",
    "\uD83D\uDCC8": "1f4c8",
    "\uD83D\uDE04": "1f604",
    "\uD83D\uDE05": "1f605",
    "\uD83D\uDCC9": "1f4c9",
    "\uD83D\uDE06": "1f606",
    "\uD83D\uDE09": "1f609",
    "\uD83D\uDCCA": "1f4ca",
    "\uD83D\uDE0A": "1f60a",
    "\uD83D\uDE0B": "1f60b",
    "\uD83D\uDCCB": "1f4cb",
    "\uD83D\uDE0C": "1f60c",
    "\uD83D\uDE0D": "1f60d",
    "\uD83D\uDCCC": "1f4cc",
    "\uD83D\uDE0F": "1f60f",
    "\uD83D\uDE12": "1f612",
    "\uD83D\uDCCD": "1f4cd",
    "\uD83D\uDE13": "1f613",
    "\uD83D\uDE14": "1f614",
    "\uD83D\uDCCE": "1f4ce",
    "\uD83D\uDE16": "1f616",
    "\uD83D\uDE18": "1f618",
    "\uD83D\uDCCF": "1f4cf",
    "\uD83D\uDE1A": "1f61a",
    "\uD83D\uDE1C": "1f61c",
    "\uD83D\uDCD0": "1f4d0",
    "\uD83D\uDE1D": "1f61d",
    "\uD83D\uDE1E": "1f61e",
    "\uD83D\uDCD1": "1f4d1",
    "\uD83D\uDE20": "1f620",
    "\uD83D\uDE21": "1f621",
    "\uD83D\uDE22": "1f622",
    "\uD83D\uDE23": "1f623",
    "\uD83D\uDE24": "1f624",
    "\uD83D\uDE25": "1f625",
    "\uD83D\uDE28": "1f628",
    "\uD83D\uDE29": "1f629",
    "\uD83D\uDE2A": "1f62a",
    "\uD83D\uDE2B": "1f62b",
    "\uD83D\uDE2D": "1f62d",
    "\uD83D\uDE30": "1f630",
    "\uD83D\uDE31": "1f631",
    "\uD83D\uDE32": "1f632",
    "\uD83D\uDE33": "1f633",
    "\uD83D\uDE35": "1f635",
    "\uD83D\uDE37": "1f637",
    "\uD83D\uDE38": "1f638",
    "\uD83D\uDE39": "1f639",
    "\uD83D\uDE3A": "1f63a",
    "\uD83D\uDE3B": "1f63b",
    "\uD83D\uDE3C": "1f63c",
    "\uD83D\uDE3D": "1f63d",
    "\uD83D\uDE3E": "1f63e",
    "\uD83D\uDE3F": "1f63f",
    "\uD83D\uDE40": "1f640",
    "\uD83D\uDE45": "1f645",
    "\uD83D\uDE46": "1f646",
    "\uD83D\uDE47": "1f647",
    "\uD83D\uDE48": "1f648",
    "\uD83D\uDE49": "1f649",
    "\uD83D\uDE4A": "1f64a",
    "\uD83D\uDE4B": "1f64b",
    "\uD83D\uDE4C": "1f64c",
    "\uD83D\uDE4D": "1f64d",
    "\uD83D\uDE4E": "1f64e",
    "\uD83D\uDE4F": "1f64f",
    "\uD83D\uDE80": "1f680",
    "\uD83D\uDE83": "1f683",
    "\uD83D\uDE84": "1f684",
    "\uD83D\uDE85": "1f685",
    "\uD83D\uDE87": "1f687",
    "\uD83D\uDE89": "1f689",
    "\uD83D\uDE8C": "1f68c",
    "\uD83D\uDE8F": "1f68f",
    "\uD83D\uDE91": "1f691",
    "\uD83D\uDE92": "1f692",
    "\uD83D\uDE93": "1f693",
    "\uD83D\uDE95": "1f695",
    "\uD83D\uDE97": "1f697",
    "\uD83D\uDE99": "1f699",
    "\uD83D\uDE9A": "1f69a",
    "\uD83D\uDEA2": "1f6a2",
    "\uD83D\uDEA4": "1f6a4",
    "\uD83D\uDEA5": "1f6a5",
    "\uD83D\uDEA7": "1f6a7",
    "\uD83D\uDEA8": "1f6a8",
    "\uD83D\uDEA9": "1f6a9",
    "\uD83D\uDEAA": "1f6aa",
    "\uD83D\uDEAB": "1f6ab",
    "\uD83D\uDEAC": "1f6ac",
    "\uD83D\uDEAD": "1f6ad",
    "\uD83D\uDEB2": "1f6b2",
    "\uD83D\uDEB6": "1f6b6",
    "\uD83D\uDEB9": "1f6b9",
    "\uD83D\uDEBA": "1f6ba",
    "\uD83D\uDEBB": "1f6bb",
    "\uD83D\uDEBC": "1f6bc",
    "\uD83D\uDEBD": "1f6bd",
    "\uD83D\uDEBE": "1f6be",
    "\uD83D\uDEC0": "1f6c0",
    "\uD83E\uDD18": "1f918",
    "\uD83D\uDE00": "1f600",
    "\uD83D\uDE07": "1f607",
    "\uD83D\uDE08": "1f608",
    "\uD83D\uDE0E": "1f60e",
    "\uD83D\uDE10": "1f610",
    "\uD83D\uDE11": "1f611",
    "\uD83D\uDE15": "1f615",
    "\uD83D\uDE17": "1f617",
    "\uD83D\uDE19": "1f619",
    "\uD83D\uDE1B": "1f61b",
    "\uD83D\uDE1F": "1f61f",
    "\uD83D\uDE26": "1f626",
    "\uD83D\uDE27": "1f627",
    "\uD83D\uDE2C": "1f62c",
    "\uD83D\uDE2E": "1f62e",
    "\uD83D\uDE2F": "1f62f",
    "\uD83D\uDE34": "1f634",
    "\uD83D\uDE36": "1f636",
    "\uD83D\uDE81": "1f681",
    "\uD83D\uDE82": "1f682",
    "\uD83D\uDE86": "1f686",
    "\uD83D\uDE88": "1f688",
    "\uD83D\uDE8A": "1f68a",
    "\uD83D\uDE8D": "1f68d",
    "\uD83D\uDE8E": "1f68e",
    "\uD83D\uDE90": "1f690",
    "\uD83D\uDE94": "1f694",
    "\uD83D\uDE96": "1f696",
    "\uD83D\uDE98": "1f698",
    "\uD83D\uDE9B": "1f69b",
    "\uD83D\uDE9C": "1f69c",
    "\uD83D\uDE9D": "1f69d",
    "\uD83D\uDE9E": "1f69e",
    "\uD83D\uDE9F": "1f69f",
    "\uD83D\uDEA0": "1f6a0",
    "\uD83D\uDEA1": "1f6a1",
    "\uD83D\uDEA3": "1f6a3",
    "\uD83D\uDEA6": "1f6a6",
    "\uD83D\uDEAE": "1f6ae",
    "\uD83D\uDEAF": "1f6af",
    "\uD83D\uDEB0": "1f6b0",
    "\uD83D\uDEB1": "1f6b1",
    "\uD83D\uDEB3": "1f6b3",
    "\uD83D\uDEB4": "1f6b4",
    "\uD83D\uDEB5": "1f6b5",
    "\uD83D\uDEB7": "1f6b7",
    "\uD83D\uDEB8": "1f6b8",
    "\uD83D\uDEBF": "1f6bf",
    "\uD83D\uDEC1": "1f6c1",
    "\uD83D\uDEC2": "1f6c2",
    "\uD83D\uDEC3": "1f6c3",
    "\uD83D\uDEC4": "1f6c4",
    "\uD83D\uDEC5": "1f6c5",
    "\uD83C\uDF0D": "1f30d",
    "\uD83C\uDF0E": "1f30e",
    "\uD83C\uDF10": "1f310",
    "\uD83C\uDF12": "1f312",
    "\uD83C\uDF16": "1f316",
    "\uD83C\uDF17": "1f317",
    "\uD83C\uDF18": "1f318",
    "\uD83C\uDF1A": "1f31a",
    "\uD83C\uDF1C": "1f31c",
    "\uD83C\uDF1D": "1f31d",
    "\uD83C\uDF1E": "1f31e",
    "\uD83C\uDF32": "1f332",
    "\uD83C\uDF33": "1f333",
    "\uD83C\uDF4B": "1f34b",
    "\uD83C\uDF50": "1f350",
    "\uD83C\uDF7C": "1f37c",
    "\uD83C\uDFC7": "1f3c7",
    "\uD83C\uDFC9": "1f3c9",
    "\uD83C\uDFE4": "1f3e4",
    "\uD83D\uDC00": "1f400",
    "\uD83D\uDC01": "1f401",
    "\uD83D\uDC02": "1f402",
    "\uD83D\uDC03": "1f403",
    "\uD83D\uDC04": "1f404",
    "\uD83D\uDC05": "1f405",
    "\uD83D\uDC06": "1f406",
    "\uD83D\uDC07": "1f407",
    "\uD83D\uDC08": "1f408",
    "\uD83D\uDC09": "1f409",
    "\uD83D\uDC0A": "1f40a",
    "\uD83D\uDC0B": "1f40b",
    "\uD83D\uDC0F": "1f40f",
    "\uD83D\uDC10": "1f410",
    "\uD83D\uDC13": "1f413",
    "\uD83D\uDC15": "1f415",
    "\uD83D\uDC16": "1f416",
    "\uD83D\uDC2A": "1f42a",
    "\uD83D\uDC65": "1f465",
    "\uD83D\uDC6C": "1f46c",
    "\uD83D\uDC6D": "1f46d",
    "\uD83D\uDCAD": "1f4ad",
    "\uD83D\uDCB6": "1f4b6",
    "\uD83D\uDCB7": "1f4b7",
    "\uD83D\uDCEC": "1f4ec",
    "\uD83D\uDCED": "1f4ed",
    "\uD83D\uDCEF": "1f4ef",
    "\uD83D\uDCF5": "1f4f5",
    "\uD83D\uDD00": "1f500",
    "\uD83D\uDD01": "1f501",
    "\uD83D\uDD02": "1f502",
    "\uD83D\uDD04": "1f504",
    "\uD83D\uDD05": "1f505",
    "\uD83D\uDD06": "1f506",
    "\uD83D\uDD07": "1f507",
    "\uD83D\uDD09": "1f509",
    "\uD83D\uDD15": "1f515",
    "\uD83D\uDD2C": "1f52c",
    "\uD83D\uDD2D": "1f52d",
    "\uD83D\uDD5C": "1f55c",
    "\uD83D\uDD5D": "1f55d",
    "\uD83D\uDD5E": "1f55e",
    "\uD83D\uDD5F": "1f55f",
    "\uD83D\uDD60": "1f560",
    "\uD83D\uDD61": "1f561",
    "\uD83D\uDD62": "1f562",
    "\uD83D\uDD63": "1f563",
    "\uD83D\uDD64": "1f564",
    "\uD83D\uDD65": "1f565",
    "\uD83D\uDD66": "1f566",
    "\uD83D\uDD67": "1f567",
    "\uD83D\uDD08": "1f508",
    "\uD83D\uDE8B": "1f68b",
    "\uD83C\uDFC5": "1f3c5",
    "\uD83C\uDFF4": "1f3f4",
    "\uD83D\uDCF8": "1f4f8",
    "\uD83D\uDECC": "1f6cc",
    "\uD83D\uDD95": "1f595",
    "\uD83D\uDD96": "1f596",
    "\uD83D\uDE41": "1f641",
    "\uD83D\uDE42": "1f642",
    "\uD83D\uDEEB": "1f6eb",
    "\uD83D\uDEEC": "1f6ec",
    "\uD83C\uDFFB": "1f3fb",
    "\uD83C\uDFFC": "1f3fc",
    "\uD83C\uDFFD": "1f3fd",
    "\uD83C\uDFFE": "1f3fe",
    "\uD83C\uDFFF": "1f3ff",
    "\uD83D\uDE43": "1f643",
    "\uD83E\uDD11": "1f911",
    "\uD83E\uDD13": "1f913",
    "\uD83E\uDD17": "1f917",
    "\uD83D\uDE44": "1f644",
    "\uD83E\uDD14": "1f914",
    "\uD83E\uDD10": "1f910",
    "\uD83E\uDD12": "1f912",
    "\uD83E\uDD15": "1f915",
    "\uD83E\uDD16": "1f916",
    "\uD83E\uDD81": "1f981",
    "\uD83E\uDD84": "1f984",
    "\uD83E\uDD82": "1f982",
    "\uD83E\uDD80": "1f980",
    "\uD83E\uDD83": "1f983",
    "\uD83E\uDDC0": "1f9c0",
    "\uD83C\uDF2D": "1f32d",
    "\uD83C\uDF2E": "1f32e",
    "\uD83C\uDF2F": "1f32f",
    "\uD83C\uDF7F": "1f37f",
    "\uD83C\uDF7E": "1f37e",
    "\uD83C\uDFF9": "1f3f9",
    "\uD83C\uDFFA": "1f3fa",
    "\uD83D\uDED0": "1f6d0",
    "\uD83D\uDD4B": "1f54b",
    "\uD83D\uDD4C": "1f54c",
    "\uD83D\uDD4D": "1f54d",
    "\uD83D\uDD4E": "1f54e",
    "\uD83D\uDCFF": "1f4ff",
    "\uD83C\uDFCF": "1f3cf",
    "\uD83C\uDFD0": "1f3d0",
    "\uD83C\uDFD1": "1f3d1",
    "\uD83C\uDFD2": "1f3d2",
    "\uD83C\uDFD3": "1f3d3",
    "\uD83C\uDFF8": "1f3f8",
    "\u23E9": "23e9",
    "\u23EA": "23ea",
    "\u23EB": "23eb",
    "\u23EC": "23ec",
    "\u23F0": "23f0",
    "\u23F3": "23f3",
    "\u26CE": "26ce",
    "\u2705": "2705",
    "\u270A": "270a",
    "\u270B": "270b",
    "\u2728": "2728",
    "\u274C": "274c",
    "\u274E": "274e",
    "\u2753": "2753",
    "\u2754": "2754",
    "\u2755": "2755",
    "\u2795": "2795",
    "\u2796": "2796",
    "\u2797": "2797",
    "\u27B0": "27b0",
    "\u27BF": "27bf",
    "\xA9": "00a9",
    "\xAE": "00ae",
    "\u203C": "203c",
    "\u2049": "2049",
    "\u2122": "2122",
    "\u2194": "2194",
    "\u2195": "2195",
    "\u2196": "2196",
    "\u2197": "2197",
    "\u2198": "2198",
    "\u2199": "2199",
    "\u21A9": "21a9",
    "\u21AA": "21aa",
    "\u231A": "231a",
    "\u231B": "231b",
    "\u24C2": "24c2",
    "\u25AA": "25aa",
    "\u25AB": "25ab",
    "\u25B6": "25b6",
    "\u25C0": "25c0",
    "\u25FB": "25fb",
    "\u25FC": "25fc",
    "\u25FD": "25fd",
    "\u25FE": "25fe",
    "\u2600": "2600",
    "\u2601": "2601",
    "\u260E": "260e",
    "\u2611": "2611",
    "\u2614": "2614",
    "\u2615": "2615",
    "\u261D": "261d",
    "\u263A": "263a",
    "\u2648": "2648",
    "\u2649": "2649",
    "\u264A": "264a",
    "\u264B": "264b",
    "\u264C": "264c",
    "\u264D": "264d",
    "\u264E": "264e",
    "\u264F": "264f",
    "\u2650": "2650",
    "\u2651": "2651",
    "\u2652": "2652",
    "\u2653": "2653",
    "\u2660": "2660",
    "\u2663": "2663",
    "\u2665": "2665",
    "\u2666": "2666",
    "\u2668": "2668",
    "\u267B": "267b",
    "\u267F": "267f",
    "\u2693": "2693",
    "\u26A0": "26a0",
    "\u26A1": "26a1",
    "\u26AA": "26aa",
    "\u26AB": "26ab",
    "\u26BD": "26bd",
    "\u26BE": "26be",
    "\u26C4": "26c4",
    "\u26C5": "26c5",
    "\u26D4": "26d4",
    "\u26EA": "26ea",
    "\u26F2": "26f2",
    "\u26F3": "26f3",
    "\u26F5": "26f5",
    "\u26FA": "26fa",
    "\u26FD": "26fd",
    "\u2702": "2702",
    "\u2708": "2708",
    "\u2709": "2709",
    "\u270C": "270c",
    "\u270F": "270f",
    "\u2712": "2712",
    "\u2714": "2714",
    "\u2716": "2716",
    "\u2733": "2733",
    "\u2734": "2734",
    "\u2744": "2744",
    "\u2747": "2747",
    "\u2757": "2757",
    "\u2764": "2764",
    "\u27A1": "27a1",
    "\u2934": "2934",
    "\u2935": "2935",
    "\u2B05": "2b05",
    "\u2B06": "2b06",
    "\u2B07": "2b07",
    "\u2B1B": "2b1b",
    "\u2B1C": "2b1c",
    "\u2B50": "2b50",
    "\u2B55": "2b55",
    "\u3030": "3030",
    "\u303D": "303d",
    "\u3297": "3297",
    "\u3299": "3299",
    "\uD83C\uDC04": "1f004",
    "\uD83C\uDD7F": "1f17f",
    "\uD83C\uDE02": "1f202",
    "\uD83C\uDE1A": "1f21a",
    "\uD83C\uDE2F": "1f22f",
    "\uD83C\uDE37": "1f237",
    "\uD83C\uDF9E": "1f39e",
    "\uD83C\uDF9F": "1f39f",
    "\uD83C\uDFCB": "1f3cb",
    "\uD83C\uDFCC": "1f3cc",
    "\uD83C\uDFCD": "1f3cd",
    "\uD83C\uDFCE": "1f3ce",
    "\uD83C\uDF96": "1f396",
    "\uD83C\uDF97": "1f397",
    "\uD83C\uDF36": "1f336",
    "\uD83C\uDF27": "1f327",
    "\uD83C\uDF28": "1f328",
    "\uD83C\uDF29": "1f329",
    "\uD83C\uDF2A": "1f32a",
    "\uD83C\uDF2B": "1f32b",
    "\uD83C\uDF2C": "1f32c",
    "\uD83D\uDC3F": "1f43f",
    "\uD83D\uDD77": "1f577",
    "\uD83D\uDD78": "1f578",
    "\uD83C\uDF21": "1f321",
    "\uD83C\uDF99": "1f399",
    "\uD83C\uDF9A": "1f39a",
    "\uD83C\uDF9B": "1f39b",
    "\uD83C\uDFF3": "1f3f3",
    "\uD83C\uDFF5": "1f3f5",
    "\uD83C\uDFF7": "1f3f7",
    "\uD83D\uDCFD": "1f4fd",
    "\u271D": "271d",
    "\uD83D\uDD49": "1f549",
    "\uD83D\uDD4A": "1f54a",
    "\uD83D\uDD6F": "1f56f",
    "\uD83D\uDD70": "1f570",
    "\uD83D\uDD73": "1f573",
    "\uD83D\uDD76": "1f576",
    "\uD83D\uDD79": "1f579",
    "\uD83D\uDD87": "1f587",
    "\uD83D\uDD8A": "1f58a",
    "\uD83D\uDD8B": "1f58b",
    "\uD83D\uDD8C": "1f58c",
    "\uD83D\uDD8D": "1f58d",
    "\uD83D\uDDA5": "1f5a5",
    "\uD83D\uDDA8": "1f5a8",
    "\u2328": "2328",
    "\uD83D\uDDB2": "1f5b2",
    "\uD83D\uDDBC": "1f5bc",
    "\uD83D\uDDC2": "1f5c2",
    "\uD83D\uDDC3": "1f5c3",
    "\uD83D\uDDC4": "1f5c4",
    "\uD83D\uDDD1": "1f5d1",
    "\uD83D\uDDD2": "1f5d2",
    "\uD83D\uDDD3": "1f5d3",
    "\uD83D\uDDDC": "1f5dc",
    "\uD83D\uDDDD": "1f5dd",
    "\uD83D\uDDDE": "1f5de",
    "\uD83D\uDDE1": "1f5e1",
    "\uD83D\uDDE3": "1f5e3",
    "\uD83D\uDDEF": "1f5ef",
    "\uD83D\uDDF3": "1f5f3",
    "\uD83D\uDDFA": "1f5fa",
    "\uD83D\uDEE0": "1f6e0",
    "\uD83D\uDEE1": "1f6e1",
    "\uD83D\uDEE2": "1f6e2",
    "\uD83D\uDEF0": "1f6f0",
    "\uD83C\uDF7D": "1f37d",
    "\uD83D\uDC41": "1f441",
    "\uD83D\uDD74": "1f574",
    "\uD83D\uDD75": "1f575",
    "\u270D": "270d",
    "\uD83D\uDD90": "1f590",
    "\uD83C\uDFD4": "1f3d4",
    "\uD83C\uDFD5": "1f3d5",
    "\uD83C\uDFD6": "1f3d6",
    "\uD83C\uDFD7": "1f3d7",
    "\uD83C\uDFD8": "1f3d8",
    "\uD83C\uDFD9": "1f3d9",
    "\uD83C\uDFDA": "1f3da",
    "\uD83C\uDFDB": "1f3db",
    "\uD83C\uDFDC": "1f3dc",
    "\uD83C\uDFDD": "1f3dd",
    "\uD83C\uDFDE": "1f3de",
    "\uD83C\uDFDF": "1f3df",
    "\uD83D\uDECB": "1f6cb",
    "\uD83D\uDECD": "1f6cd",
    "\uD83D\uDECE": "1f6ce",
    "\uD83D\uDECF": "1f6cf",
    "\uD83D\uDEE3": "1f6e3",
    "\uD83D\uDEE4": "1f6e4",
    "\uD83D\uDEE5": "1f6e5",
    "\uD83D\uDEE9": "1f6e9",
    "\uD83D\uDEF3": "1f6f3",
    "\u23ED": "23ed",
    "\u23EE": "23ee",
    "\u23EF": "23ef",
    "\u23F1": "23f1",
    "\u23F2": "23f2",
    "\u23F8": "23f8",
    "\u23F9": "23f9",
    "\u23FA": "23fa",
    "\u2602": "2602",
    "\u2603": "2603",
    "\u2604": "2604",
    "\u2618": "2618",
    "\u2620": "2620",
    "\u2622": "2622",
    "\u2623": "2623",
    "\u2626": "2626",
    "\u262A": "262a",
    "\u262E": "262e",
    "\u262F": "262f",
    "\u2638": "2638",
    "\u2639": "2639",
    "\u2692": "2692",
    "\u2694": "2694",
    "\u2696": "2696",
    "\u2697": "2697",
    "\u2699": "2699",
    "\u269B": "269b",
    "\u269C": "269c",
    "\u26B0": "26b0",
    "\u26B1": "26b1",
    "\u26C8": "26c8",
    "\u26CF": "26cf",
    "\u26D1": "26d1",
    "\u26D3": "26d3",
    "\u26E9": "26e9",
    "\u26F0": "26f0",
    "\u26F1": "26f1",
    "\u26F4": "26f4",
    "\u26F7": "26f7",
    "\u26F8": "26f8",
    "\u26F9": "26f9",
    "\u2721": "2721",
    "\u2763": "2763",
    "\uD83C\uDF24": "1f324",
    "\uD83C\uDF25": "1f325",
    "\uD83C\uDF26": "1f326",
    "\uD83D\uDDB1": "1f5b1"
  }; //ns.imagePathPNG = '//cdn.jsdelivr.net/emojione/assets/png/';
  //ns.imagePathSVG = '//cdn.jsdelivr.net/emojione/assets/svg/';
  //ns.imagePathSVGSprites = './../assets/sprites/emojione.sprites.svg';

  ns.imageType = 'png'; // or svg

  ns.sprites = true; // if this is true then sprite markup will be used (if SVG image type is set then you must include the SVG sprite file locally)

  ns.unicodeAlt = true; // use the unicode char as the alt attribute (makes copy and pasting the resulting text better)

  ns.ascii = true; // change to true to convert ascii smileys

  ns.cacheBustParam = '?v=2.1.2'; // you can [optionally] modify this to force browsers to refresh their cache. it will be appended to the send of the filenames

  ns.regShortNames = new RegExp("<object[^>]*>.*?<\/object>|<span\s*class=\"emojione*[^>]*>.*?<\/span>|<(?:object|embed|svg|img|div|span|p|a)[^>]*>|(" + ns.shortnames + ")", "gi");
  ns.regAscii = new RegExp("<object[^>]*>.*?<\/object>|<span\s*class=\"emojione*[^>]*>.*?<\/span>|<(?:object|embed|svg|img|div|span|p|a)[^>]*>|((\\s|^)" + ns.asciiRegexp + "(?=\\s|$|[!,.?]))", "g");
  ns.regUnicode = new RegExp("<object[^>]*>.*?<\/object>|<span\s*class=\"emojione*[^>]*>.*?<\/span>|<(?:object|embed|svg|img|div|span|p|a)[^>]*>|(" + ns.unicodeRegexp + ")", "gi");
  /**/
  //ns.asciiRegexp = '(\\<3|&lt;3|\\<\\/3|&lt;\\/3|\\:\'\\)|\\:\'\\-\\)|\\:D|\\:\\-D|\\=D|\\:\\)|\\:\\-\\)|\\=\\]|\\=\\)|\\:\\]|\'\\:\\)|\'\\:\\-\\)|\'\\=\\)|\'\\:D|\'\\:\\-D|\'\\=D|\\>\\:\\)|&gt;\\:\\)|\\>;\\)|&gt;;\\)|\\>\\:\\-\\)|&gt;\\:\\-\\)|\\>\\=\\)|&gt;\\=\\)|;\\)|;\\-\\)|\\*\\-\\)|\\*\\)|;\\-\\]|;\\]|;D|;\\^\\)|\'\\:\\(|\'\\:\\-\\(|\'\\=\\(|\\:\\*|\\:\\-\\*|\\=\\*|\\:\\^\\*|\\>\\:P|&gt;\\:P|X\\-P|x\\-p|\\>\\:\\[|&gt;\\:\\[|\\:\\-\\(|\\:\\(|\\:\\-\\[|\\:\\[|\\=\\(|\\>\\:\\(|&gt;\\:\\(|\\>\\:\\-\\(|&gt;\\:\\-\\(|\\:@|\\:\'\\(|\\:\'\\-\\(|;\\(|;\\-\\(|\\>\\.\\<|&gt;\\.&lt;|\\:\\$|\\=\\$|#\\-\\)|#\\)|%\\-\\)|%\\)|X\\)|X\\-\\)|\\*\\\\0\\/\\*|\\\\0\\/|\\*\\\\O\\/\\*|\\\\O\\/|O\\:\\-\\)|0\\:\\-3|0\\:3|0\\:\\-\\)|0\\:\\)|0;\\^\\)|O\\:\\-\\)|O\\:\\)|O;\\-\\)|O\\=\\)|0;\\-\\)|O\\:\\-3|O\\:3|B\\-\\)|B\\)|8\\)|8\\-\\)|B\\-D|8\\-D|\\-_\\-|\\-__\\-|\\-___\\-|\\>\\:\\\\|&gt;\\:\\\\|\\>\\:\\/|&gt;\\:\\/|\\:\\-\\/|\\:\\-\\.|\\:\\/|\\:\\\\|\\=\\/|\\=\\\\|\\:L|\\=L|\\:P|\\:\\-P|\\=P|\\:\\-p|\\:p|\\=p|\\:\\-�|\\:\\-&THORN;|\\:�|\\:&THORN;|\\:�|\\:&thorn;|\\:\\-�|\\:\\-&thorn;|\\:\\-b|\\:b|d\\:|\\:\\-O|\\:O|\\:\\-o|\\:o|O_O|\\>\\:O|&gt;\\:O|\\:\\-X|\\:X|\\:\\-#|\\:#|\\=X|\\=x|\\:x|\\:\\-x|\\=#)';
  //ns.unicodeRegexp = '(\\u2049|\\u2122|\\u2139|\\u2194|\\u2195|\\u2196|\\u2197|\\u2198|\\u2199|\\u2600|\\u2601|\\u2611|\\u2614|\\u2615|\\u2648|\\u2649|\\u2650|\\u2651|\\u2652|\\u2653|\\u2660|\\u2663|\\u2665|\\u2666|\\u2668|\\u2693|\\u2702|\\u2705|\\u2708|\\u2709|\\u2712|\\u2714|\\u2716|\\u2728|\\u2733|\\u2734|\\u2744|\\u2747|\\u2753|\\u2754|\\u2755|\\u2757|\\u2764|\\u2795|\\u2796|\\u2797|\\u2934|\\u2935|\\u3030|\\u3297|\\u3299|\\uD83C\\uDDFF\\uD83C\\uDDFC|\\uD83C\\uDDFF\\uD83C\\uDDF2|\\uD83C\\uDDFE\\uD83C\\uDDEA|\\uD83C\\uDDEA\\uD83C\\uDDED|\\uD83C\\uDDFC\\uD83C\\uDDEB|\\uD83C\\uDDFB\\uD83C\\uDDEA|\\uD83C\\uDDFB\\uD83C\\uDDE6|\\uD83C\\uDDFB\\uD83C\\uDDFA|\\uD83C\\uDDFA\\uD83C\\uDDFF|\\uD83C\\uDDFA\\uD83C\\uDDFE|\\uD83C\\uDDFA\\uD83C\\uDDE6|\\uD83C\\uDDFA\\uD83C\\uDDEC|\\uD83C\\uDDFB\\uD83C\\uDDEE|\\uD83C\\uDDF9\\uD83C\\uDDFB|\\uD83C\\uDDF9\\uD83C\\uDDF2|\\uD83C\\uDDF9\\uD83C\\uDDF3|\\uD83C\\uDDF9\\uD83C\\uDDF9|\\uD83C\\uDDF9\\uD83C\\uDDF4|\\uD83C\\uDDF9\\uD83C\\uDDEC|\\uD83C\\uDDF9\\uD83C\\uDDED|\\uD83C\\uDDF9\\uD83C\\uDDFF|\\uD83C\\uDDF9\\uD83C\\uDDEF|\\uD83C\\uDDF9\\uD83C\\uDDFC|\\uD83C\\uDDF8\\uD83C\\uDDFE|\\uD83C\\uDDF8\\uD83C\\uDDFF|\\uD83C\\uDDF8\\uD83C\\uDDF7|\\uD83C\\uDDF8\\uD83C\\uDDE9|\\uD83C\\uDDF1\\uD83C\\uDDF0|\\uD83C\\uDDF8\\uD83C\\uDDF4|\\uD83C\\uDDF8\\uD83C\\uDDE7|\\uD83C\\uDDF8\\uD83C\\uDDEE|\\uD83C\\uDDF8\\uD83C\\uDDF0|\\uD83C\\uDDF8\\uD83C\\uDDF1|\\uD83C\\uDDF8\\uD83C\\uDDE8|\\uD83C\\uDDF7\\uD83C\\uDDF8|\\uD83C\\uDDF8\\uD83C\\uDDF3|\\uD83C\\uDDF8\\uD83C\\uDDF9|\\uD83C\\uDDF8\\uD83C\\uDDF2|\\uD83C\\uDDFC\\uD83C\\uDDF8|\\uD83C\\uDDFB\\uD83C\\uDDE8|\\uD83C\\uDDF1\\uD83C\\uDDE8|\\uD83C\\uDDF0\\uD83C\\uDDF3|\\uD83C\\uDDF8\\uD83C\\uDDED|\\uD83C\\uDDF7\\uD83C\\uDDFC|\\uD83C\\uDDF7\\uD83C\\uDDF4|\\uD83C\\uDDF6\\uD83C\\uDDE6|\\uD83C\\uDDF5\\uD83C\\uDDEA|\\uD83C\\uDDF5\\uD83C\\uDDFE|\\uD83C\\uDDF5\\uD83C\\uDDEC|\\uD83C\\uDDF5\\uD83C\\uDDE6|\\uD83C\\uDDF5\\uD83C\\uDDF8|\\uD83C\\uDDF5\\uD83C\\uDDFC|\\uD83C\\uDDF5\\uD83C\\uDDF0|\\uD83C\\uDDF4\\uD83C\\uDDF2|\\uD83C\\uDDF0\\uD83C\\uDDF5|\\uD83C\\uDDF3\\uD83C\\uDDFA|\\uD83C\\uDDF3\\uD83C\\uDDEC|\\uD83C\\uDDF3\\uD83C\\uDDEA|\\uD83C\\uDDF3\\uD83C\\uDDEE|\\uD83C\\uDDF3\\uD83C\\uDDE8|\\uD83C\\uDDF3\\uD83C\\uDDF5|\\uD83C\\uDDF3\\uD83C\\uDDF7|\\uD83C\\uDDF3\\uD83C\\uDDE6|\\uD83C\\uDDF2\\uD83C\\uDDF2|\\uD83C\\uDDF2\\uD83C\\uDDFF|\\uD83C\\uDDF2\\uD83C\\uDDE6|\\uD83C\\uDDF2\\uD83C\\uDDF8|\\uD83C\\uDDF2\\uD83C\\uDDEA|\\uD83C\\uDDF2\\uD83C\\uDDF3|\\uD83C\\uDDF2\\uD83C\\uDDE8|\\uD83C\\uDDF2\\uD83C\\uDDE9|\\uD83C\\uDDEB\\uD83C\\uDDF2|\\uD83C\\uDDF2\\uD83C\\uDDFA|\\uD83C\\uDDF2\\uD83C\\uDDF7|\\uD83C\\uDDF2\\uD83C\\uDDED|\\uD83C\\uDDF2\\uD83C\\uDDF9|\\uD83C\\uDDF2\\uD83C\\uDDF1|\\uD83C\\uDDF2\\uD83C\\uDDFB|\\uD83C\\uDDF2\\uD83C\\uDDFC|\\uD83C\\uDDF2\\uD83C\\uDDEC|\\uD83C\\uDDF2\\uD83C\\uDDF0|\\uD83C\\uDDF1\\uD83C\\uDDFA|\\uD83C\\uDDF1\\uD83C\\uDDF9|\\uD83C\\uDDF1\\uD83C\\uDDEE|\\uD83C\\uDDF1\\uD83C\\uDDFE|\\uD83C\\uDDF1\\uD83C\\uDDF7|\\uD83C\\uDDF1\\uD83C\\uDDF8|\\uD83C\\uDDF1\\uD83C\\uDDE7|\\uD83C\\uDDF1\\uD83C\\uDDFB|\\uD83C\\uDDF1\\uD83C\\uDDE6|\\uD83C\\uDDF0\\uD83C\\uDDEC|\\uD83C\\uDDF0\\uD83C\\uDDFC|\\uD83C\\uDDFD\\uD83C\\uDDF0|\\uD83C\\uDDF0\\uD83C\\uDDEE|\\uD83C\\uDDF0\\uD83C\\uDDEA|\\uD83C\\uDDF0\\uD83C\\uDDFF|\\uD83C\\uDDEF\\uD83C\\uDDF4|\\uD83C\\uDDEF\\uD83C\\uDDEA|\\uD83C\\uDDEF\\uD83C\\uDDF2|\\uD83C\\uDDEE\\uD83C\\uDDF6|\\uD83C\\uDDEE\\uD83C\\uDDF7|\\uD83C\\uDDEE\\uD83C\\uDDF8|\\uD83C\\uDDED\\uD83C\\uDDFA|\\uD83C\\uDDED\\uD83C\\uDDF3|\\uD83C\\uDDED\\uD83C\\uDDF9|\\uD83C\\uDDEC\\uD83C\\uDDFE|\\uD83C\\uDDEC\\uD83C\\uDDFC|\\uD83C\\uDDEC\\uD83C\\uDDF3|\\uD83C\\uDDEC\\uD83C\\uDDF9|\\uD83C\\uDDEC\\uD83C\\uDDFA|\\uD83C\\uDDEC\\uD83C\\uDDE9|\\uD83C\\uDDEC\\uD83C\\uDDF1|\\uD83C\\uDDEC\\uD83C\\uDDF7|\\uD83C\\uDDEC\\uD83C\\uDDEE|\\uD83C\\uDDEC\\uD83C\\uDDED|\\uD83C\\uDDEC\\uD83C\\uDDEA|\\uD83C\\uDDEC\\uD83C\\uDDF2|\\uD83C\\uDDEC\\uD83C\\uDDE6|\\uD83C\\uDDF5\\uD83C\\uDDEB|\\uD83C\\uDDEB\\uD83C\\uDDEF|\\uD83C\\uDDEB\\uD83C\\uDDF4|\\uD83C\\uDDEB\\uD83C\\uDDF0|\\uD83C\\uDDEA\\uD83C\\uDDF9|\\uD83C\\uDDEA\\uD83C\\uDDEA|\\uD83C\\uDDEA\\uD83C\\uDDF7|\\uD83C\\uDDEC\\uD83C\\uDDF6|\\uD83C\\uDDF8\\uD83C\\uDDFB|\\uD83C\\uDDEA\\uD83C\\uDDEC|\\uD83C\\uDDEA\\uD83C\\uDDE8|\\uD83C\\uDDF9\\uD83C\\uDDF1|\\uD83C\\uDDE9\\uD83C\\uDDF4|\\uD83C\\uDDE9\\uD83C\\uDDF2|\\uD83C\\uDDE9\\uD83C\\uDDEF|\\uD83C\\uDDE8\\uD83C\\uDDFF|\\uD83C\\uDDE8\\uD83C\\uDDFE|\\uD83C\\uDDE8\\uD83C\\uDDFA|\\uD83C\\uDDED\\uD83C\\uDDF7|\\uD83C\\uDDE8\\uD83C\\uDDEE|\\uD83C\\uDDE8\\uD83C\\uDDF7|\\uD83C\\uDDF9\\uD83C\\uDDE9|\\uD83C\\uDDE8\\uD83C\\uDDEC|\\uD83C\\uDDE8\\uD83C\\uDDE9|\\uD83C\\uDDF0\\uD83C\\uDDF2|\\uD83C\\uDDE8\\uD83C\\uDDEB|\\uD83C\\uDDF0\\uD83C\\uDDFE|\\uD83C\\uDDE8\\uD83C\\uDDFB|\\uD83C\\uDDE8\\uD83C\\uDDF2|\\uD83C\\uDDF0\\uD83C\\uDDED|\\uD83C\\uDDE7\\uD83C\\uDDEE|\\uD83C\\uDDE7\\uD83C\\uDDEB|\\uD83C\\uDDE7\\uD83C\\uDDEC|\\uD83C\\uDDE7\\uD83C\\uDDF3|\\uD83C\\uDDE7\\uD83C\\uDDFC|\\uD83C\\uDDE7\\uD83C\\uDDE6|\\uD83C\\uDDE7\\uD83C\\uDDF4|\\uD83C\\uDDE7\\uD83C\\uDDF9|\\uD83C\\uDDE7\\uD83C\\uDDF2|\\uD83C\\uDDE7\\uD83C\\uDDEF|\\uD83C\\uDDE7\\uD83C\\uDDFF|\\uD83C\\uDDE7\\uD83C\\uDDFE|\\uD83C\\uDDE7\\uD83C\\uDDE7|\\uD83C\\uDDE7\\uD83C\\uDDE9|\\uD83C\\uDDE7\\uD83C\\uDDED|\\uD83C\\uDDE7\\uD83C\\uDDF8|\\uD83C\\uDDE6\\uD83C\\uDDFF|\\uD83C\\uDDE6\\uD83C\\uDDE8|\\uD83C\\uDDE6\\uD83C\\uDDFC|\\uD83C\\uDDE6\\uD83C\\uDDF2|\\uD83C\\uDDE6\\uD83C\\uDDF7|\\uD83C\\uDDE6\\uD83C\\uDDEC|\\uD83C\\uDDE6\\uD83C\\uDDEE|\\uD83C\\uDDE6\\uD83C\\uDDF4|\\uD83C\\uDDE6\\uD83C\\uDDE9|\\uD83C\\uDDE9\\uD83C\\uDDFF|\\uD83C\\uDDE6\\uD83C\\uDDF1|\\uD83C\\uDDE6\\uD83C\\uDDEB|\\uD83C\\uDDFB\\uD83C\\uDDF3|\\uD83C\\uDDE6\\uD83C\\uDDEA|\\uD83C\\uDDFA\\uD83C\\uDDF8|\\uD83C\\uDDEC\\uD83C\\uDDE7|\\uD83C\\uDDF9\\uD83C\\uDDF7|\\uD83C\\uDDE8\\uD83C\\uDDED|\\uD83C\\uDDF8\\uD83C\\uDDEA|\\uD83C\\uDDEA\\uD83C\\uDDF8|\\uD83C\\uDDFF\\uD83C\\uDDE6|\\uD83C\\uDDF8\\uD83C\\uDDEC|\\uD83C\\uDDF8\\uD83C\\uDDE6|\\uD83C\\uDDF7\\uD83C\\uDDFA|\\uD83C\\uDDF5\\uD83C\\uDDF7|\\uD83C\\uDDF5\\uD83C\\uDDF9|\\uD83C\\uDDF5\\uD83C\\uDDF1|\\uD83C\\uDDF5\\uD83C\\uDDED|\\uD83C\\uDDF3\\uD83C\\uDDF4|\\uD83C\\uDDF3\\uD83C\\uDDFF|\\uD83C\\uDDF3\\uD83C\\uDDF1|\\uD83C\\uDDF2\\uD83C\\uDDFD|\\uD83C\\uDDF2\\uD83C\\uDDFE|\\uD83C\\uDDF2\\uD83C\\uDDF4|\\uD83C\\uDDF0\\uD83C\\uDDF7|\\uD83C\\uDDEF\\uD83C\\uDDF5|\\uD83C\\uDDEE\\uD83C\\uDDF9|\\uD83C\\uDDEE\\uD83C\\uDDF1|\\uD83C\\uDDEE\\uD83C\\uDDEA|\\uD83C\\uDDEE\\uD83C\\uDDE9|\\uD83C\\uDDEE\\uD83C\\uDDF3|\\uD83C\\uDDED\\uD83C\\uDDF0|\\uD83C\\uDDE9\\uD83C\\uDDEA|\\uD83C\\uDDEB\\uD83C\\uDDF7|\\uD83C\\uDDEB\\uD83C\\uDDEE|\\uD83C\\uDDE9\\uD83C\\uDDF0|\\uD83C\\uDDE8\\uD83C\\uDDF4|\\uD83C\\uDDE8\\uD83C\\uDDF3|\\uD83C\\uDDE8\\uD83C\\uDDF1|\\uD83C\\uDDE8\\uD83C\\uDDE6|\\uD83C\\uDDE7\\uD83C\\uDDF7|\\uD83C\\uDDE7\\uD83C\\uDDEA|\\uD83C\\uDDE6\\uD83C\\uDDF9|\\uD83C\\uDDE6\\uD83C\\uDDFA|\\uD83D\\uDDFA|\\uD83C\\uDFEB|\\uD83C\\uDFEA|\\u26EA\\uFE0F|\\u26EA|\\uD83D\\uDC92|\\uD83C\\uDFE9|\\uD83C\\uDFE8|\\uD83C\\uDFE6|\\uD83C\\uDFE5|\\uD83C\\uDFE4|\\uD83C\\uDFE3|\\uD83C\\uDFED|\\uD83C\\uDFEC|\\uD83C\\uDFE2|\\uD83C\\uDFD7|\\uD83C\\uDFDA|\\uD83C\\uDFE1|\\uD83C\\uDFD8|\\uD83C\\uDFE0|\\uD83C\\uDF09|\\uD83C\\uDF03|\\uD83C\\uDF06|\\uD83C\\uDF07|\\uD83C\\uDFD9|\\uD83C\\uDFDE|\\uD83C\\uDFDD|\\uD83C\\uDFDC|\\uD83C\\uDFD6|\\uD83C\\uDFD5|\\uD83C\\uDFD4|\\uD83C\\uDFDF|\\uD83C\\uDFDB|\\uD83C\\uDFEF|\\uD83C\\uDFF0|\\u26F2\\uFE0F|\\u26F2|\\uD83D\\uDDFC|\\uD83C\\uDF01|\\uD83D\\uDDFF|\\uD83D\\uDDFD|\\uD83D\\uDECD|\\uD83C\\uDF7D|\\uD83D\\uDECB|\\uD83D\\uDECF|\\uD83D\\uDECE|\\uD83D\\uDCB5|\\uD83D\\uDCB7|\\uD83D\\uDCB6|\\uD83D\\uDCB4|\\uD83D\\uDEC5|\\uD83D\\uDEC4|\\uD83D\\uDEC3|\\uD83D\\uDEC2|\\uD83D\\uDE9F|\\uD83D\\uDEA0|\\uD83D\\uDEA1|\\u26F5\\uFE0F|\\u26F5|\\uD83D\\uDEA4|\\uD83D\\uDEE5|\\uD83D\\uDEF3|\\uD83D\\uDEA2|\\u2693\\uFE0F|\\uD83D\\uDCBA|\\uD83D\\uDEEC|\\uD83D\\uDEEB|\\uD83D\\uDEE9|\\uD83D\\uDEEA|\\uD83D\\uDEE6|\\uD83D\\uDEE8|\\uD83D\\uDEE7|\\u2708\\uFE0F|\\uD83D\\uDE81|\\uD83D\\uDE80|\\uD83D\\uDEA5|\\uD83D\\uDEA6|\\uD83D\\uDEA7|\\u26FD\\uFE0F|\\u26FD|\\uD83D\\uDE8F|\\uD83D\\uDEE3|\\uD83D\\uDEB2|\\uD83D\\uDE9C|\\uD83D\\uDE9B|\\uD83D\\uDE9A|\\uD83D\\uDE99|\\uD83D\\uDE98|\\uD83D\\uDE97|\\uD83D\\uDE96|\\uD83D\\uDE95|\\uD83D\\uDEA8|\\uD83D\\uDE94|\\uD83D\\uDE93|\\uD83D\\uDEF1|\\uD83D\\uDE92|\\uD83D\\uDE91|\\uD83D\\uDE90|\\uD83D\\uDE8E|\\uD83D\\uDE8D|\\uD83D\\uDE8C|\\uD83D\\uDEE4|\\uD83D\\uDE8A|\\uD83D\\uDE89|\\uD83D\\uDE88|\\uD83D\\uDE87|\\uD83D\\uDE86|\\uD83D\\uDE85|\\uD83D\\uDE84|\\uD83D\\uDE9D|\\uD83D\\uDE8B|\\uD83D\\uDEF2|\\uD83D\\uDE82|\\uD83D\\uDE9E|\\uD83D\\uDE83|\\uD83D\\uDD67|\\uD83D\\uDD66|\\uD83D\\uDD65|\\uD83D\\uDD64|\\uD83D\\uDD63|\\uD83D\\uDD62|\\uD83D\\uDD61|\\uD83D\\uDD60|\\uD83D\\uDD5F|\\uD83D\\uDD5E|\\uD83D\\uDD5D|\\uD83D\\uDD5C|\\uD83D\\uDD5B|\\uD83D\\uDD5A|\\uD83D\\uDD59|\\uD83D\\uDD58|\\uD83D\\uDD57|\\uD83D\\uDD56|\\uD83D\\uDD55|\\uD83D\\uDD54|\\uD83D\\uDD53|\\uD83D\\uDD52|\\uD83D\\uDD51|\\uD83D\\uDD50|\\uD83D\\uDD33|\\uD83D\\uDD32|\\u25FD\\uFE0F|\\u25FD|\\u25FE\\uFE0F|\\u25FE|\\u25FB\\uFE0F|\\u25FB|\\u25FC\\uFE0F|\\u25FC|\\u2B1C\\uFE0F|\\u2B1C|\\u2B1B\\uFE0F|\\u2B1B|\\u25AB\\uFE0F|\\u25AB|\\u25AA\\uFE0F|\\u25AA|\\uD83D\\uDD37|\\uD83D\\uDD36|\\uD83D\\uDD39|\\uD83D\\uDD38|\\uD83D\\uDD3B|\\uD83D\\uDD3A|\\uD83D\\uDD35|\\uD83D\\uDD34|\\uD83D\\uDD18|\\u26AB\\uFE0F|\\u26AB|\\u26AA\\uFE0F|\\u26AA|\\uD83D\\uDDF5|\\uD83D\\uDDF4|\\uD83D\\uDDF9|\\uD83D\\uDDF8|\\u2611\\uFE0F|\\u2666\\uFE0F|\\u2665\\uFE0F|\\u2663\\uFE0F|\\u2660\\uFE0F|\\uD83D\\uDCA0|\\uD83D\\uDCA2|\\u267B\\uFE0F|\\u267B|\\uD83C\\uDFF6|\\uD83C\\uDFF5|\\u2668\\uFE0F|\\u26A0\\uFE0F|\\u26A0|\\uD83D\\uDD31|\\uD83D\\uDDF2|\\uD83D\\uDD30|\\uD83D\\uDD2F|\\u26CE|\\uD83D\\uDEC8|\\u24C2\\uFE0F|\\u24C2|\\uD83C\\uDF00|\\uD83D\\uDD1C|\\uD83D\\uDD1D|\\uD83D\\uDD1B|\\uD83D\\uDD19|\\uD83D\\uDD1A|\\uD83D\\uDCAF|\\u2B55\\uFE0F|\\u2B55|\\u274C|\\uD83D\\uDEC6|\\u2049\\uFE0F|\\u203C\\uFE0F|\\u203C|\\u2757\\uFE0F|\\u303D\\uFE0F|\\u303D|\\u27BF|\\u27B0|\\uD83D\\uDCB2|\\uD83D\\uDCB1|\\u00AE|\\u00A9|\\uD83D\\uDDD8|\\uD83D\\uDD03|\\uD83D\\uDDD9|\\u2714\\uFE0F|\\u2716\\uFE0F|\\uD83D\\uDD23|\\uD83C\\uDFA6|\\uD83D\\uDCF6|\\u2139\\uFE0F|\\uD83D\\uDD20|\\uD83D\\uDD21|\\uD83D\\uDD24|\\uD83D\\uDD22|\\uD83D\\uDD1F|9\\uFE0F\\u20E3|9\\u20E3|8\\uFE0F\\u20E3|8\\u20E3|7\\uFE0F\\u20E3|7\\u20E3|6\\uFE0F\\u20E3|6\\u20E3|5\\uFE0F\\u20E3|5\\u20E3|4\\uFE0F\\u20E3|4\\u20E3|3\\uFE0F\\u20E3|3\\u20E3|2\\uFE0F\\u20E3|2\\u20E3|1\\uFE0F\\u20E3|1\\u20E3|0\\uFE0F\\u20E3|0\\u20E3|#\\uFE0F\\u20E3|#\\u20E3|\\uD83D\\uDD02|\\uD83D\\uDD01|\\uD83D\\uDD00|\\u2935\\uFE0F|\\u2934\\uFE0F|\\u21A9\\uFE0F|\\u21A9|\\u21AA\\uFE0F|\\u21AA|\\uD83D\\uDD04|\\u2194\\uFE0F|\\u2195\\uFE0F|\\u2196\\uFE0F|\\u2199\\uFE0F|\\u2198\\uFE0F|\\u2197\\uFE0F|\\u2B07\\uFE0F|\\u2B07|\\u2B06\\uFE0F|\\u2B06|\\u2B05\\uFE0F|\\u2B05|\\u27A1\\uFE0F|\\u27A1|\\u23EC|\\u23EB|\\u23EA|\\u23E9|\\uD83D\\uDD3D|\\uD83D\\uDD3C|\\u25C0\\uFE0F|\\u25C0|\\u25B6\\uFE0F|\\u25B6|\\uD83D\\uDEAE|\\uD83D\\uDEAD|\\uD83D\\uDEB0|\\u267F\\uFE0F|\\u267F|\\uD83D\\uDEBC|\\uD83D\\uDECA|\\uD83D\\uDEC9|\\uD83D\\uDEBA|\\uD83D\\uDEB9|\\uD83D\\uDEBB|\\u2653\\uFE0F|\\u2652\\uFE0F|\\u2651\\uFE0F|\\u2650\\uFE0F|\\u264F\\uFE0F|\\u264F|\\u264E\\uFE0F|\\u264E|\\u264D\\uFE0F|\\u264D|\\u264C\\uFE0F|\\u264C|\\u264B\\uFE0F|\\u264B|\\u264A\\uFE0F|\\u264A|\\u2649\\uFE0F|\\u2648\\uFE0F|\\uD83C\\uDFE7|\\uD83C\\uDD99|\\uD83C\\uDD97|\\uD83C\\uDD96|\\uD83C\\uDD95|\\uD83C\\uDD93|\\uD83C\\uDD92|\\uD83D\\uDEBE|\\uD83C\\uDD7F\\uFE0F|\\uD83C\\uDD7F|\\uD83C\\uDD94|\\uD83C\\uDD98|\\uD83C\\uDD7E|\\uD83C\\uDD91|\\uD83C\\uDD8E|\\uD83C\\uDD71|\\uD83C\\uDD70|\\uD83C\\uDD9A|\\uD83D\\uDCF4|\\uD83D\\uDCF3|\\u2734\\uFE0F|\\u274E|\\u2733\\uFE0F|\\u2747\\uFE0F|\\uD83D\\uDCB9|\\uD83C\\uDE2F\\uFE0F|\\uD83C\\uDE2F|\\uD83C\\uDE01|\\uD83C\\uDE02|\\uD83C\\uDE33|\\uD83C\\uDE39|\\uD83C\\uDE37|\\uD83C\\uDE3A|\\uD83C\\uDE38|\\uD83C\\uDE1A\\uFE0F|\\uD83C\\uDE1A|\\uD83C\\uDE36|\\uD83C\\uDE32|\\uD83C\\uDE35|\\uD83C\\uDE34|\\u3297\\uFE0F|\\u3299\\uFE0F|\\uD83D\\uDCAE|\\uD83C\\uDE50|\\uD83C\\uDE51|\\uD83D\\uDD72|\\uD83D\\uDD1E|\\uD83D\\uDCF5|\\uD83D\\uDEB1|\\uD83D\\uDEB3|\\uD83D\\uDEAF|\\uD83D\\uDEB7|\\uD83D\\uDCDB|\\u26D4\\uFE0F|\\u26D4|\\uD83D\\uDEAB|\\uD83D\\uDEC7|\\uD83D\\uDECC|\\uD83D\\uDDE3|\\uD83D\\uDD0E|\\uD83D\\uDD0D|\\uD83D\\uDEE1|\\uD83D\\uDEB8|\\uD83D\\uDDF1|\\uD83D\\uDDF0|\\uD83D\\uDDEF|\\uD83D\\uDDEE|\\uD83D\\uDDED|\\uD83D\\uDDEC|\\uD83D\\uDDEB|\\uD83D\\uDDEA|\\uD83D\\uDDE9|\\uD83D\\uDDE8|\\uD83D\\uDCAC|\\uD83D\\uDCAD|\\uD83D\\uDD4A|\\uD83D\\uDD49|\\uD83D\\uDD48|\\uD83D\\uDD47|\\uD83D\\uDD46|\\uD83C\\uDF9D|\\uD83C\\uDF9C|\\uD83D\\uDD6D|\\uD83D\\uDD15|\\uD83D\\uDD14|\\uD83D\\uDCA4|\\uD83D\\uDD6C|\\uD83D\\uDD6B|\\uD83D\\uDD6A|\\uD83D\\uDD69|\\uD83D\\uDD68|\\uD83D\\uDD07|\\uD83D\\uDD0A|\\uD83D\\uDD09|\\uD83D\\uDD08|\\uD83D\\uDCE2|\\uD83D\\uDCE3|\\uD83D\\uDD13|\\uD83D\\uDD12|\\uD83D\\uDD10|\\uD83D\\uDD0F|\\uD83D\\uDCDD|\\uD83D\\uDD8D|\\uD83D\\uDD8C|\\uD83D\\uDD8B|\\uD83D\\uDD8A|\\uD83D\\uDD89|\\u270F\\uFE0F|\\u270F|\\u2712\\uFE0F|\\uD83D\\uDDC4|\\uD83D\\uDCC2|\\uD83D\\uDCC1|\\uD83D\\uDDC1|\\uD83D\\uDDC0|\\uD83D\\uDD73|\\uD83C\\uDFF4|\\uD83C\\uDFF3|\\uD83C\\uDFF2|\\uD83C\\uDFF1|\\uD83D\\uDEA9|\\uD83D\\uDCCF|\\uD83D\\uDCCD|\\uD83D\\uDCD0|\\u2702\\uFE0F|\\uD83D\\uDD88|\\uD83D\\uDCCC|\\uD83D\\uDD87|\\uD83D\\uDCCE|\\uD83D\\uDD17|\\uD83D\\uDDC3|\\uD83D\\uDDC2|\\uD83D\\uDCC7|\\uD83D\\uDCDA|\\uD83D\\uDCD9|\\uD83D\\uDCD8|\\uD83D\\uDCD7|\\uD83D\\uDCD5|\\uD83D\\uDCD2|\\uD83D\\uDCD4|\\uD83D\\uDCD3|\\uD83D\\uDCD6|\\uD83D\\uDD6E|\\uD83D\\uDCCB|\\uD83D\\uDCDC|\\uD83D\\uDDBD|\\uD83D\\uDDBC|\\uD83D\\uDDBE|\\uD83D\\uDDDC|\\uD83D\\uDD06|\\uD83D\\uDD05|\\uD83D\\uDDF3|\\uD83D\\uDDD3|\\uD83D\\uDCC6|\\uD83D\\uDCC5|\\uD83D\\uDDE0|\\uD83D\\uDCCA|\\uD83D\\uDCC9|\\uD83D\\uDCC8|\\uD83D\\uDDD2|\\uD83D\\uDDCA|\\uD83D\\uDDC9|\\uD83D\\uDDC7|\\uD83D\\uDDC6|\\uD83D\\uDDD1|\\uD83D\\uDCD1|\\uD83D\\uDDD0|\\uD83D\\uDCC3|\\uD83D\\uDCC4|\\uD83D\\uDDCF|\\uD83D\\uDDB9|\\uD83D\\uDDCE|\\uD83D\\uDCEC|\\uD83D\\uDCED|\\uD83D\\uDCEB|\\uD83D\\uDCEA|\\uD83D\\uDCEE|\\uD83D\\uDCEF|\\uD83D\\uDCE6|\\uD83D\\uDCE4|\\uD83D\\uDCE5|\\uD83D\\uDCE7|\\uD83D\\uDCE8|\\uD83D\\uDCE9|\\uD83D\\uDD86|\\uD83D\\uDD85|\\uD83D\\uDD83|\\uD83D\\uDD82|\\u2709\\uFE0F|\\uD83D\\uDDDD|\\uD83D\\uDD11|\\uD83C\\uDFF7|\\uD83C\\uDF21|\\uD83D\\uDDDE|\\uD83D\\uDCF0|\\uD83D\\uDD16|\\uD83D\\uDD2B|\\uD83D\\uDD71|\\uD83D\\uDEAC|\\uD83D\\uDCA3|\\uD83D\\uDEE2|\\uD83D\\uDEE0|\\uD83D\\uDD28|\\uD83D\\uDD29|\\uD83D\\uDDE1|\\uD83D\\uDD2A|\\uD83D\\uDD27|\\uD83D\\uDD2E|\\uD83D\\uDD2D|\\uD83D\\uDD2C|\\uD83D\\uDC8A|\\uD83D\\uDC89|\\uD83D\\uDC88|\\uD83D\\uDEBD|\\uD83D\\uDEC1|\\uD83D\\uDEBF|\\uD83D\\uDEAA|\\uD83D\\uDC56|\\uD83D\\uDC54|\\uD83D\\uDC55|\\uD83D\\uDC5A|\\uD83D\\uDC58|\\uD83D\\uDC57|\\uD83D\\uDC59|\\uD83D\\uDC5F|\\uD83D\\uDC5E|\\uD83D\\uDC62|\\uD83D\\uDC60|\\uD83D\\uDC61|\\uD83D\\uDC52|\\uD83D\\uDD76|\\uD83D\\uDC53|\\uD83D\\uDC84|\\uD83C\\uDF92|\\uD83D\\uDCBC|\\uD83D\\uDC5C|\\uD83D\\uDC5B|\\uD83D\\uDC5D|\\uD83C\\uDF02|\\uD83D\\uDC8E|\\uD83D\\uDCB0|\\uD83D\\uDCB8|\\uD83D\\uDCB3|\\uD83D\\uDEF0|\\uD83D\\uDCE1|\\uD83D\\uDD6F|\\uD83D\\uDD26|\\uD83D\\uDCA1|\\uD83D\\uDD0C|\\uD83D\\uDD0B|\\uD83D\\uDCFC|\\uD83D\\uDDB8|\\uD83D\\uDCC0|\\uD83D\\uDCBF|\\uD83D\\uDDB4|\\uD83D\\uDDAD|\\uD83D\\uDDAB|\\uD83D\\uDDAA|\\uD83D\\uDCBE|\\uD83D\\uDCBD|\\uD83D\\uDCE0|\\uD83D\\uDD81|\\uD83D\\uDD7F|\\uD83D\\uDD7E|\\u260E\\uFE0F|\\u260E|\\uD83D\\uDD7B|\\uD83D\\uDCDE|\\uD83D\\uDD79|\\uD83D\\uDCDF|\\uD83D\\uDCFE|\\uD83D\\uDCFB|\\uD83C\\uDF9B|\\uD83C\\uDF9A|\\uD83C\\uDF99|\\uD83C\\uDF98|\\uD83D\\uDCFA|\\uD83D\\uDCFD|\\uD83C\\uDFA5|\\uD83D\\uDCF9|\\uD83D\\uDCF8|\\uD83D\\uDCF7|\\u231B\\uFE0F|\\u231B|\\u23F3|\\uD83D\\uDD70|\\u23F0|\\uD83D\\uDDA9|\\uD83D\\uDDD4|\\uD83D\\uDDA8|\\uD83D\\uDDA7|\\uD83D\\uDDA6|\\uD83D\\uDDB2|\\uD83D\\uDDAF|\\uD83D\\uDDAE|\\uD83D\\uDDB3|\\uD83D\\uDDA5|\\uD83D\\uDCBB|\\uD83D\\uDCF2|\\uD83D\\uDCF1|\\u231A\\uFE0F|\\u231A|\\uD83C\\uDF7C|\\uD83C\\uDF7B|\\uD83C\\uDF7A|\\uD83C\\uDF79|\\uD83C\\uDF78|\\uD83C\\uDF77|\\uD83C\\uDF76|\\u2615\\uFE0F|\\uD83C\\uDF75|\\uD83C\\uDF74|\\uD83C\\uDF73|\\uD83C\\uDF72|\\uD83C\\uDF71|\\uD83C\\uDF70|\\uD83C\\uDF6F|\\uD83C\\uDF6E|\\uD83C\\uDF6D|\\uD83C\\uDF6C|\\uD83C\\uDF6B|\\uD83C\\uDF6A|\\uD83C\\uDF69|\\uD83C\\uDF68|\\uD83C\\uDF67|\\uD83C\\uDF66|\\uD83C\\uDF65|\\uD83C\\uDF64|\\uD83C\\uDF63|\\uD83C\\uDF62|\\uD83C\\uDF61|\\uD83C\\uDF5F|\\uD83C\\uDF5E|\\uD83C\\uDF5D|\\uD83C\\uDF5C|\\uD83C\\uDF5B|\\uD83C\\uDF5A|\\uD83C\\uDF59|\\uD83C\\uDF58|\\uD83C\\uDF57|\\uD83C\\uDF56|\\uD83C\\uDF55|\\uD83C\\uDF54|\\uD83C\\uDF53|\\uD83C\\uDF52|\\uD83C\\uDF51|\\uD83C\\uDF50|\\uD83C\\uDF4F|\\uD83C\\uDF4E|\\uD83C\\uDF4D|\\uD83C\\uDF4C|\\uD83C\\uDF4B|\\uD83C\\uDF4A|\\uD83C\\uDF49|\\uD83C\\uDF48|\\uD83C\\uDF47|\\uD83C\\uDF36|\\uD83C\\uDF60|\\uD83C\\uDF3D|\\uD83C\\uDF46|\\uD83C\\uDF45|\\uD83C\\uDFA2|\\uD83C\\uDFA1|\\uD83C\\uDFA0|\\uD83C\\uDC04\\uFE0F|\\uD83C\\uDC04|\\uD83C\\uDCCF|\\uD83C\\uDFB4|\\uD83C\\uDFAE|\\uD83C\\uDFB2|\\uD83C\\uDFB0|\\uD83C\\uDFB3|\\uD83C\\uDFB1|\\uD83C\\uDFAF|\\uD83C\\uDFA8|\\uD83C\\uDF9F|\\uD83C\\uDF9E|\\uD83C\\uDFAC|\\uD83C\\uDFAA|\\uD83C\\uDFA9|\\uD83C\\uDFAB|\\uD83C\\uDFAD|\\uD83C\\uDFA4|\\uD83C\\uDFA7|\\uD83C\\uDFBC|\\uD83C\\uDFB6|\\uD83C\\uDFB5|\\uD83C\\uDFBA|\\uD83C\\uDFB7|\\uD83C\\uDFBB|\\uD83C\\uDFB8|\\uD83C\\uDFB9|\\uD83C\\uDFC1|\\uD83C\\uDFBD|\\uD83C\\uDFC5|\\uD83C\\uDFC6|\\u26F3\\uFE0F|\\u26F3|\\uD83C\\uDFC9|\\uD83C\\uDFBE|\\u26BE\\uFE0F|\\u26BE|\\uD83C\\uDFC8|\\uD83C\\uDFC0|\\u26BD\\uFE0F|\\u26BD|\\uD83C\\uDFA3|\\u26FA\\uFE0F|\\u26FA|\\uD83C\\uDFC7|\\uD83C\\uDFCE|\\uD83C\\uDFCD|\\uD83D\\uDEB5|\\uD83D\\uDEB4|\\u26C4\\uFE0F|\\u26C4|\\uD83C\\uDFBF|\\uD83C\\uDFC2|\\uD83D\\uDEC0|\\uD83C\\uDFC4|\\uD83C\\uDFCA|\\uD83D\\uDEA3|\\uD83C\\uDFCC|\\uD83C\\uDFCB|\\uD83D\\uDC83|\\uD83D\\uDEB6|\\uD83C\\uDFC3|\\uD83D\\uDC99|\\uD83D\\uDC9A|\\uD83D\\uDC9B|\\uD83D\\uDC9C|\\uD83D\\uDC9F|\\uD83C\\uDF94|\\uD83D\\uDC9D|\\uD83D\\uDC98|\\uD83D\\uDC96|\\uD83D\\uDC97|\\uD83D\\uDC93|\\uD83D\\uDC9E|\\uD83D\\uDC95|\\uD83D\\uDC8C|\\uD83D\\uDC94|\\u2764\\uFE0F|\\uD83C\\uDF95|\\uD83D\\uDC8D|\\uD83C\\uDFEE|\\uD83C\\uDF8C|\\uD83C\\uDF90|\\uD83C\\uDF8F|\\uD83C\\uDF8E|\\uD83C\\uDF96|\\uD83C\\uDF97|\\uD83D\\uDC51|\\uD83C\\uDF93|\\uD83D\\uDCA5|\\uD83D\\uDCAB|\\uD83C\\uDF88|\\uD83C\\uDF8A|\\uD83C\\uDF89|\\uD83C\\uDF87|\\uD83C\\uDF86|\\uD83C\\uDF91|\\uD83C\\uDF8D|\\uD83C\\uDF8B|\\uD83C\\uDF84|\\uD83C\\uDF83|\\uD83C\\uDF82|\\uD83C\\uDF81|\\uD83C\\uDF80|\\uD83C\\uDF2C|\\uD83C\\uDF1E|\\uD83C\\uDF1C|\\uD83C\\uDF1B|\\uD83C\\uDF1D|\\uD83C\\uDF1A|\\uD83C\\uDF18|\\uD83C\\uDF17|\\uD83C\\uDF16|\\uD83C\\uDF15|\\uD83C\\uDF14|\\uD83C\\uDF13|\\uD83C\\uDF12|\\uD83C\\uDF11|\\uD83C\\uDF0F|\\uD83C\\uDF0E|\\uD83C\\uDF0D|\\uD83C\\uDF10|\\uD83D\\uDDFE|\\uD83D\\uDDFB|\\uD83C\\uDF0C|\\uD83C\\uDF0B|\\uD83C\\uDF0A|\\uD83C\\uDF08|\\uD83C\\uDF05|\\uD83C\\uDF04|\\uD83C\\uDF20|\\u2B50\\uFE0F|\\u2B50|\\uD83C\\uDF1F|\\u2744\\uFE0F|\\uD83D\\uDCA8|\\uD83C\\uDF2B|\\u2614\\uFE0F|\\uD83D\\uDCA6|\\uD83D\\uDCA7|\\uD83C\\uDF2A|\\uD83C\\uDF29|\\uD83C\\uDF28|\\uD83C\\uDF27|\\u2601\\uFE0F|\\u26C5\\uFE0F|\\u26C5|\\u2600\\uFE0F|\\uD83C\\uDF19|\\uD83D\\uDD25|\\u26A1\\uFE0F|\\u26A1|\\uD83D\\uDC3E|\\uD83D\\uDD78|\\uD83D\\uDD77|\\uD83D\\uDC1E|\\uD83D\\uDC1D|\\uD83D\\uDC1C|\\uD83D\\uDC1B|\\uD83D\\uDC0C|\\uD83D\\uDC1A|\\uD83D\\uDC21|\\uD83D\\uDC20|\\uD83D\\uDC1F|\\uD83D\\uDC19|\\uD83D\\uDC2C|\\uD83D\\uDC33|\\uD83D\\uDC0B|\\uD83D\\uDC38|\\uD83D\\uDC22|\\uD83D\\uDC0D|\\uD83D\\uDC0A|\\uD83D\\uDC32|\\uD83D\\uDC09|\\uD83D\\uDC12|\\uD83D\\uDE4A|\\uD83D\\uDE49|\\uD83D\\uDE48|\\uD83D\\uDC35|\\uD83D\\uDC3C|\\uD83D\\uDC28|\\uD83D\\uDC3B|\\uD83D\\uDC3A|\\uD83D\\uDC36|\\uD83D\\uDC29|\\uD83D\\uDC15|\\uD83D\\uDC3D|\\uD83D\\uDC37|\\uD83D\\uDC16|\\uD83D\\uDC17|\\uD83D\\uDC2B|\\uD83D\\uDC2A|\\uD83D\\uDC18|\\uD83D\\uDC27|\\uD83D\\uDC26|\\uD83D\\uDC25|\\uD83D\\uDC23|\\uD83D\\uDC24|\\uD83D\\uDC14|\\uD83D\\uDC13|\\uD83D\\uDC10|\\uD83D\\uDC11|\\uD83D\\uDC0F|\\uD83D\\uDC34|\\uD83D\\uDC0E|\\uD83D\\uDC31|\\uD83D\\uDC08|\\uD83D\\uDC30|\\uD83D\\uDC07|\\uD83D\\uDC3F|\\uD83D\\uDC2F|\\uD83D\\uDC06|\\uD83D\\uDC05|\\uD83D\\uDC2E|\\uD83D\\uDC04|\\uD83D\\uDC03|\\uD83D\\uDC02|\\uD83D\\uDC39|\\uD83D\\uDC2D|\\uD83D\\uDC01|\\uD83D\\uDC00|\\uD83C\\uDF30|\\uD83C\\uDF44|\\uD83C\\uDF43|\\uD83C\\uDF42|\\uD83C\\uDF41|\\uD83C\\uDF40|\\uD83C\\uDF3F|\\uD83C\\uDF3E|\\uD83D\\uDC90|\\uD83C\\uDF3C|\\uD83C\\uDF3B|\\uD83C\\uDF3A|\\uD83C\\uDF39|\\uD83C\\uDF38|\\uD83C\\uDF37|\\uD83C\\uDF35|\\uD83C\\uDF34|\\uD83C\\uDF33|\\uD83C\\uDF32|\\uD83C\\uDF31|\\uD83D\\uDE4F|\\uD83D\\uDD9F|\\uD83D\\uDD9E|\\uD83D\\uDD99|\\uD83D\\uDD98|\\uD83D\\uDD97|\\uD83D\\uDD96|\\uD83D\\uDD95|\\uD83D\\uDD94|\\uD83D\\uDD93|\\uD83D\\uDD92|\\uD83D\\uDD91|\\uD83D\\uDD90|\\uD83D\\uDD8F|\\uD83D\\uDD8E|\\uD83D\\uDC50|\\uD83D\\uDCAA|\\u270B|\\u270A|\\uD83D\\uDC4A|\\u270C\\uFE0F|\\u270C|\\uD83D\\uDC4C|\\uD83D\\uDC49|\\uD83D\\uDC48|\\uD83D\\uDC47|\\uD83D\\uDC46|\\u261D\\uFE0F|\\u261D|\\uD83D\\uDC4E|\\uD83D\\uDC4D|\\uD83D\\uDC4B|\\uD83D\\uDC85|\\uD83D\\uDC45|\\uD83D\\uDC8B|\\uD83D\\uDDE2|\\uD83D\\uDC44|\\uD83D\\uDC43|\\uD83D\\uDC40|\\uD83D\\uDC41|\\uD83D\\uDC42|\\uD83D\\uDC4F|\\uD83D\\uDE4C|\\uD83D\\uDC68\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC8B\\u200D\\uD83D\\uDC68|\\uD83D\\uDC68\\u2764\\uD83D\\uDC8B\\uD83D\\uDC68|\\uD83D\\uDC69\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC8B\\u200D\\uD83D\\uDC69|\\uD83D\\uDC69\\u2764\\uD83D\\uDC8B\\uD83D\\uDC69|\\uD83D\\uDC8F|\\uD83D\\uDC68\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC68|\\uD83D\\uDC68\\u2764\\uD83D\\uDC68|\\uD83D\\uDC69\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC69|\\uD83D\\uDC69\\u2764\\uD83D\\uDC69|\\uD83D\\uDC91|\\uD83D\\uDC87|\\uD83D\\uDC86|\\uD83D\\uDE4D|\\uD83D\\uDE4E|\\uD83D\\uDE4B|\\uD83D\\uDE46|\\uD83D\\uDE45|\\uD83D\\uDC81|\\uD83D\\uDE47|\\uD83D\\uDC7E|\\uD83D\\uDC7D|\\uD83D\\uDC80|\\uD83D\\uDCA9|\\uD83D\\uDC7A|\\uD83D\\uDC79|\\uD83D\\uDC7B|\\uD83C\\uDF85|\\uD83D\\uDC7C|\\uD83D\\uDC82|\\uD83D\\uDC78|\\uD83D\\uDC77|\\uD83D\\uDC6E|\\uD83D\\uDC75|\\uD83D\\uDC74|\\uD83D\\uDC73|\\uD83D\\uDC72|\\uD83D\\uDC71|\\uD83D\\uDC70|\\uD83D\\uDC6F|\\uD83D\\uDC6D|\\uD83D\\uDC6C|\\uD83D\\uDC6B|\\uD83D\\uDC68\\u200D\\uD83D\\uDC68\\u200D\\uD83D\\uDC67\\u200D\\uD83D\\uDC67|\\uD83D\\uDC68\\uD83D\\uDC68\\uD83D\\uDC67\\uD83D\\uDC67|\\uD83D\\uDC68\\u200D\\uD83D\\uDC68\\u200D\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC68\\uD83D\\uDC68\\uD83D\\uDC66\\uD83D\\uDC66|\\uD83D\\uDC68\\u200D\\uD83D\\uDC68\\u200D\\uD83D\\uDC67|\\uD83D\\uDC68\\uD83D\\uDC68\\uD83D\\uDC67\\uD83D\\uDC66|\\uD83D\\uDC68\\uD83D\\uDC68\\uD83D\\uDC67|\\uD83D\\uDC68\\u200D\\uD83D\\uDC68\\u200D\\uD83D\\uDC66|\\uD83D\\uDC68\\uD83D\\uDC68\\uD83D\\uDC66|\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D\\uD83D\\uDC67\\u200D\\uD83D\\uDC67|\\uD83D\\uDC69\\uD83D\\uDC69\\uD83D\\uDC67\\uD83D\\uDC67|\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC69\\uD83D\\uDC69\\uD83D\\uDC66\\uD83D\\uDC66|\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D\\uD83D\\uDC67\\u200D\\uD83D\\uDC66|\\uD83D\\uDC69\\uD83D\\uDC69\\uD83D\\uDC67\\uD83D\\uDC66|\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D\\uD83D\\uDC67|\\uD83D\\uDC69\\uD83D\\uDC69\\uD83D\\uDC67|\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D\\uD83D\\uDC66|\\uD83D\\uDC69\\uD83D\\uDC69\\uD83D\\uDC66|\\uD83D\\uDC68\\u200D\\uD83D\\uDC69\\u200D\\uD83D\\uDC67\\u200D\\uD83D\\uDC67|\\uD83D\\uDC68\\uD83D\\uDC69\\uD83D\\uDC67\\uD83D\\uDC67|\\uD83D\\uDC68\\u200D\\uD83D\\uDC69\\u200D\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC68\\uD83D\\uDC69\\uD83D\\uDC66\\uD83D\\uDC66|\\uD83D\\uDC68\\u200D\\uD83D\\uDC69\\u200D\\uD83D\\uDC67\\u200D\\uD83D\\uDC66|\\uD83D\\uDC68\\uD83D\\uDC69\\uD83D\\uDC67\\uD83D\\uDC66|\\uD83D\\uDC68\\u200D\\uD83D\\uDC69\\u200D\\uD83D\\uDC67|\\uD83D\\uDC68\\uD83D\\uDC69\\uD83D\\uDC67|\\uD83D\\uDC6A|\\uD83D\\uDC69|\\uD83D\\uDC68|\\uD83D\\uDC67|\\uD83D\\uDC66|\\uD83D\\uDC76|\\uD83D\\uDD75|\\uD83D\\uDD74|\\uD83D\\uDC65|\\uD83D\\uDC64|\\uD83D\\uDC63|\\uD83D\\uDE40|\\uD83D\\uDE3F|\\uD83D\\uDE3E|\\uD83D\\uDE3D|\\uD83D\\uDE3C|\\uD83D\\uDE3B|\\uD83D\\uDE3A|\\uD83D\\uDE39|\\uD83D\\uDE38|\\uD83D\\uDE42|\\uD83D\\uDE41|\\uD83D\\uDE37|\\uD83D\\uDE36|\\uD83D\\uDE35|\\uD83D\\uDE34|\\uD83D\\uDE33|\\uD83D\\uDE32|\\uD83D\\uDE31|\\uD83D\\uDE30|\\uD83D\\uDE2F|\\uD83D\\uDE2E|\\uD83D\\uDE2D|\\uD83D\\uDE2C|\\uD83D\\uDE2B|\\uD83D\\uDE2A|\\uD83D\\uDE29|\\uD83D\\uDE28|\\uD83D\\uDE27|\\uD83D\\uDE26|\\uD83D\\uDE25|\\uD83D\\uDE24|\\uD83D\\uDE23|\\uD83D\\uDE22|\\uD83D\\uDE21|\\uD83D\\uDE20|\\uD83D\\uDE1F|\\uD83D\\uDE1E|\\uD83D\\uDE1D|\\uD83D\\uDE1C|\\uD83D\\uDE1B|\\uD83D\\uDE1A|\\uD83D\\uDE19|\\uD83D\\uDE18|\\uD83D\\uDE17|\\uD83D\\uDE16|\\uD83D\\uDE15|\\uD83D\\uDE14|\\uD83D\\uDE13|\\uD83D\\uDE12|\\uD83D\\uDE11|\\uD83D\\uDE10|\\uD83D\\uDE0F|\\uD83D\\uDE0E|\\uD83D\\uDE0D|\\uD83D\\uDE0C|\\uD83D\\uDE0B|\\u263A\\uFE0F|\\u263A|\\uD83D\\uDE0A|\\uD83D\\uDE09|\\uD83D\\uDC7F|\\uD83D\\uDE08|\\uD83D\\uDE07|\\uD83D\\uDE06|\\uD83D\\uDE05|\\uD83D\\uDE04|\\uD83D\\uDE03|\\uD83D\\uDE02|\\uD83D\\uDE01|\\uD83D\\uDE00)';
  //ns.jsecapeMap = {"\u2049":"2049","\u2122":"2122","\u2194":"2194","\u2195":"2195","\u2196":"2196","\u2197":"2197","\u2198":"2198","\u2199":"2199","\u2600":"2600","\u2601":"2601","\u2611":"2611","\u2614":"2614","\u2615":"2615","\u2648":"2648","\u2649":"2649","\u2650":"2650","\u2651":"2651","\u2652":"2652","\u2653":"2653","\u2660":"2660","\u2663":"2663","\u2665":"2665","\u2666":"2666","\u2668":"2668","\u2693":"2693","\u2702":"2702","\u2705":"2705","\u2708":"2708","\u2709":"2709","\u2712":"2712","\u2714":"2714","\u2716":"2716","\u2728":"2728","\u2733":"2733","\u2734":"2734","\u2744":"2744","\u2747":"2747","\u2753":"2753","\u2754":"2754","\u2755":"2755","\u2757":"2757","\u2764":"2764","\u2795":"2795","\u2796":"2796","\u2797":"2797","\u2934":"2934","\u2935":"2935","\u3030":"3030","\u3297":"3297","\u3299":"3299","\uD83C\uDDFF\uD83C\uDDFC":"1F1FF-1F1FC","\uD83C\uDDFF\uD83C\uDDF2":"1F1FF-1F1F2","\uD83C\uDDFE\uD83C\uDDEA":"1F1FE-1F1EA","\uD83C\uDDEA\uD83C\uDDED":"1F1EA-1F1ED","\uD83C\uDDFC\uD83C\uDDEB":"1F1FC-1F1EB","\uD83C\uDDFB\uD83C\uDDEA":"1F1FB-1F1EA","\uD83C\uDDFB\uD83C\uDDE6":"1F1FB-1F1E6","\uD83C\uDDFB\uD83C\uDDFA":"1F1FB-1F1FA","\uD83C\uDDFA\uD83C\uDDFF":"1F1FA-1F1FF","\uD83C\uDDFA\uD83C\uDDFE":"1F1FA-1F1FE","\uD83C\uDDFA\uD83C\uDDE6":"1F1FA-1F1E6","\uD83C\uDDFA\uD83C\uDDEC":"1F1FA-1F1EC","\uD83C\uDDFB\uD83C\uDDEE":"1F1FB-1F1EE","\uD83C\uDDF9\uD83C\uDDFB":"1F1F9-1F1FB","\uD83C\uDDF9\uD83C\uDDF2":"1F1F9-1F1F2","\uD83C\uDDF9\uD83C\uDDF3":"1F1F9-1F1F3","\uD83C\uDDF9\uD83C\uDDF9":"1F1F9-1F1F9","\uD83C\uDDF9\uD83C\uDDF4":"1F1F9-1F1F4","\uD83C\uDDF9\uD83C\uDDEC":"1F1F9-1F1EC","\uD83C\uDDF9\uD83C\uDDED":"1F1F9-1F1ED","\uD83C\uDDF9\uD83C\uDDFF":"1F1F9-1F1FF","\uD83C\uDDF9\uD83C\uDDEF":"1F1F9-1F1EF","\uD83C\uDDF9\uD83C\uDDFC":"1F1F9-1F1FC","\uD83C\uDDF8\uD83C\uDDFE":"1F1F8-1F1FE","\uD83C\uDDF8\uD83C\uDDFF":"1F1F8-1F1FF","\uD83C\uDDF8\uD83C\uDDF7":"1F1F8-1F1F7","\uD83C\uDDF8\uD83C\uDDE9":"1F1F8-1F1E9","\uD83C\uDDF1\uD83C\uDDF0":"1F1F1-1F1F0","\uD83C\uDDF8\uD83C\uDDF4":"1F1F8-1F1F4","\uD83C\uDDF8\uD83C\uDDE7":"1F1F8-1F1E7","\uD83C\uDDF8\uD83C\uDDEE":"1F1F8-1F1EE","\uD83C\uDDF8\uD83C\uDDF0":"1F1F8-1F1F0","\uD83C\uDDF8\uD83C\uDDF1":"1F1F8-1F1F1","\uD83C\uDDF8\uD83C\uDDE8":"1F1F8-1F1E8","\uD83C\uDDF7\uD83C\uDDF8":"1F1F7-1F1F8","\uD83C\uDDF8\uD83C\uDDF3":"1F1F8-1F1F3","\uD83C\uDDF8\uD83C\uDDF9":"1F1F8-1F1F9","\uD83C\uDDF8\uD83C\uDDF2":"1F1F8-1F1F2","\uD83C\uDDFC\uD83C\uDDF8":"1F1FC-1F1F8","\uD83C\uDDFB\uD83C\uDDE8":"1F1FB-1F1E8","\uD83C\uDDF1\uD83C\uDDE8":"1F1F1-1F1E8","\uD83C\uDDF0\uD83C\uDDF3":"1F1F0-1F1F3","\uD83C\uDDF8\uD83C\uDDED":"1F1F8-1F1ED","\uD83C\uDDF7\uD83C\uDDFC":"1F1F7-1F1FC","\uD83C\uDDF7\uD83C\uDDF4":"1F1F7-1F1F4","\uD83C\uDDF6\uD83C\uDDE6":"1F1F6-1F1E6","\uD83C\uDDF5\uD83C\uDDEA":"1F1F5-1F1EA","\uD83C\uDDF5\uD83C\uDDFE":"1F1F5-1F1FE","\uD83C\uDDF5\uD83C\uDDEC":"1F1F5-1F1EC","\uD83C\uDDF5\uD83C\uDDE6":"1F1F5-1F1E6","\uD83C\uDDF5\uD83C\uDDF8":"1F1F5-1F1F8","\uD83C\uDDF5\uD83C\uDDFC":"1F1F5-1F1FC","\uD83C\uDDF5\uD83C\uDDF0":"1F1F5-1F1F0","\uD83C\uDDF4\uD83C\uDDF2":"1F1F4-1F1F2","\uD83C\uDDF0\uD83C\uDDF5":"1F1F0-1F1F5","\uD83C\uDDF3\uD83C\uDDFA":"1F1F3-1F1FA","\uD83C\uDDF3\uD83C\uDDEC":"1F1F3-1F1EC","\uD83C\uDDF3\uD83C\uDDEA":"1F1F3-1F1EA","\uD83C\uDDF3\uD83C\uDDEE":"1F1F3-1F1EE","\uD83C\uDDF3\uD83C\uDDE8":"1F1F3-1F1E8","\uD83C\uDDF3\uD83C\uDDF5":"1F1F3-1F1F5","\uD83C\uDDF3\uD83C\uDDF7":"1F1F3-1F1F7","\uD83C\uDDF3\uD83C\uDDE6":"1F1F3-1F1E6","\uD83C\uDDF2\uD83C\uDDF2":"1F1F2-1F1F2","\uD83C\uDDF2\uD83C\uDDFF":"1F1F2-1F1FF","\uD83C\uDDF2\uD83C\uDDE6":"1F1F2-1F1E6","\uD83C\uDDF2\uD83C\uDDF8":"1F1F2-1F1F8","\uD83C\uDDF2\uD83C\uDDEA":"1F1F2-1F1EA","\uD83C\uDDF2\uD83C\uDDF3":"1F1F2-1F1F3","\uD83C\uDDF2\uD83C\uDDE8":"1F1F2-1F1E8","\uD83C\uDDF2\uD83C\uDDE9":"1F1F2-1F1E9","\uD83C\uDDEB\uD83C\uDDF2":"1F1EB-1F1F2","\uD83C\uDDF2\uD83C\uDDFA":"1F1F2-1F1FA","\uD83C\uDDF2\uD83C\uDDF7":"1F1F2-1F1F7","\uD83C\uDDF2\uD83C\uDDED":"1F1F2-1F1ED","\uD83C\uDDF2\uD83C\uDDF9":"1F1F2-1F1F9","\uD83C\uDDF2\uD83C\uDDF1":"1F1F2-1F1F1","\uD83C\uDDF2\uD83C\uDDFB":"1F1F2-1F1FB","\uD83C\uDDF2\uD83C\uDDFC":"1F1F2-1F1FC","\uD83C\uDDF2\uD83C\uDDEC":"1F1F2-1F1EC","\uD83C\uDDF2\uD83C\uDDF0":"1F1F2-1F1F0","\uD83C\uDDF1\uD83C\uDDFA":"1F1F1-1F1FA","\uD83C\uDDF1\uD83C\uDDF9":"1F1F1-1F1F9","\uD83C\uDDF1\uD83C\uDDEE":"1F1F1-1F1EE","\uD83C\uDDF1\uD83C\uDDFE":"1F1F1-1F1FE","\uD83C\uDDF1\uD83C\uDDF7":"1F1F1-1F1F7","\uD83C\uDDF1\uD83C\uDDF8":"1F1F1-1F1F8","\uD83C\uDDF1\uD83C\uDDE7":"1F1F1-1F1E7","\uD83C\uDDF1\uD83C\uDDFB":"1F1F1-1F1FB","\uD83C\uDDF1\uD83C\uDDE6":"1F1F1-1F1E6","\uD83C\uDDF0\uD83C\uDDEC":"1F1F0-1F1EC","\uD83C\uDDF0\uD83C\uDDFC":"1F1F0-1F1FC","\uD83C\uDDFD\uD83C\uDDF0":"1F1FD-1F1F0","\uD83C\uDDF0\uD83C\uDDEE":"1F1F0-1F1EE","\uD83C\uDDF0\uD83C\uDDEA":"1F1F0-1F1EA","\uD83C\uDDF0\uD83C\uDDFF":"1F1F0-1F1FF","\uD83C\uDDEF\uD83C\uDDF4":"1F1EF-1F1F4","\uD83C\uDDEF\uD83C\uDDEA":"1F1EF-1F1EA","\uD83C\uDDEF\uD83C\uDDF2":"1F1EF-1F1F2","\uD83C\uDDEE\uD83C\uDDF6":"1F1EE-1F1F6","\uD83C\uDDEE\uD83C\uDDF7":"1F1EE-1F1F7","\uD83C\uDDEE\uD83C\uDDF8":"1F1EE-1F1F8","\uD83C\uDDED\uD83C\uDDFA":"1F1ED-1F1FA","\uD83C\uDDED\uD83C\uDDF3":"1F1ED-1F1F3","\uD83C\uDDED\uD83C\uDDF9":"1F1ED-1F1F9","\uD83C\uDDEC\uD83C\uDDFE":"1F1EC-1F1FE","\uD83C\uDDEC\uD83C\uDDFC":"1F1EC-1F1FC","\uD83C\uDDEC\uD83C\uDDF3":"1F1EC-1F1F3","\uD83C\uDDEC\uD83C\uDDF9":"1F1EC-1F1F9","\uD83C\uDDEC\uD83C\uDDFA":"1F1EC-1F1FA","\uD83C\uDDEC\uD83C\uDDE9":"1F1EC-1F1E9","\uD83C\uDDEC\uD83C\uDDF1":"1F1EC-1F1F1","\uD83C\uDDEC\uD83C\uDDF7":"1F1EC-1F1F7","\uD83C\uDDEC\uD83C\uDDEE":"1F1EC-1F1EE","\uD83C\uDDEC\uD83C\uDDED":"1F1EC-1F1ED","\uD83C\uDDEC\uD83C\uDDEA":"1F1EC-1F1EA","\uD83C\uDDEC\uD83C\uDDF2":"1F1EC-1F1F2","\uD83C\uDDEC\uD83C\uDDE6":"1F1EC-1F1E6","\uD83C\uDDF5\uD83C\uDDEB":"1F1F5-1F1EB","\uD83C\uDDEB\uD83C\uDDEF":"1F1EB-1F1EF","\uD83C\uDDEB\uD83C\uDDF4":"1F1EB-1F1F4","\uD83C\uDDEB\uD83C\uDDF0":"1F1EB-1F1F0","\uD83C\uDDEA\uD83C\uDDF9":"1F1EA-1F1F9","\uD83C\uDDEA\uD83C\uDDEA":"1F1EA-1F1EA","\uD83C\uDDEA\uD83C\uDDF7":"1F1EA-1F1F7","\uD83C\uDDEC\uD83C\uDDF6":"1F1EC-1F1F6","\uD83C\uDDF8\uD83C\uDDFB":"1F1F8-1F1FB","\uD83C\uDDEA\uD83C\uDDEC":"1F1EA-1F1EC","\uD83C\uDDEA\uD83C\uDDE8":"1F1EA-1F1E8","\uD83C\uDDF9\uD83C\uDDF1":"1F1F9-1F1F1","\uD83C\uDDE9\uD83C\uDDF4":"1F1E9-1F1F4","\uD83C\uDDE9\uD83C\uDDF2":"1F1E9-1F1F2","\uD83C\uDDE9\uD83C\uDDEF":"1F1E9-1F1EF","\uD83C\uDDE8\uD83C\uDDFF":"1F1E8-1F1FF","\uD83C\uDDE8\uD83C\uDDFE":"1F1E8-1F1FE","\uD83C\uDDE8\uD83C\uDDFA":"1F1E8-1F1FA","\uD83C\uDDED\uD83C\uDDF7":"1F1ED-1F1F7","\uD83C\uDDE8\uD83C\uDDEE":"1F1E8-1F1EE","\uD83C\uDDE8\uD83C\uDDF7":"1F1E8-1F1F7","\uD83C\uDDF9\uD83C\uDDE9":"1F1F9-1F1E9","\uD83C\uDDE8\uD83C\uDDEC":"1F1E8-1F1EC","\uD83C\uDDE8\uD83C\uDDE9":"1F1E8-1F1E9","\uD83C\uDDF0\uD83C\uDDF2":"1F1F0-1F1F2","\uD83C\uDDE8\uD83C\uDDEB":"1F1E8-1F1EB","\uD83C\uDDF0\uD83C\uDDFE":"1F1F0-1F1FE","\uD83C\uDDE8\uD83C\uDDFB":"1F1E8-1F1FB","\uD83C\uDDE8\uD83C\uDDF2":"1F1E8-1F1F2","\uD83C\uDDF0\uD83C\uDDED":"1F1F0-1F1ED","\uD83C\uDDE7\uD83C\uDDEE":"1F1E7-1F1EE","\uD83C\uDDE7\uD83C\uDDEB":"1F1E7-1F1EB","\uD83C\uDDE7\uD83C\uDDEC":"1F1E7-1F1EC","\uD83C\uDDE7\uD83C\uDDF3":"1F1E7-1F1F3","\uD83C\uDDE7\uD83C\uDDFC":"1F1E7-1F1FC","\uD83C\uDDE7\uD83C\uDDE6":"1F1E7-1F1E6","\uD83C\uDDE7\uD83C\uDDF4":"1F1E7-1F1F4","\uD83C\uDDE7\uD83C\uDDF9":"1F1E7-1F1F9","\uD83C\uDDE7\uD83C\uDDF2":"1F1E7-1F1F2","\uD83C\uDDE7\uD83C\uDDEF":"1F1E7-1F1EF","\uD83C\uDDE7\uD83C\uDDFF":"1F1E7-1F1FF","\uD83C\uDDE7\uD83C\uDDFE":"1F1E7-1F1FE","\uD83C\uDDE7\uD83C\uDDE7":"1F1E7-1F1E7","\uD83C\uDDE7\uD83C\uDDE9":"1F1E7-1F1E9","\uD83C\uDDE7\uD83C\uDDED":"1F1E7-1F1ED","\uD83C\uDDE7\uD83C\uDDF8":"1F1E7-1F1F8","\uD83C\uDDE6\uD83C\uDDFF":"1F1E6-1F1FF","\uD83C\uDDE6\uD83C\uDDE8":"1F1E6-1F1E8","\uD83C\uDDE6\uD83C\uDDFC":"1F1E6-1F1FC","\uD83C\uDDE6\uD83C\uDDF2":"1F1E6-1F1F2","\uD83C\uDDE6\uD83C\uDDF7":"1F1E6-1F1F7","\uD83C\uDDE6\uD83C\uDDEC":"1F1E6-1F1EC","\uD83C\uDDE6\uD83C\uDDEE":"1F1E6-1F1EE","\uD83C\uDDE6\uD83C\uDDF4":"1F1E6-1F1F4","\uD83C\uDDE6\uD83C\uDDE9":"1F1E6-1F1E9","\uD83C\uDDE9\uD83C\uDDFF":"1F1E9-1F1FF","\uD83C\uDDE6\uD83C\uDDF1":"1F1E6-1F1F1","\uD83C\uDDE6\uD83C\uDDEB":"1F1E6-1F1EB","\uD83C\uDDFB\uD83C\uDDF3":"1F1FB-1F1F3","\uD83C\uDDE6\uD83C\uDDEA":"1F1E6-1F1EA","\uD83C\uDDFA\uD83C\uDDF8":"1F1FA-1F1F8","\uD83C\uDDEC\uD83C\uDDE7":"1F1EC-1F1E7","\uD83C\uDDF9\uD83C\uDDF7":"1F1F9-1F1F7","\uD83C\uDDE8\uD83C\uDDED":"1F1E8-1F1ED","\uD83C\uDDF8\uD83C\uDDEA":"1F1F8-1F1EA","\uD83C\uDDEA\uD83C\uDDF8":"1F1EA-1F1F8","\uD83C\uDDFF\uD83C\uDDE6":"1F1FF-1F1E6","\uD83C\uDDF8\uD83C\uDDEC":"1F1F8-1F1EC","\uD83C\uDDF8\uD83C\uDDE6":"1F1F8-1F1E6","\uD83C\uDDF7\uD83C\uDDFA":"1F1F7-1F1FA","\uD83C\uDDF5\uD83C\uDDF7":"1F1F5-1F1F7","\uD83C\uDDF5\uD83C\uDDF9":"1F1F5-1F1F9","\uD83C\uDDF5\uD83C\uDDF1":"1F1F5-1F1F1","\uD83C\uDDF5\uD83C\uDDED":"1F1F5-1F1ED","\uD83C\uDDF3\uD83C\uDDF4":"1F1F3-1F1F4","\uD83C\uDDF3\uD83C\uDDFF":"1F1F3-1F1FF","\uD83C\uDDF3\uD83C\uDDF1":"1F1F3-1F1F1","\uD83C\uDDF2\uD83C\uDDFD":"1F1F2-1F1FD","\uD83C\uDDF2\uD83C\uDDFE":"1F1F2-1F1FE","\uD83C\uDDF2\uD83C\uDDF4":"1F1F2-1F1F4","\uD83C\uDDF0\uD83C\uDDF7":"1F1F0-1F1F7","\uD83C\uDDEF\uD83C\uDDF5":"1F1EF-1F1F5","\uD83C\uDDEE\uD83C\uDDF9":"1F1EE-1F1F9","\uD83C\uDDEE\uD83C\uDDF1":"1F1EE-1F1F1","\uD83C\uDDEE\uD83C\uDDEA":"1F1EE-1F1EA","\uD83C\uDDEE\uD83C\uDDE9":"1F1EE-1F1E9","\uD83C\uDDEE\uD83C\uDDF3":"1F1EE-1F1F3","\uD83C\uDDED\uD83C\uDDF0":"1F1ED-1F1F0","\uD83C\uDDE9\uD83C\uDDEA":"1F1E9-1F1EA","\uD83C\uDDEB\uD83C\uDDF7":"1F1EB-1F1F7","\uD83C\uDDEB\uD83C\uDDEE":"1F1EB-1F1EE","\uD83C\uDDE9\uD83C\uDDF0":"1F1E9-1F1F0","\uD83C\uDDE8\uD83C\uDDF4":"1F1E8-1F1F4","\uD83C\uDDE8\uD83C\uDDF3":"1F1E8-1F1F3","\uD83C\uDDE8\uD83C\uDDF1":"1F1E8-1F1F1","\uD83C\uDDE8\uD83C\uDDE6":"1F1E8-1F1E6","\uD83C\uDDE7\uD83C\uDDF7":"1F1E7-1F1F7","\uD83C\uDDE7\uD83C\uDDEA":"1F1E7-1F1EA","\uD83C\uDDE6\uD83C\uDDF9":"1F1E6-1F1F9","\uD83C\uDDE6\uD83C\uDDFA":"1F1E6-1F1FA","\uD83D\uDDFA":"1F5FA","\uD83C\uDFEB":"1F3EB","\uD83C\uDFEA":"1F3EA","\u26EA\uFE0F":"26EA","\u26EA":"26EA","\uD83D\uDC92":"1F492","\uD83C\uDFE9":"1F3E9","\uD83C\uDFE8":"1F3E8","\uD83C\uDFE6":"1F3E6","\uD83C\uDFE5":"1F3E5","\uD83C\uDFE4":"1F3E4","\uD83C\uDFE3":"1F3E3","\uD83C\uDFED":"1F3ED","\uD83C\uDFEC":"1F3EC","\uD83C\uDFE2":"1F3E2","\uD83C\uDFD7":"1F3D7","\uD83C\uDFDA":"1F3DA","\uD83C\uDFE1":"1F3E1","\uD83C\uDFD8":"1F3D8","\uD83C\uDFE0":"1F3E0","\uD83C\uDF09":"1F309","\uD83C\uDF03":"1F303","\uD83C\uDF06":"1F306","\uD83C\uDF07":"1F307","\uD83C\uDFD9":"1F3D9","\uD83C\uDFDE":"1F3DE","\uD83C\uDFDD":"1F3DD","\uD83C\uDFDC":"1F3DC","\uD83C\uDFD6":"1F3D6","\uD83C\uDFD5":"1F3D5","\uD83C\uDFD4":"1F3D4","\uD83C\uDFDF":"1F3DF","\uD83C\uDFDB":"1F3DB","\uD83C\uDFEF":"1F3EF","\uD83C\uDFF0":"1F3F0","\u26F2\uFE0F":"26F2","\u26F2":"26F2","\uD83D\uDDFC":"1F5FC","\uD83C\uDF01":"1F301","\uD83D\uDDFF":"1F5FF","\uD83D\uDDFD":"1F5FD","\uD83D\uDECD":"1F6CD","\uD83C\uDF7D":"1F37D","\uD83D\uDECB":"1F6CB","\uD83D\uDECF":"1F6CF","\uD83D\uDECE":"1F6CE","\uD83D\uDCB5":"1F4B5","\uD83D\uDCB7":"1F4B7","\uD83D\uDCB6":"1F4B6","\uD83D\uDCB4":"1F4B4","\uD83D\uDEC5":"1F6C5","\uD83D\uDEC4":"1F6C4","\uD83D\uDEC3":"1F6C3","\uD83D\uDEC2":"1F6C2","\uD83D\uDE9F":"1F69F","\uD83D\uDEA0":"1F6A0","\uD83D\uDEA1":"1F6A1","\u26F5\uFE0F":"26F5","\u26F5":"26F5","\uD83D\uDEA4":"1F6A4","\uD83D\uDEE5":"1F6E5","\uD83D\uDEF3":"1F6F3","\uD83D\uDEA2":"1F6A2","\u2693\uFE0F":"2693","\uD83D\uDCBA":"1F4BA","\uD83D\uDEEC":"1F6EC","\uD83D\uDEEB":"1F6EB","\uD83D\uDEE9":"1F6E9","\uD83D\uDEEA":"1F6EA","\uD83D\uDEE6":"1F6E6","\uD83D\uDEE8":"1F6E8","\uD83D\uDEE7":"1F6E7","\u2708\uFE0F":"2708","\uD83D\uDE81":"1F681","\uD83D\uDE80":"1F680","\uD83D\uDEA5":"1F6A5","\uD83D\uDEA6":"1F6A6","\uD83D\uDEA7":"1F6A7","\u26FD\uFE0F":"26FD","\u26FD":"26FD","\uD83D\uDE8F":"1F68F","\uD83D\uDEE3":"1F6E3","\uD83D\uDEB2":"1F6B2","\uD83D\uDE9C":"1F69C","\uD83D\uDE9B":"1F69B","\uD83D\uDE9A":"1F69A","\uD83D\uDE99":"1F699","\uD83D\uDE98":"1F698","\uD83D\uDE97":"1F697","\uD83D\uDE96":"1F696","\uD83D\uDE95":"1F695","\uD83D\uDEA8":"1F6A8","\uD83D\uDE94":"1F694","\uD83D\uDE93":"1F693","\uD83D\uDEF1":"1F6F1","\uD83D\uDE92":"1F692","\uD83D\uDE91":"1F691","\uD83D\uDE90":"1F690","\uD83D\uDE8E":"1F68E","\uD83D\uDE8D":"1F68D","\uD83D\uDE8C":"1F68C","\uD83D\uDEE4":"1F6E4","\uD83D\uDE8A":"1F68A","\uD83D\uDE89":"1F689","\uD83D\uDE88":"1F688","\uD83D\uDE87":"1F687","\uD83D\uDE86":"1F686","\uD83D\uDE85":"1F685","\uD83D\uDE84":"1F684","\uD83D\uDE9D":"1F69D","\uD83D\uDE8B":"1F68B","\uD83D\uDEF2":"1F6F2","\uD83D\uDE82":"1F682","\uD83D\uDE9E":"1F69E","\uD83D\uDE83":"1F683","\uD83D\uDD67":"1F567","\uD83D\uDD66":"1F566","\uD83D\uDD65":"1F565","\uD83D\uDD64":"1F564","\uD83D\uDD63":"1F563","\uD83D\uDD62":"1F562","\uD83D\uDD61":"1F561","\uD83D\uDD60":"1F560","\uD83D\uDD5F":"1F55F","\uD83D\uDD5E":"1F55E","\uD83D\uDD5D":"1F55D","\uD83D\uDD5C":"1F55C","\uD83D\uDD5B":"1F55B","\uD83D\uDD5A":"1F55A","\uD83D\uDD59":"1F559","\uD83D\uDD58":"1F558","\uD83D\uDD57":"1F557","\uD83D\uDD56":"1F556","\uD83D\uDD55":"1F555","\uD83D\uDD54":"1F554","\uD83D\uDD53":"1F553","\uD83D\uDD52":"1F552","\uD83D\uDD51":"1F551","\uD83D\uDD50":"1F550","\uD83D\uDD33":"1F533","\uD83D\uDD32":"1F532","\u25FD\uFE0F":"25FD","\u25FD":"25FD","\u25FE\uFE0F":"25FE","\u25FE":"25FE","\u25FB\uFE0F":"25FB","\u25FB":"25FB","\u25FC\uFE0F":"25FC","\u25FC":"25FC","\u2B1C\uFE0F":"2B1C","\u2B1C":"2B1C","\u2B1B\uFE0F":"2B1B","\u2B1B":"2B1B","\u25AB\uFE0F":"25AB","\u25AB":"25AB","\u25AA\uFE0F":"25AA","\u25AA":"25AA","\uD83D\uDD37":"1F537","\uD83D\uDD36":"1F536","\uD83D\uDD39":"1F539","\uD83D\uDD38":"1F538","\uD83D\uDD3B":"1F53B","\uD83D\uDD3A":"1F53A","\uD83D\uDD35":"1F535","\uD83D\uDD34":"1F534","\uD83D\uDD18":"1F518","\u26AB\uFE0F":"26AB","\u26AB":"26AB","\u26AA\uFE0F":"26AA","\u26AA":"26AA","\uD83D\uDDF5":"1F5F5","\uD83D\uDDF4":"1F5F4","\uD83D\uDDF9":"1F5F9","\uD83D\uDDF8":"1F5F8","\u2611\uFE0F":"2611","\u2666\uFE0F":"2666","\u2665\uFE0F":"2665","\u2663\uFE0F":"2663","\u2660\uFE0F":"2660","\uD83D\uDCA0":"1F4A0","\uD83D\uDCA2":"1F4A2","\u267B\uFE0F":"267B","\u267B":"267B","\uD83C\uDFF6":"1F3F6","\uD83C\uDFF5":"1F3F5","\u2668\uFE0F":"2668","\u26A0\uFE0F":"26A0","\u26A0":"26A0","\uD83D\uDD31":"1F531","\uD83D\uDDF2":"1F5F2","\uD83D\uDD30":"1F530","\uD83D\uDD2F":"1F52F","\u26CE":"26CE","\uD83D\uDEC8":"1F6C8","\u24C2\uFE0F":"24C2","\u24C2":"24C2","\uD83C\uDF00":"1F300","\uD83D\uDD1C":"1F51C","\uD83D\uDD1D":"1F51D","\uD83D\uDD1B":"1F51B","\uD83D\uDD19":"1F519","\uD83D\uDD1A":"1F51A","\uD83D\uDCAF":"1F4AF","\u2B55\uFE0F":"2B55","\u2B55":"2B55","\u274C":"274C","\uD83D\uDEC6":"1F6C6","\u2049\uFE0F":"2049","\u203C\uFE0F":"203C","\u203C":"203C","\u2757\uFE0F":"2757","\u303D\uFE0F":"303D","\u303D":"303D","\u27BF":"27BF","\u27B0":"27B0","\uD83D\uDCB2":"1F4B2","\uD83D\uDCB1":"1F4B1","\u00AE":"00AE","\u00A9":"00A9","\uD83D\uDDD8":"1F5D8","\uD83D\uDD03":"1F503","\uD83D\uDDD9":"1F5D9","\u2714\uFE0F":"2714","\u2716\uFE0F":"2716","\uD83D\uDD23":"1F523","\uD83C\uDFA6":"1F3A6","\uD83D\uDCF6":"1F4F6","\uD83D\uDD20":"1F520","\uD83D\uDD21":"1F521","\uD83D\uDD24":"1F524","\uD83D\uDD22":"1F522","\uD83D\uDD1F":"1F51F","9\uFE0F\u20E3":"0039-20E3","9\u20E3":"0039-20E3","8\uFE0F\u20E3":"0038-20E3","8\u20E3":"0038-20E3","7\uFE0F\u20E3":"0037-20E3","7\u20E3":"0037-20E3","6\uFE0F\u20E3":"0036-20E3","6\u20E3":"0036-20E3","5\uFE0F\u20E3":"0035-20E3","5\u20E3":"0035-20E3","4\uFE0F\u20E3":"0034-20E3","4\u20E3":"0034-20E3","3\uFE0F\u20E3":"0033-20E3","3\u20E3":"0033-20E3","2\uFE0F\u20E3":"0032-20E3","2\u20E3":"0032-20E3","1\uFE0F\u20E3":"0031-20E3","1\u20E3":"0031-20E3","0\uFE0F\u20E3":"0030-20E3","0\u20E3":"0030-20E3","#\uFE0F\u20E3":"0023-20E3","#\u20E3":"0023-20E3","\uD83D\uDD02":"1F502","\uD83D\uDD01":"1F501","\uD83D\uDD00":"1F500","\u2935\uFE0F":"2935","\u2934\uFE0F":"2934","\u21A9\uFE0F":"21A9","\u21A9":"21A9","\u21AA\uFE0F":"21AA","\u21AA":"21AA","\uD83D\uDD04":"1F504","\u2194\uFE0F":"2194","\u2195\uFE0F":"2195","\u2196\uFE0F":"2196","\u2199\uFE0F":"2199","\u2198\uFE0F":"2198","\u2197\uFE0F":"2197","\u2B07\uFE0F":"2B07","\u2B07":"2B07","\u2B06\uFE0F":"2B06","\u2B06":"2B06","\u2B05\uFE0F":"2B05","\u2B05":"2B05","\u27A1\uFE0F":"27A1","\u27A1":"27A1","\u23EC":"23EC","\u23EB":"23EB","\u23EA":"23EA","\u23E9":"23E9","\uD83D\uDD3D":"1F53D","\uD83D\uDD3C":"1F53C","\u25C0\uFE0F":"25C0","\u25C0":"25C0","\u25B6\uFE0F":"25B6","\u25B6":"25B6","\uD83D\uDEAE":"1F6AE","\uD83D\uDEAD":"1F6AD","\uD83D\uDEB0":"1F6B0","\u267F\uFE0F":"267F","\u267F":"267F","\uD83D\uDEBC":"1F6BC","\uD83D\uDECA":"1F6CA","\uD83D\uDEC9":"1F6C9","\uD83D\uDEBA":"1F6BA","\uD83D\uDEB9":"1F6B9","\uD83D\uDEBB":"1F6BB","\u2653\uFE0F":"2653","\u2652\uFE0F":"2652","\u2651\uFE0F":"2651","\u2650\uFE0F":"2650","\u264F\uFE0F":"264F","\u264F":"264F","\u264E\uFE0F":"264E","\u264E":"264E","\u264D\uFE0F":"264D","\u264D":"264D","\u264C\uFE0F":"264C","\u264C":"264C","\u264B\uFE0F":"264B","\u264B":"264B","\u264A\uFE0F":"264A","\u264A":"264A","\u2649\uFE0F":"2649","\u2648\uFE0F":"2648","\uD83C\uDFE7":"1F3E7","\uD83C\uDD99":"1F199","\uD83C\uDD97":"1F197","\uD83C\uDD96":"1F196","\uD83C\uDD95":"1F195","\uD83C\uDD93":"1F193","\uD83C\uDD92":"1F192","\uD83D\uDEBE":"1F6BE","\uD83C\uDD7F\uFE0F":"1F17F","\uD83C\uDD7F":"1F17F","\uD83C\uDD94":"1F194","\uD83C\uDD98":"1F198","\uD83C\uDD7E":"1F17E","\uD83C\uDD91":"1F191","\uD83C\uDD8E":"1F18E","\uD83C\uDD71":"1F171","\uD83C\uDD70":"1F170","\uD83C\uDD9A":"1F19A","\uD83D\uDCF4":"1F4F4","\uD83D\uDCF3":"1F4F3","\u2734\uFE0F":"2734","\u274E":"274E","\u2733\uFE0F":"2733","\u2747\uFE0F":"2747","\uD83D\uDCB9":"1F4B9","\uD83C\uDE2F\uFE0F":"1F22F","\uD83C\uDE2F":"1F22F","\uD83C\uDE01":"1F201","\uD83C\uDE02":"1F202","\uD83C\uDE33":"1F233","\uD83C\uDE39":"1F239","\uD83C\uDE37":"1F237","\uD83C\uDE3A":"1F23A","\uD83C\uDE38":"1F238","\uD83C\uDE1A\uFE0F":"1F21A","\uD83C\uDE1A":"1F21A","\uD83C\uDE36":"1F236","\uD83C\uDE32":"1F232","\uD83C\uDE35":"1F235","\uD83C\uDE34":"1F234","\u3297\uFE0F":"3297","\u3299\uFE0F":"3299","\uD83D\uDCAE":"1F4AE","\uD83C\uDE50":"1F250","\uD83C\uDE51":"1F251","\uD83D\uDD72":"1F572","\uD83D\uDD1E":"1F51E","\uD83D\uDCF5":"1F4F5","\uD83D\uDEB1":"1F6B1","\uD83D\uDEB3":"1F6B3","\uD83D\uDEAF":"1F6AF","\uD83D\uDEB7":"1F6B7","\uD83D\uDCDB":"1F4DB","\u26D4\uFE0F":"26D4","\u26D4":"26D4","\uD83D\uDEAB":"1F6AB","\uD83D\uDEC7":"1F6C7","\uD83D\uDECC":"1F6CC","\uD83D\uDDE3":"1F5E3","\uD83D\uDD0E":"1F50E","\uD83D\uDD0D":"1F50D","\uD83D\uDEE1":"1F6E1","\uD83D\uDEB8":"1F6B8","\uD83D\uDDF1":"1F5F1","\uD83D\uDDF0":"1F5F0","\uD83D\uDDEF":"1F5EF","\uD83D\uDDEE":"1F5EE","\uD83D\uDDED":"1F5ED","\uD83D\uDDEC":"1F5EC","\uD83D\uDDEB":"1F5EB","\uD83D\uDDEA":"1F5EA","\uD83D\uDDE9":"1F5E9","\uD83D\uDDE8":"1F5E8","\uD83D\uDCAC":"1F4AC","\uD83D\uDCAD":"1F4AD","\uD83D\uDD4A":"1F54A","\uD83D\uDD49":"1F549","\uD83D\uDD48":"1F548","\uD83D\uDD47":"1F547","\uD83D\uDD46":"1F546","\uD83C\uDF9D":"1F39D","\uD83C\uDF9C":"1F39C","\uD83D\uDD6D":"1F56D","\uD83D\uDD15":"1F515","\uD83D\uDD14":"1F514","\uD83D\uDCA4":"1F4A4","\uD83D\uDD6C":"1F56C","\uD83D\uDD6B":"1F56B","\uD83D\uDD6A":"1F56A","\uD83D\uDD69":"1F569","\uD83D\uDD68":"1F568","\uD83D\uDD07":"1F507","\uD83D\uDD0A":"1F50A","\uD83D\uDD09":"1F509","\uD83D\uDD08":"1F508","\uD83D\uDCE2":"1F4E2","\uD83D\uDCE3":"1F4E3","\uD83D\uDD13":"1F513","\uD83D\uDD12":"1F512","\uD83D\uDD10":"1F510","\uD83D\uDD0F":"1F50F","\uD83D\uDCDD":"1F4DD","\uD83D\uDD8D":"1F58D","\uD83D\uDD8C":"1F58C","\uD83D\uDD8B":"1F58B","\uD83D\uDD8A":"1F58A","\uD83D\uDD89":"1F589","\u270F\uFE0F":"270F","\u270F":"270F","\u2712\uFE0F":"2712","\uD83D\uDDC4":"1F5C4","\uD83D\uDCC2":"1F4C2","\uD83D\uDCC1":"1F4C1","\uD83D\uDDC1":"1F5C1","\uD83D\uDDC0":"1F5C0","\uD83D\uDD73":"1F573","\uD83C\uDFF4":"1F3F4","\uD83C\uDFF3":"1F3F3","\uD83C\uDFF2":"1F3F2","\uD83C\uDFF1":"1F3F1","\uD83D\uDEA9":"1F6A9","\uD83D\uDCCF":"1F4CF","\uD83D\uDCCD":"1F4CD","\uD83D\uDCD0":"1F4D0","\u2702\uFE0F":"2702","\uD83D\uDD88":"1F588","\uD83D\uDCCC":"1F4CC","\uD83D\uDD87":"1F587","\uD83D\uDCCE":"1F4CE","\uD83D\uDD17":"1F517","\uD83D\uDDC3":"1F5C3","\uD83D\uDDC2":"1F5C2","\uD83D\uDCC7":"1F4C7","\uD83D\uDCDA":"1F4DA","\uD83D\uDCD9":"1F4D9","\uD83D\uDCD8":"1F4D8","\uD83D\uDCD7":"1F4D7","\uD83D\uDCD5":"1F4D5","\uD83D\uDCD2":"1F4D2","\uD83D\uDCD4":"1F4D4","\uD83D\uDCD3":"1F4D3","\uD83D\uDCD6":"1F4D6","\uD83D\uDD6E":"1F56E","\uD83D\uDCCB":"1F4CB","\uD83D\uDCDC":"1F4DC","\uD83D\uDDBD":"1F5BD","\uD83D\uDDBC":"1F5BC","\uD83D\uDDBE":"1F5BE","\uD83D\uDDDC":"1F5DC","\uD83D\uDD06":"1F506","\uD83D\uDD05":"1F505","\uD83D\uDDF3":"1F5F3","\uD83D\uDDD3":"1F5D3","\uD83D\uDCC6":"1F4C6","\uD83D\uDCC5":"1F4C5","\uD83D\uDDE0":"1F5E0","\uD83D\uDCCA":"1F4CA","\uD83D\uDCC9":"1F4C9","\uD83D\uDCC8":"1F4C8","\uD83D\uDDD2":"1F5D2","\uD83D\uDDCA":"1F5CA","\uD83D\uDDC9":"1F5C9","\uD83D\uDDC7":"1F5C7","\uD83D\uDDC6":"1F5C6","\uD83D\uDDD1":"1F5D1","\uD83D\uDCD1":"1F4D1","\uD83D\uDDD0":"1F5D0","\uD83D\uDCC3":"1F4C3","\uD83D\uDCC4":"1F4C4","\uD83D\uDDCF":"1F5CF","\uD83D\uDDB9":"1F5B9","\uD83D\uDDCE":"1F5CE","\uD83D\uDCEC":"1F4EC","\uD83D\uDCED":"1F4ED","\uD83D\uDCEB":"1F4EB","\uD83D\uDCEA":"1F4EA","\uD83D\uDCEE":"1F4EE","\uD83D\uDCEF":"1F4EF","\uD83D\uDCE6":"1F4E6","\uD83D\uDCE4":"1F4E4","\uD83D\uDCE5":"1F4E5","\uD83D\uDCE7":"1F4E7","\uD83D\uDCE8":"1F4E8","\uD83D\uDCE9":"1F4E9","\uD83D\uDD86":"1F586","\uD83D\uDD85":"1F585","\uD83D\uDD83":"1F583","\uD83D\uDD82":"1F582","\u2709\uFE0F":"2709","\uD83D\uDDDD":"1F5DD","\uD83D\uDD11":"1F511","\uD83C\uDFF7":"1F3F7","\uD83C\uDF21":"1F321","\uD83D\uDDDE":"1F5DE","\uD83D\uDCF0":"1F4F0","\uD83D\uDD16":"1F516","\uD83D\uDD2B":"1F52B","\uD83D\uDD71":"1F571","\uD83D\uDEAC":"1F6AC","\uD83D\uDCA3":"1F4A3","\uD83D\uDEE2":"1F6E2","\uD83D\uDEE0":"1F6E0","\uD83D\uDD28":"1F528","\uD83D\uDD29":"1F529","\uD83D\uDDE1":"1F5E1","\uD83D\uDD2A":"1F52A","\uD83D\uDD27":"1F527","\uD83D\uDD2E":"1F52E","\uD83D\uDD2D":"1F52D","\uD83D\uDD2C":"1F52C","\uD83D\uDC8A":"1F48A","\uD83D\uDC89":"1F489","\uD83D\uDC88":"1F488","\uD83D\uDEBD":"1F6BD","\uD83D\uDEC1":"1F6C1","\uD83D\uDEBF":"1F6BF","\uD83D\uDEAA":"1F6AA","\uD83D\uDC56":"1F456","\uD83D\uDC54":"1F454","\uD83D\uDC55":"1F455","\uD83D\uDC5A":"1F45A","\uD83D\uDC58":"1F458","\uD83D\uDC57":"1F457","\uD83D\uDC59":"1F459","\uD83D\uDC5F":"1F45F","\uD83D\uDC5E":"1F45E","\uD83D\uDC62":"1F462","\uD83D\uDC60":"1F460","\uD83D\uDC61":"1F461","\uD83D\uDC52":"1F452","\uD83D\uDD76":"1F576","\uD83D\uDC53":"1F453","\uD83D\uDC84":"1F484","\uD83C\uDF92":"1F392","\uD83D\uDCBC":"1F4BC","\uD83D\uDC5C":"1F45C","\uD83D\uDC5B":"1F45B","\uD83D\uDC5D":"1F45D","\uD83C\uDF02":"1F302","\uD83D\uDC8E":"1F48E","\uD83D\uDCB0":"1F4B0","\uD83D\uDCB8":"1F4B8","\uD83D\uDCB3":"1F4B3","\uD83D\uDEF0":"1F6F0","\uD83D\uDCE1":"1F4E1","\uD83D\uDD6F":"1F56F","\uD83D\uDD26":"1F526","\uD83D\uDCA1":"1F4A1","\uD83D\uDD0C":"1F50C","\uD83D\uDD0B":"1F50B","\uD83D\uDCFC":"1F4FC","\uD83D\uDDB8":"1F5B8","\uD83D\uDCC0":"1F4C0","\uD83D\uDCBF":"1F4BF","\uD83D\uDDB4":"1F5B4","\uD83D\uDDAD":"1F5AD","\uD83D\uDDAB":"1F5AB","\uD83D\uDDAA":"1F5AA","\uD83D\uDCBE":"1F4BE","\uD83D\uDCBD":"1F4BD","\uD83D\uDCE0":"1F4E0","\uD83D\uDD81":"1F581","\uD83D\uDD7F":"1F57F","\uD83D\uDD7E":"1F57E","\u260E\uFE0F":"260E","\u260E":"260E","\uD83D\uDD7B":"1F57B","\uD83D\uDCDE":"1F4DE","\uD83D\uDD79":"1F579","\uD83D\uDCDF":"1F4DF","\uD83D\uDCFE":"1F4FE","\uD83D\uDCFB":"1F4FB","\uD83C\uDF9B":"1F39B","\uD83C\uDF9A":"1F39A","\uD83C\uDF99":"1F399","\uD83C\uDF98":"1F398","\uD83D\uDCFA":"1F4FA","\uD83D\uDCFD":"1F4FD","\uD83C\uDFA5":"1F3A5","\uD83D\uDCF9":"1F4F9","\uD83D\uDCF8":"1F4F8","\uD83D\uDCF7":"1F4F7","\u231B\uFE0F":"231B","\u231B":"231B","\u23F3":"23F3","\uD83D\uDD70":"1F570","\u23F0":"23F0","\uD83D\uDDA9":"1F5A9","\uD83D\uDDD4":"1F5D4","\uD83D\uDDA8":"1F5A8","\uD83D\uDDA7":"1F5A7","\uD83D\uDDA6":"1F5A6","\uD83D\uDDB2":"1F5B2","\uD83D\uDDAF":"1F5AF","\uD83D\uDDAE":"1F5AE","\uD83D\uDDB3":"1F5B3","\uD83D\uDDA5":"1F5A5","\uD83D\uDCBB":"1F4BB","\uD83D\uDCF2":"1F4F2","\uD83D\uDCF1":"1F4F1","\u231A\uFE0F":"231A","\u231A":"231A","\uD83C\uDF7C":"1F37C","\uD83C\uDF7B":"1F37B","\uD83C\uDF7A":"1F37A","\uD83C\uDF79":"1F379","\uD83C\uDF78":"1F378","\uD83C\uDF77":"1F377","\uD83C\uDF76":"1F376","\u2615\uFE0F":"2615","\uD83C\uDF75":"1F375","\uD83C\uDF74":"1F374","\uD83C\uDF73":"1F373","\uD83C\uDF72":"1F372","\uD83C\uDF71":"1F371","\uD83C\uDF70":"1F370","\uD83C\uDF6F":"1F36F","\uD83C\uDF6E":"1F36E","\uD83C\uDF6D":"1F36D","\uD83C\uDF6C":"1F36C","\uD83C\uDF6B":"1F36B","\uD83C\uDF6A":"1F36A","\uD83C\uDF69":"1F369","\uD83C\uDF68":"1F368","\uD83C\uDF67":"1F367","\uD83C\uDF66":"1F366","\uD83C\uDF65":"1F365","\uD83C\uDF64":"1F364","\uD83C\uDF63":"1F363","\uD83C\uDF62":"1F362","\uD83C\uDF61":"1F361","\uD83C\uDF5F":"1F35F","\uD83C\uDF5E":"1F35E","\uD83C\uDF5D":"1F35D","\uD83C\uDF5C":"1F35C","\uD83C\uDF5B":"1F35B","\uD83C\uDF5A":"1F35A","\uD83C\uDF59":"1F359","\uD83C\uDF58":"1F358","\uD83C\uDF57":"1F357","\uD83C\uDF56":"1F356","\uD83C\uDF55":"1F355","\uD83C\uDF54":"1F354","\uD83C\uDF53":"1F353","\uD83C\uDF52":"1F352","\uD83C\uDF51":"1F351","\uD83C\uDF50":"1F350","\uD83C\uDF4F":"1F34F","\uD83C\uDF4E":"1F34E","\uD83C\uDF4D":"1F34D","\uD83C\uDF4C":"1F34C","\uD83C\uDF4B":"1F34B","\uD83C\uDF4A":"1F34A","\uD83C\uDF49":"1F349","\uD83C\uDF48":"1F348","\uD83C\uDF47":"1F347","\uD83C\uDF36":"1F336","\uD83C\uDF60":"1F360","\uD83C\uDF3D":"1F33D","\uD83C\uDF46":"1F346","\uD83C\uDF45":"1F345","\uD83C\uDFA2":"1F3A2","\uD83C\uDFA1":"1F3A1","\uD83C\uDFA0":"1F3A0","\uD83C\uDC04\uFE0F":"1F004","\uD83C\uDC04":"1F004","\uD83C\uDCCF":"1F0CF","\uD83C\uDFB4":"1F3B4","\uD83C\uDFAE":"1F3AE","\uD83C\uDFB2":"1F3B2","\uD83C\uDFB0":"1F3B0","\uD83C\uDFB3":"1F3B3","\uD83C\uDFB1":"1F3B1","\uD83C\uDFAF":"1F3AF","\uD83C\uDFA8":"1F3A8","\uD83C\uDF9F":"1F39F","\uD83C\uDF9E":"1F39E","\uD83C\uDFAC":"1F3AC","\uD83C\uDFAA":"1F3AA","\uD83C\uDFA9":"1F3A9","\uD83C\uDFAB":"1F3AB","\uD83C\uDFAD":"1F3AD","\uD83C\uDFA4":"1F3A4","\uD83C\uDFA7":"1F3A7","\uD83C\uDFBC":"1F3BC","\uD83C\uDFB6":"1F3B6","\uD83C\uDFB5":"1F3B5","\uD83C\uDFBA":"1F3BA","\uD83C\uDFB7":"1F3B7","\uD83C\uDFBB":"1F3BB","\uD83C\uDFB8":"1F3B8","\uD83C\uDFB9":"1F3B9","\uD83C\uDFC1":"1F3C1","\uD83C\uDFBD":"1F3BD","\uD83C\uDFC5":"1F3C5","\uD83C\uDFC6":"1F3C6","\u26F3\uFE0F":"26F3","\u26F3":"26F3","\uD83C\uDFC9":"1F3C9","\uD83C\uDFBE":"1F3BE","\u26BE\uFE0F":"26BE","\u26BE":"26BE","\uD83C\uDFC8":"1F3C8","\uD83C\uDFC0":"1F3C0","\u26BD\uFE0F":"26BD","\u26BD":"26BD","\uD83C\uDFA3":"1F3A3","\u26FA\uFE0F":"26FA","\u26FA":"26FA","\uD83C\uDFC7":"1F3C7","\uD83C\uDFCE":"1F3CE","\uD83C\uDFCD":"1F3CD","\uD83D\uDEB5":"1F6B5","\uD83D\uDEB4":"1F6B4","\u26C4\uFE0F":"26C4","\u26C4":"26C4","\uD83C\uDFBF":"1F3BF","\uD83C\uDFC2":"1F3C2","\uD83D\uDEC0":"1F6C0","\uD83C\uDFC4":"1F3C4","\uD83C\uDFCA":"1F3CA","\uD83D\uDEA3":"1F6A3","\uD83C\uDFCC":"1F3CC","\uD83C\uDFCB":"1F3CB","\uD83D\uDC83":"1F483","\uD83D\uDEB6":"1F6B6","\uD83C\uDFC3":"1F3C3","\uD83D\uDC99":"1F499","\uD83D\uDC9A":"1F49A","\uD83D\uDC9B":"1F49B","\uD83D\uDC9C":"1F49C","\uD83D\uDC9F":"1F49F","\uD83C\uDF94":"1F394","\uD83D\uDC9D":"1F49D","\uD83D\uDC98":"1F498","\uD83D\uDC96":"1F496","\uD83D\uDC97":"1F497","\uD83D\uDC93":"1F493","\uD83D\uDC9E":"1F49E","\uD83D\uDC95":"1F495","\uD83D\uDC8C":"1F48C","\uD83D\uDC94":"1F494","\u2764\uFE0F":"2764","\uD83C\uDF95":"1F395","\uD83D\uDC8D":"1F48D","\uD83C\uDFEE":"1F3EE","\uD83C\uDF8C":"1F38C","\uD83C\uDF90":"1F390","\uD83C\uDF8F":"1F38F","\uD83C\uDF8E":"1F38E","\uD83C\uDF96":"1F396","\uD83C\uDF97":"1F397","\uD83D\uDC51":"1F451","\uD83C\uDF93":"1F393","\uD83D\uDCA5":"1F4A5","\uD83D\uDCAB":"1F4AB","\uD83C\uDF88":"1F388","\uD83C\uDF8A":"1F38A","\uD83C\uDF89":"1F389","\uD83C\uDF87":"1F387","\uD83C\uDF86":"1F386","\uD83C\uDF91":"1F391","\uD83C\uDF8D":"1F38D","\uD83C\uDF8B":"1F38B","\uD83C\uDF84":"1F384","\uD83C\uDF83":"1F383","\uD83C\uDF82":"1F382","\uD83C\uDF81":"1F381","\uD83C\uDF80":"1F380","\uD83C\uDF2C":"1F32C","\uD83C\uDF1E":"1F31E","\uD83C\uDF1C":"1F31C","\uD83C\uDF1B":"1F31B","\uD83C\uDF1D":"1F31D","\uD83C\uDF1A":"1F31A","\uD83C\uDF18":"1F318","\uD83C\uDF17":"1F317","\uD83C\uDF16":"1F316","\uD83C\uDF15":"1F315","\uD83C\uDF14":"1F314","\uD83C\uDF13":"1F313","\uD83C\uDF12":"1F312","\uD83C\uDF11":"1F311","\uD83C\uDF0F":"1F30F","\uD83C\uDF0E":"1F30E","\uD83C\uDF0D":"1F30D","\uD83C\uDF10":"1F310","\uD83D\uDDFE":"1F5FE","\uD83D\uDDFB":"1F5FB","\uD83C\uDF0C":"1F30C","\uD83C\uDF0B":"1F30B","\uD83C\uDF0A":"1F30A","\uD83C\uDF08":"1F308","\uD83C\uDF05":"1F305","\uD83C\uDF04":"1F304","\uD83C\uDF20":"1F320","\u2B50\uFE0F":"2B50","\u2B50":"2B50","\uD83C\uDF1F":"1F31F","\u2744\uFE0F":"2744","\uD83D\uDCA8":"1F4A8","\uD83C\uDF2B":"1F32B","\u2614\uFE0F":"2614","\uD83D\uDCA6":"1F4A6","\uD83D\uDCA7":"1F4A7","\uD83C\uDF2A":"1F32A","\uD83C\uDF29":"1F329","\uD83C\uDF28":"1F328","\uD83C\uDF27":"1F327","\u2601\uFE0F":"2601","\u26C5\uFE0F":"26C5","\u26C5":"26C5","\u2600\uFE0F":"2600","\uD83C\uDF19":"1F319","\uD83D\uDD25":"1F525","\u26A1\uFE0F":"26A1","\u26A1":"26A1","\uD83D\uDC3E":"1F43E","\uD83D\uDD78":"1F578","\uD83D\uDD77":"1F577","\uD83D\uDC1E":"1F41E","\uD83D\uDC1D":"1F41D","\uD83D\uDC1C":"1F41C","\uD83D\uDC1B":"1F41B","\uD83D\uDC0C":"1F40C","\uD83D\uDC1A":"1F41A","\uD83D\uDC21":"1F421","\uD83D\uDC20":"1F420","\uD83D\uDC1F":"1F41F","\uD83D\uDC19":"1F419","\uD83D\uDC2C":"1F42C","\uD83D\uDC33":"1F433","\uD83D\uDC0B":"1F40B","\uD83D\uDC38":"1F438","\uD83D\uDC22":"1F422","\uD83D\uDC0D":"1F40D","\uD83D\uDC0A":"1F40A","\uD83D\uDC32":"1F432","\uD83D\uDC09":"1F409","\uD83D\uDC12":"1F412","\uD83D\uDE4A":"1F64A","\uD83D\uDE49":"1F649","\uD83D\uDE48":"1F648","\uD83D\uDC35":"1F435","\uD83D\uDC3C":"1F43C","\uD83D\uDC28":"1F428","\uD83D\uDC3B":"1F43B","\uD83D\uDC3A":"1F43A","\uD83D\uDC36":"1F436","\uD83D\uDC29":"1F429","\uD83D\uDC15":"1F415","\uD83D\uDC3D":"1F43D","\uD83D\uDC37":"1F437","\uD83D\uDC16":"1F416","\uD83D\uDC17":"1F417","\uD83D\uDC2B":"1F42B","\uD83D\uDC2A":"1F42A","\uD83D\uDC18":"1F418","\uD83D\uDC27":"1F427","\uD83D\uDC26":"1F426","\uD83D\uDC25":"1F425","\uD83D\uDC23":"1F423","\uD83D\uDC24":"1F424","\uD83D\uDC14":"1F414","\uD83D\uDC13":"1F413","\uD83D\uDC10":"1F410","\uD83D\uDC11":"1F411","\uD83D\uDC0F":"1F40F","\uD83D\uDC34":"1F434","\uD83D\uDC0E":"1F40E","\uD83D\uDC31":"1F431","\uD83D\uDC08":"1F408","\uD83D\uDC30":"1F430","\uD83D\uDC07":"1F407","\uD83D\uDC3F":"1F43F","\uD83D\uDC2F":"1F42F","\uD83D\uDC06":"1F406","\uD83D\uDC05":"1F405","\uD83D\uDC2E":"1F42E","\uD83D\uDC04":"1F404","\uD83D\uDC03":"1F403","\uD83D\uDC02":"1F402","\uD83D\uDC39":"1F439","\uD83D\uDC2D":"1F42D","\uD83D\uDC01":"1F401","\uD83D\uDC00":"1F400","\uD83C\uDF30":"1F330","\uD83C\uDF44":"1F344","\uD83C\uDF43":"1F343","\uD83C\uDF42":"1F342","\uD83C\uDF41":"1F341","\uD83C\uDF40":"1F340","\uD83C\uDF3F":"1F33F","\uD83C\uDF3E":"1F33E","\uD83D\uDC90":"1F490","\uD83C\uDF3C":"1F33C","\uD83C\uDF3B":"1F33B","\uD83C\uDF3A":"1F33A","\uD83C\uDF39":"1F339","\uD83C\uDF38":"1F338","\uD83C\uDF37":"1F337","\uD83C\uDF35":"1F335","\uD83C\uDF34":"1F334","\uD83C\uDF33":"1F333","\uD83C\uDF32":"1F332","\uD83C\uDF31":"1F331","\uD83D\uDE4F":"1F64F","\uD83D\uDD9F":"1F59F","\uD83D\uDD9E":"1F59E","\uD83D\uDD99":"1F599","\uD83D\uDD98":"1F598","\uD83D\uDD97":"1F597","\uD83D\uDD96":"1F596","\uD83D\uDD95":"1F595","\uD83D\uDD94":"1F594","\uD83D\uDD93":"1F593","\uD83D\uDD92":"1F592","\uD83D\uDD91":"1F591","\uD83D\uDD90":"1F590","\uD83D\uDD8F":"1F58F","\uD83D\uDD8E":"1F58E","\uD83D\uDC50":"1F450","\uD83D\uDCAA":"1F4AA","\u270B":"270B","\u270A":"270A","\uD83D\uDC4A":"1F44A","\u270C\uFE0F":"270C","\u270C":"270C","\uD83D\uDC4C":"1F44C","\uD83D\uDC49":"1F449","\uD83D\uDC48":"1F448","\uD83D\uDC47":"1F447","\uD83D\uDC46":"1F446","\u261D\uFE0F":"261D","\u261D":"261D","\uD83D\uDC4E":"1F44E","\uD83D\uDC4D":"1F44D","\uD83D\uDC4B":"1F44B","\uD83D\uDC85":"1F485","\uD83D\uDC45":"1F445","\uD83D\uDC8B":"1F48B","\uD83D\uDDE2":"1F5E2","\uD83D\uDC44":"1F444","\uD83D\uDC43":"1F443","\uD83D\uDC40":"1F440","\uD83D\uDC41":"1F441","\uD83D\uDC42":"1F442","\uD83D\uDC4F":"1F44F","\uD83D\uDE4C":"1F64C","\uD83D\uDC68\u200D\u2764\uFE0F\u200D\uD83D\uDC8B\u200D\uD83D\uDC68":"1F468-2764-1F48B-1F468","\uD83D\uDC68\u2764\uD83D\uDC8B\uD83D\uDC68":"1F468-2764-1F48B-1F468","\uD83D\uDC69\u200D\u2764\uFE0F\u200D\uD83D\uDC8B\u200D\uD83D\uDC69":"1F469-2764-1F48B-1F469","\uD83D\uDC69\u2764\uD83D\uDC8B\uD83D\uDC69":"1F469-2764-1F48B-1F469","\uD83D\uDC8F":"1F48F","\uD83D\uDC68\u200D\u2764\uFE0F\u200D\uD83D\uDC68":"1F468-2764-1F468","\uD83D\uDC68\u2764\uD83D\uDC68":"1F468-2764-1F468","\uD83D\uDC69\u200D\u2764\uFE0F\u200D\uD83D\uDC69":"1F469-2764-1F469","\uD83D\uDC69\u2764\uD83D\uDC69":"1F469-2764-1F469","\uD83D\uDC91":"1F491","\uD83D\uDC87":"1F487","\uD83D\uDC86":"1F486","\uD83D\uDE4D":"1F64D","\uD83D\uDE4E":"1F64E","\uD83D\uDE4B":"1F64B","\uD83D\uDE46":"1F646","\uD83D\uDE45":"1F645","\uD83D\uDC81":"1F481","\uD83D\uDE47":"1F647","\uD83D\uDC7E":"1F47E","\uD83D\uDC7D":"1F47D","\uD83D\uDC80":"1F480","\uD83D\uDCA9":"1F4A9","\uD83D\uDC7A":"1F47A","\uD83D\uDC79":"1F479","\uD83D\uDC7B":"1F47B","\uD83C\uDF85":"1F385","\uD83D\uDC7C":"1F47C","\uD83D\uDC82":"1F482","\uD83D\uDC78":"1F478","\uD83D\uDC77":"1F477","\uD83D\uDC6E":"1F46E","\uD83D\uDC75":"1F475","\uD83D\uDC74":"1F474","\uD83D\uDC73":"1F473","\uD83D\uDC72":"1F472","\uD83D\uDC71":"1F471","\uD83D\uDC70":"1F470","\uD83D\uDC6F":"1F46F","\uD83D\uDC6D":"1F46D","\uD83D\uDC6C":"1F46C","\uD83D\uDC6B":"1F46B","\uD83D\uDC68\u200D\uD83D\uDC68\u200D\uD83D\uDC67\u200D\uD83D\uDC67":"1F468-1F468-1F467-1F467","\uD83D\uDC68\uD83D\uDC68\uD83D\uDC67\uD83D\uDC67":"1F468-1F468-1F467-1F467","\uD83D\uDC68\u200D\uD83D\uDC68\u200D\uD83D\uDC66\u200D\uD83D\uDC66":"1F468-1F468-1F466-1F466","\uD83D\uDC68\uD83D\uDC68\uD83D\uDC66\uD83D\uDC66":"1F468-1F468-1F466-1F466","\uD83D\uDC68\u200D\uD83D\uDC68\u200D\uD83D\uDC67":"1F468-1F468-1F467","\uD83D\uDC68\uD83D\uDC68\uD83D\uDC67\uD83D\uDC66":"1F468-1F468-1F467-1F466","\uD83D\uDC68\uD83D\uDC68\uD83D\uDC67":"1F468-1F468-1F467","\uD83D\uDC68\u200D\uD83D\uDC68\u200D\uD83D\uDC66":"1F468-1F468-1F466","\uD83D\uDC68\uD83D\uDC68\uD83D\uDC66":"1F468-1F468-1F466","\uD83D\uDC69\u200D\uD83D\uDC69\u200D\uD83D\uDC67\u200D\uD83D\uDC67":"1F469-1F469-1F467-1F467","\uD83D\uDC69\uD83D\uDC69\uD83D\uDC67\uD83D\uDC67":"1F469-1F469-1F467-1F467","\uD83D\uDC69\u200D\uD83D\uDC69\u200D\uD83D\uDC66\u200D\uD83D\uDC66":"1F469-1F469-1F466-1F466","\uD83D\uDC69\uD83D\uDC69\uD83D\uDC66\uD83D\uDC66":"1F469-1F469-1F466-1F466","\uD83D\uDC69\u200D\uD83D\uDC69\u200D\uD83D\uDC67\u200D\uD83D\uDC66":"1F469-1F469-1F467-1F466","\uD83D\uDC69\uD83D\uDC69\uD83D\uDC67\uD83D\uDC66":"1F469-1F469-1F467-1F466","\uD83D\uDC69\u200D\uD83D\uDC69\u200D\uD83D\uDC67":"1F469-1F469-1F467","\uD83D\uDC69\uD83D\uDC69\uD83D\uDC67":"1F469-1F469-1F467","\uD83D\uDC69\u200D\uD83D\uDC69\u200D\uD83D\uDC66":"1F469-1F469-1F466","\uD83D\uDC69\uD83D\uDC69\uD83D\uDC66":"1F469-1F469-1F466","\uD83D\uDC68\u200D\uD83D\uDC69\u200D\uD83D\uDC67\u200D\uD83D\uDC67":"1F468-1F469-1F467-1F467","\uD83D\uDC68\uD83D\uDC69\uD83D\uDC67\uD83D\uDC67":"1F468-1F469-1F467-1F467","\uD83D\uDC68\u200D\uD83D\uDC69\u200D\uD83D\uDC66\u200D\uD83D\uDC66":"1F468-1F469-1F466-1F466","\uD83D\uDC68\uD83D\uDC69\uD83D\uDC66\uD83D\uDC66":"1F468-1F469-1F466-1F466","\uD83D\uDC68\u200D\uD83D\uDC69\u200D\uD83D\uDC67\u200D\uD83D\uDC66":"1F468-1F469-1F467-1F466","\uD83D\uDC68\uD83D\uDC69\uD83D\uDC67\uD83D\uDC66":"1F468-1F469-1F467-1F466","\uD83D\uDC68\u200D\uD83D\uDC69\u200D\uD83D\uDC67":"1F468-1F469-1F467","\uD83D\uDC68\uD83D\uDC69\uD83D\uDC67":"1F468-1F469-1F467","\uD83D\uDC6A":"1F46A","\uD83D\uDC69":"1F469","\uD83D\uDC68":"1F468","\uD83D\uDC67":"1F467","\uD83D\uDC66":"1F466","\uD83D\uDC76":"1F476","\uD83D\uDD75":"1F575","\uD83D\uDD74":"1F574","\uD83D\uDC65":"1F465","\uD83D\uDC64":"1F464","\uD83D\uDC63":"1F463","\uD83D\uDE40":"1F640","\uD83D\uDE3F":"1F63F","\uD83D\uDE3E":"1F63E","\uD83D\uDE3D":"1F63D","\uD83D\uDE3C":"1F63C","\uD83D\uDE3B":"1F63B","\uD83D\uDE3A":"1F63A","\uD83D\uDE39":"1F639","\uD83D\uDE38":"1F638","\uD83D\uDE42":"1F642","\uD83D\uDE41":"1F641","\uD83D\uDE37":"1F637","\uD83D\uDE36":"1F636","\uD83D\uDE35":"1F635","\uD83D\uDE34":"1F634","\uD83D\uDE33":"1F633","\uD83D\uDE32":"1F632","\uD83D\uDE31":"1F631","\uD83D\uDE30":"1F630","\uD83D\uDE2F":"1F62F","\uD83D\uDE2E":"1F62E","\uD83D\uDE2D":"1F62D","\uD83D\uDE2C":"1F62C","\uD83D\uDE2B":"1F62B","\uD83D\uDE2A":"1F62A","\uD83D\uDE29":"1F629","\uD83D\uDE28":"1F628","\uD83D\uDE27":"1F627","\uD83D\uDE26":"1F626","\uD83D\uDE25":"1F625","\uD83D\uDE24":"1F624","\uD83D\uDE23":"1F623","\uD83D\uDE22":"1F622","\uD83D\uDE21":"1F621","\uD83D\uDE20":"1F620","\uD83D\uDE1F":"1F61F","\uD83D\uDE1E":"1F61E","\uD83D\uDE1D":"1F61D","\uD83D\uDE1C":"1F61C","\uD83D\uDE1B":"1F61B","\uD83D\uDE1A":"1F61A","\uD83D\uDE19":"1F619","\uD83D\uDE18":"1F618","\uD83D\uDE17":"1F617","\uD83D\uDE16":"1F616","\uD83D\uDE15":"1F615","\uD83D\uDE14":"1F614","\uD83D\uDE13":"1F613","\uD83D\uDE12":"1F612","\uD83D\uDE11":"1F611","\uD83D\uDE10":"1F610","\uD83D\uDE0F":"1F60F","\uD83D\uDE0E":"1F60E","\uD83D\uDE0D":"1F60D","\uD83D\uDE0C":"1F60C","\uD83D\uDE0B":"1F60B","\u263A\uFE0F":"263A","\u263A":"263A","\uD83D\uDE0A":"1F60A","\uD83D\uDE09":"1F609","\uD83D\uDC7F":"1F47F","\uD83D\uDE08":"1F608","\uD83D\uDE07":"1F607","\uD83D\uDE06":"1F606","\uD83D\uDE05":"1F605","\uD83D\uDE04":"1F604","\uD83D\uDE03":"1F603","\uD83D\uDE02":"1F602","\uD83D\uDE01":"1F601","\uD83D\uDE00":"1F600"};

  ns.shortnameRegexp = ':([-+\\w]+):'; //ns.imagePathPNG = '//cdn.jsdelivr.net/emojione/assets/png/';
  //ns.imagePathSVG = '//cdn.jsdelivr.net/emojione/assets/svg/';
  //ns.imagePathSVGSprites = './../assets/sprites/emojione.sprites.svg';
  //ns.imageType = 'png'; // or svg
  //ns.sprites = true; // if this is true then sprite markup will be used (if SVG image type is set then you must include the SVG sprite file locally)
  //ns.unicodeAlt = true; // use the unicode char as the alt attribute (makes copy and pasting the resulting text better)
  //ns.ascii = true; // change to true to convert ascii smileys
  //ns.cacheBustParam = '?v=1.2.4'; // you can [optionally] modify this to force browsers to refresh their cache. it will be appended to the send of the filenames

  ns.toImage = function (str) {
    str = ns.unicodeToImage(str);
    str = ns.shortnameToImage(str);
    return str;
  }; // Uses toShort to transform all unicode into a standard shortname
  // then transforms the shortname into unicode
  // This is done for standardization when converting several unicode types


  ns.unifyUnicode = function (str) {
    str = ns.toShort(str);
    str = ns.shortnameToUnicode(str);
    return str;
  }; // Replace shortnames (:wink:) with Ascii equivalents ( ;^) )
  // Useful for systems that dont support unicode nor images


  ns.shortnameToAscii = function (str) {
    var unicode,
        // something to keep in mind here is that array flip will destroy
    // half of the ascii text "emojis" because the unicode numbers are duplicated
    // this is ok for what it's being used for
    unicodeToAscii = ns.objectFlip(ns.asciiList);
    str = str.replace(ns.regShortNames, function (shortname) {
      if (typeof shortname === 'undefined' || shortname === '' || !(shortname in ns.emojioneList)) {
        // if the shortname doesnt exist just return the entire match
        return shortname;
      } else {
        unicode = ns.emojioneList[shortname][ns.emojioneList[shortname].length - 1].toLowerCase();

        if (typeof unicodeToAscii[unicode] !== 'undefined') {
          return unicodeToAscii[unicode];
        } else {
          return shortname;
        }
      }
    });
    return str;
  }; // will output unicode from shortname
  // useful for sending emojis back to mobile devices


  ns.shortnameToUnicode = function (str) {
    // replace regular shortnames first
    var unicode;
    str = str.replace(ns.regShortNames, function (shortname) {
      if (typeof shortname === 'undefined' || shortname === '' || !(shortname in ns.emojioneList)) {
        // if the shortname doesnt exist just return the entire match
        return shortname;
      }

      if (ns.emojioneList[shortname].length > 0) {
        unicode = ns.emojioneList[shortname][0].toUpperCase();
      } else {
        unicode = '';
      }

      return ns.convert(unicode);
    }); // if ascii smileys are turned on, then we'll replace them!

    if (ns.ascii) {
      str = str.replace(ns.regAscii, function (entire, m1, m2, m3) {
        if (typeof m3 === 'undefined' || m3 === '' || !(ns.unescapeHTML(m3) in ns.asciiList)) {
          // if the shortname doesnt exist just return the entire match
          return entire;
        }

        m3 = ns.unescapeHTML(m3);
        unicode = ns.asciiList[m3].toUpperCase();
        return m2 + ns.convert(unicode);
      });
    }

    return str;
  };

  ns.shortnameToImage = function (str, returnImg, extraSpanForImg) {
    if (!str) {
      return "";
    } // replace regular shortnames first


    var replaceWith, unicode, alt;
    str = str.replace(ns.regShortNames, function (shortname) {
      if (typeof shortname === 'undefined' || shortname === '' || !(shortname in ns.emojioneList)) {
        // if the shortname doesnt exist just return the entire match
        return shortname;
      } else {
        unicode = ns.emojioneList[shortname][ns.emojioneList[shortname].length - 1]; // depending on the settings, we'll either add the native unicode as the alt tag, otherwise the shortname

        alt = ns.unicodeAlt ? ns.convert(unicode.toUpperCase()) : shortname;

        if (ns.imageType === 'png') {
          if (ns.sprites) {
            if (returnImg) {
              replaceWith = '<img class="emojione emojione-' + unicode + '" title="' + shortname + '"/>';
            } else {
              replaceWith = '<span class="emojione emojione-' + unicode + '" title="' + shortname + '">' + alt + '</span>';
            }
          }
          /*else {
              replaceWith = '<img class="emojione" alt="'+alt+'" src="'+ns.imagePathPNG+unicode+'.png'+ns.cacheBustParam+'"/>';
          }*/

        }
        /*else {
            // svg
            if(ns.sprites) {
                replaceWith = '<svg class="emojione"><description>'+alt+'</description><use xlink:href="'+ns.imagePathSVGSprites+'#emoji-'+unicode+'"></use></svg>';
            }
            else {
                replaceWith = '<object class="emojione" data="'+ns.imagePathSVG+unicode+'.svg'+ns.cacheBustParam+'" type="image/svg+xml" standby="'+alt+'">'+alt+'</object>';
            }
        }*/


        if (extraSpanForImg) {
          replaceWith = '<span class="emojiTxt">' + replaceWith + '</span>';
        }

        return replaceWith;
      }
    }); // if ascii smileys are turned on, then we'll replace them!

    if (ns.ascii) {
      str = str.replace(ns.regAscii, function (entire, m1, m2, m3) {
        if (typeof m3 === 'undefined' || m3 === '' || !(ns.unescapeHTML(m3) in ns.asciiList)) {
          // if the shortname doesnt exist just return the entire match
          return entire;
        }

        m3 = ns.unescapeHTML(m3);
        unicode = ns.asciiList[m3]; // depending on the settings, we'll either add the native unicode as the alt tag, otherwise the shortname

        alt = ns.unicodeAlt ? ns.convert(unicode.toUpperCase()) : ns.escapeHTML(m3);

        if (ns.imageType === 'png') {
          if (ns.sprites) {
            replaceWith = m2 + '<span class="emojione emojione-' + unicode + '" title="' + ns.escapeHTML(m3) + '">' + alt + '</span>';
          }
          /*else {
              replaceWith = m2+'<img class="emojione" alt="'+alt+'" src="'+ns.imagePathPNG+unicode+'.png'+ns.cacheBustParam+'"/>';
          }*/

        }
        /*else {
            // svg
            if(ns.sprites) {
                replaceWith = '<svg class="emojione"><description>'+alt+'</description><use xlink:href="'+ns.imagePathSVGSprites+'#emoji-'+unicode.toUpperCase()+'"></use></svg>';
            }
            else {
                replaceWith = m2+'<object class="emojione" data="'+ns.imagePathSVG+unicode+'.svg'+ns.cacheBustParam+'" type="image/svg+xml" standby="'+alt+'">'+alt+'</object>';
            }
        }*/


        return replaceWith;
      });
    }

    return str;
  };

  ns.unicodeToImage = function (str, returnImg, extraSpanForImg) {
    if (!str) {
      return "";
    }

    var replaceWith, unicode, alt;

    if (!ns.unicodeAlt || ns.sprites) {
      // if we are using the shortname as the alt tag then we need a reversed array to map unicode code point to shortnames
      var mappedUnicode = ns.mapShortToUnicode();
    }

    str = str.replace(ns.regUnicode, function (unicodeChar) {
      if (typeof unicodeChar === 'undefined' || unicodeChar === '' || !(unicodeChar in ns.jsecapeMap)) {
        // if the unicodeChar doesnt exist just return the entire match
        return unicodeChar;
      } else {
        // get the unicode codepoint from the actual char
        unicode = ns.jsecapeMap[unicodeChar]; // depending on the settings, we'll either add the native unicode as the alt tag, otherwise the shortname

        alt = ns.unicodeAlt ? ns.convert(unicode.toUpperCase()) : mappedUnicode[unicode];

        if (ns.imageType === 'png') {
          if (ns.sprites) {
            if (returnImg) {
              replaceWith = '<img class="emojione emojione-' + unicode + '" title="' + mappedUnicode[unicode] + '"/>';
            } else {
              replaceWith = '<span class="emojione emojione-' + unicode + '" title="' + mappedUnicode[unicode] + '">' + alt + '</span>';
            }
          }
          /*else {
              replaceWith = '<img class="emojione" alt="'+alt+'" src="'+ns.imagePathPNG+unicode+'.png'+ns.cacheBustParam+'"/>';
          }*/

        }
        /*else {
            // svg
            if(ns.sprites) {
                replaceWith = '<svg class="emojione"><description>'+alt+'</description><use xlink:href="'+ns.imagePathSVGSprites+'#emoji-'+unicode.toUpperCase()+'"></use></svg>';
            }
            else {
                replaceWith = '<img class="emojione" alt="'+alt+'" src="'+ns.imagePathSVG+unicode+'.svg'+ns.cacheBustParam+'"/>';
            }
        }*/


        if (extraSpanForImg) {
          replaceWith = '<span class="emojiTxt">' + replaceWith + '</span>';
        }

        return replaceWith;
      }
    });
    return str;
  }; // super simple loop to replace all unicode emoji to shortnames
  // needs to be improved into one big replacement instead, for performance reasons


  ns.toShort = function (str) {
    // this is really just unicodeToShortname() but I opted for the shorthand name to match toImage()
    for (var shortcode in ns.emojioneList) {
      if (!ns.emojioneList.hasOwnProperty(shortcode)) {
        continue;
      }

      for (var i = 0, len = ns.emojioneList[shortcode].length; i < len; i++) {
        var unicode = ns.emojioneList[shortcode][i];
        str = ns.replaceAll(str, ns.convert(unicode.toUpperCase()), shortcode);
      }
    }

    return str;
  }; // for converting unicode code points and code pairs to their respective characters


  ns.convert = function (unicode) {
    if (unicode.indexOf("-") > -1) {
      var parts = [];
      var s = unicode.split('-');

      for (var i = 0; i < s.length; i++) {
        var part = parseInt(s[i], 16);

        if (part >= 0x10000 && part <= 0x10FFFF) {
          var hi = Math.floor((part - 0x10000) / 0x400) + 0xD800;
          var lo = (part - 0x10000) % 0x400 + 0xDC00;
          part = String.fromCharCode(hi) + String.fromCharCode(lo);
        } else {
          part = String.fromCharCode(part);
        }

        parts.push(part);
      }

      return parts.join('');
    } else {
      var s = parseInt(unicode, 16);

      if (s >= 0x10000 && s <= 0x10FFFF) {
        var hi = Math.floor((s - 0x10000) / 0x400) + 0xD800;
        var lo = (s - 0x10000) % 0x400 + 0xDC00;
        return String.fromCharCode(hi) + String.fromCharCode(lo);
      } else {
        return String.fromCharCode(s);
      }
    }
  };

  ns.escapeHTML = function (string) {
    var escaped = {
      '&': '&amp;',
      '<': '&lt;',
      '>': '&gt;',
      '"': '&quot;',
      '\'': '&#039;'
    };
    return string.replace(/[&<>"']/g, function (match) {
      return escaped[match];
    });
  };

  ns.unescapeHTML = function (string) {
    var unescaped = {
      '&amp;': '&',
      '&#38;': '&',
      '&#x26;': '&',
      '&lt;': '<',
      '&#60;': '<',
      '&#x3C;': '<',
      '&gt;': '>',
      '&#62;': '>',
      '&#x3E;': '>',
      '&quot;': '"',
      '&#34;': '"',
      '&#x22;': '"',
      '&apos;': '\'',
      '&#39;': '\'',
      '&#x27;': '\''
    };
    return string.replace(/&(?:amp|#38|#x26|lt|#60|#x3C|gt|#62|#x3E|apos|#39|#x27|quot|#34|#x22);/ig, function (match) {
      return unescaped[match];
    });
  };

  ns.mapShortToUnicode = function () {
    var new_obj = {};

    for (var shortname in ns.emojioneList) {
      if (!ns.emojioneList.hasOwnProperty(shortname)) {
        continue;
      }

      for (var i = 0, len = ns.emojioneList[shortname].length; i < len; i++) {
        new_obj[ns.emojioneList[shortname][i]] = shortname;
      }
    }

    return new_obj;
  }; //reverse an object


  ns.objectFlip = function (obj) {
    var key,
        tmp_obj = {};

    for (key in obj) {
      if (obj.hasOwnProperty(key)) {
        tmp_obj[obj[key]] = key;
      }
    }

    return tmp_obj;
  };

  ns.escapeRegExp = function (string) {
    return string.replace(/[-[\]{}()*+?.,;:&\\^$|#\s]/g, "\\$&");
  };

  ns.replaceAll = function (string, find, replaceWith) {
    var escapedFind = ns.escapeRegExp(find);
    var search = new RegExp("<object[^>]*>.*?<\/object>|<span[^>]*>.*?<\/span>|<(?:object|embed|svg|img|div|span|p|a)[^>]*>|(" + escapedFind + ")", "gi"); // callback prevents replacing anything inside of these common html tags as well as between an <object></object> tag

    var replace = function replace(entire, m1) {
      return typeof m1 === 'undefined' || m1 === '' ? entire : replaceWith;
    };

    return string.replace(search, replace);
  };
})(this.emojione = this.emojione || {});

if (( false ? 0 : _typeof(module)) === "object") module.exports = this.emojione;

/***/ }),

/***/ 3265:
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(8081);
/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(3645);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
// Imports


var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));
// Module
___CSS_LOADER_EXPORT___.push([module.id, ".kore-chat-window .barchart .barchartDiv{display:block;border-radius:4px;clear:both;margin-left:-45px;width:353px;box-shadow:0 1px 5px 0 rgba(179,186,200,.58);cursor:pointer;background-color:#fff}.kore-chat-window .barchart .messageBubble.barchart{margin-bottom:10px}.kore-chat-window .barchart .profile-photo{top:28px}.kore-chat-window .barchartDiv .bar-chart-tooltip{position:absolute;max-width:170px;padding:2px;font:12px sans-serif;background:#eed;border:0px;border-radius:8px;pointer-events:none}.kore-chat-window .largePreviewContent .bar-chart-tooltip{position:absolute;padding:2px;font:12px sans-serif;background:#eed;border:0px;border-radius:8px;pointer-events:none;max-width:200px}.kore-chat-window .barChartChildDiv{margin-left:13px;width:340px}[dir=rtl].kore-chat-window .piechart .piechartDiv{direction:ltr;margin-right:-45px}[dir=rtl].kore-chat-window .barchart .barchartDiv{margin-right:-45px;direction:ltr}", ""]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ 2622:
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(8081);
/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(3645);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
// Imports


var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));
// Module
___CSS_LOADER_EXPORT___.push([module.id, ".lineChartChildDiv .mouse-over-effects .mouse-per-line text{font-size:12px}.kore-chat-window .linechart .linechartDiv{display:block;border-radius:4px;clear:both;margin-left:-45px;width:353px;box-shadow:0 1px 5px 0 rgba(179,186,200,.58);cursor:pointer;background-color:#fff}.kore-chat-window .lineChartChildDiv{margin-left:13px;width:340px}.kore-chat-window .linechart .messageBubble.linechart{margin-bottom:10px}.kore-chat-window .linechart .profile-photo{top:30px}[dir=rtl].kore-chat-window .linechart .linechartDiv{margin-right:-45px;direction:ltr}", ""]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ 3700:
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(8081);
/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(3645);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
// Imports


var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));
// Module
___CSS_LOADER_EXPORT___.push([module.id, ".kore-chat-window .piechartDiv .legend-title{fill:#8a959f}.kore-chat-window .piechartDiv .legend-value{fill:#26344a}.kore-chat-window .piechartDiv .chart-disp-val{fill:#26344a}.kore-chat-window .piechart .piechartDiv{display:block;border-radius:4px;clear:both;width:353px;margin-left:-45px;box-shadow:0 1px 5px 0 rgba(179,186,200,.58);cursor:pointer}.kore-chat-window .piechart .messageBubble.pieChart{margin-bottom:10px}.kore-chat-window .piechart .profile-photo{top:45px}.kore-chat-window .piechart .piechartDiv{display:block;border-radius:4px;clear:both;width:353px;margin-left:-45px;box-shadow:0 1px 5px 0 rgba(179,186,200,.58);cursor:pointer;background:#fff}.kore-chat-window .piechart .piechartDiv .legend-tooltip-pie-chart{position:absolute;background:#fff;box-shadow:0 1px 5px 0 rgba(179,186,200,.58);height:150px;overflow-y:scroll}.kore-chat-window .legend-tooltip-pie-chart::-webkit-scrollbar{width:4px}.kore-chat-window .legend-tooltip-pie-chart::-webkit-scrollbar-track{box-shadow:inset 0 0 6px rgba(0,0,0,.3);-webkit-box-shadow:inset 0 0 6px rgba(0,0,0,.3)}.kore-chat-window .legend-tooltip-pie-chart::-webkit-scrollbar-thumb{background-color:#a9a9a9;outline:1px solid #708090}.kore-chat-window .legend-tooltip-pie-chart{background:#fff;box-shadow:0 1px 5px 0 rgba(179,186,200,.58);height:105px;padding-bottom:6px;overflow-y:scroll}.kore-chat-window .piechart .messageBubble.pieChart{margin-bottom:10px}.kore-chat-window .piechart .profile-photo{top:30px}.kore-chat-window polyline{opacity:.3;stroke:#000;stroke-width:1px;fill:none}.kore-chat-window .labelName tspan{font-style:normal;font-weight:700}.kore-chat-window .labelName{font-size:.9em;font-style:italic}", ""]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ 3645:
/***/ ((module) => {

"use strict";


/*
  MIT License http://www.opensource.org/licenses/mit-license.php
  Author Tobias Koppers @sokra
*/
module.exports = function (cssWithMappingToString) {
  var list = []; // return the list of modules as css string

  list.toString = function toString() {
    return this.map(function (item) {
      var content = "";
      var needLayer = typeof item[5] !== "undefined";

      if (item[4]) {
        content += "@supports (".concat(item[4], ") {");
      }

      if (item[2]) {
        content += "@media ".concat(item[2], " {");
      }

      if (needLayer) {
        content += "@layer".concat(item[5].length > 0 ? " ".concat(item[5]) : "", " {");
      }

      content += cssWithMappingToString(item);

      if (needLayer) {
        content += "}";
      }

      if (item[2]) {
        content += "}";
      }

      if (item[4]) {
        content += "}";
      }

      return content;
    }).join("");
  }; // import a list of modules into the list


  list.i = function i(modules, media, dedupe, supports, layer) {
    if (typeof modules === "string") {
      modules = [[null, modules, undefined]];
    }

    var alreadyImportedModules = {};

    if (dedupe) {
      for (var k = 0; k < this.length; k++) {
        var id = this[k][0];

        if (id != null) {
          alreadyImportedModules[id] = true;
        }
      }
    }

    for (var _k = 0; _k < modules.length; _k++) {
      var item = [].concat(modules[_k]);

      if (dedupe && alreadyImportedModules[item[0]]) {
        continue;
      }

      if (typeof layer !== "undefined") {
        if (typeof item[5] === "undefined") {
          item[5] = layer;
        } else {
          item[1] = "@layer".concat(item[5].length > 0 ? " ".concat(item[5]) : "", " {").concat(item[1], "}");
          item[5] = layer;
        }
      }

      if (media) {
        if (!item[2]) {
          item[2] = media;
        } else {
          item[1] = "@media ".concat(item[2], " {").concat(item[1], "}");
          item[2] = media;
        }
      }

      if (supports) {
        if (!item[4]) {
          item[4] = "".concat(supports);
        } else {
          item[1] = "@supports (".concat(item[4], ") {").concat(item[1], "}");
          item[4] = supports;
        }
      }

      list.push(item);
    }
  };

  return list;
};

/***/ }),

/***/ 8081:
/***/ ((module) => {

"use strict";


module.exports = function (i) {
  return i[1];
};

/***/ }),

/***/ 9755:
/***/ (function(module, exports) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
 * jQuery JavaScript Library v3.6.0
 * https://jquery.com/
 *
 * Includes Sizzle.js
 * https://sizzlejs.com/
 *
 * Copyright OpenJS Foundation and other contributors
 * Released under the MIT license
 * https://jquery.org/license
 *
 * Date: 2021-03-02T17:08Z
 */
( function( global, factory ) {

	"use strict";

	if (  true && typeof module.exports === "object" ) {

		// For CommonJS and CommonJS-like environments where a proper `window`
		// is present, execute the factory and get jQuery.
		// For environments that do not have a `window` with a `document`
		// (such as Node.js), expose a factory as module.exports.
		// This accentuates the need for the creation of a real `window`.
		// e.g. var jQuery = require("jquery")(window);
		// See ticket #14549 for more info.
		module.exports = global.document ?
			factory( global, true ) :
			function( w ) {
				if ( !w.document ) {
					throw new Error( "jQuery requires a window with a document" );
				}
				return factory( w );
			};
	} else {
		factory( global );
	}

// Pass this if window is not defined yet
} )( typeof window !== "undefined" ? window : this, function( window, noGlobal ) {

// Edge <= 12 - 13+, Firefox <=18 - 45+, IE 10 - 11, Safari 5.1 - 9+, iOS 6 - 9.1
// throw exceptions when non-strict code (e.g., ASP.NET 4.5) accesses strict mode
// arguments.callee.caller (trac-13335). But as of jQuery 3.0 (2016), strict mode should be common
// enough that all such attempts are guarded in a try block.
"use strict";

var arr = [];

var getProto = Object.getPrototypeOf;

var slice = arr.slice;

var flat = arr.flat ? function( array ) {
	return arr.flat.call( array );
} : function( array ) {
	return arr.concat.apply( [], array );
};


var push = arr.push;

var indexOf = arr.indexOf;

var class2type = {};

var toString = class2type.toString;

var hasOwn = class2type.hasOwnProperty;

var fnToString = hasOwn.toString;

var ObjectFunctionString = fnToString.call( Object );

var support = {};

var isFunction = function isFunction( obj ) {

		// Support: Chrome <=57, Firefox <=52
		// In some browsers, typeof returns "function" for HTML <object> elements
		// (i.e., `typeof document.createElement( "object" ) === "function"`).
		// We don't want to classify *any* DOM node as a function.
		// Support: QtWeb <=3.8.5, WebKit <=534.34, wkhtmltopdf tool <=0.12.5
		// Plus for old WebKit, typeof returns "function" for HTML collections
		// (e.g., `typeof document.getElementsByTagName("div") === "function"`). (gh-4756)
		return typeof obj === "function" && typeof obj.nodeType !== "number" &&
			typeof obj.item !== "function";
	};


var isWindow = function isWindow( obj ) {
		return obj != null && obj === obj.window;
	};


var document = window.document;



	var preservedScriptAttributes = {
		type: true,
		src: true,
		nonce: true,
		noModule: true
	};

	function DOMEval( code, node, doc ) {
		doc = doc || document;

		var i, val,
			script = doc.createElement( "script" );

		script.text = code;
		if ( node ) {
			for ( i in preservedScriptAttributes ) {

				// Support: Firefox 64+, Edge 18+
				// Some browsers don't support the "nonce" property on scripts.
				// On the other hand, just using `getAttribute` is not enough as
				// the `nonce` attribute is reset to an empty string whenever it
				// becomes browsing-context connected.
				// See https://github.com/whatwg/html/issues/2369
				// See https://html.spec.whatwg.org/#nonce-attributes
				// The `node.getAttribute` check was added for the sake of
				// `jQuery.globalEval` so that it can fake a nonce-containing node
				// via an object.
				val = node[ i ] || node.getAttribute && node.getAttribute( i );
				if ( val ) {
					script.setAttribute( i, val );
				}
			}
		}
		doc.head.appendChild( script ).parentNode.removeChild( script );
	}


function toType( obj ) {
	if ( obj == null ) {
		return obj + "";
	}

	// Support: Android <=2.3 only (functionish RegExp)
	return typeof obj === "object" || typeof obj === "function" ?
		class2type[ toString.call( obj ) ] || "object" :
		typeof obj;
}
/* global Symbol */
// Defining this global in .eslintrc.json would create a danger of using the global
// unguarded in another place, it seems safer to define global only for this module



var
	version = "3.6.0",

	// Define a local copy of jQuery
	jQuery = function( selector, context ) {

		// The jQuery object is actually just the init constructor 'enhanced'
		// Need init if jQuery is called (just allow error to be thrown if not included)
		return new jQuery.fn.init( selector, context );
	};

jQuery.fn = jQuery.prototype = {

	// The current version of jQuery being used
	jquery: version,

	constructor: jQuery,

	// The default length of a jQuery object is 0
	length: 0,

	toArray: function() {
		return slice.call( this );
	},

	// Get the Nth element in the matched element set OR
	// Get the whole matched element set as a clean array
	get: function( num ) {

		// Return all the elements in a clean array
		if ( num == null ) {
			return slice.call( this );
		}

		// Return just the one element from the set
		return num < 0 ? this[ num + this.length ] : this[ num ];
	},

	// Take an array of elements and push it onto the stack
	// (returning the new matched element set)
	pushStack: function( elems ) {

		// Build a new jQuery matched element set
		var ret = jQuery.merge( this.constructor(), elems );

		// Add the old object onto the stack (as a reference)
		ret.prevObject = this;

		// Return the newly-formed element set
		return ret;
	},

	// Execute a callback for every element in the matched set.
	each: function( callback ) {
		return jQuery.each( this, callback );
	},

	map: function( callback ) {
		return this.pushStack( jQuery.map( this, function( elem, i ) {
			return callback.call( elem, i, elem );
		} ) );
	},

	slice: function() {
		return this.pushStack( slice.apply( this, arguments ) );
	},

	first: function() {
		return this.eq( 0 );
	},

	last: function() {
		return this.eq( -1 );
	},

	even: function() {
		return this.pushStack( jQuery.grep( this, function( _elem, i ) {
			return ( i + 1 ) % 2;
		} ) );
	},

	odd: function() {
		return this.pushStack( jQuery.grep( this, function( _elem, i ) {
			return i % 2;
		} ) );
	},

	eq: function( i ) {
		var len = this.length,
			j = +i + ( i < 0 ? len : 0 );
		return this.pushStack( j >= 0 && j < len ? [ this[ j ] ] : [] );
	},

	end: function() {
		return this.prevObject || this.constructor();
	},

	// For internal use only.
	// Behaves like an Array's method, not like a jQuery method.
	push: push,
	sort: arr.sort,
	splice: arr.splice
};

jQuery.extend = jQuery.fn.extend = function() {
	var options, name, src, copy, copyIsArray, clone,
		target = arguments[ 0 ] || {},
		i = 1,
		length = arguments.length,
		deep = false;

	// Handle a deep copy situation
	if ( typeof target === "boolean" ) {
		deep = target;

		// Skip the boolean and the target
		target = arguments[ i ] || {};
		i++;
	}

	// Handle case when target is a string or something (possible in deep copy)
	if ( typeof target !== "object" && !isFunction( target ) ) {
		target = {};
	}

	// Extend jQuery itself if only one argument is passed
	if ( i === length ) {
		target = this;
		i--;
	}

	for ( ; i < length; i++ ) {

		// Only deal with non-null/undefined values
		if ( ( options = arguments[ i ] ) != null ) {

			// Extend the base object
			for ( name in options ) {
				copy = options[ name ];

				// Prevent Object.prototype pollution
				// Prevent never-ending loop
				if ( name === "__proto__" || target === copy ) {
					continue;
				}

				// Recurse if we're merging plain objects or arrays
				if ( deep && copy && ( jQuery.isPlainObject( copy ) ||
					( copyIsArray = Array.isArray( copy ) ) ) ) {
					src = target[ name ];

					// Ensure proper type for the source value
					if ( copyIsArray && !Array.isArray( src ) ) {
						clone = [];
					} else if ( !copyIsArray && !jQuery.isPlainObject( src ) ) {
						clone = {};
					} else {
						clone = src;
					}
					copyIsArray = false;

					// Never move original objects, clone them
					target[ name ] = jQuery.extend( deep, clone, copy );

				// Don't bring in undefined values
				} else if ( copy !== undefined ) {
					target[ name ] = copy;
				}
			}
		}
	}

	// Return the modified object
	return target;
};

jQuery.extend( {

	// Unique for each copy of jQuery on the page
	expando: "jQuery" + ( version + Math.random() ).replace( /\D/g, "" ),

	// Assume jQuery is ready without the ready module
	isReady: true,

	error: function( msg ) {
		throw new Error( msg );
	},

	noop: function() {},

	isPlainObject: function( obj ) {
		var proto, Ctor;

		// Detect obvious negatives
		// Use toString instead of jQuery.type to catch host objects
		if ( !obj || toString.call( obj ) !== "[object Object]" ) {
			return false;
		}

		proto = getProto( obj );

		// Objects with no prototype (e.g., `Object.create( null )`) are plain
		if ( !proto ) {
			return true;
		}

		// Objects with prototype are plain iff they were constructed by a global Object function
		Ctor = hasOwn.call( proto, "constructor" ) && proto.constructor;
		return typeof Ctor === "function" && fnToString.call( Ctor ) === ObjectFunctionString;
	},

	isEmptyObject: function( obj ) {
		var name;

		for ( name in obj ) {
			return false;
		}
		return true;
	},

	// Evaluates a script in a provided context; falls back to the global one
	// if not specified.
	globalEval: function( code, options, doc ) {
		DOMEval( code, { nonce: options && options.nonce }, doc );
	},

	each: function( obj, callback ) {
		var length, i = 0;

		if ( isArrayLike( obj ) ) {
			length = obj.length;
			for ( ; i < length; i++ ) {
				if ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {
					break;
				}
			}
		} else {
			for ( i in obj ) {
				if ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {
					break;
				}
			}
		}

		return obj;
	},

	// results is for internal usage only
	makeArray: function( arr, results ) {
		var ret = results || [];

		if ( arr != null ) {
			if ( isArrayLike( Object( arr ) ) ) {
				jQuery.merge( ret,
					typeof arr === "string" ?
						[ arr ] : arr
				);
			} else {
				push.call( ret, arr );
			}
		}

		return ret;
	},

	inArray: function( elem, arr, i ) {
		return arr == null ? -1 : indexOf.call( arr, elem, i );
	},

	// Support: Android <=4.0 only, PhantomJS 1 only
	// push.apply(_, arraylike) throws on ancient WebKit
	merge: function( first, second ) {
		var len = +second.length,
			j = 0,
			i = first.length;

		for ( ; j < len; j++ ) {
			first[ i++ ] = second[ j ];
		}

		first.length = i;

		return first;
	},

	grep: function( elems, callback, invert ) {
		var callbackInverse,
			matches = [],
			i = 0,
			length = elems.length,
			callbackExpect = !invert;

		// Go through the array, only saving the items
		// that pass the validator function
		for ( ; i < length; i++ ) {
			callbackInverse = !callback( elems[ i ], i );
			if ( callbackInverse !== callbackExpect ) {
				matches.push( elems[ i ] );
			}
		}

		return matches;
	},

	// arg is for internal usage only
	map: function( elems, callback, arg ) {
		var length, value,
			i = 0,
			ret = [];

		// Go through the array, translating each of the items to their new values
		if ( isArrayLike( elems ) ) {
			length = elems.length;
			for ( ; i < length; i++ ) {
				value = callback( elems[ i ], i, arg );

				if ( value != null ) {
					ret.push( value );
				}
			}

		// Go through every key on the object,
		} else {
			for ( i in elems ) {
				value = callback( elems[ i ], i, arg );

				if ( value != null ) {
					ret.push( value );
				}
			}
		}

		// Flatten any nested arrays
		return flat( ret );
	},

	// A global GUID counter for objects
	guid: 1,

	// jQuery.support is not used in Core but other projects attach their
	// properties to it so it needs to exist.
	support: support
} );

if ( typeof Symbol === "function" ) {
	jQuery.fn[ Symbol.iterator ] = arr[ Symbol.iterator ];
}

// Populate the class2type map
jQuery.each( "Boolean Number String Function Array Date RegExp Object Error Symbol".split( " " ),
	function( _i, name ) {
		class2type[ "[object " + name + "]" ] = name.toLowerCase();
	} );

function isArrayLike( obj ) {

	// Support: real iOS 8.2 only (not reproducible in simulator)
	// `in` check used to prevent JIT error (gh-2145)
	// hasOwn isn't used here due to false negatives
	// regarding Nodelist length in IE
	var length = !!obj && "length" in obj && obj.length,
		type = toType( obj );

	if ( isFunction( obj ) || isWindow( obj ) ) {
		return false;
	}

	return type === "array" || length === 0 ||
		typeof length === "number" && length > 0 && ( length - 1 ) in obj;
}
var Sizzle =
/*!
 * Sizzle CSS Selector Engine v2.3.6
 * https://sizzlejs.com/
 *
 * Copyright JS Foundation and other contributors
 * Released under the MIT license
 * https://js.foundation/
 *
 * Date: 2021-02-16
 */
( function( window ) {
var i,
	support,
	Expr,
	getText,
	isXML,
	tokenize,
	compile,
	select,
	outermostContext,
	sortInput,
	hasDuplicate,

	// Local document vars
	setDocument,
	document,
	docElem,
	documentIsHTML,
	rbuggyQSA,
	rbuggyMatches,
	matches,
	contains,

	// Instance-specific data
	expando = "sizzle" + 1 * new Date(),
	preferredDoc = window.document,
	dirruns = 0,
	done = 0,
	classCache = createCache(),
	tokenCache = createCache(),
	compilerCache = createCache(),
	nonnativeSelectorCache = createCache(),
	sortOrder = function( a, b ) {
		if ( a === b ) {
			hasDuplicate = true;
		}
		return 0;
	},

	// Instance methods
	hasOwn = ( {} ).hasOwnProperty,
	arr = [],
	pop = arr.pop,
	pushNative = arr.push,
	push = arr.push,
	slice = arr.slice,

	// Use a stripped-down indexOf as it's faster than native
	// https://jsperf.com/thor-indexof-vs-for/5
	indexOf = function( list, elem ) {
		var i = 0,
			len = list.length;
		for ( ; i < len; i++ ) {
			if ( list[ i ] === elem ) {
				return i;
			}
		}
		return -1;
	},

	booleans = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|" +
		"ismap|loop|multiple|open|readonly|required|scoped",

	// Regular expressions

	// http://www.w3.org/TR/css3-selectors/#whitespace
	whitespace = "[\\x20\\t\\r\\n\\f]",

	// https://www.w3.org/TR/css-syntax-3/#ident-token-diagram
	identifier = "(?:\\\\[\\da-fA-F]{1,6}" + whitespace +
		"?|\\\\[^\\r\\n\\f]|[\\w-]|[^\0-\\x7f])+",

	// Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors
	attributes = "\\[" + whitespace + "*(" + identifier + ")(?:" + whitespace +

		// Operator (capture 2)
		"*([*^$|!~]?=)" + whitespace +

		// "Attribute values must be CSS identifiers [capture 5]
		// or strings [capture 3 or capture 4]"
		"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" + identifier + "))|)" +
		whitespace + "*\\]",

	pseudos = ":(" + identifier + ")(?:\\((" +

		// To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:
		// 1. quoted (capture 3; capture 4 or capture 5)
		"('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|" +

		// 2. simple (capture 6)
		"((?:\\\\.|[^\\\\()[\\]]|" + attributes + ")*)|" +

		// 3. anything else (capture 2)
		".*" +
		")\\)|)",

	// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter
	rwhitespace = new RegExp( whitespace + "+", "g" ),
	rtrim = new RegExp( "^" + whitespace + "+|((?:^|[^\\\\])(?:\\\\.)*)" +
		whitespace + "+$", "g" ),

	rcomma = new RegExp( "^" + whitespace + "*," + whitespace + "*" ),
	rcombinators = new RegExp( "^" + whitespace + "*([>+~]|" + whitespace + ")" + whitespace +
		"*" ),
	rdescend = new RegExp( whitespace + "|>" ),

	rpseudo = new RegExp( pseudos ),
	ridentifier = new RegExp( "^" + identifier + "$" ),

	matchExpr = {
		"ID": new RegExp( "^#(" + identifier + ")" ),
		"CLASS": new RegExp( "^\\.(" + identifier + ")" ),
		"TAG": new RegExp( "^(" + identifier + "|[*])" ),
		"ATTR": new RegExp( "^" + attributes ),
		"PSEUDO": new RegExp( "^" + pseudos ),
		"CHILD": new RegExp( "^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" +
			whitespace + "*(even|odd|(([+-]|)(\\d*)n|)" + whitespace + "*(?:([+-]|)" +
			whitespace + "*(\\d+)|))" + whitespace + "*\\)|)", "i" ),
		"bool": new RegExp( "^(?:" + booleans + ")$", "i" ),

		// For use in libraries implementing .is()
		// We use this for POS matching in `select`
		"needsContext": new RegExp( "^" + whitespace +
			"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" + whitespace +
			"*((?:-\\d)?\\d*)" + whitespace + "*\\)|)(?=[^-]|$)", "i" )
	},

	rhtml = /HTML$/i,
	rinputs = /^(?:input|select|textarea|button)$/i,
	rheader = /^h\d$/i,

	rnative = /^[^{]+\{\s*\[native \w/,

	// Easily-parseable/retrievable ID or TAG or CLASS selectors
	rquickExpr = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,

	rsibling = /[+~]/,

	// CSS escapes
	// http://www.w3.org/TR/CSS21/syndata.html#escaped-characters
	runescape = new RegExp( "\\\\[\\da-fA-F]{1,6}" + whitespace + "?|\\\\([^\\r\\n\\f])", "g" ),
	funescape = function( escape, nonHex ) {
		var high = "0x" + escape.slice( 1 ) - 0x10000;

		return nonHex ?

			// Strip the backslash prefix from a non-hex escape sequence
			nonHex :

			// Replace a hexadecimal escape sequence with the encoded Unicode code point
			// Support: IE <=11+
			// For values outside the Basic Multilingual Plane (BMP), manually construct a
			// surrogate pair
			high < 0 ?
				String.fromCharCode( high + 0x10000 ) :
				String.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );
	},

	// CSS string/identifier serialization
	// https://drafts.csswg.org/cssom/#common-serializing-idioms
	rcssescape = /([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,
	fcssescape = function( ch, asCodePoint ) {
		if ( asCodePoint ) {

			// U+0000 NULL becomes U+FFFD REPLACEMENT CHARACTER
			if ( ch === "\0" ) {
				return "\uFFFD";
			}

			// Control characters and (dependent upon position) numbers get escaped as code points
			return ch.slice( 0, -1 ) + "\\" +
				ch.charCodeAt( ch.length - 1 ).toString( 16 ) + " ";
		}

		// Other potentially-special ASCII characters get backslash-escaped
		return "\\" + ch;
	},

	// Used for iframes
	// See setDocument()
	// Removing the function wrapper causes a "Permission Denied"
	// error in IE
	unloadHandler = function() {
		setDocument();
	},

	inDisabledFieldset = addCombinator(
		function( elem ) {
			return elem.disabled === true && elem.nodeName.toLowerCase() === "fieldset";
		},
		{ dir: "parentNode", next: "legend" }
	);

// Optimize for push.apply( _, NodeList )
try {
	push.apply(
		( arr = slice.call( preferredDoc.childNodes ) ),
		preferredDoc.childNodes
	);

	// Support: Android<4.0
	// Detect silently failing push.apply
	// eslint-disable-next-line no-unused-expressions
	arr[ preferredDoc.childNodes.length ].nodeType;
} catch ( e ) {
	push = { apply: arr.length ?

		// Leverage slice if possible
		function( target, els ) {
			pushNative.apply( target, slice.call( els ) );
		} :

		// Support: IE<9
		// Otherwise append directly
		function( target, els ) {
			var j = target.length,
				i = 0;

			// Can't trust NodeList.length
			while ( ( target[ j++ ] = els[ i++ ] ) ) {}
			target.length = j - 1;
		}
	};
}

function Sizzle( selector, context, results, seed ) {
	var m, i, elem, nid, match, groups, newSelector,
		newContext = context && context.ownerDocument,

		// nodeType defaults to 9, since context defaults to document
		nodeType = context ? context.nodeType : 9;

	results = results || [];

	// Return early from calls with invalid selector or context
	if ( typeof selector !== "string" || !selector ||
		nodeType !== 1 && nodeType !== 9 && nodeType !== 11 ) {

		return results;
	}

	// Try to shortcut find operations (as opposed to filters) in HTML documents
	if ( !seed ) {
		setDocument( context );
		context = context || document;

		if ( documentIsHTML ) {

			// If the selector is sufficiently simple, try using a "get*By*" DOM method
			// (excepting DocumentFragment context, where the methods don't exist)
			if ( nodeType !== 11 && ( match = rquickExpr.exec( selector ) ) ) {

				// ID selector
				if ( ( m = match[ 1 ] ) ) {

					// Document context
					if ( nodeType === 9 ) {
						if ( ( elem = context.getElementById( m ) ) ) {

							// Support: IE, Opera, Webkit
							// TODO: identify versions
							// getElementById can match elements by name instead of ID
							if ( elem.id === m ) {
								results.push( elem );
								return results;
							}
						} else {
							return results;
						}

					// Element context
					} else {

						// Support: IE, Opera, Webkit
						// TODO: identify versions
						// getElementById can match elements by name instead of ID
						if ( newContext && ( elem = newContext.getElementById( m ) ) &&
							contains( context, elem ) &&
							elem.id === m ) {

							results.push( elem );
							return results;
						}
					}

				// Type selector
				} else if ( match[ 2 ] ) {
					push.apply( results, context.getElementsByTagName( selector ) );
					return results;

				// Class selector
				} else if ( ( m = match[ 3 ] ) && support.getElementsByClassName &&
					context.getElementsByClassName ) {

					push.apply( results, context.getElementsByClassName( m ) );
					return results;
				}
			}

			// Take advantage of querySelectorAll
			if ( support.qsa &&
				!nonnativeSelectorCache[ selector + " " ] &&
				( !rbuggyQSA || !rbuggyQSA.test( selector ) ) &&

				// Support: IE 8 only
				// Exclude object elements
				( nodeType !== 1 || context.nodeName.toLowerCase() !== "object" ) ) {

				newSelector = selector;
				newContext = context;

				// qSA considers elements outside a scoping root when evaluating child or
				// descendant combinators, which is not what we want.
				// In such cases, we work around the behavior by prefixing every selector in the
				// list with an ID selector referencing the scope context.
				// The technique has to be used as well when a leading combinator is used
				// as such selectors are not recognized by querySelectorAll.
				// Thanks to Andrew Dupont for this technique.
				if ( nodeType === 1 &&
					( rdescend.test( selector ) || rcombinators.test( selector ) ) ) {

					// Expand context for sibling selectors
					newContext = rsibling.test( selector ) && testContext( context.parentNode ) ||
						context;

					// We can use :scope instead of the ID hack if the browser
					// supports it & if we're not changing the context.
					if ( newContext !== context || !support.scope ) {

						// Capture the context ID, setting it first if necessary
						if ( ( nid = context.getAttribute( "id" ) ) ) {
							nid = nid.replace( rcssescape, fcssescape );
						} else {
							context.setAttribute( "id", ( nid = expando ) );
						}
					}

					// Prefix every selector in the list
					groups = tokenize( selector );
					i = groups.length;
					while ( i-- ) {
						groups[ i ] = ( nid ? "#" + nid : ":scope" ) + " " +
							toSelector( groups[ i ] );
					}
					newSelector = groups.join( "," );
				}

				try {
					push.apply( results,
						newContext.querySelectorAll( newSelector )
					);
					return results;
				} catch ( qsaError ) {
					nonnativeSelectorCache( selector, true );
				} finally {
					if ( nid === expando ) {
						context.removeAttribute( "id" );
					}
				}
			}
		}
	}

	// All others
	return select( selector.replace( rtrim, "$1" ), context, results, seed );
}

/**
 * Create key-value caches of limited size
 * @returns {function(string, object)} Returns the Object data after storing it on itself with
 *	property name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)
 *	deleting the oldest entry
 */
function createCache() {
	var keys = [];

	function cache( key, value ) {

		// Use (key + " ") to avoid collision with native prototype properties (see Issue #157)
		if ( keys.push( key + " " ) > Expr.cacheLength ) {

			// Only keep the most recent entries
			delete cache[ keys.shift() ];
		}
		return ( cache[ key + " " ] = value );
	}
	return cache;
}

/**
 * Mark a function for special use by Sizzle
 * @param {Function} fn The function to mark
 */
function markFunction( fn ) {
	fn[ expando ] = true;
	return fn;
}

/**
 * Support testing using an element
 * @param {Function} fn Passed the created element and returns a boolean result
 */
function assert( fn ) {
	var el = document.createElement( "fieldset" );

	try {
		return !!fn( el );
	} catch ( e ) {
		return false;
	} finally {

		// Remove from its parent by default
		if ( el.parentNode ) {
			el.parentNode.removeChild( el );
		}

		// release memory in IE
		el = null;
	}
}

/**
 * Adds the same handler for all of the specified attrs
 * @param {String} attrs Pipe-separated list of attributes
 * @param {Function} handler The method that will be applied
 */
function addHandle( attrs, handler ) {
	var arr = attrs.split( "|" ),
		i = arr.length;

	while ( i-- ) {
		Expr.attrHandle[ arr[ i ] ] = handler;
	}
}

/**
 * Checks document order of two siblings
 * @param {Element} a
 * @param {Element} b
 * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b
 */
function siblingCheck( a, b ) {
	var cur = b && a,
		diff = cur && a.nodeType === 1 && b.nodeType === 1 &&
			a.sourceIndex - b.sourceIndex;

	// Use IE sourceIndex if available on both nodes
	if ( diff ) {
		return diff;
	}

	// Check if b follows a
	if ( cur ) {
		while ( ( cur = cur.nextSibling ) ) {
			if ( cur === b ) {
				return -1;
			}
		}
	}

	return a ? 1 : -1;
}

/**
 * Returns a function to use in pseudos for input types
 * @param {String} type
 */
function createInputPseudo( type ) {
	return function( elem ) {
		var name = elem.nodeName.toLowerCase();
		return name === "input" && elem.type === type;
	};
}

/**
 * Returns a function to use in pseudos for buttons
 * @param {String} type
 */
function createButtonPseudo( type ) {
	return function( elem ) {
		var name = elem.nodeName.toLowerCase();
		return ( name === "input" || name === "button" ) && elem.type === type;
	};
}

/**
 * Returns a function to use in pseudos for :enabled/:disabled
 * @param {Boolean} disabled true for :disabled; false for :enabled
 */
function createDisabledPseudo( disabled ) {

	// Known :disabled false positives: fieldset[disabled] > legend:nth-of-type(n+2) :can-disable
	return function( elem ) {

		// Only certain elements can match :enabled or :disabled
		// https://html.spec.whatwg.org/multipage/scripting.html#selector-enabled
		// https://html.spec.whatwg.org/multipage/scripting.html#selector-disabled
		if ( "form" in elem ) {

			// Check for inherited disabledness on relevant non-disabled elements:
			// * listed form-associated elements in a disabled fieldset
			//   https://html.spec.whatwg.org/multipage/forms.html#category-listed
			//   https://html.spec.whatwg.org/multipage/forms.html#concept-fe-disabled
			// * option elements in a disabled optgroup
			//   https://html.spec.whatwg.org/multipage/forms.html#concept-option-disabled
			// All such elements have a "form" property.
			if ( elem.parentNode && elem.disabled === false ) {

				// Option elements defer to a parent optgroup if present
				if ( "label" in elem ) {
					if ( "label" in elem.parentNode ) {
						return elem.parentNode.disabled === disabled;
					} else {
						return elem.disabled === disabled;
					}
				}

				// Support: IE 6 - 11
				// Use the isDisabled shortcut property to check for disabled fieldset ancestors
				return elem.isDisabled === disabled ||

					// Where there is no isDisabled, check manually
					/* jshint -W018 */
					elem.isDisabled !== !disabled &&
					inDisabledFieldset( elem ) === disabled;
			}

			return elem.disabled === disabled;

		// Try to winnow out elements that can't be disabled before trusting the disabled property.
		// Some victims get caught in our net (label, legend, menu, track), but it shouldn't
		// even exist on them, let alone have a boolean value.
		} else if ( "label" in elem ) {
			return elem.disabled === disabled;
		}

		// Remaining elements are neither :enabled nor :disabled
		return false;
	};
}

/**
 * Returns a function to use in pseudos for positionals
 * @param {Function} fn
 */
function createPositionalPseudo( fn ) {
	return markFunction( function( argument ) {
		argument = +argument;
		return markFunction( function( seed, matches ) {
			var j,
				matchIndexes = fn( [], seed.length, argument ),
				i = matchIndexes.length;

			// Match elements found at the specified indexes
			while ( i-- ) {
				if ( seed[ ( j = matchIndexes[ i ] ) ] ) {
					seed[ j ] = !( matches[ j ] = seed[ j ] );
				}
			}
		} );
	} );
}

/**
 * Checks a node for validity as a Sizzle context
 * @param {Element|Object=} context
 * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value
 */
function testContext( context ) {
	return context && typeof context.getElementsByTagName !== "undefined" && context;
}

// Expose support vars for convenience
support = Sizzle.support = {};

/**
 * Detects XML nodes
 * @param {Element|Object} elem An element or a document
 * @returns {Boolean} True iff elem is a non-HTML XML node
 */
isXML = Sizzle.isXML = function( elem ) {
	var namespace = elem && elem.namespaceURI,
		docElem = elem && ( elem.ownerDocument || elem ).documentElement;

	// Support: IE <=8
	// Assume HTML when documentElement doesn't yet exist, such as inside loading iframes
	// https://bugs.jquery.com/ticket/4833
	return !rhtml.test( namespace || docElem && docElem.nodeName || "HTML" );
};

/**
 * Sets document-related variables once based on the current document
 * @param {Element|Object} [doc] An element or document object to use to set the document
 * @returns {Object} Returns the current document
 */
setDocument = Sizzle.setDocument = function( node ) {
	var hasCompare, subWindow,
		doc = node ? node.ownerDocument || node : preferredDoc;

	// Return early if doc is invalid or already selected
	// Support: IE 11+, Edge 17 - 18+
	// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
	// two documents; shallow comparisons work.
	// eslint-disable-next-line eqeqeq
	if ( doc == document || doc.nodeType !== 9 || !doc.documentElement ) {
		return document;
	}

	// Update global variables
	document = doc;
	docElem = document.documentElement;
	documentIsHTML = !isXML( document );

	// Support: IE 9 - 11+, Edge 12 - 18+
	// Accessing iframe documents after unload throws "permission denied" errors (jQuery #13936)
	// Support: IE 11+, Edge 17 - 18+
	// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
	// two documents; shallow comparisons work.
	// eslint-disable-next-line eqeqeq
	if ( preferredDoc != document &&
		( subWindow = document.defaultView ) && subWindow.top !== subWindow ) {

		// Support: IE 11, Edge
		if ( subWindow.addEventListener ) {
			subWindow.addEventListener( "unload", unloadHandler, false );

		// Support: IE 9 - 10 only
		} else if ( subWindow.attachEvent ) {
			subWindow.attachEvent( "onunload", unloadHandler );
		}
	}

	// Support: IE 8 - 11+, Edge 12 - 18+, Chrome <=16 - 25 only, Firefox <=3.6 - 31 only,
	// Safari 4 - 5 only, Opera <=11.6 - 12.x only
	// IE/Edge & older browsers don't support the :scope pseudo-class.
	// Support: Safari 6.0 only
	// Safari 6.0 supports :scope but it's an alias of :root there.
	support.scope = assert( function( el ) {
		docElem.appendChild( el ).appendChild( document.createElement( "div" ) );
		return typeof el.querySelectorAll !== "undefined" &&
			!el.querySelectorAll( ":scope fieldset div" ).length;
	} );

	/* Attributes
	---------------------------------------------------------------------- */

	// Support: IE<8
	// Verify that getAttribute really returns attributes and not properties
	// (excepting IE8 booleans)
	support.attributes = assert( function( el ) {
		el.className = "i";
		return !el.getAttribute( "className" );
	} );

	/* getElement(s)By*
	---------------------------------------------------------------------- */

	// Check if getElementsByTagName("*") returns only elements
	support.getElementsByTagName = assert( function( el ) {
		el.appendChild( document.createComment( "" ) );
		return !el.getElementsByTagName( "*" ).length;
	} );

	// Support: IE<9
	support.getElementsByClassName = rnative.test( document.getElementsByClassName );

	// Support: IE<10
	// Check if getElementById returns elements by name
	// The broken getElementById methods don't pick up programmatically-set names,
	// so use a roundabout getElementsByName test
	support.getById = assert( function( el ) {
		docElem.appendChild( el ).id = expando;
		return !document.getElementsByName || !document.getElementsByName( expando ).length;
	} );

	// ID filter and find
	if ( support.getById ) {
		Expr.filter[ "ID" ] = function( id ) {
			var attrId = id.replace( runescape, funescape );
			return function( elem ) {
				return elem.getAttribute( "id" ) === attrId;
			};
		};
		Expr.find[ "ID" ] = function( id, context ) {
			if ( typeof context.getElementById !== "undefined" && documentIsHTML ) {
				var elem = context.getElementById( id );
				return elem ? [ elem ] : [];
			}
		};
	} else {
		Expr.filter[ "ID" ] =  function( id ) {
			var attrId = id.replace( runescape, funescape );
			return function( elem ) {
				var node = typeof elem.getAttributeNode !== "undefined" &&
					elem.getAttributeNode( "id" );
				return node && node.value === attrId;
			};
		};

		// Support: IE 6 - 7 only
		// getElementById is not reliable as a find shortcut
		Expr.find[ "ID" ] = function( id, context ) {
			if ( typeof context.getElementById !== "undefined" && documentIsHTML ) {
				var node, i, elems,
					elem = context.getElementById( id );

				if ( elem ) {

					// Verify the id attribute
					node = elem.getAttributeNode( "id" );
					if ( node && node.value === id ) {
						return [ elem ];
					}

					// Fall back on getElementsByName
					elems = context.getElementsByName( id );
					i = 0;
					while ( ( elem = elems[ i++ ] ) ) {
						node = elem.getAttributeNode( "id" );
						if ( node && node.value === id ) {
							return [ elem ];
						}
					}
				}

				return [];
			}
		};
	}

	// Tag
	Expr.find[ "TAG" ] = support.getElementsByTagName ?
		function( tag, context ) {
			if ( typeof context.getElementsByTagName !== "undefined" ) {
				return context.getElementsByTagName( tag );

			// DocumentFragment nodes don't have gEBTN
			} else if ( support.qsa ) {
				return context.querySelectorAll( tag );
			}
		} :

		function( tag, context ) {
			var elem,
				tmp = [],
				i = 0,

				// By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too
				results = context.getElementsByTagName( tag );

			// Filter out possible comments
			if ( tag === "*" ) {
				while ( ( elem = results[ i++ ] ) ) {
					if ( elem.nodeType === 1 ) {
						tmp.push( elem );
					}
				}

				return tmp;
			}
			return results;
		};

	// Class
	Expr.find[ "CLASS" ] = support.getElementsByClassName && function( className, context ) {
		if ( typeof context.getElementsByClassName !== "undefined" && documentIsHTML ) {
			return context.getElementsByClassName( className );
		}
	};

	/* QSA/matchesSelector
	---------------------------------------------------------------------- */

	// QSA and matchesSelector support

	// matchesSelector(:active) reports false when true (IE9/Opera 11.5)
	rbuggyMatches = [];

	// qSa(:focus) reports false when true (Chrome 21)
	// We allow this because of a bug in IE8/9 that throws an error
	// whenever `document.activeElement` is accessed on an iframe
	// So, we allow :focus to pass through QSA all the time to avoid the IE error
	// See https://bugs.jquery.com/ticket/13378
	rbuggyQSA = [];

	if ( ( support.qsa = rnative.test( document.querySelectorAll ) ) ) {

		// Build QSA regex
		// Regex strategy adopted from Diego Perini
		assert( function( el ) {

			var input;

			// Select is set to empty string on purpose
			// This is to test IE's treatment of not explicitly
			// setting a boolean content attribute,
			// since its presence should be enough
			// https://bugs.jquery.com/ticket/12359
			docElem.appendChild( el ).innerHTML = "<a id='" + expando + "'></a>" +
				"<select id='" + expando + "-\r\\' msallowcapture=''>" +
				"<option selected=''></option></select>";

			// Support: IE8, Opera 11-12.16
			// Nothing should be selected when empty strings follow ^= or $= or *=
			// The test attribute must be unknown in Opera but "safe" for WinRT
			// https://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section
			if ( el.querySelectorAll( "[msallowcapture^='']" ).length ) {
				rbuggyQSA.push( "[*^$]=" + whitespace + "*(?:''|\"\")" );
			}

			// Support: IE8
			// Boolean attributes and "value" are not treated correctly
			if ( !el.querySelectorAll( "[selected]" ).length ) {
				rbuggyQSA.push( "\\[" + whitespace + "*(?:value|" + booleans + ")" );
			}

			// Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+
			if ( !el.querySelectorAll( "[id~=" + expando + "-]" ).length ) {
				rbuggyQSA.push( "~=" );
			}

			// Support: IE 11+, Edge 15 - 18+
			// IE 11/Edge don't find elements on a `[name='']` query in some cases.
			// Adding a temporary attribute to the document before the selection works
			// around the issue.
			// Interestingly, IE 10 & older don't seem to have the issue.
			input = document.createElement( "input" );
			input.setAttribute( "name", "" );
			el.appendChild( input );
			if ( !el.querySelectorAll( "[name='']" ).length ) {
				rbuggyQSA.push( "\\[" + whitespace + "*name" + whitespace + "*=" +
					whitespace + "*(?:''|\"\")" );
			}

			// Webkit/Opera - :checked should return selected option elements
			// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
			// IE8 throws error here and will not see later tests
			if ( !el.querySelectorAll( ":checked" ).length ) {
				rbuggyQSA.push( ":checked" );
			}

			// Support: Safari 8+, iOS 8+
			// https://bugs.webkit.org/show_bug.cgi?id=136851
			// In-page `selector#id sibling-combinator selector` fails
			if ( !el.querySelectorAll( "a#" + expando + "+*" ).length ) {
				rbuggyQSA.push( ".#.+[+~]" );
			}

			// Support: Firefox <=3.6 - 5 only
			// Old Firefox doesn't throw on a badly-escaped identifier.
			el.querySelectorAll( "\\\f" );
			rbuggyQSA.push( "[\\r\\n\\f]" );
		} );

		assert( function( el ) {
			el.innerHTML = "<a href='' disabled='disabled'></a>" +
				"<select disabled='disabled'><option/></select>";

			// Support: Windows 8 Native Apps
			// The type and name attributes are restricted during .innerHTML assignment
			var input = document.createElement( "input" );
			input.setAttribute( "type", "hidden" );
			el.appendChild( input ).setAttribute( "name", "D" );

			// Support: IE8
			// Enforce case-sensitivity of name attribute
			if ( el.querySelectorAll( "[name=d]" ).length ) {
				rbuggyQSA.push( "name" + whitespace + "*[*^$|!~]?=" );
			}

			// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)
			// IE8 throws error here and will not see later tests
			if ( el.querySelectorAll( ":enabled" ).length !== 2 ) {
				rbuggyQSA.push( ":enabled", ":disabled" );
			}

			// Support: IE9-11+
			// IE's :disabled selector does not pick up the children of disabled fieldsets
			docElem.appendChild( el ).disabled = true;
			if ( el.querySelectorAll( ":disabled" ).length !== 2 ) {
				rbuggyQSA.push( ":enabled", ":disabled" );
			}

			// Support: Opera 10 - 11 only
			// Opera 10-11 does not throw on post-comma invalid pseudos
			el.querySelectorAll( "*,:x" );
			rbuggyQSA.push( ",.*:" );
		} );
	}

	if ( ( support.matchesSelector = rnative.test( ( matches = docElem.matches ||
		docElem.webkitMatchesSelector ||
		docElem.mozMatchesSelector ||
		docElem.oMatchesSelector ||
		docElem.msMatchesSelector ) ) ) ) {

		assert( function( el ) {

			// Check to see if it's possible to do matchesSelector
			// on a disconnected node (IE 9)
			support.disconnectedMatch = matches.call( el, "*" );

			// This should fail with an exception
			// Gecko does not error, returns false instead
			matches.call( el, "[s!='']:x" );
			rbuggyMatches.push( "!=", pseudos );
		} );
	}

	rbuggyQSA = rbuggyQSA.length && new RegExp( rbuggyQSA.join( "|" ) );
	rbuggyMatches = rbuggyMatches.length && new RegExp( rbuggyMatches.join( "|" ) );

	/* Contains
	---------------------------------------------------------------------- */
	hasCompare = rnative.test( docElem.compareDocumentPosition );

	// Element contains another
	// Purposefully self-exclusive
	// As in, an element does not contain itself
	contains = hasCompare || rnative.test( docElem.contains ) ?
		function( a, b ) {
			var adown = a.nodeType === 9 ? a.documentElement : a,
				bup = b && b.parentNode;
			return a === bup || !!( bup && bup.nodeType === 1 && (
				adown.contains ?
					adown.contains( bup ) :
					a.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16
			) );
		} :
		function( a, b ) {
			if ( b ) {
				while ( ( b = b.parentNode ) ) {
					if ( b === a ) {
						return true;
					}
				}
			}
			return false;
		};

	/* Sorting
	---------------------------------------------------------------------- */

	// Document order sorting
	sortOrder = hasCompare ?
	function( a, b ) {

		// Flag for duplicate removal
		if ( a === b ) {
			hasDuplicate = true;
			return 0;
		}

		// Sort on method existence if only one input has compareDocumentPosition
		var compare = !a.compareDocumentPosition - !b.compareDocumentPosition;
		if ( compare ) {
			return compare;
		}

		// Calculate position if both inputs belong to the same document
		// Support: IE 11+, Edge 17 - 18+
		// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
		// two documents; shallow comparisons work.
		// eslint-disable-next-line eqeqeq
		compare = ( a.ownerDocument || a ) == ( b.ownerDocument || b ) ?
			a.compareDocumentPosition( b ) :

			// Otherwise we know they are disconnected
			1;

		// Disconnected nodes
		if ( compare & 1 ||
			( !support.sortDetached && b.compareDocumentPosition( a ) === compare ) ) {

			// Choose the first element that is related to our preferred document
			// Support: IE 11+, Edge 17 - 18+
			// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
			// two documents; shallow comparisons work.
			// eslint-disable-next-line eqeqeq
			if ( a == document || a.ownerDocument == preferredDoc &&
				contains( preferredDoc, a ) ) {
				return -1;
			}

			// Support: IE 11+, Edge 17 - 18+
			// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
			// two documents; shallow comparisons work.
			// eslint-disable-next-line eqeqeq
			if ( b == document || b.ownerDocument == preferredDoc &&
				contains( preferredDoc, b ) ) {
				return 1;
			}

			// Maintain original order
			return sortInput ?
				( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :
				0;
		}

		return compare & 4 ? -1 : 1;
	} :
	function( a, b ) {

		// Exit early if the nodes are identical
		if ( a === b ) {
			hasDuplicate = true;
			return 0;
		}

		var cur,
			i = 0,
			aup = a.parentNode,
			bup = b.parentNode,
			ap = [ a ],
			bp = [ b ];

		// Parentless nodes are either documents or disconnected
		if ( !aup || !bup ) {

			// Support: IE 11+, Edge 17 - 18+
			// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
			// two documents; shallow comparisons work.
			/* eslint-disable eqeqeq */
			return a == document ? -1 :
				b == document ? 1 :
				/* eslint-enable eqeqeq */
				aup ? -1 :
				bup ? 1 :
				sortInput ?
				( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :
				0;

		// If the nodes are siblings, we can do a quick check
		} else if ( aup === bup ) {
			return siblingCheck( a, b );
		}

		// Otherwise we need full lists of their ancestors for comparison
		cur = a;
		while ( ( cur = cur.parentNode ) ) {
			ap.unshift( cur );
		}
		cur = b;
		while ( ( cur = cur.parentNode ) ) {
			bp.unshift( cur );
		}

		// Walk down the tree looking for a discrepancy
		while ( ap[ i ] === bp[ i ] ) {
			i++;
		}

		return i ?

			// Do a sibling check if the nodes have a common ancestor
			siblingCheck( ap[ i ], bp[ i ] ) :

			// Otherwise nodes in our document sort first
			// Support: IE 11+, Edge 17 - 18+
			// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
			// two documents; shallow comparisons work.
			/* eslint-disable eqeqeq */
			ap[ i ] == preferredDoc ? -1 :
			bp[ i ] == preferredDoc ? 1 :
			/* eslint-enable eqeqeq */
			0;
	};

	return document;
};

Sizzle.matches = function( expr, elements ) {
	return Sizzle( expr, null, null, elements );
};

Sizzle.matchesSelector = function( elem, expr ) {
	setDocument( elem );

	if ( support.matchesSelector && documentIsHTML &&
		!nonnativeSelectorCache[ expr + " " ] &&
		( !rbuggyMatches || !rbuggyMatches.test( expr ) ) &&
		( !rbuggyQSA     || !rbuggyQSA.test( expr ) ) ) {

		try {
			var ret = matches.call( elem, expr );

			// IE 9's matchesSelector returns false on disconnected nodes
			if ( ret || support.disconnectedMatch ||

				// As well, disconnected nodes are said to be in a document
				// fragment in IE 9
				elem.document && elem.document.nodeType !== 11 ) {
				return ret;
			}
		} catch ( e ) {
			nonnativeSelectorCache( expr, true );
		}
	}

	return Sizzle( expr, document, null, [ elem ] ).length > 0;
};

Sizzle.contains = function( context, elem ) {

	// Set document vars if needed
	// Support: IE 11+, Edge 17 - 18+
	// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
	// two documents; shallow comparisons work.
	// eslint-disable-next-line eqeqeq
	if ( ( context.ownerDocument || context ) != document ) {
		setDocument( context );
	}
	return contains( context, elem );
};

Sizzle.attr = function( elem, name ) {

	// Set document vars if needed
	// Support: IE 11+, Edge 17 - 18+
	// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
	// two documents; shallow comparisons work.
	// eslint-disable-next-line eqeqeq
	if ( ( elem.ownerDocument || elem ) != document ) {
		setDocument( elem );
	}

	var fn = Expr.attrHandle[ name.toLowerCase() ],

		// Don't get fooled by Object.prototype properties (jQuery #13807)
		val = fn && hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?
			fn( elem, name, !documentIsHTML ) :
			undefined;

	return val !== undefined ?
		val :
		support.attributes || !documentIsHTML ?
			elem.getAttribute( name ) :
			( val = elem.getAttributeNode( name ) ) && val.specified ?
				val.value :
				null;
};

Sizzle.escape = function( sel ) {
	return ( sel + "" ).replace( rcssescape, fcssescape );
};

Sizzle.error = function( msg ) {
	throw new Error( "Syntax error, unrecognized expression: " + msg );
};

/**
 * Document sorting and removing duplicates
 * @param {ArrayLike} results
 */
Sizzle.uniqueSort = function( results ) {
	var elem,
		duplicates = [],
		j = 0,
		i = 0;

	// Unless we *know* we can detect duplicates, assume their presence
	hasDuplicate = !support.detectDuplicates;
	sortInput = !support.sortStable && results.slice( 0 );
	results.sort( sortOrder );

	if ( hasDuplicate ) {
		while ( ( elem = results[ i++ ] ) ) {
			if ( elem === results[ i ] ) {
				j = duplicates.push( i );
			}
		}
		while ( j-- ) {
			results.splice( duplicates[ j ], 1 );
		}
	}

	// Clear input after sorting to release objects
	// See https://github.com/jquery/sizzle/pull/225
	sortInput = null;

	return results;
};

/**
 * Utility function for retrieving the text value of an array of DOM nodes
 * @param {Array|Element} elem
 */
getText = Sizzle.getText = function( elem ) {
	var node,
		ret = "",
		i = 0,
		nodeType = elem.nodeType;

	if ( !nodeType ) {

		// If no nodeType, this is expected to be an array
		while ( ( node = elem[ i++ ] ) ) {

			// Do not traverse comment nodes
			ret += getText( node );
		}
	} else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {

		// Use textContent for elements
		// innerText usage removed for consistency of new lines (jQuery #11153)
		if ( typeof elem.textContent === "string" ) {
			return elem.textContent;
		} else {

			// Traverse its children
			for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
				ret += getText( elem );
			}
		}
	} else if ( nodeType === 3 || nodeType === 4 ) {
		return elem.nodeValue;
	}

	// Do not include comment or processing instruction nodes

	return ret;
};

Expr = Sizzle.selectors = {

	// Can be adjusted by the user
	cacheLength: 50,

	createPseudo: markFunction,

	match: matchExpr,

	attrHandle: {},

	find: {},

	relative: {
		">": { dir: "parentNode", first: true },
		" ": { dir: "parentNode" },
		"+": { dir: "previousSibling", first: true },
		"~": { dir: "previousSibling" }
	},

	preFilter: {
		"ATTR": function( match ) {
			match[ 1 ] = match[ 1 ].replace( runescape, funescape );

			// Move the given value to match[3] whether quoted or unquoted
			match[ 3 ] = ( match[ 3 ] || match[ 4 ] ||
				match[ 5 ] || "" ).replace( runescape, funescape );

			if ( match[ 2 ] === "~=" ) {
				match[ 3 ] = " " + match[ 3 ] + " ";
			}

			return match.slice( 0, 4 );
		},

		"CHILD": function( match ) {

			/* matches from matchExpr["CHILD"]
				1 type (only|nth|...)
				2 what (child|of-type)
				3 argument (even|odd|\d*|\d*n([+-]\d+)?|...)
				4 xn-component of xn+y argument ([+-]?\d*n|)
				5 sign of xn-component
				6 x of xn-component
				7 sign of y-component
				8 y of y-component
			*/
			match[ 1 ] = match[ 1 ].toLowerCase();

			if ( match[ 1 ].slice( 0, 3 ) === "nth" ) {

				// nth-* requires argument
				if ( !match[ 3 ] ) {
					Sizzle.error( match[ 0 ] );
				}

				// numeric x and y parameters for Expr.filter.CHILD
				// remember that false/true cast respectively to 0/1
				match[ 4 ] = +( match[ 4 ] ?
					match[ 5 ] + ( match[ 6 ] || 1 ) :
					2 * ( match[ 3 ] === "even" || match[ 3 ] === "odd" ) );
				match[ 5 ] = +( ( match[ 7 ] + match[ 8 ] ) || match[ 3 ] === "odd" );

				// other types prohibit arguments
			} else if ( match[ 3 ] ) {
				Sizzle.error( match[ 0 ] );
			}

			return match;
		},

		"PSEUDO": function( match ) {
			var excess,
				unquoted = !match[ 6 ] && match[ 2 ];

			if ( matchExpr[ "CHILD" ].test( match[ 0 ] ) ) {
				return null;
			}

			// Accept quoted arguments as-is
			if ( match[ 3 ] ) {
				match[ 2 ] = match[ 4 ] || match[ 5 ] || "";

			// Strip excess characters from unquoted arguments
			} else if ( unquoted && rpseudo.test( unquoted ) &&

				// Get excess from tokenize (recursively)
				( excess = tokenize( unquoted, true ) ) &&

				// advance to the next closing parenthesis
				( excess = unquoted.indexOf( ")", unquoted.length - excess ) - unquoted.length ) ) {

				// excess is a negative index
				match[ 0 ] = match[ 0 ].slice( 0, excess );
				match[ 2 ] = unquoted.slice( 0, excess );
			}

			// Return only captures needed by the pseudo filter method (type and argument)
			return match.slice( 0, 3 );
		}
	},

	filter: {

		"TAG": function( nodeNameSelector ) {
			var nodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();
			return nodeNameSelector === "*" ?
				function() {
					return true;
				} :
				function( elem ) {
					return elem.nodeName && elem.nodeName.toLowerCase() === nodeName;
				};
		},

		"CLASS": function( className ) {
			var pattern = classCache[ className + " " ];

			return pattern ||
				( pattern = new RegExp( "(^|" + whitespace +
					")" + className + "(" + whitespace + "|$)" ) ) && classCache(
						className, function( elem ) {
							return pattern.test(
								typeof elem.className === "string" && elem.className ||
								typeof elem.getAttribute !== "undefined" &&
									elem.getAttribute( "class" ) ||
								""
							);
				} );
		},

		"ATTR": function( name, operator, check ) {
			return function( elem ) {
				var result = Sizzle.attr( elem, name );

				if ( result == null ) {
					return operator === "!=";
				}
				if ( !operator ) {
					return true;
				}

				result += "";

				/* eslint-disable max-len */

				return operator === "=" ? result === check :
					operator === "!=" ? result !== check :
					operator === "^=" ? check && result.indexOf( check ) === 0 :
					operator === "*=" ? check && result.indexOf( check ) > -1 :
					operator === "$=" ? check && result.slice( -check.length ) === check :
					operator === "~=" ? ( " " + result.replace( rwhitespace, " " ) + " " ).indexOf( check ) > -1 :
					operator === "|=" ? result === check || result.slice( 0, check.length + 1 ) === check + "-" :
					false;
				/* eslint-enable max-len */

			};
		},

		"CHILD": function( type, what, _argument, first, last ) {
			var simple = type.slice( 0, 3 ) !== "nth",
				forward = type.slice( -4 ) !== "last",
				ofType = what === "of-type";

			return first === 1 && last === 0 ?

				// Shortcut for :nth-*(n)
				function( elem ) {
					return !!elem.parentNode;
				} :

				function( elem, _context, xml ) {
					var cache, uniqueCache, outerCache, node, nodeIndex, start,
						dir = simple !== forward ? "nextSibling" : "previousSibling",
						parent = elem.parentNode,
						name = ofType && elem.nodeName.toLowerCase(),
						useCache = !xml && !ofType,
						diff = false;

					if ( parent ) {

						// :(first|last|only)-(child|of-type)
						if ( simple ) {
							while ( dir ) {
								node = elem;
								while ( ( node = node[ dir ] ) ) {
									if ( ofType ?
										node.nodeName.toLowerCase() === name :
										node.nodeType === 1 ) {

										return false;
									}
								}

								// Reverse direction for :only-* (if we haven't yet done so)
								start = dir = type === "only" && !start && "nextSibling";
							}
							return true;
						}

						start = [ forward ? parent.firstChild : parent.lastChild ];

						// non-xml :nth-child(...) stores cache data on `parent`
						if ( forward && useCache ) {

							// Seek `elem` from a previously-cached index

							// ...in a gzip-friendly way
							node = parent;
							outerCache = node[ expando ] || ( node[ expando ] = {} );

							// Support: IE <9 only
							// Defend against cloned attroperties (jQuery gh-1709)
							uniqueCache = outerCache[ node.uniqueID ] ||
								( outerCache[ node.uniqueID ] = {} );

							cache = uniqueCache[ type ] || [];
							nodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];
							diff = nodeIndex && cache[ 2 ];
							node = nodeIndex && parent.childNodes[ nodeIndex ];

							while ( ( node = ++nodeIndex && node && node[ dir ] ||

								// Fallback to seeking `elem` from the start
								( diff = nodeIndex = 0 ) || start.pop() ) ) {

								// When found, cache indexes on `parent` and break
								if ( node.nodeType === 1 && ++diff && node === elem ) {
									uniqueCache[ type ] = [ dirruns, nodeIndex, diff ];
									break;
								}
							}

						} else {

							// Use previously-cached element index if available
							if ( useCache ) {

								// ...in a gzip-friendly way
								node = elem;
								outerCache = node[ expando ] || ( node[ expando ] = {} );

								// Support: IE <9 only
								// Defend against cloned attroperties (jQuery gh-1709)
								uniqueCache = outerCache[ node.uniqueID ] ||
									( outerCache[ node.uniqueID ] = {} );

								cache = uniqueCache[ type ] || [];
								nodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];
								diff = nodeIndex;
							}

							// xml :nth-child(...)
							// or :nth-last-child(...) or :nth(-last)?-of-type(...)
							if ( diff === false ) {

								// Use the same loop as above to seek `elem` from the start
								while ( ( node = ++nodeIndex && node && node[ dir ] ||
									( diff = nodeIndex = 0 ) || start.pop() ) ) {

									if ( ( ofType ?
										node.nodeName.toLowerCase() === name :
										node.nodeType === 1 ) &&
										++diff ) {

										// Cache the index of each encountered element
										if ( useCache ) {
											outerCache = node[ expando ] ||
												( node[ expando ] = {} );

											// Support: IE <9 only
											// Defend against cloned attroperties (jQuery gh-1709)
											uniqueCache = outerCache[ node.uniqueID ] ||
												( outerCache[ node.uniqueID ] = {} );

											uniqueCache[ type ] = [ dirruns, diff ];
										}

										if ( node === elem ) {
											break;
										}
									}
								}
							}
						}

						// Incorporate the offset, then check against cycle size
						diff -= last;
						return diff === first || ( diff % first === 0 && diff / first >= 0 );
					}
				};
		},

		"PSEUDO": function( pseudo, argument ) {

			// pseudo-class names are case-insensitive
			// http://www.w3.org/TR/selectors/#pseudo-classes
			// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters
			// Remember that setFilters inherits from pseudos
			var args,
				fn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||
					Sizzle.error( "unsupported pseudo: " + pseudo );

			// The user may use createPseudo to indicate that
			// arguments are needed to create the filter function
			// just as Sizzle does
			if ( fn[ expando ] ) {
				return fn( argument );
			}

			// But maintain support for old signatures
			if ( fn.length > 1 ) {
				args = [ pseudo, pseudo, "", argument ];
				return Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?
					markFunction( function( seed, matches ) {
						var idx,
							matched = fn( seed, argument ),
							i = matched.length;
						while ( i-- ) {
							idx = indexOf( seed, matched[ i ] );
							seed[ idx ] = !( matches[ idx ] = matched[ i ] );
						}
					} ) :
					function( elem ) {
						return fn( elem, 0, args );
					};
			}

			return fn;
		}
	},

	pseudos: {

		// Potentially complex pseudos
		"not": markFunction( function( selector ) {

			// Trim the selector passed to compile
			// to avoid treating leading and trailing
			// spaces as combinators
			var input = [],
				results = [],
				matcher = compile( selector.replace( rtrim, "$1" ) );

			return matcher[ expando ] ?
				markFunction( function( seed, matches, _context, xml ) {
					var elem,
						unmatched = matcher( seed, null, xml, [] ),
						i = seed.length;

					// Match elements unmatched by `matcher`
					while ( i-- ) {
						if ( ( elem = unmatched[ i ] ) ) {
							seed[ i ] = !( matches[ i ] = elem );
						}
					}
				} ) :
				function( elem, _context, xml ) {
					input[ 0 ] = elem;
					matcher( input, null, xml, results );

					// Don't keep the element (issue #299)
					input[ 0 ] = null;
					return !results.pop();
				};
		} ),

		"has": markFunction( function( selector ) {
			return function( elem ) {
				return Sizzle( selector, elem ).length > 0;
			};
		} ),

		"contains": markFunction( function( text ) {
			text = text.replace( runescape, funescape );
			return function( elem ) {
				return ( elem.textContent || getText( elem ) ).indexOf( text ) > -1;
			};
		} ),

		// "Whether an element is represented by a :lang() selector
		// is based solely on the element's language value
		// being equal to the identifier C,
		// or beginning with the identifier C immediately followed by "-".
		// The matching of C against the element's language value is performed case-insensitively.
		// The identifier C does not have to be a valid language name."
		// http://www.w3.org/TR/selectors/#lang-pseudo
		"lang": markFunction( function( lang ) {

			// lang value must be a valid identifier
			if ( !ridentifier.test( lang || "" ) ) {
				Sizzle.error( "unsupported lang: " + lang );
			}
			lang = lang.replace( runescape, funescape ).toLowerCase();
			return function( elem ) {
				var elemLang;
				do {
					if ( ( elemLang = documentIsHTML ?
						elem.lang :
						elem.getAttribute( "xml:lang" ) || elem.getAttribute( "lang" ) ) ) {

						elemLang = elemLang.toLowerCase();
						return elemLang === lang || elemLang.indexOf( lang + "-" ) === 0;
					}
				} while ( ( elem = elem.parentNode ) && elem.nodeType === 1 );
				return false;
			};
		} ),

		// Miscellaneous
		"target": function( elem ) {
			var hash = window.location && window.location.hash;
			return hash && hash.slice( 1 ) === elem.id;
		},

		"root": function( elem ) {
			return elem === docElem;
		},

		"focus": function( elem ) {
			return elem === document.activeElement &&
				( !document.hasFocus || document.hasFocus() ) &&
				!!( elem.type || elem.href || ~elem.tabIndex );
		},

		// Boolean properties
		"enabled": createDisabledPseudo( false ),
		"disabled": createDisabledPseudo( true ),

		"checked": function( elem ) {

			// In CSS3, :checked should return both checked and selected elements
			// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
			var nodeName = elem.nodeName.toLowerCase();
			return ( nodeName === "input" && !!elem.checked ) ||
				( nodeName === "option" && !!elem.selected );
		},

		"selected": function( elem ) {

			// Accessing this property makes selected-by-default
			// options in Safari work properly
			if ( elem.parentNode ) {
				// eslint-disable-next-line no-unused-expressions
				elem.parentNode.selectedIndex;
			}

			return elem.selected === true;
		},

		// Contents
		"empty": function( elem ) {

			// http://www.w3.org/TR/selectors/#empty-pseudo
			// :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),
			//   but not by others (comment: 8; processing instruction: 7; etc.)
			// nodeType < 6 works because attributes (2) do not appear as children
			for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
				if ( elem.nodeType < 6 ) {
					return false;
				}
			}
			return true;
		},

		"parent": function( elem ) {
			return !Expr.pseudos[ "empty" ]( elem );
		},

		// Element/input types
		"header": function( elem ) {
			return rheader.test( elem.nodeName );
		},

		"input": function( elem ) {
			return rinputs.test( elem.nodeName );
		},

		"button": function( elem ) {
			var name = elem.nodeName.toLowerCase();
			return name === "input" && elem.type === "button" || name === "button";
		},

		"text": function( elem ) {
			var attr;
			return elem.nodeName.toLowerCase() === "input" &&
				elem.type === "text" &&

				// Support: IE<8
				// New HTML5 attribute values (e.g., "search") appear with elem.type === "text"
				( ( attr = elem.getAttribute( "type" ) ) == null ||
					attr.toLowerCase() === "text" );
		},

		// Position-in-collection
		"first": createPositionalPseudo( function() {
			return [ 0 ];
		} ),

		"last": createPositionalPseudo( function( _matchIndexes, length ) {
			return [ length - 1 ];
		} ),

		"eq": createPositionalPseudo( function( _matchIndexes, length, argument ) {
			return [ argument < 0 ? argument + length : argument ];
		} ),

		"even": createPositionalPseudo( function( matchIndexes, length ) {
			var i = 0;
			for ( ; i < length; i += 2 ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		} ),

		"odd": createPositionalPseudo( function( matchIndexes, length ) {
			var i = 1;
			for ( ; i < length; i += 2 ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		} ),

		"lt": createPositionalPseudo( function( matchIndexes, length, argument ) {
			var i = argument < 0 ?
				argument + length :
				argument > length ?
					length :
					argument;
			for ( ; --i >= 0; ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		} ),

		"gt": createPositionalPseudo( function( matchIndexes, length, argument ) {
			var i = argument < 0 ? argument + length : argument;
			for ( ; ++i < length; ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		} )
	}
};

Expr.pseudos[ "nth" ] = Expr.pseudos[ "eq" ];

// Add button/input type pseudos
for ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {
	Expr.pseudos[ i ] = createInputPseudo( i );
}
for ( i in { submit: true, reset: true } ) {
	Expr.pseudos[ i ] = createButtonPseudo( i );
}

// Easy API for creating new setFilters
function setFilters() {}
setFilters.prototype = Expr.filters = Expr.pseudos;
Expr.setFilters = new setFilters();

tokenize = Sizzle.tokenize = function( selector, parseOnly ) {
	var matched, match, tokens, type,
		soFar, groups, preFilters,
		cached = tokenCache[ selector + " " ];

	if ( cached ) {
		return parseOnly ? 0 : cached.slice( 0 );
	}

	soFar = selector;
	groups = [];
	preFilters = Expr.preFilter;

	while ( soFar ) {

		// Comma and first run
		if ( !matched || ( match = rcomma.exec( soFar ) ) ) {
			if ( match ) {

				// Don't consume trailing commas as valid
				soFar = soFar.slice( match[ 0 ].length ) || soFar;
			}
			groups.push( ( tokens = [] ) );
		}

		matched = false;

		// Combinators
		if ( ( match = rcombinators.exec( soFar ) ) ) {
			matched = match.shift();
			tokens.push( {
				value: matched,

				// Cast descendant combinators to space
				type: match[ 0 ].replace( rtrim, " " )
			} );
			soFar = soFar.slice( matched.length );
		}

		// Filters
		for ( type in Expr.filter ) {
			if ( ( match = matchExpr[ type ].exec( soFar ) ) && ( !preFilters[ type ] ||
				( match = preFilters[ type ]( match ) ) ) ) {
				matched = match.shift();
				tokens.push( {
					value: matched,
					type: type,
					matches: match
				} );
				soFar = soFar.slice( matched.length );
			}
		}

		if ( !matched ) {
			break;
		}
	}

	// Return the length of the invalid excess
	// if we're just parsing
	// Otherwise, throw an error or return tokens
	return parseOnly ?
		soFar.length :
		soFar ?
			Sizzle.error( selector ) :

			// Cache the tokens
			tokenCache( selector, groups ).slice( 0 );
};

function toSelector( tokens ) {
	var i = 0,
		len = tokens.length,
		selector = "";
	for ( ; i < len; i++ ) {
		selector += tokens[ i ].value;
	}
	return selector;
}

function addCombinator( matcher, combinator, base ) {
	var dir = combinator.dir,
		skip = combinator.next,
		key = skip || dir,
		checkNonElements = base && key === "parentNode",
		doneName = done++;

	return combinator.first ?

		// Check against closest ancestor/preceding element
		function( elem, context, xml ) {
			while ( ( elem = elem[ dir ] ) ) {
				if ( elem.nodeType === 1 || checkNonElements ) {
					return matcher( elem, context, xml );
				}
			}
			return false;
		} :

		// Check against all ancestor/preceding elements
		function( elem, context, xml ) {
			var oldCache, uniqueCache, outerCache,
				newCache = [ dirruns, doneName ];

			// We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching
			if ( xml ) {
				while ( ( elem = elem[ dir ] ) ) {
					if ( elem.nodeType === 1 || checkNonElements ) {
						if ( matcher( elem, context, xml ) ) {
							return true;
						}
					}
				}
			} else {
				while ( ( elem = elem[ dir ] ) ) {
					if ( elem.nodeType === 1 || checkNonElements ) {
						outerCache = elem[ expando ] || ( elem[ expando ] = {} );

						// Support: IE <9 only
						// Defend against cloned attroperties (jQuery gh-1709)
						uniqueCache = outerCache[ elem.uniqueID ] ||
							( outerCache[ elem.uniqueID ] = {} );

						if ( skip && skip === elem.nodeName.toLowerCase() ) {
							elem = elem[ dir ] || elem;
						} else if ( ( oldCache = uniqueCache[ key ] ) &&
							oldCache[ 0 ] === dirruns && oldCache[ 1 ] === doneName ) {

							// Assign to newCache so results back-propagate to previous elements
							return ( newCache[ 2 ] = oldCache[ 2 ] );
						} else {

							// Reuse newcache so results back-propagate to previous elements
							uniqueCache[ key ] = newCache;

							// A match means we're done; a fail means we have to keep checking
							if ( ( newCache[ 2 ] = matcher( elem, context, xml ) ) ) {
								return true;
							}
						}
					}
				}
			}
			return false;
		};
}

function elementMatcher( matchers ) {
	return matchers.length > 1 ?
		function( elem, context, xml ) {
			var i = matchers.length;
			while ( i-- ) {
				if ( !matchers[ i ]( elem, context, xml ) ) {
					return false;
				}
			}
			return true;
		} :
		matchers[ 0 ];
}

function multipleContexts( selector, contexts, results ) {
	var i = 0,
		len = contexts.length;
	for ( ; i < len; i++ ) {
		Sizzle( selector, contexts[ i ], results );
	}
	return results;
}

function condense( unmatched, map, filter, context, xml ) {
	var elem,
		newUnmatched = [],
		i = 0,
		len = unmatched.length,
		mapped = map != null;

	for ( ; i < len; i++ ) {
		if ( ( elem = unmatched[ i ] ) ) {
			if ( !filter || filter( elem, context, xml ) ) {
				newUnmatched.push( elem );
				if ( mapped ) {
					map.push( i );
				}
			}
		}
	}

	return newUnmatched;
}

function setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {
	if ( postFilter && !postFilter[ expando ] ) {
		postFilter = setMatcher( postFilter );
	}
	if ( postFinder && !postFinder[ expando ] ) {
		postFinder = setMatcher( postFinder, postSelector );
	}
	return markFunction( function( seed, results, context, xml ) {
		var temp, i, elem,
			preMap = [],
			postMap = [],
			preexisting = results.length,

			// Get initial elements from seed or context
			elems = seed || multipleContexts(
				selector || "*",
				context.nodeType ? [ context ] : context,
				[]
			),

			// Prefilter to get matcher input, preserving a map for seed-results synchronization
			matcherIn = preFilter && ( seed || !selector ) ?
				condense( elems, preMap, preFilter, context, xml ) :
				elems,

			matcherOut = matcher ?

				// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,
				postFinder || ( seed ? preFilter : preexisting || postFilter ) ?

					// ...intermediate processing is necessary
					[] :

					// ...otherwise use results directly
					results :
				matcherIn;

		// Find primary matches
		if ( matcher ) {
			matcher( matcherIn, matcherOut, context, xml );
		}

		// Apply postFilter
		if ( postFilter ) {
			temp = condense( matcherOut, postMap );
			postFilter( temp, [], context, xml );

			// Un-match failing elements by moving them back to matcherIn
			i = temp.length;
			while ( i-- ) {
				if ( ( elem = temp[ i ] ) ) {
					matcherOut[ postMap[ i ] ] = !( matcherIn[ postMap[ i ] ] = elem );
				}
			}
		}

		if ( seed ) {
			if ( postFinder || preFilter ) {
				if ( postFinder ) {

					// Get the final matcherOut by condensing this intermediate into postFinder contexts
					temp = [];
					i = matcherOut.length;
					while ( i-- ) {
						if ( ( elem = matcherOut[ i ] ) ) {

							// Restore matcherIn since elem is not yet a final match
							temp.push( ( matcherIn[ i ] = elem ) );
						}
					}
					postFinder( null, ( matcherOut = [] ), temp, xml );
				}

				// Move matched elements from seed to results to keep them synchronized
				i = matcherOut.length;
				while ( i-- ) {
					if ( ( elem = matcherOut[ i ] ) &&
						( temp = postFinder ? indexOf( seed, elem ) : preMap[ i ] ) > -1 ) {

						seed[ temp ] = !( results[ temp ] = elem );
					}
				}
			}

		// Add elements to results, through postFinder if defined
		} else {
			matcherOut = condense(
				matcherOut === results ?
					matcherOut.splice( preexisting, matcherOut.length ) :
					matcherOut
			);
			if ( postFinder ) {
				postFinder( null, results, matcherOut, xml );
			} else {
				push.apply( results, matcherOut );
			}
		}
	} );
}

function matcherFromTokens( tokens ) {
	var checkContext, matcher, j,
		len = tokens.length,
		leadingRelative = Expr.relative[ tokens[ 0 ].type ],
		implicitRelative = leadingRelative || Expr.relative[ " " ],
		i = leadingRelative ? 1 : 0,

		// The foundational matcher ensures that elements are reachable from top-level context(s)
		matchContext = addCombinator( function( elem ) {
			return elem === checkContext;
		}, implicitRelative, true ),
		matchAnyContext = addCombinator( function( elem ) {
			return indexOf( checkContext, elem ) > -1;
		}, implicitRelative, true ),
		matchers = [ function( elem, context, xml ) {
			var ret = ( !leadingRelative && ( xml || context !== outermostContext ) ) || (
				( checkContext = context ).nodeType ?
					matchContext( elem, context, xml ) :
					matchAnyContext( elem, context, xml ) );

			// Avoid hanging onto element (issue #299)
			checkContext = null;
			return ret;
		} ];

	for ( ; i < len; i++ ) {
		if ( ( matcher = Expr.relative[ tokens[ i ].type ] ) ) {
			matchers = [ addCombinator( elementMatcher( matchers ), matcher ) ];
		} else {
			matcher = Expr.filter[ tokens[ i ].type ].apply( null, tokens[ i ].matches );

			// Return special upon seeing a positional matcher
			if ( matcher[ expando ] ) {

				// Find the next relative operator (if any) for proper handling
				j = ++i;
				for ( ; j < len; j++ ) {
					if ( Expr.relative[ tokens[ j ].type ] ) {
						break;
					}
				}
				return setMatcher(
					i > 1 && elementMatcher( matchers ),
					i > 1 && toSelector(

					// If the preceding token was a descendant combinator, insert an implicit any-element `*`
					tokens
						.slice( 0, i - 1 )
						.concat( { value: tokens[ i - 2 ].type === " " ? "*" : "" } )
					).replace( rtrim, "$1" ),
					matcher,
					i < j && matcherFromTokens( tokens.slice( i, j ) ),
					j < len && matcherFromTokens( ( tokens = tokens.slice( j ) ) ),
					j < len && toSelector( tokens )
				);
			}
			matchers.push( matcher );
		}
	}

	return elementMatcher( matchers );
}

function matcherFromGroupMatchers( elementMatchers, setMatchers ) {
	var bySet = setMatchers.length > 0,
		byElement = elementMatchers.length > 0,
		superMatcher = function( seed, context, xml, results, outermost ) {
			var elem, j, matcher,
				matchedCount = 0,
				i = "0",
				unmatched = seed && [],
				setMatched = [],
				contextBackup = outermostContext,

				// We must always have either seed elements or outermost context
				elems = seed || byElement && Expr.find[ "TAG" ]( "*", outermost ),

				// Use integer dirruns iff this is the outermost matcher
				dirrunsUnique = ( dirruns += contextBackup == null ? 1 : Math.random() || 0.1 ),
				len = elems.length;

			if ( outermost ) {

				// Support: IE 11+, Edge 17 - 18+
				// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
				// two documents; shallow comparisons work.
				// eslint-disable-next-line eqeqeq
				outermostContext = context == document || context || outermost;
			}

			// Add elements passing elementMatchers directly to results
			// Support: IE<9, Safari
			// Tolerate NodeList properties (IE: "length"; Safari: <number>) matching elements by id
			for ( ; i !== len && ( elem = elems[ i ] ) != null; i++ ) {
				if ( byElement && elem ) {
					j = 0;

					// Support: IE 11+, Edge 17 - 18+
					// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
					// two documents; shallow comparisons work.
					// eslint-disable-next-line eqeqeq
					if ( !context && elem.ownerDocument != document ) {
						setDocument( elem );
						xml = !documentIsHTML;
					}
					while ( ( matcher = elementMatchers[ j++ ] ) ) {
						if ( matcher( elem, context || document, xml ) ) {
							results.push( elem );
							break;
						}
					}
					if ( outermost ) {
						dirruns = dirrunsUnique;
					}
				}

				// Track unmatched elements for set filters
				if ( bySet ) {

					// They will have gone through all possible matchers
					if ( ( elem = !matcher && elem ) ) {
						matchedCount--;
					}

					// Lengthen the array for every element, matched or not
					if ( seed ) {
						unmatched.push( elem );
					}
				}
			}

			// `i` is now the count of elements visited above, and adding it to `matchedCount`
			// makes the latter nonnegative.
			matchedCount += i;

			// Apply set filters to unmatched elements
			// NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`
			// equals `i`), unless we didn't visit _any_ elements in the above loop because we have
			// no element matchers and no seed.
			// Incrementing an initially-string "0" `i` allows `i` to remain a string only in that
			// case, which will result in a "00" `matchedCount` that differs from `i` but is also
			// numerically zero.
			if ( bySet && i !== matchedCount ) {
				j = 0;
				while ( ( matcher = setMatchers[ j++ ] ) ) {
					matcher( unmatched, setMatched, context, xml );
				}

				if ( seed ) {

					// Reintegrate element matches to eliminate the need for sorting
					if ( matchedCount > 0 ) {
						while ( i-- ) {
							if ( !( unmatched[ i ] || setMatched[ i ] ) ) {
								setMatched[ i ] = pop.call( results );
							}
						}
					}

					// Discard index placeholder values to get only actual matches
					setMatched = condense( setMatched );
				}

				// Add matches to results
				push.apply( results, setMatched );

				// Seedless set matches succeeding multiple successful matchers stipulate sorting
				if ( outermost && !seed && setMatched.length > 0 &&
					( matchedCount + setMatchers.length ) > 1 ) {

					Sizzle.uniqueSort( results );
				}
			}

			// Override manipulation of globals by nested matchers
			if ( outermost ) {
				dirruns = dirrunsUnique;
				outermostContext = contextBackup;
			}

			return unmatched;
		};

	return bySet ?
		markFunction( superMatcher ) :
		superMatcher;
}

compile = Sizzle.compile = function( selector, match /* Internal Use Only */ ) {
	var i,
		setMatchers = [],
		elementMatchers = [],
		cached = compilerCache[ selector + " " ];

	if ( !cached ) {

		// Generate a function of recursive functions that can be used to check each element
		if ( !match ) {
			match = tokenize( selector );
		}
		i = match.length;
		while ( i-- ) {
			cached = matcherFromTokens( match[ i ] );
			if ( cached[ expando ] ) {
				setMatchers.push( cached );
			} else {
				elementMatchers.push( cached );
			}
		}

		// Cache the compiled function
		cached = compilerCache(
			selector,
			matcherFromGroupMatchers( elementMatchers, setMatchers )
		);

		// Save selector and tokenization
		cached.selector = selector;
	}
	return cached;
};

/**
 * A low-level selection function that works with Sizzle's compiled
 *  selector functions
 * @param {String|Function} selector A selector or a pre-compiled
 *  selector function built with Sizzle.compile
 * @param {Element} context
 * @param {Array} [results]
 * @param {Array} [seed] A set of elements to match against
 */
select = Sizzle.select = function( selector, context, results, seed ) {
	var i, tokens, token, type, find,
		compiled = typeof selector === "function" && selector,
		match = !seed && tokenize( ( selector = compiled.selector || selector ) );

	results = results || [];

	// Try to minimize operations if there is only one selector in the list and no seed
	// (the latter of which guarantees us context)
	if ( match.length === 1 ) {

		// Reduce context if the leading compound selector is an ID
		tokens = match[ 0 ] = match[ 0 ].slice( 0 );
		if ( tokens.length > 2 && ( token = tokens[ 0 ] ).type === "ID" &&
			context.nodeType === 9 && documentIsHTML && Expr.relative[ tokens[ 1 ].type ] ) {

			context = ( Expr.find[ "ID" ]( token.matches[ 0 ]
				.replace( runescape, funescape ), context ) || [] )[ 0 ];
			if ( !context ) {
				return results;

			// Precompiled matchers will still verify ancestry, so step up a level
			} else if ( compiled ) {
				context = context.parentNode;
			}

			selector = selector.slice( tokens.shift().value.length );
		}

		// Fetch a seed set for right-to-left matching
		i = matchExpr[ "needsContext" ].test( selector ) ? 0 : tokens.length;
		while ( i-- ) {
			token = tokens[ i ];

			// Abort if we hit a combinator
			if ( Expr.relative[ ( type = token.type ) ] ) {
				break;
			}
			if ( ( find = Expr.find[ type ] ) ) {

				// Search, expanding context for leading sibling combinators
				if ( ( seed = find(
					token.matches[ 0 ].replace( runescape, funescape ),
					rsibling.test( tokens[ 0 ].type ) && testContext( context.parentNode ) ||
						context
				) ) ) {

					// If seed is empty or no tokens remain, we can return early
					tokens.splice( i, 1 );
					selector = seed.length && toSelector( tokens );
					if ( !selector ) {
						push.apply( results, seed );
						return results;
					}

					break;
				}
			}
		}
	}

	// Compile and execute a filtering function if one is not provided
	// Provide `match` to avoid retokenization if we modified the selector above
	( compiled || compile( selector, match ) )(
		seed,
		context,
		!documentIsHTML,
		results,
		!context || rsibling.test( selector ) && testContext( context.parentNode ) || context
	);
	return results;
};

// One-time assignments

// Sort stability
support.sortStable = expando.split( "" ).sort( sortOrder ).join( "" ) === expando;

// Support: Chrome 14-35+
// Always assume duplicates if they aren't passed to the comparison function
support.detectDuplicates = !!hasDuplicate;

// Initialize against the default document
setDocument();

// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)
// Detached nodes confoundingly follow *each other*
support.sortDetached = assert( function( el ) {

	// Should return 1, but returns 4 (following)
	return el.compareDocumentPosition( document.createElement( "fieldset" ) ) & 1;
} );

// Support: IE<8
// Prevent attribute/property "interpolation"
// https://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx
if ( !assert( function( el ) {
	el.innerHTML = "<a href='#'></a>";
	return el.firstChild.getAttribute( "href" ) === "#";
} ) ) {
	addHandle( "type|href|height|width", function( elem, name, isXML ) {
		if ( !isXML ) {
			return elem.getAttribute( name, name.toLowerCase() === "type" ? 1 : 2 );
		}
	} );
}

// Support: IE<9
// Use defaultValue in place of getAttribute("value")
if ( !support.attributes || !assert( function( el ) {
	el.innerHTML = "<input/>";
	el.firstChild.setAttribute( "value", "" );
	return el.firstChild.getAttribute( "value" ) === "";
} ) ) {
	addHandle( "value", function( elem, _name, isXML ) {
		if ( !isXML && elem.nodeName.toLowerCase() === "input" ) {
			return elem.defaultValue;
		}
	} );
}

// Support: IE<9
// Use getAttributeNode to fetch booleans when getAttribute lies
if ( !assert( function( el ) {
	return el.getAttribute( "disabled" ) == null;
} ) ) {
	addHandle( booleans, function( elem, name, isXML ) {
		var val;
		if ( !isXML ) {
			return elem[ name ] === true ? name.toLowerCase() :
				( val = elem.getAttributeNode( name ) ) && val.specified ?
					val.value :
					null;
		}
	} );
}

return Sizzle;

} )( window );



jQuery.find = Sizzle;
jQuery.expr = Sizzle.selectors;

// Deprecated
jQuery.expr[ ":" ] = jQuery.expr.pseudos;
jQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort;
jQuery.text = Sizzle.getText;
jQuery.isXMLDoc = Sizzle.isXML;
jQuery.contains = Sizzle.contains;
jQuery.escapeSelector = Sizzle.escape;




var dir = function( elem, dir, until ) {
	var matched = [],
		truncate = until !== undefined;

	while ( ( elem = elem[ dir ] ) && elem.nodeType !== 9 ) {
		if ( elem.nodeType === 1 ) {
			if ( truncate && jQuery( elem ).is( until ) ) {
				break;
			}
			matched.push( elem );
		}
	}
	return matched;
};


var siblings = function( n, elem ) {
	var matched = [];

	for ( ; n; n = n.nextSibling ) {
		if ( n.nodeType === 1 && n !== elem ) {
			matched.push( n );
		}
	}

	return matched;
};


var rneedsContext = jQuery.expr.match.needsContext;



function nodeName( elem, name ) {

	return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();

}
var rsingleTag = ( /^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i );



// Implement the identical functionality for filter and not
function winnow( elements, qualifier, not ) {
	if ( isFunction( qualifier ) ) {
		return jQuery.grep( elements, function( elem, i ) {
			return !!qualifier.call( elem, i, elem ) !== not;
		} );
	}

	// Single element
	if ( qualifier.nodeType ) {
		return jQuery.grep( elements, function( elem ) {
			return ( elem === qualifier ) !== not;
		} );
	}

	// Arraylike of elements (jQuery, arguments, Array)
	if ( typeof qualifier !== "string" ) {
		return jQuery.grep( elements, function( elem ) {
			return ( indexOf.call( qualifier, elem ) > -1 ) !== not;
		} );
	}

	// Filtered directly for both simple and complex selectors
	return jQuery.filter( qualifier, elements, not );
}

jQuery.filter = function( expr, elems, not ) {
	var elem = elems[ 0 ];

	if ( not ) {
		expr = ":not(" + expr + ")";
	}

	if ( elems.length === 1 && elem.nodeType === 1 ) {
		return jQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [];
	}

	return jQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {
		return elem.nodeType === 1;
	} ) );
};

jQuery.fn.extend( {
	find: function( selector ) {
		var i, ret,
			len = this.length,
			self = this;

		if ( typeof selector !== "string" ) {
			return this.pushStack( jQuery( selector ).filter( function() {
				for ( i = 0; i < len; i++ ) {
					if ( jQuery.contains( self[ i ], this ) ) {
						return true;
					}
				}
			} ) );
		}

		ret = this.pushStack( [] );

		for ( i = 0; i < len; i++ ) {
			jQuery.find( selector, self[ i ], ret );
		}

		return len > 1 ? jQuery.uniqueSort( ret ) : ret;
	},
	filter: function( selector ) {
		return this.pushStack( winnow( this, selector || [], false ) );
	},
	not: function( selector ) {
		return this.pushStack( winnow( this, selector || [], true ) );
	},
	is: function( selector ) {
		return !!winnow(
			this,

			// If this is a positional/relative selector, check membership in the returned set
			// so $("p:first").is("p:last") won't return true for a doc with two "p".
			typeof selector === "string" && rneedsContext.test( selector ) ?
				jQuery( selector ) :
				selector || [],
			false
		).length;
	}
} );


// Initialize a jQuery object


// A central reference to the root jQuery(document)
var rootjQuery,

	// A simple way to check for HTML strings
	// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)
	// Strict HTML recognition (#11290: must start with <)
	// Shortcut simple #id case for speed
	rquickExpr = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/,

	init = jQuery.fn.init = function( selector, context, root ) {
		var match, elem;

		// HANDLE: $(""), $(null), $(undefined), $(false)
		if ( !selector ) {
			return this;
		}

		// Method init() accepts an alternate rootjQuery
		// so migrate can support jQuery.sub (gh-2101)
		root = root || rootjQuery;

		// Handle HTML strings
		if ( typeof selector === "string" ) {
			if ( selector[ 0 ] === "<" &&
				selector[ selector.length - 1 ] === ">" &&
				selector.length >= 3 ) {

				// Assume that strings that start and end with <> are HTML and skip the regex check
				match = [ null, selector, null ];

			} else {
				match = rquickExpr.exec( selector );
			}

			// Match html or make sure no context is specified for #id
			if ( match && ( match[ 1 ] || !context ) ) {

				// HANDLE: $(html) -> $(array)
				if ( match[ 1 ] ) {
					context = context instanceof jQuery ? context[ 0 ] : context;

					// Option to run scripts is true for back-compat
					// Intentionally let the error be thrown if parseHTML is not present
					jQuery.merge( this, jQuery.parseHTML(
						match[ 1 ],
						context && context.nodeType ? context.ownerDocument || context : document,
						true
					) );

					// HANDLE: $(html, props)
					if ( rsingleTag.test( match[ 1 ] ) && jQuery.isPlainObject( context ) ) {
						for ( match in context ) {

							// Properties of context are called as methods if possible
							if ( isFunction( this[ match ] ) ) {
								this[ match ]( context[ match ] );

							// ...and otherwise set as attributes
							} else {
								this.attr( match, context[ match ] );
							}
						}
					}

					return this;

				// HANDLE: $(#id)
				} else {
					elem = document.getElementById( match[ 2 ] );

					if ( elem ) {

						// Inject the element directly into the jQuery object
						this[ 0 ] = elem;
						this.length = 1;
					}
					return this;
				}

			// HANDLE: $(expr, $(...))
			} else if ( !context || context.jquery ) {
				return ( context || root ).find( selector );

			// HANDLE: $(expr, context)
			// (which is just equivalent to: $(context).find(expr)
			} else {
				return this.constructor( context ).find( selector );
			}

		// HANDLE: $(DOMElement)
		} else if ( selector.nodeType ) {
			this[ 0 ] = selector;
			this.length = 1;
			return this;

		// HANDLE: $(function)
		// Shortcut for document ready
		} else if ( isFunction( selector ) ) {
			return root.ready !== undefined ?
				root.ready( selector ) :

				// Execute immediately if ready is not present
				selector( jQuery );
		}

		return jQuery.makeArray( selector, this );
	};

// Give the init function the jQuery prototype for later instantiation
init.prototype = jQuery.fn;

// Initialize central reference
rootjQuery = jQuery( document );


var rparentsprev = /^(?:parents|prev(?:Until|All))/,

	// Methods guaranteed to produce a unique set when starting from a unique set
	guaranteedUnique = {
		children: true,
		contents: true,
		next: true,
		prev: true
	};

jQuery.fn.extend( {
	has: function( target ) {
		var targets = jQuery( target, this ),
			l = targets.length;

		return this.filter( function() {
			var i = 0;
			for ( ; i < l; i++ ) {
				if ( jQuery.contains( this, targets[ i ] ) ) {
					return true;
				}
			}
		} );
	},

	closest: function( selectors, context ) {
		var cur,
			i = 0,
			l = this.length,
			matched = [],
			targets = typeof selectors !== "string" && jQuery( selectors );

		// Positional selectors never match, since there's no _selection_ context
		if ( !rneedsContext.test( selectors ) ) {
			for ( ; i < l; i++ ) {
				for ( cur = this[ i ]; cur && cur !== context; cur = cur.parentNode ) {

					// Always skip document fragments
					if ( cur.nodeType < 11 && ( targets ?
						targets.index( cur ) > -1 :

						// Don't pass non-elements to Sizzle
						cur.nodeType === 1 &&
							jQuery.find.matchesSelector( cur, selectors ) ) ) {

						matched.push( cur );
						break;
					}
				}
			}
		}

		return this.pushStack( matched.length > 1 ? jQuery.uniqueSort( matched ) : matched );
	},

	// Determine the position of an element within the set
	index: function( elem ) {

		// No argument, return index in parent
		if ( !elem ) {
			return ( this[ 0 ] && this[ 0 ].parentNode ) ? this.first().prevAll().length : -1;
		}

		// Index in selector
		if ( typeof elem === "string" ) {
			return indexOf.call( jQuery( elem ), this[ 0 ] );
		}

		// Locate the position of the desired element
		return indexOf.call( this,

			// If it receives a jQuery object, the first element is used
			elem.jquery ? elem[ 0 ] : elem
		);
	},

	add: function( selector, context ) {
		return this.pushStack(
			jQuery.uniqueSort(
				jQuery.merge( this.get(), jQuery( selector, context ) )
			)
		);
	},

	addBack: function( selector ) {
		return this.add( selector == null ?
			this.prevObject : this.prevObject.filter( selector )
		);
	}
} );

function sibling( cur, dir ) {
	while ( ( cur = cur[ dir ] ) && cur.nodeType !== 1 ) {}
	return cur;
}

jQuery.each( {
	parent: function( elem ) {
		var parent = elem.parentNode;
		return parent && parent.nodeType !== 11 ? parent : null;
	},
	parents: function( elem ) {
		return dir( elem, "parentNode" );
	},
	parentsUntil: function( elem, _i, until ) {
		return dir( elem, "parentNode", until );
	},
	next: function( elem ) {
		return sibling( elem, "nextSibling" );
	},
	prev: function( elem ) {
		return sibling( elem, "previousSibling" );
	},
	nextAll: function( elem ) {
		return dir( elem, "nextSibling" );
	},
	prevAll: function( elem ) {
		return dir( elem, "previousSibling" );
	},
	nextUntil: function( elem, _i, until ) {
		return dir( elem, "nextSibling", until );
	},
	prevUntil: function( elem, _i, until ) {
		return dir( elem, "previousSibling", until );
	},
	siblings: function( elem ) {
		return siblings( ( elem.parentNode || {} ).firstChild, elem );
	},
	children: function( elem ) {
		return siblings( elem.firstChild );
	},
	contents: function( elem ) {
		if ( elem.contentDocument != null &&

			// Support: IE 11+
			// <object> elements with no `data` attribute has an object
			// `contentDocument` with a `null` prototype.
			getProto( elem.contentDocument ) ) {

			return elem.contentDocument;
		}

		// Support: IE 9 - 11 only, iOS 7 only, Android Browser <=4.3 only
		// Treat the template element as a regular one in browsers that
		// don't support it.
		if ( nodeName( elem, "template" ) ) {
			elem = elem.content || elem;
		}

		return jQuery.merge( [], elem.childNodes );
	}
}, function( name, fn ) {
	jQuery.fn[ name ] = function( until, selector ) {
		var matched = jQuery.map( this, fn, until );

		if ( name.slice( -5 ) !== "Until" ) {
			selector = until;
		}

		if ( selector && typeof selector === "string" ) {
			matched = jQuery.filter( selector, matched );
		}

		if ( this.length > 1 ) {

			// Remove duplicates
			if ( !guaranteedUnique[ name ] ) {
				jQuery.uniqueSort( matched );
			}

			// Reverse order for parents* and prev-derivatives
			if ( rparentsprev.test( name ) ) {
				matched.reverse();
			}
		}

		return this.pushStack( matched );
	};
} );
var rnothtmlwhite = ( /[^\x20\t\r\n\f]+/g );



// Convert String-formatted options into Object-formatted ones
function createOptions( options ) {
	var object = {};
	jQuery.each( options.match( rnothtmlwhite ) || [], function( _, flag ) {
		object[ flag ] = true;
	} );
	return object;
}

/*
 * Create a callback list using the following parameters:
 *
 *	options: an optional list of space-separated options that will change how
 *			the callback list behaves or a more traditional option object
 *
 * By default a callback list will act like an event callback list and can be
 * "fired" multiple times.
 *
 * Possible options:
 *
 *	once:			will ensure the callback list can only be fired once (like a Deferred)
 *
 *	memory:			will keep track of previous values and will call any callback added
 *					after the list has been fired right away with the latest "memorized"
 *					values (like a Deferred)
 *
 *	unique:			will ensure a callback can only be added once (no duplicate in the list)
 *
 *	stopOnFalse:	interrupt callings when a callback returns false
 *
 */
jQuery.Callbacks = function( options ) {

	// Convert options from String-formatted to Object-formatted if needed
	// (we check in cache first)
	options = typeof options === "string" ?
		createOptions( options ) :
		jQuery.extend( {}, options );

	var // Flag to know if list is currently firing
		firing,

		// Last fire value for non-forgettable lists
		memory,

		// Flag to know if list was already fired
		fired,

		// Flag to prevent firing
		locked,

		// Actual callback list
		list = [],

		// Queue of execution data for repeatable lists
		queue = [],

		// Index of currently firing callback (modified by add/remove as needed)
		firingIndex = -1,

		// Fire callbacks
		fire = function() {

			// Enforce single-firing
			locked = locked || options.once;

			// Execute callbacks for all pending executions,
			// respecting firingIndex overrides and runtime changes
			fired = firing = true;
			for ( ; queue.length; firingIndex = -1 ) {
				memory = queue.shift();
				while ( ++firingIndex < list.length ) {

					// Run callback and check for early termination
					if ( list[ firingIndex ].apply( memory[ 0 ], memory[ 1 ] ) === false &&
						options.stopOnFalse ) {

						// Jump to end and forget the data so .add doesn't re-fire
						firingIndex = list.length;
						memory = false;
					}
				}
			}

			// Forget the data if we're done with it
			if ( !options.memory ) {
				memory = false;
			}

			firing = false;

			// Clean up if we're done firing for good
			if ( locked ) {

				// Keep an empty list if we have data for future add calls
				if ( memory ) {
					list = [];

				// Otherwise, this object is spent
				} else {
					list = "";
				}
			}
		},

		// Actual Callbacks object
		self = {

			// Add a callback or a collection of callbacks to the list
			add: function() {
				if ( list ) {

					// If we have memory from a past run, we should fire after adding
					if ( memory && !firing ) {
						firingIndex = list.length - 1;
						queue.push( memory );
					}

					( function add( args ) {
						jQuery.each( args, function( _, arg ) {
							if ( isFunction( arg ) ) {
								if ( !options.unique || !self.has( arg ) ) {
									list.push( arg );
								}
							} else if ( arg && arg.length && toType( arg ) !== "string" ) {

								// Inspect recursively
								add( arg );
							}
						} );
					} )( arguments );

					if ( memory && !firing ) {
						fire();
					}
				}
				return this;
			},

			// Remove a callback from the list
			remove: function() {
				jQuery.each( arguments, function( _, arg ) {
					var index;
					while ( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {
						list.splice( index, 1 );

						// Handle firing indexes
						if ( index <= firingIndex ) {
							firingIndex--;
						}
					}
				} );
				return this;
			},

			// Check if a given callback is in the list.
			// If no argument is given, return whether or not list has callbacks attached.
			has: function( fn ) {
				return fn ?
					jQuery.inArray( fn, list ) > -1 :
					list.length > 0;
			},

			// Remove all callbacks from the list
			empty: function() {
				if ( list ) {
					list = [];
				}
				return this;
			},

			// Disable .fire and .add
			// Abort any current/pending executions
			// Clear all callbacks and values
			disable: function() {
				locked = queue = [];
				list = memory = "";
				return this;
			},
			disabled: function() {
				return !list;
			},

			// Disable .fire
			// Also disable .add unless we have memory (since it would have no effect)
			// Abort any pending executions
			lock: function() {
				locked = queue = [];
				if ( !memory && !firing ) {
					list = memory = "";
				}
				return this;
			},
			locked: function() {
				return !!locked;
			},

			// Call all callbacks with the given context and arguments
			fireWith: function( context, args ) {
				if ( !locked ) {
					args = args || [];
					args = [ context, args.slice ? args.slice() : args ];
					queue.push( args );
					if ( !firing ) {
						fire();
					}
				}
				return this;
			},

			// Call all the callbacks with the given arguments
			fire: function() {
				self.fireWith( this, arguments );
				return this;
			},

			// To know if the callbacks have already been called at least once
			fired: function() {
				return !!fired;
			}
		};

	return self;
};


function Identity( v ) {
	return v;
}
function Thrower( ex ) {
	throw ex;
}

function adoptValue( value, resolve, reject, noValue ) {
	var method;

	try {

		// Check for promise aspect first to privilege synchronous behavior
		if ( value && isFunction( ( method = value.promise ) ) ) {
			method.call( value ).done( resolve ).fail( reject );

		// Other thenables
		} else if ( value && isFunction( ( method = value.then ) ) ) {
			method.call( value, resolve, reject );

		// Other non-thenables
		} else {

			// Control `resolve` arguments by letting Array#slice cast boolean `noValue` to integer:
			// * false: [ value ].slice( 0 ) => resolve( value )
			// * true: [ value ].slice( 1 ) => resolve()
			resolve.apply( undefined, [ value ].slice( noValue ) );
		}

	// For Promises/A+, convert exceptions into rejections
	// Since jQuery.when doesn't unwrap thenables, we can skip the extra checks appearing in
	// Deferred#then to conditionally suppress rejection.
	} catch ( value ) {

		// Support: Android 4.0 only
		// Strict mode functions invoked without .call/.apply get global-object context
		reject.apply( undefined, [ value ] );
	}
}

jQuery.extend( {

	Deferred: function( func ) {
		var tuples = [

				// action, add listener, callbacks,
				// ... .then handlers, argument index, [final state]
				[ "notify", "progress", jQuery.Callbacks( "memory" ),
					jQuery.Callbacks( "memory" ), 2 ],
				[ "resolve", "done", jQuery.Callbacks( "once memory" ),
					jQuery.Callbacks( "once memory" ), 0, "resolved" ],
				[ "reject", "fail", jQuery.Callbacks( "once memory" ),
					jQuery.Callbacks( "once memory" ), 1, "rejected" ]
			],
			state = "pending",
			promise = {
				state: function() {
					return state;
				},
				always: function() {
					deferred.done( arguments ).fail( arguments );
					return this;
				},
				"catch": function( fn ) {
					return promise.then( null, fn );
				},

				// Keep pipe for back-compat
				pipe: function( /* fnDone, fnFail, fnProgress */ ) {
					var fns = arguments;

					return jQuery.Deferred( function( newDefer ) {
						jQuery.each( tuples, function( _i, tuple ) {

							// Map tuples (progress, done, fail) to arguments (done, fail, progress)
							var fn = isFunction( fns[ tuple[ 4 ] ] ) && fns[ tuple[ 4 ] ];

							// deferred.progress(function() { bind to newDefer or newDefer.notify })
							// deferred.done(function() { bind to newDefer or newDefer.resolve })
							// deferred.fail(function() { bind to newDefer or newDefer.reject })
							deferred[ tuple[ 1 ] ]( function() {
								var returned = fn && fn.apply( this, arguments );
								if ( returned && isFunction( returned.promise ) ) {
									returned.promise()
										.progress( newDefer.notify )
										.done( newDefer.resolve )
										.fail( newDefer.reject );
								} else {
									newDefer[ tuple[ 0 ] + "With" ](
										this,
										fn ? [ returned ] : arguments
									);
								}
							} );
						} );
						fns = null;
					} ).promise();
				},
				then: function( onFulfilled, onRejected, onProgress ) {
					var maxDepth = 0;
					function resolve( depth, deferred, handler, special ) {
						return function() {
							var that = this,
								args = arguments,
								mightThrow = function() {
									var returned, then;

									// Support: Promises/A+ section 2.3.3.3.3
									// https://promisesaplus.com/#point-59
									// Ignore double-resolution attempts
									if ( depth < maxDepth ) {
										return;
									}

									returned = handler.apply( that, args );

									// Support: Promises/A+ section 2.3.1
									// https://promisesaplus.com/#point-48
									if ( returned === deferred.promise() ) {
										throw new TypeError( "Thenable self-resolution" );
									}

									// Support: Promises/A+ sections 2.3.3.1, 3.5
									// https://promisesaplus.com/#point-54
									// https://promisesaplus.com/#point-75
									// Retrieve `then` only once
									then = returned &&

										// Support: Promises/A+ section 2.3.4
										// https://promisesaplus.com/#point-64
										// Only check objects and functions for thenability
										( typeof returned === "object" ||
											typeof returned === "function" ) &&
										returned.then;

									// Handle a returned thenable
									if ( isFunction( then ) ) {

										// Special processors (notify) just wait for resolution
										if ( special ) {
											then.call(
												returned,
												resolve( maxDepth, deferred, Identity, special ),
												resolve( maxDepth, deferred, Thrower, special )
											);

										// Normal processors (resolve) also hook into progress
										} else {

											// ...and disregard older resolution values
											maxDepth++;

											then.call(
												returned,
												resolve( maxDepth, deferred, Identity, special ),
												resolve( maxDepth, deferred, Thrower, special ),
												resolve( maxDepth, deferred, Identity,
													deferred.notifyWith )
											);
										}

									// Handle all other returned values
									} else {

										// Only substitute handlers pass on context
										// and multiple values (non-spec behavior)
										if ( handler !== Identity ) {
											that = undefined;
											args = [ returned ];
										}

										// Process the value(s)
										// Default process is resolve
										( special || deferred.resolveWith )( that, args );
									}
								},

								// Only normal processors (resolve) catch and reject exceptions
								process = special ?
									mightThrow :
									function() {
										try {
											mightThrow();
										} catch ( e ) {

											if ( jQuery.Deferred.exceptionHook ) {
												jQuery.Deferred.exceptionHook( e,
													process.stackTrace );
											}

											// Support: Promises/A+ section 2.3.3.3.4.1
											// https://promisesaplus.com/#point-61
											// Ignore post-resolution exceptions
											if ( depth + 1 >= maxDepth ) {

												// Only substitute handlers pass on context
												// and multiple values (non-spec behavior)
												if ( handler !== Thrower ) {
													that = undefined;
													args = [ e ];
												}

												deferred.rejectWith( that, args );
											}
										}
									};

							// Support: Promises/A+ section 2.3.3.3.1
							// https://promisesaplus.com/#point-57
							// Re-resolve promises immediately to dodge false rejection from
							// subsequent errors
							if ( depth ) {
								process();
							} else {

								// Call an optional hook to record the stack, in case of exception
								// since it's otherwise lost when execution goes async
								if ( jQuery.Deferred.getStackHook ) {
									process.stackTrace = jQuery.Deferred.getStackHook();
								}
								window.setTimeout( process );
							}
						};
					}

					return jQuery.Deferred( function( newDefer ) {

						// progress_handlers.add( ... )
						tuples[ 0 ][ 3 ].add(
							resolve(
								0,
								newDefer,
								isFunction( onProgress ) ?
									onProgress :
									Identity,
								newDefer.notifyWith
							)
						);

						// fulfilled_handlers.add( ... )
						tuples[ 1 ][ 3 ].add(
							resolve(
								0,
								newDefer,
								isFunction( onFulfilled ) ?
									onFulfilled :
									Identity
							)
						);

						// rejected_handlers.add( ... )
						tuples[ 2 ][ 3 ].add(
							resolve(
								0,
								newDefer,
								isFunction( onRejected ) ?
									onRejected :
									Thrower
							)
						);
					} ).promise();
				},

				// Get a promise for this deferred
				// If obj is provided, the promise aspect is added to the object
				promise: function( obj ) {
					return obj != null ? jQuery.extend( obj, promise ) : promise;
				}
			},
			deferred = {};

		// Add list-specific methods
		jQuery.each( tuples, function( i, tuple ) {
			var list = tuple[ 2 ],
				stateString = tuple[ 5 ];

			// promise.progress = list.add
			// promise.done = list.add
			// promise.fail = list.add
			promise[ tuple[ 1 ] ] = list.add;

			// Handle state
			if ( stateString ) {
				list.add(
					function() {

						// state = "resolved" (i.e., fulfilled)
						// state = "rejected"
						state = stateString;
					},

					// rejected_callbacks.disable
					// fulfilled_callbacks.disable
					tuples[ 3 - i ][ 2 ].disable,

					// rejected_handlers.disable
					// fulfilled_handlers.disable
					tuples[ 3 - i ][ 3 ].disable,

					// progress_callbacks.lock
					tuples[ 0 ][ 2 ].lock,

					// progress_handlers.lock
					tuples[ 0 ][ 3 ].lock
				);
			}

			// progress_handlers.fire
			// fulfilled_handlers.fire
			// rejected_handlers.fire
			list.add( tuple[ 3 ].fire );

			// deferred.notify = function() { deferred.notifyWith(...) }
			// deferred.resolve = function() { deferred.resolveWith(...) }
			// deferred.reject = function() { deferred.rejectWith(...) }
			deferred[ tuple[ 0 ] ] = function() {
				deferred[ tuple[ 0 ] + "With" ]( this === deferred ? undefined : this, arguments );
				return this;
			};

			// deferred.notifyWith = list.fireWith
			// deferred.resolveWith = list.fireWith
			// deferred.rejectWith = list.fireWith
			deferred[ tuple[ 0 ] + "With" ] = list.fireWith;
		} );

		// Make the deferred a promise
		promise.promise( deferred );

		// Call given func if any
		if ( func ) {
			func.call( deferred, deferred );
		}

		// All done!
		return deferred;
	},

	// Deferred helper
	when: function( singleValue ) {
		var

			// count of uncompleted subordinates
			remaining = arguments.length,

			// count of unprocessed arguments
			i = remaining,

			// subordinate fulfillment data
			resolveContexts = Array( i ),
			resolveValues = slice.call( arguments ),

			// the primary Deferred
			primary = jQuery.Deferred(),

			// subordinate callback factory
			updateFunc = function( i ) {
				return function( value ) {
					resolveContexts[ i ] = this;
					resolveValues[ i ] = arguments.length > 1 ? slice.call( arguments ) : value;
					if ( !( --remaining ) ) {
						primary.resolveWith( resolveContexts, resolveValues );
					}
				};
			};

		// Single- and empty arguments are adopted like Promise.resolve
		if ( remaining <= 1 ) {
			adoptValue( singleValue, primary.done( updateFunc( i ) ).resolve, primary.reject,
				!remaining );

			// Use .then() to unwrap secondary thenables (cf. gh-3000)
			if ( primary.state() === "pending" ||
				isFunction( resolveValues[ i ] && resolveValues[ i ].then ) ) {

				return primary.then();
			}
		}

		// Multiple arguments are aggregated like Promise.all array elements
		while ( i-- ) {
			adoptValue( resolveValues[ i ], updateFunc( i ), primary.reject );
		}

		return primary.promise();
	}
} );


// These usually indicate a programmer mistake during development,
// warn about them ASAP rather than swallowing them by default.
var rerrorNames = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;

jQuery.Deferred.exceptionHook = function( error, stack ) {

	// Support: IE 8 - 9 only
	// Console exists when dev tools are open, which can happen at any time
	if ( window.console && window.console.warn && error && rerrorNames.test( error.name ) ) {
		window.console.warn( "jQuery.Deferred exception: " + error.message, error.stack, stack );
	}
};




jQuery.readyException = function( error ) {
	window.setTimeout( function() {
		throw error;
	} );
};




// The deferred used on DOM ready
var readyList = jQuery.Deferred();

jQuery.fn.ready = function( fn ) {

	readyList
		.then( fn )

		// Wrap jQuery.readyException in a function so that the lookup
		// happens at the time of error handling instead of callback
		// registration.
		.catch( function( error ) {
			jQuery.readyException( error );
		} );

	return this;
};

jQuery.extend( {

	// Is the DOM ready to be used? Set to true once it occurs.
	isReady: false,

	// A counter to track how many items to wait for before
	// the ready event fires. See #6781
	readyWait: 1,

	// Handle when the DOM is ready
	ready: function( wait ) {

		// Abort if there are pending holds or we're already ready
		if ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {
			return;
		}

		// Remember that the DOM is ready
		jQuery.isReady = true;

		// If a normal DOM Ready event fired, decrement, and wait if need be
		if ( wait !== true && --jQuery.readyWait > 0 ) {
			return;
		}

		// If there are functions bound, to execute
		readyList.resolveWith( document, [ jQuery ] );
	}
} );

jQuery.ready.then = readyList.then;

// The ready event handler and self cleanup method
function completed() {
	document.removeEventListener( "DOMContentLoaded", completed );
	window.removeEventListener( "load", completed );
	jQuery.ready();
}

// Catch cases where $(document).ready() is called
// after the browser event has already occurred.
// Support: IE <=9 - 10 only
// Older IE sometimes signals "interactive" too soon
if ( document.readyState === "complete" ||
	( document.readyState !== "loading" && !document.documentElement.doScroll ) ) {

	// Handle it asynchronously to allow scripts the opportunity to delay ready
	window.setTimeout( jQuery.ready );

} else {

	// Use the handy event callback
	document.addEventListener( "DOMContentLoaded", completed );

	// A fallback to window.onload, that will always work
	window.addEventListener( "load", completed );
}




// Multifunctional method to get and set values of a collection
// The value/s can optionally be executed if it's a function
var access = function( elems, fn, key, value, chainable, emptyGet, raw ) {
	var i = 0,
		len = elems.length,
		bulk = key == null;

	// Sets many values
	if ( toType( key ) === "object" ) {
		chainable = true;
		for ( i in key ) {
			access( elems, fn, i, key[ i ], true, emptyGet, raw );
		}

	// Sets one value
	} else if ( value !== undefined ) {
		chainable = true;

		if ( !isFunction( value ) ) {
			raw = true;
		}

		if ( bulk ) {

			// Bulk operations run against the entire set
			if ( raw ) {
				fn.call( elems, value );
				fn = null;

			// ...except when executing function values
			} else {
				bulk = fn;
				fn = function( elem, _key, value ) {
					return bulk.call( jQuery( elem ), value );
				};
			}
		}

		if ( fn ) {
			for ( ; i < len; i++ ) {
				fn(
					elems[ i ], key, raw ?
						value :
						value.call( elems[ i ], i, fn( elems[ i ], key ) )
				);
			}
		}
	}

	if ( chainable ) {
		return elems;
	}

	// Gets
	if ( bulk ) {
		return fn.call( elems );
	}

	return len ? fn( elems[ 0 ], key ) : emptyGet;
};


// Matches dashed string for camelizing
var rmsPrefix = /^-ms-/,
	rdashAlpha = /-([a-z])/g;

// Used by camelCase as callback to replace()
function fcamelCase( _all, letter ) {
	return letter.toUpperCase();
}

// Convert dashed to camelCase; used by the css and data modules
// Support: IE <=9 - 11, Edge 12 - 15
// Microsoft forgot to hump their vendor prefix (#9572)
function camelCase( string ) {
	return string.replace( rmsPrefix, "ms-" ).replace( rdashAlpha, fcamelCase );
}
var acceptData = function( owner ) {

	// Accepts only:
	//  - Node
	//    - Node.ELEMENT_NODE
	//    - Node.DOCUMENT_NODE
	//  - Object
	//    - Any
	return owner.nodeType === 1 || owner.nodeType === 9 || !( +owner.nodeType );
};




function Data() {
	this.expando = jQuery.expando + Data.uid++;
}

Data.uid = 1;

Data.prototype = {

	cache: function( owner ) {

		// Check if the owner object already has a cache
		var value = owner[ this.expando ];

		// If not, create one
		if ( !value ) {
			value = {};

			// We can accept data for non-element nodes in modern browsers,
			// but we should not, see #8335.
			// Always return an empty object.
			if ( acceptData( owner ) ) {

				// If it is a node unlikely to be stringify-ed or looped over
				// use plain assignment
				if ( owner.nodeType ) {
					owner[ this.expando ] = value;

				// Otherwise secure it in a non-enumerable property
				// configurable must be true to allow the property to be
				// deleted when data is removed
				} else {
					Object.defineProperty( owner, this.expando, {
						value: value,
						configurable: true
					} );
				}
			}
		}

		return value;
	},
	set: function( owner, data, value ) {
		var prop,
			cache = this.cache( owner );

		// Handle: [ owner, key, value ] args
		// Always use camelCase key (gh-2257)
		if ( typeof data === "string" ) {
			cache[ camelCase( data ) ] = value;

		// Handle: [ owner, { properties } ] args
		} else {

			// Copy the properties one-by-one to the cache object
			for ( prop in data ) {
				cache[ camelCase( prop ) ] = data[ prop ];
			}
		}
		return cache;
	},
	get: function( owner, key ) {
		return key === undefined ?
			this.cache( owner ) :

			// Always use camelCase key (gh-2257)
			owner[ this.expando ] && owner[ this.expando ][ camelCase( key ) ];
	},
	access: function( owner, key, value ) {

		// In cases where either:
		//
		//   1. No key was specified
		//   2. A string key was specified, but no value provided
		//
		// Take the "read" path and allow the get method to determine
		// which value to return, respectively either:
		//
		//   1. The entire cache object
		//   2. The data stored at the key
		//
		if ( key === undefined ||
				( ( key && typeof key === "string" ) && value === undefined ) ) {

			return this.get( owner, key );
		}

		// When the key is not a string, or both a key and value
		// are specified, set or extend (existing objects) with either:
		//
		//   1. An object of properties
		//   2. A key and value
		//
		this.set( owner, key, value );

		// Since the "set" path can have two possible entry points
		// return the expected data based on which path was taken[*]
		return value !== undefined ? value : key;
	},
	remove: function( owner, key ) {
		var i,
			cache = owner[ this.expando ];

		if ( cache === undefined ) {
			return;
		}

		if ( key !== undefined ) {

			// Support array or space separated string of keys
			if ( Array.isArray( key ) ) {

				// If key is an array of keys...
				// We always set camelCase keys, so remove that.
				key = key.map( camelCase );
			} else {
				key = camelCase( key );

				// If a key with the spaces exists, use it.
				// Otherwise, create an array by matching non-whitespace
				key = key in cache ?
					[ key ] :
					( key.match( rnothtmlwhite ) || [] );
			}

			i = key.length;

			while ( i-- ) {
				delete cache[ key[ i ] ];
			}
		}

		// Remove the expando if there's no more data
		if ( key === undefined || jQuery.isEmptyObject( cache ) ) {

			// Support: Chrome <=35 - 45
			// Webkit & Blink performance suffers when deleting properties
			// from DOM nodes, so set to undefined instead
			// https://bugs.chromium.org/p/chromium/issues/detail?id=378607 (bug restricted)
			if ( owner.nodeType ) {
				owner[ this.expando ] = undefined;
			} else {
				delete owner[ this.expando ];
			}
		}
	},
	hasData: function( owner ) {
		var cache = owner[ this.expando ];
		return cache !== undefined && !jQuery.isEmptyObject( cache );
	}
};
var dataPriv = new Data();

var dataUser = new Data();



//	Implementation Summary
//
//	1. Enforce API surface and semantic compatibility with 1.9.x branch
//	2. Improve the module's maintainability by reducing the storage
//		paths to a single mechanism.
//	3. Use the same single mechanism to support "private" and "user" data.
//	4. _Never_ expose "private" data to user code (TODO: Drop _data, _removeData)
//	5. Avoid exposing implementation details on user objects (eg. expando properties)
//	6. Provide a clear path for implementation upgrade to WeakMap in 2014

var rbrace = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,
	rmultiDash = /[A-Z]/g;

function getData( data ) {
	if ( data === "true" ) {
		return true;
	}

	if ( data === "false" ) {
		return false;
	}

	if ( data === "null" ) {
		return null;
	}

	// Only convert to a number if it doesn't change the string
	if ( data === +data + "" ) {
		return +data;
	}

	if ( rbrace.test( data ) ) {
		return JSON.parse( data );
	}

	return data;
}

function dataAttr( elem, key, data ) {
	var name;

	// If nothing was found internally, try to fetch any
	// data from the HTML5 data-* attribute
	if ( data === undefined && elem.nodeType === 1 ) {
		name = "data-" + key.replace( rmultiDash, "-$&" ).toLowerCase();
		data = elem.getAttribute( name );

		if ( typeof data === "string" ) {
			try {
				data = getData( data );
			} catch ( e ) {}

			// Make sure we set the data so it isn't changed later
			dataUser.set( elem, key, data );
		} else {
			data = undefined;
		}
	}
	return data;
}

jQuery.extend( {
	hasData: function( elem ) {
		return dataUser.hasData( elem ) || dataPriv.hasData( elem );
	},

	data: function( elem, name, data ) {
		return dataUser.access( elem, name, data );
	},

	removeData: function( elem, name ) {
		dataUser.remove( elem, name );
	},

	// TODO: Now that all calls to _data and _removeData have been replaced
	// with direct calls to dataPriv methods, these can be deprecated.
	_data: function( elem, name, data ) {
		return dataPriv.access( elem, name, data );
	},

	_removeData: function( elem, name ) {
		dataPriv.remove( elem, name );
	}
} );

jQuery.fn.extend( {
	data: function( key, value ) {
		var i, name, data,
			elem = this[ 0 ],
			attrs = elem && elem.attributes;

		// Gets all values
		if ( key === undefined ) {
			if ( this.length ) {
				data = dataUser.get( elem );

				if ( elem.nodeType === 1 && !dataPriv.get( elem, "hasDataAttrs" ) ) {
					i = attrs.length;
					while ( i-- ) {

						// Support: IE 11 only
						// The attrs elements can be null (#14894)
						if ( attrs[ i ] ) {
							name = attrs[ i ].name;
							if ( name.indexOf( "data-" ) === 0 ) {
								name = camelCase( name.slice( 5 ) );
								dataAttr( elem, name, data[ name ] );
							}
						}
					}
					dataPriv.set( elem, "hasDataAttrs", true );
				}
			}

			return data;
		}

		// Sets multiple values
		if ( typeof key === "object" ) {
			return this.each( function() {
				dataUser.set( this, key );
			} );
		}

		return access( this, function( value ) {
			var data;

			// The calling jQuery object (element matches) is not empty
			// (and therefore has an element appears at this[ 0 ]) and the
			// `value` parameter was not undefined. An empty jQuery object
			// will result in `undefined` for elem = this[ 0 ] which will
			// throw an exception if an attempt to read a data cache is made.
			if ( elem && value === undefined ) {

				// Attempt to get data from the cache
				// The key will always be camelCased in Data
				data = dataUser.get( elem, key );
				if ( data !== undefined ) {
					return data;
				}

				// Attempt to "discover" the data in
				// HTML5 custom data-* attrs
				data = dataAttr( elem, key );
				if ( data !== undefined ) {
					return data;
				}

				// We tried really hard, but the data doesn't exist.
				return;
			}

			// Set the data...
			this.each( function() {

				// We always store the camelCased key
				dataUser.set( this, key, value );
			} );
		}, null, value, arguments.length > 1, null, true );
	},

	removeData: function( key ) {
		return this.each( function() {
			dataUser.remove( this, key );
		} );
	}
} );


jQuery.extend( {
	queue: function( elem, type, data ) {
		var queue;

		if ( elem ) {
			type = ( type || "fx" ) + "queue";
			queue = dataPriv.get( elem, type );

			// Speed up dequeue by getting out quickly if this is just a lookup
			if ( data ) {
				if ( !queue || Array.isArray( data ) ) {
					queue = dataPriv.access( elem, type, jQuery.makeArray( data ) );
				} else {
					queue.push( data );
				}
			}
			return queue || [];
		}
	},

	dequeue: function( elem, type ) {
		type = type || "fx";

		var queue = jQuery.queue( elem, type ),
			startLength = queue.length,
			fn = queue.shift(),
			hooks = jQuery._queueHooks( elem, type ),
			next = function() {
				jQuery.dequeue( elem, type );
			};

		// If the fx queue is dequeued, always remove the progress sentinel
		if ( fn === "inprogress" ) {
			fn = queue.shift();
			startLength--;
		}

		if ( fn ) {

			// Add a progress sentinel to prevent the fx queue from being
			// automatically dequeued
			if ( type === "fx" ) {
				queue.unshift( "inprogress" );
			}

			// Clear up the last queue stop function
			delete hooks.stop;
			fn.call( elem, next, hooks );
		}

		if ( !startLength && hooks ) {
			hooks.empty.fire();
		}
	},

	// Not public - generate a queueHooks object, or return the current one
	_queueHooks: function( elem, type ) {
		var key = type + "queueHooks";
		return dataPriv.get( elem, key ) || dataPriv.access( elem, key, {
			empty: jQuery.Callbacks( "once memory" ).add( function() {
				dataPriv.remove( elem, [ type + "queue", key ] );
			} )
		} );
	}
} );

jQuery.fn.extend( {
	queue: function( type, data ) {
		var setter = 2;

		if ( typeof type !== "string" ) {
			data = type;
			type = "fx";
			setter--;
		}

		if ( arguments.length < setter ) {
			return jQuery.queue( this[ 0 ], type );
		}

		return data === undefined ?
			this :
			this.each( function() {
				var queue = jQuery.queue( this, type, data );

				// Ensure a hooks for this queue
				jQuery._queueHooks( this, type );

				if ( type === "fx" && queue[ 0 ] !== "inprogress" ) {
					jQuery.dequeue( this, type );
				}
			} );
	},
	dequeue: function( type ) {
		return this.each( function() {
			jQuery.dequeue( this, type );
		} );
	},
	clearQueue: function( type ) {
		return this.queue( type || "fx", [] );
	},

	// Get a promise resolved when queues of a certain type
	// are emptied (fx is the type by default)
	promise: function( type, obj ) {
		var tmp,
			count = 1,
			defer = jQuery.Deferred(),
			elements = this,
			i = this.length,
			resolve = function() {
				if ( !( --count ) ) {
					defer.resolveWith( elements, [ elements ] );
				}
			};

		if ( typeof type !== "string" ) {
			obj = type;
			type = undefined;
		}
		type = type || "fx";

		while ( i-- ) {
			tmp = dataPriv.get( elements[ i ], type + "queueHooks" );
			if ( tmp && tmp.empty ) {
				count++;
				tmp.empty.add( resolve );
			}
		}
		resolve();
		return defer.promise( obj );
	}
} );
var pnum = ( /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/ ).source;

var rcssNum = new RegExp( "^(?:([+-])=|)(" + pnum + ")([a-z%]*)$", "i" );


var cssExpand = [ "Top", "Right", "Bottom", "Left" ];

var documentElement = document.documentElement;



	var isAttached = function( elem ) {
			return jQuery.contains( elem.ownerDocument, elem );
		},
		composed = { composed: true };

	// Support: IE 9 - 11+, Edge 12 - 18+, iOS 10.0 - 10.2 only
	// Check attachment across shadow DOM boundaries when possible (gh-3504)
	// Support: iOS 10.0-10.2 only
	// Early iOS 10 versions support `attachShadow` but not `getRootNode`,
	// leading to errors. We need to check for `getRootNode`.
	if ( documentElement.getRootNode ) {
		isAttached = function( elem ) {
			return jQuery.contains( elem.ownerDocument, elem ) ||
				elem.getRootNode( composed ) === elem.ownerDocument;
		};
	}
var isHiddenWithinTree = function( elem, el ) {

		// isHiddenWithinTree might be called from jQuery#filter function;
		// in that case, element will be second argument
		elem = el || elem;

		// Inline style trumps all
		return elem.style.display === "none" ||
			elem.style.display === "" &&

			// Otherwise, check computed style
			// Support: Firefox <=43 - 45
			// Disconnected elements can have computed display: none, so first confirm that elem is
			// in the document.
			isAttached( elem ) &&

			jQuery.css( elem, "display" ) === "none";
	};



function adjustCSS( elem, prop, valueParts, tween ) {
	var adjusted, scale,
		maxIterations = 20,
		currentValue = tween ?
			function() {
				return tween.cur();
			} :
			function() {
				return jQuery.css( elem, prop, "" );
			},
		initial = currentValue(),
		unit = valueParts && valueParts[ 3 ] || ( jQuery.cssNumber[ prop ] ? "" : "px" ),

		// Starting value computation is required for potential unit mismatches
		initialInUnit = elem.nodeType &&
			( jQuery.cssNumber[ prop ] || unit !== "px" && +initial ) &&
			rcssNum.exec( jQuery.css( elem, prop ) );

	if ( initialInUnit && initialInUnit[ 3 ] !== unit ) {

		// Support: Firefox <=54
		// Halve the iteration target value to prevent interference from CSS upper bounds (gh-2144)
		initial = initial / 2;

		// Trust units reported by jQuery.css
		unit = unit || initialInUnit[ 3 ];

		// Iteratively approximate from a nonzero starting point
		initialInUnit = +initial || 1;

		while ( maxIterations-- ) {

			// Evaluate and update our best guess (doubling guesses that zero out).
			// Finish if the scale equals or crosses 1 (making the old*new product non-positive).
			jQuery.style( elem, prop, initialInUnit + unit );
			if ( ( 1 - scale ) * ( 1 - ( scale = currentValue() / initial || 0.5 ) ) <= 0 ) {
				maxIterations = 0;
			}
			initialInUnit = initialInUnit / scale;

		}

		initialInUnit = initialInUnit * 2;
		jQuery.style( elem, prop, initialInUnit + unit );

		// Make sure we update the tween properties later on
		valueParts = valueParts || [];
	}

	if ( valueParts ) {
		initialInUnit = +initialInUnit || +initial || 0;

		// Apply relative offset (+=/-=) if specified
		adjusted = valueParts[ 1 ] ?
			initialInUnit + ( valueParts[ 1 ] + 1 ) * valueParts[ 2 ] :
			+valueParts[ 2 ];
		if ( tween ) {
			tween.unit = unit;
			tween.start = initialInUnit;
			tween.end = adjusted;
		}
	}
	return adjusted;
}


var defaultDisplayMap = {};

function getDefaultDisplay( elem ) {
	var temp,
		doc = elem.ownerDocument,
		nodeName = elem.nodeName,
		display = defaultDisplayMap[ nodeName ];

	if ( display ) {
		return display;
	}

	temp = doc.body.appendChild( doc.createElement( nodeName ) );
	display = jQuery.css( temp, "display" );

	temp.parentNode.removeChild( temp );

	if ( display === "none" ) {
		display = "block";
	}
	defaultDisplayMap[ nodeName ] = display;

	return display;
}

function showHide( elements, show ) {
	var display, elem,
		values = [],
		index = 0,
		length = elements.length;

	// Determine new display value for elements that need to change
	for ( ; index < length; index++ ) {
		elem = elements[ index ];
		if ( !elem.style ) {
			continue;
		}

		display = elem.style.display;
		if ( show ) {

			// Since we force visibility upon cascade-hidden elements, an immediate (and slow)
			// check is required in this first loop unless we have a nonempty display value (either
			// inline or about-to-be-restored)
			if ( display === "none" ) {
				values[ index ] = dataPriv.get( elem, "display" ) || null;
				if ( !values[ index ] ) {
					elem.style.display = "";
				}
			}
			if ( elem.style.display === "" && isHiddenWithinTree( elem ) ) {
				values[ index ] = getDefaultDisplay( elem );
			}
		} else {
			if ( display !== "none" ) {
				values[ index ] = "none";

				// Remember what we're overwriting
				dataPriv.set( elem, "display", display );
			}
		}
	}

	// Set the display of the elements in a second loop to avoid constant reflow
	for ( index = 0; index < length; index++ ) {
		if ( values[ index ] != null ) {
			elements[ index ].style.display = values[ index ];
		}
	}

	return elements;
}

jQuery.fn.extend( {
	show: function() {
		return showHide( this, true );
	},
	hide: function() {
		return showHide( this );
	},
	toggle: function( state ) {
		if ( typeof state === "boolean" ) {
			return state ? this.show() : this.hide();
		}

		return this.each( function() {
			if ( isHiddenWithinTree( this ) ) {
				jQuery( this ).show();
			} else {
				jQuery( this ).hide();
			}
		} );
	}
} );
var rcheckableType = ( /^(?:checkbox|radio)$/i );

var rtagName = ( /<([a-z][^\/\0>\x20\t\r\n\f]*)/i );

var rscriptType = ( /^$|^module$|\/(?:java|ecma)script/i );



( function() {
	var fragment = document.createDocumentFragment(),
		div = fragment.appendChild( document.createElement( "div" ) ),
		input = document.createElement( "input" );

	// Support: Android 4.0 - 4.3 only
	// Check state lost if the name is set (#11217)
	// Support: Windows Web Apps (WWA)
	// `name` and `type` must use .setAttribute for WWA (#14901)
	input.setAttribute( "type", "radio" );
	input.setAttribute( "checked", "checked" );
	input.setAttribute( "name", "t" );

	div.appendChild( input );

	// Support: Android <=4.1 only
	// Older WebKit doesn't clone checked state correctly in fragments
	support.checkClone = div.cloneNode( true ).cloneNode( true ).lastChild.checked;

	// Support: IE <=11 only
	// Make sure textarea (and checkbox) defaultValue is properly cloned
	div.innerHTML = "<textarea>x</textarea>";
	support.noCloneChecked = !!div.cloneNode( true ).lastChild.defaultValue;

	// Support: IE <=9 only
	// IE <=9 replaces <option> tags with their contents when inserted outside of
	// the select element.
	div.innerHTML = "<option></option>";
	support.option = !!div.lastChild;
} )();


// We have to close these tags to support XHTML (#13200)
var wrapMap = {

	// XHTML parsers do not magically insert elements in the
	// same way that tag soup parsers do. So we cannot shorten
	// this by omitting <tbody> or other required elements.
	thead: [ 1, "<table>", "</table>" ],
	col: [ 2, "<table><colgroup>", "</colgroup></table>" ],
	tr: [ 2, "<table><tbody>", "</tbody></table>" ],
	td: [ 3, "<table><tbody><tr>", "</tr></tbody></table>" ],

	_default: [ 0, "", "" ]
};

wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;
wrapMap.th = wrapMap.td;

// Support: IE <=9 only
if ( !support.option ) {
	wrapMap.optgroup = wrapMap.option = [ 1, "<select multiple='multiple'>", "</select>" ];
}


function getAll( context, tag ) {

	// Support: IE <=9 - 11 only
	// Use typeof to avoid zero-argument method invocation on host objects (#15151)
	var ret;

	if ( typeof context.getElementsByTagName !== "undefined" ) {
		ret = context.getElementsByTagName( tag || "*" );

	} else if ( typeof context.querySelectorAll !== "undefined" ) {
		ret = context.querySelectorAll( tag || "*" );

	} else {
		ret = [];
	}

	if ( tag === undefined || tag && nodeName( context, tag ) ) {
		return jQuery.merge( [ context ], ret );
	}

	return ret;
}


// Mark scripts as having already been evaluated
function setGlobalEval( elems, refElements ) {
	var i = 0,
		l = elems.length;

	for ( ; i < l; i++ ) {
		dataPriv.set(
			elems[ i ],
			"globalEval",
			!refElements || dataPriv.get( refElements[ i ], "globalEval" )
		);
	}
}


var rhtml = /<|&#?\w+;/;

function buildFragment( elems, context, scripts, selection, ignored ) {
	var elem, tmp, tag, wrap, attached, j,
		fragment = context.createDocumentFragment(),
		nodes = [],
		i = 0,
		l = elems.length;

	for ( ; i < l; i++ ) {
		elem = elems[ i ];

		if ( elem || elem === 0 ) {

			// Add nodes directly
			if ( toType( elem ) === "object" ) {

				// Support: Android <=4.0 only, PhantomJS 1 only
				// push.apply(_, arraylike) throws on ancient WebKit
				jQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );

			// Convert non-html into a text node
			} else if ( !rhtml.test( elem ) ) {
				nodes.push( context.createTextNode( elem ) );

			// Convert html into DOM nodes
			} else {
				tmp = tmp || fragment.appendChild( context.createElement( "div" ) );

				// Deserialize a standard representation
				tag = ( rtagName.exec( elem ) || [ "", "" ] )[ 1 ].toLowerCase();
				wrap = wrapMap[ tag ] || wrapMap._default;
				tmp.innerHTML = wrap[ 1 ] + jQuery.htmlPrefilter( elem ) + wrap[ 2 ];

				// Descend through wrappers to the right content
				j = wrap[ 0 ];
				while ( j-- ) {
					tmp = tmp.lastChild;
				}

				// Support: Android <=4.0 only, PhantomJS 1 only
				// push.apply(_, arraylike) throws on ancient WebKit
				jQuery.merge( nodes, tmp.childNodes );

				// Remember the top-level container
				tmp = fragment.firstChild;

				// Ensure the created nodes are orphaned (#12392)
				tmp.textContent = "";
			}
		}
	}

	// Remove wrapper from fragment
	fragment.textContent = "";

	i = 0;
	while ( ( elem = nodes[ i++ ] ) ) {

		// Skip elements already in the context collection (trac-4087)
		if ( selection && jQuery.inArray( elem, selection ) > -1 ) {
			if ( ignored ) {
				ignored.push( elem );
			}
			continue;
		}

		attached = isAttached( elem );

		// Append to fragment
		tmp = getAll( fragment.appendChild( elem ), "script" );

		// Preserve script evaluation history
		if ( attached ) {
			setGlobalEval( tmp );
		}

		// Capture executables
		if ( scripts ) {
			j = 0;
			while ( ( elem = tmp[ j++ ] ) ) {
				if ( rscriptType.test( elem.type || "" ) ) {
					scripts.push( elem );
				}
			}
		}
	}

	return fragment;
}


var rtypenamespace = /^([^.]*)(?:\.(.+)|)/;

function returnTrue() {
	return true;
}

function returnFalse() {
	return false;
}

// Support: IE <=9 - 11+
// focus() and blur() are asynchronous, except when they are no-op.
// So expect focus to be synchronous when the element is already active,
// and blur to be synchronous when the element is not already active.
// (focus and blur are always synchronous in other supported browsers,
// this just defines when we can count on it).
function expectSync( elem, type ) {
	return ( elem === safeActiveElement() ) === ( type === "focus" );
}

// Support: IE <=9 only
// Accessing document.activeElement can throw unexpectedly
// https://bugs.jquery.com/ticket/13393
function safeActiveElement() {
	try {
		return document.activeElement;
	} catch ( err ) { }
}

function on( elem, types, selector, data, fn, one ) {
	var origFn, type;

	// Types can be a map of types/handlers
	if ( typeof types === "object" ) {

		// ( types-Object, selector, data )
		if ( typeof selector !== "string" ) {

			// ( types-Object, data )
			data = data || selector;
			selector = undefined;
		}
		for ( type in types ) {
			on( elem, type, selector, data, types[ type ], one );
		}
		return elem;
	}

	if ( data == null && fn == null ) {

		// ( types, fn )
		fn = selector;
		data = selector = undefined;
	} else if ( fn == null ) {
		if ( typeof selector === "string" ) {

			// ( types, selector, fn )
			fn = data;
			data = undefined;
		} else {

			// ( types, data, fn )
			fn = data;
			data = selector;
			selector = undefined;
		}
	}
	if ( fn === false ) {
		fn = returnFalse;
	} else if ( !fn ) {
		return elem;
	}

	if ( one === 1 ) {
		origFn = fn;
		fn = function( event ) {

			// Can use an empty set, since event contains the info
			jQuery().off( event );
			return origFn.apply( this, arguments );
		};

		// Use same guid so caller can remove using origFn
		fn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );
	}
	return elem.each( function() {
		jQuery.event.add( this, types, fn, data, selector );
	} );
}

/*
 * Helper functions for managing events -- not part of the public interface.
 * Props to Dean Edwards' addEvent library for many of the ideas.
 */
jQuery.event = {

	global: {},

	add: function( elem, types, handler, data, selector ) {

		var handleObjIn, eventHandle, tmp,
			events, t, handleObj,
			special, handlers, type, namespaces, origType,
			elemData = dataPriv.get( elem );

		// Only attach events to objects that accept data
		if ( !acceptData( elem ) ) {
			return;
		}

		// Caller can pass in an object of custom data in lieu of the handler
		if ( handler.handler ) {
			handleObjIn = handler;
			handler = handleObjIn.handler;
			selector = handleObjIn.selector;
		}

		// Ensure that invalid selectors throw exceptions at attach time
		// Evaluate against documentElement in case elem is a non-element node (e.g., document)
		if ( selector ) {
			jQuery.find.matchesSelector( documentElement, selector );
		}

		// Make sure that the handler has a unique ID, used to find/remove it later
		if ( !handler.guid ) {
			handler.guid = jQuery.guid++;
		}

		// Init the element's event structure and main handler, if this is the first
		if ( !( events = elemData.events ) ) {
			events = elemData.events = Object.create( null );
		}
		if ( !( eventHandle = elemData.handle ) ) {
			eventHandle = elemData.handle = function( e ) {

				// Discard the second event of a jQuery.event.trigger() and
				// when an event is called after a page has unloaded
				return typeof jQuery !== "undefined" && jQuery.event.triggered !== e.type ?
					jQuery.event.dispatch.apply( elem, arguments ) : undefined;
			};
		}

		// Handle multiple events separated by a space
		types = ( types || "" ).match( rnothtmlwhite ) || [ "" ];
		t = types.length;
		while ( t-- ) {
			tmp = rtypenamespace.exec( types[ t ] ) || [];
			type = origType = tmp[ 1 ];
			namespaces = ( tmp[ 2 ] || "" ).split( "." ).sort();

			// There *must* be a type, no attaching namespace-only handlers
			if ( !type ) {
				continue;
			}

			// If event changes its type, use the special event handlers for the changed type
			special = jQuery.event.special[ type ] || {};

			// If selector defined, determine special event api type, otherwise given type
			type = ( selector ? special.delegateType : special.bindType ) || type;

			// Update special based on newly reset type
			special = jQuery.event.special[ type ] || {};

			// handleObj is passed to all event handlers
			handleObj = jQuery.extend( {
				type: type,
				origType: origType,
				data: data,
				handler: handler,
				guid: handler.guid,
				selector: selector,
				needsContext: selector && jQuery.expr.match.needsContext.test( selector ),
				namespace: namespaces.join( "." )
			}, handleObjIn );

			// Init the event handler queue if we're the first
			if ( !( handlers = events[ type ] ) ) {
				handlers = events[ type ] = [];
				handlers.delegateCount = 0;

				// Only use addEventListener if the special events handler returns false
				if ( !special.setup ||
					special.setup.call( elem, data, namespaces, eventHandle ) === false ) {

					if ( elem.addEventListener ) {
						elem.addEventListener( type, eventHandle );
					}
				}
			}

			if ( special.add ) {
				special.add.call( elem, handleObj );

				if ( !handleObj.handler.guid ) {
					handleObj.handler.guid = handler.guid;
				}
			}

			// Add to the element's handler list, delegates in front
			if ( selector ) {
				handlers.splice( handlers.delegateCount++, 0, handleObj );
			} else {
				handlers.push( handleObj );
			}

			// Keep track of which events have ever been used, for event optimization
			jQuery.event.global[ type ] = true;
		}

	},

	// Detach an event or set of events from an element
	remove: function( elem, types, handler, selector, mappedTypes ) {

		var j, origCount, tmp,
			events, t, handleObj,
			special, handlers, type, namespaces, origType,
			elemData = dataPriv.hasData( elem ) && dataPriv.get( elem );

		if ( !elemData || !( events = elemData.events ) ) {
			return;
		}

		// Once for each type.namespace in types; type may be omitted
		types = ( types || "" ).match( rnothtmlwhite ) || [ "" ];
		t = types.length;
		while ( t-- ) {
			tmp = rtypenamespace.exec( types[ t ] ) || [];
			type = origType = tmp[ 1 ];
			namespaces = ( tmp[ 2 ] || "" ).split( "." ).sort();

			// Unbind all events (on this namespace, if provided) for the element
			if ( !type ) {
				for ( type in events ) {
					jQuery.event.remove( elem, type + types[ t ], handler, selector, true );
				}
				continue;
			}

			special = jQuery.event.special[ type ] || {};
			type = ( selector ? special.delegateType : special.bindType ) || type;
			handlers = events[ type ] || [];
			tmp = tmp[ 2 ] &&
				new RegExp( "(^|\\.)" + namespaces.join( "\\.(?:.*\\.|)" ) + "(\\.|$)" );

			// Remove matching events
			origCount = j = handlers.length;
			while ( j-- ) {
				handleObj = handlers[ j ];

				if ( ( mappedTypes || origType === handleObj.origType ) &&
					( !handler || handler.guid === handleObj.guid ) &&
					( !tmp || tmp.test( handleObj.namespace ) ) &&
					( !selector || selector === handleObj.selector ||
						selector === "**" && handleObj.selector ) ) {
					handlers.splice( j, 1 );

					if ( handleObj.selector ) {
						handlers.delegateCount--;
					}
					if ( special.remove ) {
						special.remove.call( elem, handleObj );
					}
				}
			}

			// Remove generic event handler if we removed something and no more handlers exist
			// (avoids potential for endless recursion during removal of special event handlers)
			if ( origCount && !handlers.length ) {
				if ( !special.teardown ||
					special.teardown.call( elem, namespaces, elemData.handle ) === false ) {

					jQuery.removeEvent( elem, type, elemData.handle );
				}

				delete events[ type ];
			}
		}

		// Remove data and the expando if it's no longer used
		if ( jQuery.isEmptyObject( events ) ) {
			dataPriv.remove( elem, "handle events" );
		}
	},

	dispatch: function( nativeEvent ) {

		var i, j, ret, matched, handleObj, handlerQueue,
			args = new Array( arguments.length ),

			// Make a writable jQuery.Event from the native event object
			event = jQuery.event.fix( nativeEvent ),

			handlers = (
				dataPriv.get( this, "events" ) || Object.create( null )
			)[ event.type ] || [],
			special = jQuery.event.special[ event.type ] || {};

		// Use the fix-ed jQuery.Event rather than the (read-only) native event
		args[ 0 ] = event;

		for ( i = 1; i < arguments.length; i++ ) {
			args[ i ] = arguments[ i ];
		}

		event.delegateTarget = this;

		// Call the preDispatch hook for the mapped type, and let it bail if desired
		if ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {
			return;
		}

		// Determine handlers
		handlerQueue = jQuery.event.handlers.call( this, event, handlers );

		// Run delegates first; they may want to stop propagation beneath us
		i = 0;
		while ( ( matched = handlerQueue[ i++ ] ) && !event.isPropagationStopped() ) {
			event.currentTarget = matched.elem;

			j = 0;
			while ( ( handleObj = matched.handlers[ j++ ] ) &&
				!event.isImmediatePropagationStopped() ) {

				// If the event is namespaced, then each handler is only invoked if it is
				// specially universal or its namespaces are a superset of the event's.
				if ( !event.rnamespace || handleObj.namespace === false ||
					event.rnamespace.test( handleObj.namespace ) ) {

					event.handleObj = handleObj;
					event.data = handleObj.data;

					ret = ( ( jQuery.event.special[ handleObj.origType ] || {} ).handle ||
						handleObj.handler ).apply( matched.elem, args );

					if ( ret !== undefined ) {
						if ( ( event.result = ret ) === false ) {
							event.preventDefault();
							event.stopPropagation();
						}
					}
				}
			}
		}

		// Call the postDispatch hook for the mapped type
		if ( special.postDispatch ) {
			special.postDispatch.call( this, event );
		}

		return event.result;
	},

	handlers: function( event, handlers ) {
		var i, handleObj, sel, matchedHandlers, matchedSelectors,
			handlerQueue = [],
			delegateCount = handlers.delegateCount,
			cur = event.target;

		// Find delegate handlers
		if ( delegateCount &&

			// Support: IE <=9
			// Black-hole SVG <use> instance trees (trac-13180)
			cur.nodeType &&

			// Support: Firefox <=42
			// Suppress spec-violating clicks indicating a non-primary pointer button (trac-3861)
			// https://www.w3.org/TR/DOM-Level-3-Events/#event-type-click
			// Support: IE 11 only
			// ...but not arrow key "clicks" of radio inputs, which can have `button` -1 (gh-2343)
			!( event.type === "click" && event.button >= 1 ) ) {

			for ( ; cur !== this; cur = cur.parentNode || this ) {

				// Don't check non-elements (#13208)
				// Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)
				if ( cur.nodeType === 1 && !( event.type === "click" && cur.disabled === true ) ) {
					matchedHandlers = [];
					matchedSelectors = {};
					for ( i = 0; i < delegateCount; i++ ) {
						handleObj = handlers[ i ];

						// Don't conflict with Object.prototype properties (#13203)
						sel = handleObj.selector + " ";

						if ( matchedSelectors[ sel ] === undefined ) {
							matchedSelectors[ sel ] = handleObj.needsContext ?
								jQuery( sel, this ).index( cur ) > -1 :
								jQuery.find( sel, this, null, [ cur ] ).length;
						}
						if ( matchedSelectors[ sel ] ) {
							matchedHandlers.push( handleObj );
						}
					}
					if ( matchedHandlers.length ) {
						handlerQueue.push( { elem: cur, handlers: matchedHandlers } );
					}
				}
			}
		}

		// Add the remaining (directly-bound) handlers
		cur = this;
		if ( delegateCount < handlers.length ) {
			handlerQueue.push( { elem: cur, handlers: handlers.slice( delegateCount ) } );
		}

		return handlerQueue;
	},

	addProp: function( name, hook ) {
		Object.defineProperty( jQuery.Event.prototype, name, {
			enumerable: true,
			configurable: true,

			get: isFunction( hook ) ?
				function() {
					if ( this.originalEvent ) {
						return hook( this.originalEvent );
					}
				} :
				function() {
					if ( this.originalEvent ) {
						return this.originalEvent[ name ];
					}
				},

			set: function( value ) {
				Object.defineProperty( this, name, {
					enumerable: true,
					configurable: true,
					writable: true,
					value: value
				} );
			}
		} );
	},

	fix: function( originalEvent ) {
		return originalEvent[ jQuery.expando ] ?
			originalEvent :
			new jQuery.Event( originalEvent );
	},

	special: {
		load: {

			// Prevent triggered image.load events from bubbling to window.load
			noBubble: true
		},
		click: {

			// Utilize native event to ensure correct state for checkable inputs
			setup: function( data ) {

				// For mutual compressibility with _default, replace `this` access with a local var.
				// `|| data` is dead code meant only to preserve the variable through minification.
				var el = this || data;

				// Claim the first handler
				if ( rcheckableType.test( el.type ) &&
					el.click && nodeName( el, "input" ) ) {

					// dataPriv.set( el, "click", ... )
					leverageNative( el, "click", returnTrue );
				}

				// Return false to allow normal processing in the caller
				return false;
			},
			trigger: function( data ) {

				// For mutual compressibility with _default, replace `this` access with a local var.
				// `|| data` is dead code meant only to preserve the variable through minification.
				var el = this || data;

				// Force setup before triggering a click
				if ( rcheckableType.test( el.type ) &&
					el.click && nodeName( el, "input" ) ) {

					leverageNative( el, "click" );
				}

				// Return non-false to allow normal event-path propagation
				return true;
			},

			// For cross-browser consistency, suppress native .click() on links
			// Also prevent it if we're currently inside a leveraged native-event stack
			_default: function( event ) {
				var target = event.target;
				return rcheckableType.test( target.type ) &&
					target.click && nodeName( target, "input" ) &&
					dataPriv.get( target, "click" ) ||
					nodeName( target, "a" );
			}
		},

		beforeunload: {
			postDispatch: function( event ) {

				// Support: Firefox 20+
				// Firefox doesn't alert if the returnValue field is not set.
				if ( event.result !== undefined && event.originalEvent ) {
					event.originalEvent.returnValue = event.result;
				}
			}
		}
	}
};

// Ensure the presence of an event listener that handles manually-triggered
// synthetic events by interrupting progress until reinvoked in response to
// *native* events that it fires directly, ensuring that state changes have
// already occurred before other listeners are invoked.
function leverageNative( el, type, expectSync ) {

	// Missing expectSync indicates a trigger call, which must force setup through jQuery.event.add
	if ( !expectSync ) {
		if ( dataPriv.get( el, type ) === undefined ) {
			jQuery.event.add( el, type, returnTrue );
		}
		return;
	}

	// Register the controller as a special universal handler for all event namespaces
	dataPriv.set( el, type, false );
	jQuery.event.add( el, type, {
		namespace: false,
		handler: function( event ) {
			var notAsync, result,
				saved = dataPriv.get( this, type );

			if ( ( event.isTrigger & 1 ) && this[ type ] ) {

				// Interrupt processing of the outer synthetic .trigger()ed event
				// Saved data should be false in such cases, but might be a leftover capture object
				// from an async native handler (gh-4350)
				if ( !saved.length ) {

					// Store arguments for use when handling the inner native event
					// There will always be at least one argument (an event object), so this array
					// will not be confused with a leftover capture object.
					saved = slice.call( arguments );
					dataPriv.set( this, type, saved );

					// Trigger the native event and capture its result
					// Support: IE <=9 - 11+
					// focus() and blur() are asynchronous
					notAsync = expectSync( this, type );
					this[ type ]();
					result = dataPriv.get( this, type );
					if ( saved !== result || notAsync ) {
						dataPriv.set( this, type, false );
					} else {
						result = {};
					}
					if ( saved !== result ) {

						// Cancel the outer synthetic event
						event.stopImmediatePropagation();
						event.preventDefault();

						// Support: Chrome 86+
						// In Chrome, if an element having a focusout handler is blurred by
						// clicking outside of it, it invokes the handler synchronously. If
						// that handler calls `.remove()` on the element, the data is cleared,
						// leaving `result` undefined. We need to guard against this.
						return result && result.value;
					}

				// If this is an inner synthetic event for an event with a bubbling surrogate
				// (focus or blur), assume that the surrogate already propagated from triggering the
				// native event and prevent that from happening again here.
				// This technically gets the ordering wrong w.r.t. to `.trigger()` (in which the
				// bubbling surrogate propagates *after* the non-bubbling base), but that seems
				// less bad than duplication.
				} else if ( ( jQuery.event.special[ type ] || {} ).delegateType ) {
					event.stopPropagation();
				}

			// If this is a native event triggered above, everything is now in order
			// Fire an inner synthetic event with the original arguments
			} else if ( saved.length ) {

				// ...and capture the result
				dataPriv.set( this, type, {
					value: jQuery.event.trigger(

						// Support: IE <=9 - 11+
						// Extend with the prototype to reset the above stopImmediatePropagation()
						jQuery.extend( saved[ 0 ], jQuery.Event.prototype ),
						saved.slice( 1 ),
						this
					)
				} );

				// Abort handling of the native event
				event.stopImmediatePropagation();
			}
		}
	} );
}

jQuery.removeEvent = function( elem, type, handle ) {

	// This "if" is needed for plain objects
	if ( elem.removeEventListener ) {
		elem.removeEventListener( type, handle );
	}
};

jQuery.Event = function( src, props ) {

	// Allow instantiation without the 'new' keyword
	if ( !( this instanceof jQuery.Event ) ) {
		return new jQuery.Event( src, props );
	}

	// Event object
	if ( src && src.type ) {
		this.originalEvent = src;
		this.type = src.type;

		// Events bubbling up the document may have been marked as prevented
		// by a handler lower down the tree; reflect the correct value.
		this.isDefaultPrevented = src.defaultPrevented ||
				src.defaultPrevented === undefined &&

				// Support: Android <=2.3 only
				src.returnValue === false ?
			returnTrue :
			returnFalse;

		// Create target properties
		// Support: Safari <=6 - 7 only
		// Target should not be a text node (#504, #13143)
		this.target = ( src.target && src.target.nodeType === 3 ) ?
			src.target.parentNode :
			src.target;

		this.currentTarget = src.currentTarget;
		this.relatedTarget = src.relatedTarget;

	// Event type
	} else {
		this.type = src;
	}

	// Put explicitly provided properties onto the event object
	if ( props ) {
		jQuery.extend( this, props );
	}

	// Create a timestamp if incoming event doesn't have one
	this.timeStamp = src && src.timeStamp || Date.now();

	// Mark it as fixed
	this[ jQuery.expando ] = true;
};

// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding
// https://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html
jQuery.Event.prototype = {
	constructor: jQuery.Event,
	isDefaultPrevented: returnFalse,
	isPropagationStopped: returnFalse,
	isImmediatePropagationStopped: returnFalse,
	isSimulated: false,

	preventDefault: function() {
		var e = this.originalEvent;

		this.isDefaultPrevented = returnTrue;

		if ( e && !this.isSimulated ) {
			e.preventDefault();
		}
	},
	stopPropagation: function() {
		var e = this.originalEvent;

		this.isPropagationStopped = returnTrue;

		if ( e && !this.isSimulated ) {
			e.stopPropagation();
		}
	},
	stopImmediatePropagation: function() {
		var e = this.originalEvent;

		this.isImmediatePropagationStopped = returnTrue;

		if ( e && !this.isSimulated ) {
			e.stopImmediatePropagation();
		}

		this.stopPropagation();
	}
};

// Includes all common event props including KeyEvent and MouseEvent specific props
jQuery.each( {
	altKey: true,
	bubbles: true,
	cancelable: true,
	changedTouches: true,
	ctrlKey: true,
	detail: true,
	eventPhase: true,
	metaKey: true,
	pageX: true,
	pageY: true,
	shiftKey: true,
	view: true,
	"char": true,
	code: true,
	charCode: true,
	key: true,
	keyCode: true,
	button: true,
	buttons: true,
	clientX: true,
	clientY: true,
	offsetX: true,
	offsetY: true,
	pointerId: true,
	pointerType: true,
	screenX: true,
	screenY: true,
	targetTouches: true,
	toElement: true,
	touches: true,
	which: true
}, jQuery.event.addProp );

jQuery.each( { focus: "focusin", blur: "focusout" }, function( type, delegateType ) {
	jQuery.event.special[ type ] = {

		// Utilize native event if possible so blur/focus sequence is correct
		setup: function() {

			// Claim the first handler
			// dataPriv.set( this, "focus", ... )
			// dataPriv.set( this, "blur", ... )
			leverageNative( this, type, expectSync );

			// Return false to allow normal processing in the caller
			return false;
		},
		trigger: function() {

			// Force setup before trigger
			leverageNative( this, type );

			// Return non-false to allow normal event-path propagation
			return true;
		},

		// Suppress native focus or blur as it's already being fired
		// in leverageNative.
		_default: function() {
			return true;
		},

		delegateType: delegateType
	};
} );

// Create mouseenter/leave events using mouseover/out and event-time checks
// so that event delegation works in jQuery.
// Do the same for pointerenter/pointerleave and pointerover/pointerout
//
// Support: Safari 7 only
// Safari sends mouseenter too often; see:
// https://bugs.chromium.org/p/chromium/issues/detail?id=470258
// for the description of the bug (it existed in older Chrome versions as well).
jQuery.each( {
	mouseenter: "mouseover",
	mouseleave: "mouseout",
	pointerenter: "pointerover",
	pointerleave: "pointerout"
}, function( orig, fix ) {
	jQuery.event.special[ orig ] = {
		delegateType: fix,
		bindType: fix,

		handle: function( event ) {
			var ret,
				target = this,
				related = event.relatedTarget,
				handleObj = event.handleObj;

			// For mouseenter/leave call the handler if related is outside the target.
			// NB: No relatedTarget if the mouse left/entered the browser window
			if ( !related || ( related !== target && !jQuery.contains( target, related ) ) ) {
				event.type = handleObj.origType;
				ret = handleObj.handler.apply( this, arguments );
				event.type = fix;
			}
			return ret;
		}
	};
} );

jQuery.fn.extend( {

	on: function( types, selector, data, fn ) {
		return on( this, types, selector, data, fn );
	},
	one: function( types, selector, data, fn ) {
		return on( this, types, selector, data, fn, 1 );
	},
	off: function( types, selector, fn ) {
		var handleObj, type;
		if ( types && types.preventDefault && types.handleObj ) {

			// ( event )  dispatched jQuery.Event
			handleObj = types.handleObj;
			jQuery( types.delegateTarget ).off(
				handleObj.namespace ?
					handleObj.origType + "." + handleObj.namespace :
					handleObj.origType,
				handleObj.selector,
				handleObj.handler
			);
			return this;
		}
		if ( typeof types === "object" ) {

			// ( types-object [, selector] )
			for ( type in types ) {
				this.off( type, selector, types[ type ] );
			}
			return this;
		}
		if ( selector === false || typeof selector === "function" ) {

			// ( types [, fn] )
			fn = selector;
			selector = undefined;
		}
		if ( fn === false ) {
			fn = returnFalse;
		}
		return this.each( function() {
			jQuery.event.remove( this, types, fn, selector );
		} );
	}
} );


var

	// Support: IE <=10 - 11, Edge 12 - 13 only
	// In IE/Edge using regex groups here causes severe slowdowns.
	// See https://connect.microsoft.com/IE/feedback/details/1736512/
	rnoInnerhtml = /<script|<style|<link/i,

	// checked="checked" or checked
	rchecked = /checked\s*(?:[^=]|=\s*.checked.)/i,
	rcleanScript = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;

// Prefer a tbody over its parent table for containing new rows
function manipulationTarget( elem, content ) {
	if ( nodeName( elem, "table" ) &&
		nodeName( content.nodeType !== 11 ? content : content.firstChild, "tr" ) ) {

		return jQuery( elem ).children( "tbody" )[ 0 ] || elem;
	}

	return elem;
}

// Replace/restore the type attribute of script elements for safe DOM manipulation
function disableScript( elem ) {
	elem.type = ( elem.getAttribute( "type" ) !== null ) + "/" + elem.type;
	return elem;
}
function restoreScript( elem ) {
	if ( ( elem.type || "" ).slice( 0, 5 ) === "true/" ) {
		elem.type = elem.type.slice( 5 );
	} else {
		elem.removeAttribute( "type" );
	}

	return elem;
}

function cloneCopyEvent( src, dest ) {
	var i, l, type, pdataOld, udataOld, udataCur, events;

	if ( dest.nodeType !== 1 ) {
		return;
	}

	// 1. Copy private data: events, handlers, etc.
	if ( dataPriv.hasData( src ) ) {
		pdataOld = dataPriv.get( src );
		events = pdataOld.events;

		if ( events ) {
			dataPriv.remove( dest, "handle events" );

			for ( type in events ) {
				for ( i = 0, l = events[ type ].length; i < l; i++ ) {
					jQuery.event.add( dest, type, events[ type ][ i ] );
				}
			}
		}
	}

	// 2. Copy user data
	if ( dataUser.hasData( src ) ) {
		udataOld = dataUser.access( src );
		udataCur = jQuery.extend( {}, udataOld );

		dataUser.set( dest, udataCur );
	}
}

// Fix IE bugs, see support tests
function fixInput( src, dest ) {
	var nodeName = dest.nodeName.toLowerCase();

	// Fails to persist the checked state of a cloned checkbox or radio button.
	if ( nodeName === "input" && rcheckableType.test( src.type ) ) {
		dest.checked = src.checked;

	// Fails to return the selected option to the default selected state when cloning options
	} else if ( nodeName === "input" || nodeName === "textarea" ) {
		dest.defaultValue = src.defaultValue;
	}
}

function domManip( collection, args, callback, ignored ) {

	// Flatten any nested arrays
	args = flat( args );

	var fragment, first, scripts, hasScripts, node, doc,
		i = 0,
		l = collection.length,
		iNoClone = l - 1,
		value = args[ 0 ],
		valueIsFunction = isFunction( value );

	// We can't cloneNode fragments that contain checked, in WebKit
	if ( valueIsFunction ||
			( l > 1 && typeof value === "string" &&
				!support.checkClone && rchecked.test( value ) ) ) {
		return collection.each( function( index ) {
			var self = collection.eq( index );
			if ( valueIsFunction ) {
				args[ 0 ] = value.call( this, index, self.html() );
			}
			domManip( self, args, callback, ignored );
		} );
	}

	if ( l ) {
		fragment = buildFragment( args, collection[ 0 ].ownerDocument, false, collection, ignored );
		first = fragment.firstChild;

		if ( fragment.childNodes.length === 1 ) {
			fragment = first;
		}

		// Require either new content or an interest in ignored elements to invoke the callback
		if ( first || ignored ) {
			scripts = jQuery.map( getAll( fragment, "script" ), disableScript );
			hasScripts = scripts.length;

			// Use the original fragment for the last item
			// instead of the first because it can end up
			// being emptied incorrectly in certain situations (#8070).
			for ( ; i < l; i++ ) {
				node = fragment;

				if ( i !== iNoClone ) {
					node = jQuery.clone( node, true, true );

					// Keep references to cloned scripts for later restoration
					if ( hasScripts ) {

						// Support: Android <=4.0 only, PhantomJS 1 only
						// push.apply(_, arraylike) throws on ancient WebKit
						jQuery.merge( scripts, getAll( node, "script" ) );
					}
				}

				callback.call( collection[ i ], node, i );
			}

			if ( hasScripts ) {
				doc = scripts[ scripts.length - 1 ].ownerDocument;

				// Reenable scripts
				jQuery.map( scripts, restoreScript );

				// Evaluate executable scripts on first document insertion
				for ( i = 0; i < hasScripts; i++ ) {
					node = scripts[ i ];
					if ( rscriptType.test( node.type || "" ) &&
						!dataPriv.access( node, "globalEval" ) &&
						jQuery.contains( doc, node ) ) {

						if ( node.src && ( node.type || "" ).toLowerCase()  !== "module" ) {

							// Optional AJAX dependency, but won't run scripts if not present
							if ( jQuery._evalUrl && !node.noModule ) {
								jQuery._evalUrl( node.src, {
									nonce: node.nonce || node.getAttribute( "nonce" )
								}, doc );
							}
						} else {
							DOMEval( node.textContent.replace( rcleanScript, "" ), node, doc );
						}
					}
				}
			}
		}
	}

	return collection;
}

function remove( elem, selector, keepData ) {
	var node,
		nodes = selector ? jQuery.filter( selector, elem ) : elem,
		i = 0;

	for ( ; ( node = nodes[ i ] ) != null; i++ ) {
		if ( !keepData && node.nodeType === 1 ) {
			jQuery.cleanData( getAll( node ) );
		}

		if ( node.parentNode ) {
			if ( keepData && isAttached( node ) ) {
				setGlobalEval( getAll( node, "script" ) );
			}
			node.parentNode.removeChild( node );
		}
	}

	return elem;
}

jQuery.extend( {
	htmlPrefilter: function( html ) {
		return html;
	},

	clone: function( elem, dataAndEvents, deepDataAndEvents ) {
		var i, l, srcElements, destElements,
			clone = elem.cloneNode( true ),
			inPage = isAttached( elem );

		// Fix IE cloning issues
		if ( !support.noCloneChecked && ( elem.nodeType === 1 || elem.nodeType === 11 ) &&
				!jQuery.isXMLDoc( elem ) ) {

			// We eschew Sizzle here for performance reasons: https://jsperf.com/getall-vs-sizzle/2
			destElements = getAll( clone );
			srcElements = getAll( elem );

			for ( i = 0, l = srcElements.length; i < l; i++ ) {
				fixInput( srcElements[ i ], destElements[ i ] );
			}
		}

		// Copy the events from the original to the clone
		if ( dataAndEvents ) {
			if ( deepDataAndEvents ) {
				srcElements = srcElements || getAll( elem );
				destElements = destElements || getAll( clone );

				for ( i = 0, l = srcElements.length; i < l; i++ ) {
					cloneCopyEvent( srcElements[ i ], destElements[ i ] );
				}
			} else {
				cloneCopyEvent( elem, clone );
			}
		}

		// Preserve script evaluation history
		destElements = getAll( clone, "script" );
		if ( destElements.length > 0 ) {
			setGlobalEval( destElements, !inPage && getAll( elem, "script" ) );
		}

		// Return the cloned set
		return clone;
	},

	cleanData: function( elems ) {
		var data, elem, type,
			special = jQuery.event.special,
			i = 0;

		for ( ; ( elem = elems[ i ] ) !== undefined; i++ ) {
			if ( acceptData( elem ) ) {
				if ( ( data = elem[ dataPriv.expando ] ) ) {
					if ( data.events ) {
						for ( type in data.events ) {
							if ( special[ type ] ) {
								jQuery.event.remove( elem, type );

							// This is a shortcut to avoid jQuery.event.remove's overhead
							} else {
								jQuery.removeEvent( elem, type, data.handle );
							}
						}
					}

					// Support: Chrome <=35 - 45+
					// Assign undefined instead of using delete, see Data#remove
					elem[ dataPriv.expando ] = undefined;
				}
				if ( elem[ dataUser.expando ] ) {

					// Support: Chrome <=35 - 45+
					// Assign undefined instead of using delete, see Data#remove
					elem[ dataUser.expando ] = undefined;
				}
			}
		}
	}
} );

jQuery.fn.extend( {
	detach: function( selector ) {
		return remove( this, selector, true );
	},

	remove: function( selector ) {
		return remove( this, selector );
	},

	text: function( value ) {
		return access( this, function( value ) {
			return value === undefined ?
				jQuery.text( this ) :
				this.empty().each( function() {
					if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
						this.textContent = value;
					}
				} );
		}, null, value, arguments.length );
	},

	append: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
				var target = manipulationTarget( this, elem );
				target.appendChild( elem );
			}
		} );
	},

	prepend: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
				var target = manipulationTarget( this, elem );
				target.insertBefore( elem, target.firstChild );
			}
		} );
	},

	before: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.parentNode ) {
				this.parentNode.insertBefore( elem, this );
			}
		} );
	},

	after: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.parentNode ) {
				this.parentNode.insertBefore( elem, this.nextSibling );
			}
		} );
	},

	empty: function() {
		var elem,
			i = 0;

		for ( ; ( elem = this[ i ] ) != null; i++ ) {
			if ( elem.nodeType === 1 ) {

				// Prevent memory leaks
				jQuery.cleanData( getAll( elem, false ) );

				// Remove any remaining nodes
				elem.textContent = "";
			}
		}

		return this;
	},

	clone: function( dataAndEvents, deepDataAndEvents ) {
		dataAndEvents = dataAndEvents == null ? false : dataAndEvents;
		deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;

		return this.map( function() {
			return jQuery.clone( this, dataAndEvents, deepDataAndEvents );
		} );
	},

	html: function( value ) {
		return access( this, function( value ) {
			var elem = this[ 0 ] || {},
				i = 0,
				l = this.length;

			if ( value === undefined && elem.nodeType === 1 ) {
				return elem.innerHTML;
			}

			// See if we can take a shortcut and just use innerHTML
			if ( typeof value === "string" && !rnoInnerhtml.test( value ) &&
				!wrapMap[ ( rtagName.exec( value ) || [ "", "" ] )[ 1 ].toLowerCase() ] ) {

				value = jQuery.htmlPrefilter( value );

				try {
					for ( ; i < l; i++ ) {
						elem = this[ i ] || {};

						// Remove element nodes and prevent memory leaks
						if ( elem.nodeType === 1 ) {
							jQuery.cleanData( getAll( elem, false ) );
							elem.innerHTML = value;
						}
					}

					elem = 0;

				// If using innerHTML throws an exception, use the fallback method
				} catch ( e ) {}
			}

			if ( elem ) {
				this.empty().append( value );
			}
		}, null, value, arguments.length );
	},

	replaceWith: function() {
		var ignored = [];

		// Make the changes, replacing each non-ignored context element with the new content
		return domManip( this, arguments, function( elem ) {
			var parent = this.parentNode;

			if ( jQuery.inArray( this, ignored ) < 0 ) {
				jQuery.cleanData( getAll( this ) );
				if ( parent ) {
					parent.replaceChild( elem, this );
				}
			}

		// Force callback invocation
		}, ignored );
	}
} );

jQuery.each( {
	appendTo: "append",
	prependTo: "prepend",
	insertBefore: "before",
	insertAfter: "after",
	replaceAll: "replaceWith"
}, function( name, original ) {
	jQuery.fn[ name ] = function( selector ) {
		var elems,
			ret = [],
			insert = jQuery( selector ),
			last = insert.length - 1,
			i = 0;

		for ( ; i <= last; i++ ) {
			elems = i === last ? this : this.clone( true );
			jQuery( insert[ i ] )[ original ]( elems );

			// Support: Android <=4.0 only, PhantomJS 1 only
			// .get() because push.apply(_, arraylike) throws on ancient WebKit
			push.apply( ret, elems.get() );
		}

		return this.pushStack( ret );
	};
} );
var rnumnonpx = new RegExp( "^(" + pnum + ")(?!px)[a-z%]+$", "i" );

var getStyles = function( elem ) {

		// Support: IE <=11 only, Firefox <=30 (#15098, #14150)
		// IE throws on elements created in popups
		// FF meanwhile throws on frame elements through "defaultView.getComputedStyle"
		var view = elem.ownerDocument.defaultView;

		if ( !view || !view.opener ) {
			view = window;
		}

		return view.getComputedStyle( elem );
	};

var swap = function( elem, options, callback ) {
	var ret, name,
		old = {};

	// Remember the old values, and insert the new ones
	for ( name in options ) {
		old[ name ] = elem.style[ name ];
		elem.style[ name ] = options[ name ];
	}

	ret = callback.call( elem );

	// Revert the old values
	for ( name in options ) {
		elem.style[ name ] = old[ name ];
	}

	return ret;
};


var rboxStyle = new RegExp( cssExpand.join( "|" ), "i" );



( function() {

	// Executing both pixelPosition & boxSizingReliable tests require only one layout
	// so they're executed at the same time to save the second computation.
	function computeStyleTests() {

		// This is a singleton, we need to execute it only once
		if ( !div ) {
			return;
		}

		container.style.cssText = "position:absolute;left:-11111px;width:60px;" +
			"margin-top:1px;padding:0;border:0";
		div.style.cssText =
			"position:relative;display:block;box-sizing:border-box;overflow:scroll;" +
			"margin:auto;border:1px;padding:1px;" +
			"width:60%;top:1%";
		documentElement.appendChild( container ).appendChild( div );

		var divStyle = window.getComputedStyle( div );
		pixelPositionVal = divStyle.top !== "1%";

		// Support: Android 4.0 - 4.3 only, Firefox <=3 - 44
		reliableMarginLeftVal = roundPixelMeasures( divStyle.marginLeft ) === 12;

		// Support: Android 4.0 - 4.3 only, Safari <=9.1 - 10.1, iOS <=7.0 - 9.3
		// Some styles come back with percentage values, even though they shouldn't
		div.style.right = "60%";
		pixelBoxStylesVal = roundPixelMeasures( divStyle.right ) === 36;

		// Support: IE 9 - 11 only
		// Detect misreporting of content dimensions for box-sizing:border-box elements
		boxSizingReliableVal = roundPixelMeasures( divStyle.width ) === 36;

		// Support: IE 9 only
		// Detect overflow:scroll screwiness (gh-3699)
		// Support: Chrome <=64
		// Don't get tricked when zoom affects offsetWidth (gh-4029)
		div.style.position = "absolute";
		scrollboxSizeVal = roundPixelMeasures( div.offsetWidth / 3 ) === 12;

		documentElement.removeChild( container );

		// Nullify the div so it wouldn't be stored in the memory and
		// it will also be a sign that checks already performed
		div = null;
	}

	function roundPixelMeasures( measure ) {
		return Math.round( parseFloat( measure ) );
	}

	var pixelPositionVal, boxSizingReliableVal, scrollboxSizeVal, pixelBoxStylesVal,
		reliableTrDimensionsVal, reliableMarginLeftVal,
		container = document.createElement( "div" ),
		div = document.createElement( "div" );

	// Finish early in limited (non-browser) environments
	if ( !div.style ) {
		return;
	}

	// Support: IE <=9 - 11 only
	// Style of cloned element affects source element cloned (#8908)
	div.style.backgroundClip = "content-box";
	div.cloneNode( true ).style.backgroundClip = "";
	support.clearCloneStyle = div.style.backgroundClip === "content-box";

	jQuery.extend( support, {
		boxSizingReliable: function() {
			computeStyleTests();
			return boxSizingReliableVal;
		},
		pixelBoxStyles: function() {
			computeStyleTests();
			return pixelBoxStylesVal;
		},
		pixelPosition: function() {
			computeStyleTests();
			return pixelPositionVal;
		},
		reliableMarginLeft: function() {
			computeStyleTests();
			return reliableMarginLeftVal;
		},
		scrollboxSize: function() {
			computeStyleTests();
			return scrollboxSizeVal;
		},

		// Support: IE 9 - 11+, Edge 15 - 18+
		// IE/Edge misreport `getComputedStyle` of table rows with width/height
		// set in CSS while `offset*` properties report correct values.
		// Behavior in IE 9 is more subtle than in newer versions & it passes
		// some versions of this test; make sure not to make it pass there!
		//
		// Support: Firefox 70+
		// Only Firefox includes border widths
		// in computed dimensions. (gh-4529)
		reliableTrDimensions: function() {
			var table, tr, trChild, trStyle;
			if ( reliableTrDimensionsVal == null ) {
				table = document.createElement( "table" );
				tr = document.createElement( "tr" );
				trChild = document.createElement( "div" );

				table.style.cssText = "position:absolute;left:-11111px;border-collapse:separate";
				tr.style.cssText = "border:1px solid";

				// Support: Chrome 86+
				// Height set through cssText does not get applied.
				// Computed height then comes back as 0.
				tr.style.height = "1px";
				trChild.style.height = "9px";

				// Support: Android 8 Chrome 86+
				// In our bodyBackground.html iframe,
				// display for all div elements is set to "inline",
				// which causes a problem only in Android 8 Chrome 86.
				// Ensuring the div is display: block
				// gets around this issue.
				trChild.style.display = "block";

				documentElement
					.appendChild( table )
					.appendChild( tr )
					.appendChild( trChild );

				trStyle = window.getComputedStyle( tr );
				reliableTrDimensionsVal = ( parseInt( trStyle.height, 10 ) +
					parseInt( trStyle.borderTopWidth, 10 ) +
					parseInt( trStyle.borderBottomWidth, 10 ) ) === tr.offsetHeight;

				documentElement.removeChild( table );
			}
			return reliableTrDimensionsVal;
		}
	} );
} )();


function curCSS( elem, name, computed ) {
	var width, minWidth, maxWidth, ret,

		// Support: Firefox 51+
		// Retrieving style before computed somehow
		// fixes an issue with getting wrong values
		// on detached elements
		style = elem.style;

	computed = computed || getStyles( elem );

	// getPropertyValue is needed for:
	//   .css('filter') (IE 9 only, #12537)
	//   .css('--customProperty) (#3144)
	if ( computed ) {
		ret = computed.getPropertyValue( name ) || computed[ name ];

		if ( ret === "" && !isAttached( elem ) ) {
			ret = jQuery.style( elem, name );
		}

		// A tribute to the "awesome hack by Dean Edwards"
		// Android Browser returns percentage for some values,
		// but width seems to be reliably pixels.
		// This is against the CSSOM draft spec:
		// https://drafts.csswg.org/cssom/#resolved-values
		if ( !support.pixelBoxStyles() && rnumnonpx.test( ret ) && rboxStyle.test( name ) ) {

			// Remember the original values
			width = style.width;
			minWidth = style.minWidth;
			maxWidth = style.maxWidth;

			// Put in the new values to get a computed value out
			style.minWidth = style.maxWidth = style.width = ret;
			ret = computed.width;

			// Revert the changed values
			style.width = width;
			style.minWidth = minWidth;
			style.maxWidth = maxWidth;
		}
	}

	return ret !== undefined ?

		// Support: IE <=9 - 11 only
		// IE returns zIndex value as an integer.
		ret + "" :
		ret;
}


function addGetHookIf( conditionFn, hookFn ) {

	// Define the hook, we'll check on the first run if it's really needed.
	return {
		get: function() {
			if ( conditionFn() ) {

				// Hook not needed (or it's not possible to use it due
				// to missing dependency), remove it.
				delete this.get;
				return;
			}

			// Hook needed; redefine it so that the support test is not executed again.
			return ( this.get = hookFn ).apply( this, arguments );
		}
	};
}


var cssPrefixes = [ "Webkit", "Moz", "ms" ],
	emptyStyle = document.createElement( "div" ).style,
	vendorProps = {};

// Return a vendor-prefixed property or undefined
function vendorPropName( name ) {

	// Check for vendor prefixed names
	var capName = name[ 0 ].toUpperCase() + name.slice( 1 ),
		i = cssPrefixes.length;

	while ( i-- ) {
		name = cssPrefixes[ i ] + capName;
		if ( name in emptyStyle ) {
			return name;
		}
	}
}

// Return a potentially-mapped jQuery.cssProps or vendor prefixed property
function finalPropName( name ) {
	var final = jQuery.cssProps[ name ] || vendorProps[ name ];

	if ( final ) {
		return final;
	}
	if ( name in emptyStyle ) {
		return name;
	}
	return vendorProps[ name ] = vendorPropName( name ) || name;
}


var

	// Swappable if display is none or starts with table
	// except "table", "table-cell", or "table-caption"
	// See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display
	rdisplayswap = /^(none|table(?!-c[ea]).+)/,
	rcustomProp = /^--/,
	cssShow = { position: "absolute", visibility: "hidden", display: "block" },
	cssNormalTransform = {
		letterSpacing: "0",
		fontWeight: "400"
	};

function setPositiveNumber( _elem, value, subtract ) {

	// Any relative (+/-) values have already been
	// normalized at this point
	var matches = rcssNum.exec( value );
	return matches ?

		// Guard against undefined "subtract", e.g., when used as in cssHooks
		Math.max( 0, matches[ 2 ] - ( subtract || 0 ) ) + ( matches[ 3 ] || "px" ) :
		value;
}

function boxModelAdjustment( elem, dimension, box, isBorderBox, styles, computedVal ) {
	var i = dimension === "width" ? 1 : 0,
		extra = 0,
		delta = 0;

	// Adjustment may not be necessary
	if ( box === ( isBorderBox ? "border" : "content" ) ) {
		return 0;
	}

	for ( ; i < 4; i += 2 ) {

		// Both box models exclude margin
		if ( box === "margin" ) {
			delta += jQuery.css( elem, box + cssExpand[ i ], true, styles );
		}

		// If we get here with a content-box, we're seeking "padding" or "border" or "margin"
		if ( !isBorderBox ) {

			// Add padding
			delta += jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );

			// For "border" or "margin", add border
			if ( box !== "padding" ) {
				delta += jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );

			// But still keep track of it otherwise
			} else {
				extra += jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );
			}

		// If we get here with a border-box (content + padding + border), we're seeking "content" or
		// "padding" or "margin"
		} else {

			// For "content", subtract padding
			if ( box === "content" ) {
				delta -= jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );
			}

			// For "content" or "padding", subtract border
			if ( box !== "margin" ) {
				delta -= jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );
			}
		}
	}

	// Account for positive content-box scroll gutter when requested by providing computedVal
	if ( !isBorderBox && computedVal >= 0 ) {

		// offsetWidth/offsetHeight is a rounded sum of content, padding, scroll gutter, and border
		// Assuming integer scroll gutter, subtract the rest and round down
		delta += Math.max( 0, Math.ceil(
			elem[ "offset" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ] -
			computedVal -
			delta -
			extra -
			0.5

		// If offsetWidth/offsetHeight is unknown, then we can't determine content-box scroll gutter
		// Use an explicit zero to avoid NaN (gh-3964)
		) ) || 0;
	}

	return delta;
}

function getWidthOrHeight( elem, dimension, extra ) {

	// Start with computed style
	var styles = getStyles( elem ),

		// To avoid forcing a reflow, only fetch boxSizing if we need it (gh-4322).
		// Fake content-box until we know it's needed to know the true value.
		boxSizingNeeded = !support.boxSizingReliable() || extra,
		isBorderBox = boxSizingNeeded &&
			jQuery.css( elem, "boxSizing", false, styles ) === "border-box",
		valueIsBorderBox = isBorderBox,

		val = curCSS( elem, dimension, styles ),
		offsetProp = "offset" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 );

	// Support: Firefox <=54
	// Return a confounding non-pixel value or feign ignorance, as appropriate.
	if ( rnumnonpx.test( val ) ) {
		if ( !extra ) {
			return val;
		}
		val = "auto";
	}


	// Support: IE 9 - 11 only
	// Use offsetWidth/offsetHeight for when box sizing is unreliable.
	// In those cases, the computed value can be trusted to be border-box.
	if ( ( !support.boxSizingReliable() && isBorderBox ||

		// Support: IE 10 - 11+, Edge 15 - 18+
		// IE/Edge misreport `getComputedStyle` of table rows with width/height
		// set in CSS while `offset*` properties report correct values.
		// Interestingly, in some cases IE 9 doesn't suffer from this issue.
		!support.reliableTrDimensions() && nodeName( elem, "tr" ) ||

		// Fall back to offsetWidth/offsetHeight when value is "auto"
		// This happens for inline elements with no explicit setting (gh-3571)
		val === "auto" ||

		// Support: Android <=4.1 - 4.3 only
		// Also use offsetWidth/offsetHeight for misreported inline dimensions (gh-3602)
		!parseFloat( val ) && jQuery.css( elem, "display", false, styles ) === "inline" ) &&

		// Make sure the element is visible & connected
		elem.getClientRects().length ) {

		isBorderBox = jQuery.css( elem, "boxSizing", false, styles ) === "border-box";

		// Where available, offsetWidth/offsetHeight approximate border box dimensions.
		// Where not available (e.g., SVG), assume unreliable box-sizing and interpret the
		// retrieved value as a content box dimension.
		valueIsBorderBox = offsetProp in elem;
		if ( valueIsBorderBox ) {
			val = elem[ offsetProp ];
		}
	}

	// Normalize "" and auto
	val = parseFloat( val ) || 0;

	// Adjust for the element's box model
	return ( val +
		boxModelAdjustment(
			elem,
			dimension,
			extra || ( isBorderBox ? "border" : "content" ),
			valueIsBorderBox,
			styles,

			// Provide the current computed size to request scroll gutter calculation (gh-3589)
			val
		)
	) + "px";
}

jQuery.extend( {

	// Add in style property hooks for overriding the default
	// behavior of getting and setting a style property
	cssHooks: {
		opacity: {
			get: function( elem, computed ) {
				if ( computed ) {

					// We should always get a number back from opacity
					var ret = curCSS( elem, "opacity" );
					return ret === "" ? "1" : ret;
				}
			}
		}
	},

	// Don't automatically add "px" to these possibly-unitless properties
	cssNumber: {
		"animationIterationCount": true,
		"columnCount": true,
		"fillOpacity": true,
		"flexGrow": true,
		"flexShrink": true,
		"fontWeight": true,
		"gridArea": true,
		"gridColumn": true,
		"gridColumnEnd": true,
		"gridColumnStart": true,
		"gridRow": true,
		"gridRowEnd": true,
		"gridRowStart": true,
		"lineHeight": true,
		"opacity": true,
		"order": true,
		"orphans": true,
		"widows": true,
		"zIndex": true,
		"zoom": true
	},

	// Add in properties whose names you wish to fix before
	// setting or getting the value
	cssProps: {},

	// Get and set the style property on a DOM Node
	style: function( elem, name, value, extra ) {

		// Don't set styles on text and comment nodes
		if ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {
			return;
		}

		// Make sure that we're working with the right name
		var ret, type, hooks,
			origName = camelCase( name ),
			isCustomProp = rcustomProp.test( name ),
			style = elem.style;

		// Make sure that we're working with the right name. We don't
		// want to query the value if it is a CSS custom property
		// since they are user-defined.
		if ( !isCustomProp ) {
			name = finalPropName( origName );
		}

		// Gets hook for the prefixed version, then unprefixed version
		hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];

		// Check if we're setting a value
		if ( value !== undefined ) {
			type = typeof value;

			// Convert "+=" or "-=" to relative numbers (#7345)
			if ( type === "string" && ( ret = rcssNum.exec( value ) ) && ret[ 1 ] ) {
				value = adjustCSS( elem, name, ret );

				// Fixes bug #9237
				type = "number";
			}

			// Make sure that null and NaN values aren't set (#7116)
			if ( value == null || value !== value ) {
				return;
			}

			// If a number was passed in, add the unit (except for certain CSS properties)
			// The isCustomProp check can be removed in jQuery 4.0 when we only auto-append
			// "px" to a few hardcoded values.
			if ( type === "number" && !isCustomProp ) {
				value += ret && ret[ 3 ] || ( jQuery.cssNumber[ origName ] ? "" : "px" );
			}

			// background-* props affect original clone's values
			if ( !support.clearCloneStyle && value === "" && name.indexOf( "background" ) === 0 ) {
				style[ name ] = "inherit";
			}

			// If a hook was provided, use that value, otherwise just set the specified value
			if ( !hooks || !( "set" in hooks ) ||
				( value = hooks.set( elem, value, extra ) ) !== undefined ) {

				if ( isCustomProp ) {
					style.setProperty( name, value );
				} else {
					style[ name ] = value;
				}
			}

		} else {

			// If a hook was provided get the non-computed value from there
			if ( hooks && "get" in hooks &&
				( ret = hooks.get( elem, false, extra ) ) !== undefined ) {

				return ret;
			}

			// Otherwise just get the value from the style object
			return style[ name ];
		}
	},

	css: function( elem, name, extra, styles ) {
		var val, num, hooks,
			origName = camelCase( name ),
			isCustomProp = rcustomProp.test( name );

		// Make sure that we're working with the right name. We don't
		// want to modify the value if it is a CSS custom property
		// since they are user-defined.
		if ( !isCustomProp ) {
			name = finalPropName( origName );
		}

		// Try prefixed name followed by the unprefixed name
		hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];

		// If a hook was provided get the computed value from there
		if ( hooks && "get" in hooks ) {
			val = hooks.get( elem, true, extra );
		}

		// Otherwise, if a way to get the computed value exists, use that
		if ( val === undefined ) {
			val = curCSS( elem, name, styles );
		}

		// Convert "normal" to computed value
		if ( val === "normal" && name in cssNormalTransform ) {
			val = cssNormalTransform[ name ];
		}

		// Make numeric if forced or a qualifier was provided and val looks numeric
		if ( extra === "" || extra ) {
			num = parseFloat( val );
			return extra === true || isFinite( num ) ? num || 0 : val;
		}

		return val;
	}
} );

jQuery.each( [ "height", "width" ], function( _i, dimension ) {
	jQuery.cssHooks[ dimension ] = {
		get: function( elem, computed, extra ) {
			if ( computed ) {

				// Certain elements can have dimension info if we invisibly show them
				// but it must have a current display style that would benefit
				return rdisplayswap.test( jQuery.css( elem, "display" ) ) &&

					// Support: Safari 8+
					// Table columns in Safari have non-zero offsetWidth & zero
					// getBoundingClientRect().width unless display is changed.
					// Support: IE <=11 only
					// Running getBoundingClientRect on a disconnected node
					// in IE throws an error.
					( !elem.getClientRects().length || !elem.getBoundingClientRect().width ) ?
					swap( elem, cssShow, function() {
						return getWidthOrHeight( elem, dimension, extra );
					} ) :
					getWidthOrHeight( elem, dimension, extra );
			}
		},

		set: function( elem, value, extra ) {
			var matches,
				styles = getStyles( elem ),

				// Only read styles.position if the test has a chance to fail
				// to avoid forcing a reflow.
				scrollboxSizeBuggy = !support.scrollboxSize() &&
					styles.position === "absolute",

				// To avoid forcing a reflow, only fetch boxSizing if we need it (gh-3991)
				boxSizingNeeded = scrollboxSizeBuggy || extra,
				isBorderBox = boxSizingNeeded &&
					jQuery.css( elem, "boxSizing", false, styles ) === "border-box",
				subtract = extra ?
					boxModelAdjustment(
						elem,
						dimension,
						extra,
						isBorderBox,
						styles
					) :
					0;

			// Account for unreliable border-box dimensions by comparing offset* to computed and
			// faking a content-box to get border and padding (gh-3699)
			if ( isBorderBox && scrollboxSizeBuggy ) {
				subtract -= Math.ceil(
					elem[ "offset" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ] -
					parseFloat( styles[ dimension ] ) -
					boxModelAdjustment( elem, dimension, "border", false, styles ) -
					0.5
				);
			}

			// Convert to pixels if value adjustment is needed
			if ( subtract && ( matches = rcssNum.exec( value ) ) &&
				( matches[ 3 ] || "px" ) !== "px" ) {

				elem.style[ dimension ] = value;
				value = jQuery.css( elem, dimension );
			}

			return setPositiveNumber( elem, value, subtract );
		}
	};
} );

jQuery.cssHooks.marginLeft = addGetHookIf( support.reliableMarginLeft,
	function( elem, computed ) {
		if ( computed ) {
			return ( parseFloat( curCSS( elem, "marginLeft" ) ) ||
				elem.getBoundingClientRect().left -
					swap( elem, { marginLeft: 0 }, function() {
						return elem.getBoundingClientRect().left;
					} )
			) + "px";
		}
	}
);

// These hooks are used by animate to expand properties
jQuery.each( {
	margin: "",
	padding: "",
	border: "Width"
}, function( prefix, suffix ) {
	jQuery.cssHooks[ prefix + suffix ] = {
		expand: function( value ) {
			var i = 0,
				expanded = {},

				// Assumes a single number if not a string
				parts = typeof value === "string" ? value.split( " " ) : [ value ];

			for ( ; i < 4; i++ ) {
				expanded[ prefix + cssExpand[ i ] + suffix ] =
					parts[ i ] || parts[ i - 2 ] || parts[ 0 ];
			}

			return expanded;
		}
	};

	if ( prefix !== "margin" ) {
		jQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;
	}
} );

jQuery.fn.extend( {
	css: function( name, value ) {
		return access( this, function( elem, name, value ) {
			var styles, len,
				map = {},
				i = 0;

			if ( Array.isArray( name ) ) {
				styles = getStyles( elem );
				len = name.length;

				for ( ; i < len; i++ ) {
					map[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );
				}

				return map;
			}

			return value !== undefined ?
				jQuery.style( elem, name, value ) :
				jQuery.css( elem, name );
		}, name, value, arguments.length > 1 );
	}
} );


function Tween( elem, options, prop, end, easing ) {
	return new Tween.prototype.init( elem, options, prop, end, easing );
}
jQuery.Tween = Tween;

Tween.prototype = {
	constructor: Tween,
	init: function( elem, options, prop, end, easing, unit ) {
		this.elem = elem;
		this.prop = prop;
		this.easing = easing || jQuery.easing._default;
		this.options = options;
		this.start = this.now = this.cur();
		this.end = end;
		this.unit = unit || ( jQuery.cssNumber[ prop ] ? "" : "px" );
	},
	cur: function() {
		var hooks = Tween.propHooks[ this.prop ];

		return hooks && hooks.get ?
			hooks.get( this ) :
			Tween.propHooks._default.get( this );
	},
	run: function( percent ) {
		var eased,
			hooks = Tween.propHooks[ this.prop ];

		if ( this.options.duration ) {
			this.pos = eased = jQuery.easing[ this.easing ](
				percent, this.options.duration * percent, 0, 1, this.options.duration
			);
		} else {
			this.pos = eased = percent;
		}
		this.now = ( this.end - this.start ) * eased + this.start;

		if ( this.options.step ) {
			this.options.step.call( this.elem, this.now, this );
		}

		if ( hooks && hooks.set ) {
			hooks.set( this );
		} else {
			Tween.propHooks._default.set( this );
		}
		return this;
	}
};

Tween.prototype.init.prototype = Tween.prototype;

Tween.propHooks = {
	_default: {
		get: function( tween ) {
			var result;

			// Use a property on the element directly when it is not a DOM element,
			// or when there is no matching style property that exists.
			if ( tween.elem.nodeType !== 1 ||
				tween.elem[ tween.prop ] != null && tween.elem.style[ tween.prop ] == null ) {
				return tween.elem[ tween.prop ];
			}

			// Passing an empty string as a 3rd parameter to .css will automatically
			// attempt a parseFloat and fallback to a string if the parse fails.
			// Simple values such as "10px" are parsed to Float;
			// complex values such as "rotate(1rad)" are returned as-is.
			result = jQuery.css( tween.elem, tween.prop, "" );

			// Empty strings, null, undefined and "auto" are converted to 0.
			return !result || result === "auto" ? 0 : result;
		},
		set: function( tween ) {

			// Use step hook for back compat.
			// Use cssHook if its there.
			// Use .style if available and use plain properties where available.
			if ( jQuery.fx.step[ tween.prop ] ) {
				jQuery.fx.step[ tween.prop ]( tween );
			} else if ( tween.elem.nodeType === 1 && (
				jQuery.cssHooks[ tween.prop ] ||
					tween.elem.style[ finalPropName( tween.prop ) ] != null ) ) {
				jQuery.style( tween.elem, tween.prop, tween.now + tween.unit );
			} else {
				tween.elem[ tween.prop ] = tween.now;
			}
		}
	}
};

// Support: IE <=9 only
// Panic based approach to setting things on disconnected nodes
Tween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {
	set: function( tween ) {
		if ( tween.elem.nodeType && tween.elem.parentNode ) {
			tween.elem[ tween.prop ] = tween.now;
		}
	}
};

jQuery.easing = {
	linear: function( p ) {
		return p;
	},
	swing: function( p ) {
		return 0.5 - Math.cos( p * Math.PI ) / 2;
	},
	_default: "swing"
};

jQuery.fx = Tween.prototype.init;

// Back compat <1.8 extension point
jQuery.fx.step = {};




var
	fxNow, inProgress,
	rfxtypes = /^(?:toggle|show|hide)$/,
	rrun = /queueHooks$/;

function schedule() {
	if ( inProgress ) {
		if ( document.hidden === false && window.requestAnimationFrame ) {
			window.requestAnimationFrame( schedule );
		} else {
			window.setTimeout( schedule, jQuery.fx.interval );
		}

		jQuery.fx.tick();
	}
}

// Animations created synchronously will run synchronously
function createFxNow() {
	window.setTimeout( function() {
		fxNow = undefined;
	} );
	return ( fxNow = Date.now() );
}

// Generate parameters to create a standard animation
function genFx( type, includeWidth ) {
	var which,
		i = 0,
		attrs = { height: type };

	// If we include width, step value is 1 to do all cssExpand values,
	// otherwise step value is 2 to skip over Left and Right
	includeWidth = includeWidth ? 1 : 0;
	for ( ; i < 4; i += 2 - includeWidth ) {
		which = cssExpand[ i ];
		attrs[ "margin" + which ] = attrs[ "padding" + which ] = type;
	}

	if ( includeWidth ) {
		attrs.opacity = attrs.width = type;
	}

	return attrs;
}

function createTween( value, prop, animation ) {
	var tween,
		collection = ( Animation.tweeners[ prop ] || [] ).concat( Animation.tweeners[ "*" ] ),
		index = 0,
		length = collection.length;
	for ( ; index < length; index++ ) {
		if ( ( tween = collection[ index ].call( animation, prop, value ) ) ) {

			// We're done with this property
			return tween;
		}
	}
}

function defaultPrefilter( elem, props, opts ) {
	var prop, value, toggle, hooks, oldfire, propTween, restoreDisplay, display,
		isBox = "width" in props || "height" in props,
		anim = this,
		orig = {},
		style = elem.style,
		hidden = elem.nodeType && isHiddenWithinTree( elem ),
		dataShow = dataPriv.get( elem, "fxshow" );

	// Queue-skipping animations hijack the fx hooks
	if ( !opts.queue ) {
		hooks = jQuery._queueHooks( elem, "fx" );
		if ( hooks.unqueued == null ) {
			hooks.unqueued = 0;
			oldfire = hooks.empty.fire;
			hooks.empty.fire = function() {
				if ( !hooks.unqueued ) {
					oldfire();
				}
			};
		}
		hooks.unqueued++;

		anim.always( function() {

			// Ensure the complete handler is called before this completes
			anim.always( function() {
				hooks.unqueued--;
				if ( !jQuery.queue( elem, "fx" ).length ) {
					hooks.empty.fire();
				}
			} );
		} );
	}

	// Detect show/hide animations
	for ( prop in props ) {
		value = props[ prop ];
		if ( rfxtypes.test( value ) ) {
			delete props[ prop ];
			toggle = toggle || value === "toggle";
			if ( value === ( hidden ? "hide" : "show" ) ) {

				// Pretend to be hidden if this is a "show" and
				// there is still data from a stopped show/hide
				if ( value === "show" && dataShow && dataShow[ prop ] !== undefined ) {
					hidden = true;

				// Ignore all other no-op show/hide data
				} else {
					continue;
				}
			}
			orig[ prop ] = dataShow && dataShow[ prop ] || jQuery.style( elem, prop );
		}
	}

	// Bail out if this is a no-op like .hide().hide()
	propTween = !jQuery.isEmptyObject( props );
	if ( !propTween && jQuery.isEmptyObject( orig ) ) {
		return;
	}

	// Restrict "overflow" and "display" styles during box animations
	if ( isBox && elem.nodeType === 1 ) {

		// Support: IE <=9 - 11, Edge 12 - 15
		// Record all 3 overflow attributes because IE does not infer the shorthand
		// from identically-valued overflowX and overflowY and Edge just mirrors
		// the overflowX value there.
		opts.overflow = [ style.overflow, style.overflowX, style.overflowY ];

		// Identify a display type, preferring old show/hide data over the CSS cascade
		restoreDisplay = dataShow && dataShow.display;
		if ( restoreDisplay == null ) {
			restoreDisplay = dataPriv.get( elem, "display" );
		}
		display = jQuery.css( elem, "display" );
		if ( display === "none" ) {
			if ( restoreDisplay ) {
				display = restoreDisplay;
			} else {

				// Get nonempty value(s) by temporarily forcing visibility
				showHide( [ elem ], true );
				restoreDisplay = elem.style.display || restoreDisplay;
				display = jQuery.css( elem, "display" );
				showHide( [ elem ] );
			}
		}

		// Animate inline elements as inline-block
		if ( display === "inline" || display === "inline-block" && restoreDisplay != null ) {
			if ( jQuery.css( elem, "float" ) === "none" ) {

				// Restore the original display value at the end of pure show/hide animations
				if ( !propTween ) {
					anim.done( function() {
						style.display = restoreDisplay;
					} );
					if ( restoreDisplay == null ) {
						display = style.display;
						restoreDisplay = display === "none" ? "" : display;
					}
				}
				style.display = "inline-block";
			}
		}
	}

	if ( opts.overflow ) {
		style.overflow = "hidden";
		anim.always( function() {
			style.overflow = opts.overflow[ 0 ];
			style.overflowX = opts.overflow[ 1 ];
			style.overflowY = opts.overflow[ 2 ];
		} );
	}

	// Implement show/hide animations
	propTween = false;
	for ( prop in orig ) {

		// General show/hide setup for this element animation
		if ( !propTween ) {
			if ( dataShow ) {
				if ( "hidden" in dataShow ) {
					hidden = dataShow.hidden;
				}
			} else {
				dataShow = dataPriv.access( elem, "fxshow", { display: restoreDisplay } );
			}

			// Store hidden/visible for toggle so `.stop().toggle()` "reverses"
			if ( toggle ) {
				dataShow.hidden = !hidden;
			}

			// Show elements before animating them
			if ( hidden ) {
				showHide( [ elem ], true );
			}

			/* eslint-disable no-loop-func */

			anim.done( function() {

				/* eslint-enable no-loop-func */

				// The final step of a "hide" animation is actually hiding the element
				if ( !hidden ) {
					showHide( [ elem ] );
				}
				dataPriv.remove( elem, "fxshow" );
				for ( prop in orig ) {
					jQuery.style( elem, prop, orig[ prop ] );
				}
			} );
		}

		// Per-property setup
		propTween = createTween( hidden ? dataShow[ prop ] : 0, prop, anim );
		if ( !( prop in dataShow ) ) {
			dataShow[ prop ] = propTween.start;
			if ( hidden ) {
				propTween.end = propTween.start;
				propTween.start = 0;
			}
		}
	}
}

function propFilter( props, specialEasing ) {
	var index, name, easing, value, hooks;

	// camelCase, specialEasing and expand cssHook pass
	for ( index in props ) {
		name = camelCase( index );
		easing = specialEasing[ name ];
		value = props[ index ];
		if ( Array.isArray( value ) ) {
			easing = value[ 1 ];
			value = props[ index ] = value[ 0 ];
		}

		if ( index !== name ) {
			props[ name ] = value;
			delete props[ index ];
		}

		hooks = jQuery.cssHooks[ name ];
		if ( hooks && "expand" in hooks ) {
			value = hooks.expand( value );
			delete props[ name ];

			// Not quite $.extend, this won't overwrite existing keys.
			// Reusing 'index' because we have the correct "name"
			for ( index in value ) {
				if ( !( index in props ) ) {
					props[ index ] = value[ index ];
					specialEasing[ index ] = easing;
				}
			}
		} else {
			specialEasing[ name ] = easing;
		}
	}
}

function Animation( elem, properties, options ) {
	var result,
		stopped,
		index = 0,
		length = Animation.prefilters.length,
		deferred = jQuery.Deferred().always( function() {

			// Don't match elem in the :animated selector
			delete tick.elem;
		} ),
		tick = function() {
			if ( stopped ) {
				return false;
			}
			var currentTime = fxNow || createFxNow(),
				remaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),

				// Support: Android 2.3 only
				// Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (#12497)
				temp = remaining / animation.duration || 0,
				percent = 1 - temp,
				index = 0,
				length = animation.tweens.length;

			for ( ; index < length; index++ ) {
				animation.tweens[ index ].run( percent );
			}

			deferred.notifyWith( elem, [ animation, percent, remaining ] );

			// If there's more to do, yield
			if ( percent < 1 && length ) {
				return remaining;
			}

			// If this was an empty animation, synthesize a final progress notification
			if ( !length ) {
				deferred.notifyWith( elem, [ animation, 1, 0 ] );
			}

			// Resolve the animation and report its conclusion
			deferred.resolveWith( elem, [ animation ] );
			return false;
		},
		animation = deferred.promise( {
			elem: elem,
			props: jQuery.extend( {}, properties ),
			opts: jQuery.extend( true, {
				specialEasing: {},
				easing: jQuery.easing._default
			}, options ),
			originalProperties: properties,
			originalOptions: options,
			startTime: fxNow || createFxNow(),
			duration: options.duration,
			tweens: [],
			createTween: function( prop, end ) {
				var tween = jQuery.Tween( elem, animation.opts, prop, end,
					animation.opts.specialEasing[ prop ] || animation.opts.easing );
				animation.tweens.push( tween );
				return tween;
			},
			stop: function( gotoEnd ) {
				var index = 0,

					// If we are going to the end, we want to run all the tweens
					// otherwise we skip this part
					length = gotoEnd ? animation.tweens.length : 0;
				if ( stopped ) {
					return this;
				}
				stopped = true;
				for ( ; index < length; index++ ) {
					animation.tweens[ index ].run( 1 );
				}

				// Resolve when we played the last frame; otherwise, reject
				if ( gotoEnd ) {
					deferred.notifyWith( elem, [ animation, 1, 0 ] );
					deferred.resolveWith( elem, [ animation, gotoEnd ] );
				} else {
					deferred.rejectWith( elem, [ animation, gotoEnd ] );
				}
				return this;
			}
		} ),
		props = animation.props;

	propFilter( props, animation.opts.specialEasing );

	for ( ; index < length; index++ ) {
		result = Animation.prefilters[ index ].call( animation, elem, props, animation.opts );
		if ( result ) {
			if ( isFunction( result.stop ) ) {
				jQuery._queueHooks( animation.elem, animation.opts.queue ).stop =
					result.stop.bind( result );
			}
			return result;
		}
	}

	jQuery.map( props, createTween, animation );

	if ( isFunction( animation.opts.start ) ) {
		animation.opts.start.call( elem, animation );
	}

	// Attach callbacks from options
	animation
		.progress( animation.opts.progress )
		.done( animation.opts.done, animation.opts.complete )
		.fail( animation.opts.fail )
		.always( animation.opts.always );

	jQuery.fx.timer(
		jQuery.extend( tick, {
			elem: elem,
			anim: animation,
			queue: animation.opts.queue
		} )
	);

	return animation;
}

jQuery.Animation = jQuery.extend( Animation, {

	tweeners: {
		"*": [ function( prop, value ) {
			var tween = this.createTween( prop, value );
			adjustCSS( tween.elem, prop, rcssNum.exec( value ), tween );
			return tween;
		} ]
	},

	tweener: function( props, callback ) {
		if ( isFunction( props ) ) {
			callback = props;
			props = [ "*" ];
		} else {
			props = props.match( rnothtmlwhite );
		}

		var prop,
			index = 0,
			length = props.length;

		for ( ; index < length; index++ ) {
			prop = props[ index ];
			Animation.tweeners[ prop ] = Animation.tweeners[ prop ] || [];
			Animation.tweeners[ prop ].unshift( callback );
		}
	},

	prefilters: [ defaultPrefilter ],

	prefilter: function( callback, prepend ) {
		if ( prepend ) {
			Animation.prefilters.unshift( callback );
		} else {
			Animation.prefilters.push( callback );
		}
	}
} );

jQuery.speed = function( speed, easing, fn ) {
	var opt = speed && typeof speed === "object" ? jQuery.extend( {}, speed ) : {
		complete: fn || !fn && easing ||
			isFunction( speed ) && speed,
		duration: speed,
		easing: fn && easing || easing && !isFunction( easing ) && easing
	};

	// Go to the end state if fx are off
	if ( jQuery.fx.off ) {
		opt.duration = 0;

	} else {
		if ( typeof opt.duration !== "number" ) {
			if ( opt.duration in jQuery.fx.speeds ) {
				opt.duration = jQuery.fx.speeds[ opt.duration ];

			} else {
				opt.duration = jQuery.fx.speeds._default;
			}
		}
	}

	// Normalize opt.queue - true/undefined/null -> "fx"
	if ( opt.queue == null || opt.queue === true ) {
		opt.queue = "fx";
	}

	// Queueing
	opt.old = opt.complete;

	opt.complete = function() {
		if ( isFunction( opt.old ) ) {
			opt.old.call( this );
		}

		if ( opt.queue ) {
			jQuery.dequeue( this, opt.queue );
		}
	};

	return opt;
};

jQuery.fn.extend( {
	fadeTo: function( speed, to, easing, callback ) {

		// Show any hidden elements after setting opacity to 0
		return this.filter( isHiddenWithinTree ).css( "opacity", 0 ).show()

			// Animate to the value specified
			.end().animate( { opacity: to }, speed, easing, callback );
	},
	animate: function( prop, speed, easing, callback ) {
		var empty = jQuery.isEmptyObject( prop ),
			optall = jQuery.speed( speed, easing, callback ),
			doAnimation = function() {

				// Operate on a copy of prop so per-property easing won't be lost
				var anim = Animation( this, jQuery.extend( {}, prop ), optall );

				// Empty animations, or finishing resolves immediately
				if ( empty || dataPriv.get( this, "finish" ) ) {
					anim.stop( true );
				}
			};

		doAnimation.finish = doAnimation;

		return empty || optall.queue === false ?
			this.each( doAnimation ) :
			this.queue( optall.queue, doAnimation );
	},
	stop: function( type, clearQueue, gotoEnd ) {
		var stopQueue = function( hooks ) {
			var stop = hooks.stop;
			delete hooks.stop;
			stop( gotoEnd );
		};

		if ( typeof type !== "string" ) {
			gotoEnd = clearQueue;
			clearQueue = type;
			type = undefined;
		}
		if ( clearQueue ) {
			this.queue( type || "fx", [] );
		}

		return this.each( function() {
			var dequeue = true,
				index = type != null && type + "queueHooks",
				timers = jQuery.timers,
				data = dataPriv.get( this );

			if ( index ) {
				if ( data[ index ] && data[ index ].stop ) {
					stopQueue( data[ index ] );
				}
			} else {
				for ( index in data ) {
					if ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {
						stopQueue( data[ index ] );
					}
				}
			}

			for ( index = timers.length; index--; ) {
				if ( timers[ index ].elem === this &&
					( type == null || timers[ index ].queue === type ) ) {

					timers[ index ].anim.stop( gotoEnd );
					dequeue = false;
					timers.splice( index, 1 );
				}
			}

			// Start the next in the queue if the last step wasn't forced.
			// Timers currently will call their complete callbacks, which
			// will dequeue but only if they were gotoEnd.
			if ( dequeue || !gotoEnd ) {
				jQuery.dequeue( this, type );
			}
		} );
	},
	finish: function( type ) {
		if ( type !== false ) {
			type = type || "fx";
		}
		return this.each( function() {
			var index,
				data = dataPriv.get( this ),
				queue = data[ type + "queue" ],
				hooks = data[ type + "queueHooks" ],
				timers = jQuery.timers,
				length = queue ? queue.length : 0;

			// Enable finishing flag on private data
			data.finish = true;

			// Empty the queue first
			jQuery.queue( this, type, [] );

			if ( hooks && hooks.stop ) {
				hooks.stop.call( this, true );
			}

			// Look for any active animations, and finish them
			for ( index = timers.length; index--; ) {
				if ( timers[ index ].elem === this && timers[ index ].queue === type ) {
					timers[ index ].anim.stop( true );
					timers.splice( index, 1 );
				}
			}

			// Look for any animations in the old queue and finish them
			for ( index = 0; index < length; index++ ) {
				if ( queue[ index ] && queue[ index ].finish ) {
					queue[ index ].finish.call( this );
				}
			}

			// Turn off finishing flag
			delete data.finish;
		} );
	}
} );

jQuery.each( [ "toggle", "show", "hide" ], function( _i, name ) {
	var cssFn = jQuery.fn[ name ];
	jQuery.fn[ name ] = function( speed, easing, callback ) {
		return speed == null || typeof speed === "boolean" ?
			cssFn.apply( this, arguments ) :
			this.animate( genFx( name, true ), speed, easing, callback );
	};
} );

// Generate shortcuts for custom animations
jQuery.each( {
	slideDown: genFx( "show" ),
	slideUp: genFx( "hide" ),
	slideToggle: genFx( "toggle" ),
	fadeIn: { opacity: "show" },
	fadeOut: { opacity: "hide" },
	fadeToggle: { opacity: "toggle" }
}, function( name, props ) {
	jQuery.fn[ name ] = function( speed, easing, callback ) {
		return this.animate( props, speed, easing, callback );
	};
} );

jQuery.timers = [];
jQuery.fx.tick = function() {
	var timer,
		i = 0,
		timers = jQuery.timers;

	fxNow = Date.now();

	for ( ; i < timers.length; i++ ) {
		timer = timers[ i ];

		// Run the timer and safely remove it when done (allowing for external removal)
		if ( !timer() && timers[ i ] === timer ) {
			timers.splice( i--, 1 );
		}
	}

	if ( !timers.length ) {
		jQuery.fx.stop();
	}
	fxNow = undefined;
};

jQuery.fx.timer = function( timer ) {
	jQuery.timers.push( timer );
	jQuery.fx.start();
};

jQuery.fx.interval = 13;
jQuery.fx.start = function() {
	if ( inProgress ) {
		return;
	}

	inProgress = true;
	schedule();
};

jQuery.fx.stop = function() {
	inProgress = null;
};

jQuery.fx.speeds = {
	slow: 600,
	fast: 200,

	// Default speed
	_default: 400
};


// Based off of the plugin by Clint Helfers, with permission.
// https://web.archive.org/web/20100324014747/http://blindsignals.com/index.php/2009/07/jquery-delay/
jQuery.fn.delay = function( time, type ) {
	time = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;
	type = type || "fx";

	return this.queue( type, function( next, hooks ) {
		var timeout = window.setTimeout( next, time );
		hooks.stop = function() {
			window.clearTimeout( timeout );
		};
	} );
};


( function() {
	var input = document.createElement( "input" ),
		select = document.createElement( "select" ),
		opt = select.appendChild( document.createElement( "option" ) );

	input.type = "checkbox";

	// Support: Android <=4.3 only
	// Default value for a checkbox should be "on"
	support.checkOn = input.value !== "";

	// Support: IE <=11 only
	// Must access selectedIndex to make default options select
	support.optSelected = opt.selected;

	// Support: IE <=11 only
	// An input loses its value after becoming a radio
	input = document.createElement( "input" );
	input.value = "t";
	input.type = "radio";
	support.radioValue = input.value === "t";
} )();


var boolHook,
	attrHandle = jQuery.expr.attrHandle;

jQuery.fn.extend( {
	attr: function( name, value ) {
		return access( this, jQuery.attr, name, value, arguments.length > 1 );
	},

	removeAttr: function( name ) {
		return this.each( function() {
			jQuery.removeAttr( this, name );
		} );
	}
} );

jQuery.extend( {
	attr: function( elem, name, value ) {
		var ret, hooks,
			nType = elem.nodeType;

		// Don't get/set attributes on text, comment and attribute nodes
		if ( nType === 3 || nType === 8 || nType === 2 ) {
			return;
		}

		// Fallback to prop when attributes are not supported
		if ( typeof elem.getAttribute === "undefined" ) {
			return jQuery.prop( elem, name, value );
		}

		// Attribute hooks are determined by the lowercase version
		// Grab necessary hook if one is defined
		if ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {
			hooks = jQuery.attrHooks[ name.toLowerCase() ] ||
				( jQuery.expr.match.bool.test( name ) ? boolHook : undefined );
		}

		if ( value !== undefined ) {
			if ( value === null ) {
				jQuery.removeAttr( elem, name );
				return;
			}

			if ( hooks && "set" in hooks &&
				( ret = hooks.set( elem, value, name ) ) !== undefined ) {
				return ret;
			}

			elem.setAttribute( name, value + "" );
			return value;
		}

		if ( hooks && "get" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {
			return ret;
		}

		ret = jQuery.find.attr( elem, name );

		// Non-existent attributes return null, we normalize to undefined
		return ret == null ? undefined : ret;
	},

	attrHooks: {
		type: {
			set: function( elem, value ) {
				if ( !support.radioValue && value === "radio" &&
					nodeName( elem, "input" ) ) {
					var val = elem.value;
					elem.setAttribute( "type", value );
					if ( val ) {
						elem.value = val;
					}
					return value;
				}
			}
		}
	},

	removeAttr: function( elem, value ) {
		var name,
			i = 0,

			// Attribute names can contain non-HTML whitespace characters
			// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2
			attrNames = value && value.match( rnothtmlwhite );

		if ( attrNames && elem.nodeType === 1 ) {
			while ( ( name = attrNames[ i++ ] ) ) {
				elem.removeAttribute( name );
			}
		}
	}
} );

// Hooks for boolean attributes
boolHook = {
	set: function( elem, value, name ) {
		if ( value === false ) {

			// Remove boolean attributes when set to false
			jQuery.removeAttr( elem, name );
		} else {
			elem.setAttribute( name, name );
		}
		return name;
	}
};

jQuery.each( jQuery.expr.match.bool.source.match( /\w+/g ), function( _i, name ) {
	var getter = attrHandle[ name ] || jQuery.find.attr;

	attrHandle[ name ] = function( elem, name, isXML ) {
		var ret, handle,
			lowercaseName = name.toLowerCase();

		if ( !isXML ) {

			// Avoid an infinite loop by temporarily removing this function from the getter
			handle = attrHandle[ lowercaseName ];
			attrHandle[ lowercaseName ] = ret;
			ret = getter( elem, name, isXML ) != null ?
				lowercaseName :
				null;
			attrHandle[ lowercaseName ] = handle;
		}
		return ret;
	};
} );




var rfocusable = /^(?:input|select|textarea|button)$/i,
	rclickable = /^(?:a|area)$/i;

jQuery.fn.extend( {
	prop: function( name, value ) {
		return access( this, jQuery.prop, name, value, arguments.length > 1 );
	},

	removeProp: function( name ) {
		return this.each( function() {
			delete this[ jQuery.propFix[ name ] || name ];
		} );
	}
} );

jQuery.extend( {
	prop: function( elem, name, value ) {
		var ret, hooks,
			nType = elem.nodeType;

		// Don't get/set properties on text, comment and attribute nodes
		if ( nType === 3 || nType === 8 || nType === 2 ) {
			return;
		}

		if ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {

			// Fix name and attach hooks
			name = jQuery.propFix[ name ] || name;
			hooks = jQuery.propHooks[ name ];
		}

		if ( value !== undefined ) {
			if ( hooks && "set" in hooks &&
				( ret = hooks.set( elem, value, name ) ) !== undefined ) {
				return ret;
			}

			return ( elem[ name ] = value );
		}

		if ( hooks && "get" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {
			return ret;
		}

		return elem[ name ];
	},

	propHooks: {
		tabIndex: {
			get: function( elem ) {

				// Support: IE <=9 - 11 only
				// elem.tabIndex doesn't always return the
				// correct value when it hasn't been explicitly set
				// https://web.archive.org/web/20141116233347/http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/
				// Use proper attribute retrieval(#12072)
				var tabindex = jQuery.find.attr( elem, "tabindex" );

				if ( tabindex ) {
					return parseInt( tabindex, 10 );
				}

				if (
					rfocusable.test( elem.nodeName ) ||
					rclickable.test( elem.nodeName ) &&
					elem.href
				) {
					return 0;
				}

				return -1;
			}
		}
	},

	propFix: {
		"for": "htmlFor",
		"class": "className"
	}
} );

// Support: IE <=11 only
// Accessing the selectedIndex property
// forces the browser to respect setting selected
// on the option
// The getter ensures a default option is selected
// when in an optgroup
// eslint rule "no-unused-expressions" is disabled for this code
// since it considers such accessions noop
if ( !support.optSelected ) {
	jQuery.propHooks.selected = {
		get: function( elem ) {

			/* eslint no-unused-expressions: "off" */

			var parent = elem.parentNode;
			if ( parent && parent.parentNode ) {
				parent.parentNode.selectedIndex;
			}
			return null;
		},
		set: function( elem ) {

			/* eslint no-unused-expressions: "off" */

			var parent = elem.parentNode;
			if ( parent ) {
				parent.selectedIndex;

				if ( parent.parentNode ) {
					parent.parentNode.selectedIndex;
				}
			}
		}
	};
}

jQuery.each( [
	"tabIndex",
	"readOnly",
	"maxLength",
	"cellSpacing",
	"cellPadding",
	"rowSpan",
	"colSpan",
	"useMap",
	"frameBorder",
	"contentEditable"
], function() {
	jQuery.propFix[ this.toLowerCase() ] = this;
} );




	// Strip and collapse whitespace according to HTML spec
	// https://infra.spec.whatwg.org/#strip-and-collapse-ascii-whitespace
	function stripAndCollapse( value ) {
		var tokens = value.match( rnothtmlwhite ) || [];
		return tokens.join( " " );
	}


function getClass( elem ) {
	return elem.getAttribute && elem.getAttribute( "class" ) || "";
}

function classesToArray( value ) {
	if ( Array.isArray( value ) ) {
		return value;
	}
	if ( typeof value === "string" ) {
		return value.match( rnothtmlwhite ) || [];
	}
	return [];
}

jQuery.fn.extend( {
	addClass: function( value ) {
		var classes, elem, cur, curValue, clazz, j, finalValue,
			i = 0;

		if ( isFunction( value ) ) {
			return this.each( function( j ) {
				jQuery( this ).addClass( value.call( this, j, getClass( this ) ) );
			} );
		}

		classes = classesToArray( value );

		if ( classes.length ) {
			while ( ( elem = this[ i++ ] ) ) {
				curValue = getClass( elem );
				cur = elem.nodeType === 1 && ( " " + stripAndCollapse( curValue ) + " " );

				if ( cur ) {
					j = 0;
					while ( ( clazz = classes[ j++ ] ) ) {
						if ( cur.indexOf( " " + clazz + " " ) < 0 ) {
							cur += clazz + " ";
						}
					}

					// Only assign if different to avoid unneeded rendering.
					finalValue = stripAndCollapse( cur );
					if ( curValue !== finalValue ) {
						elem.setAttribute( "class", finalValue );
					}
				}
			}
		}

		return this;
	},

	removeClass: function( value ) {
		var classes, elem, cur, curValue, clazz, j, finalValue,
			i = 0;

		if ( isFunction( value ) ) {
			return this.each( function( j ) {
				jQuery( this ).removeClass( value.call( this, j, getClass( this ) ) );
			} );
		}

		if ( !arguments.length ) {
			return this.attr( "class", "" );
		}

		classes = classesToArray( value );

		if ( classes.length ) {
			while ( ( elem = this[ i++ ] ) ) {
				curValue = getClass( elem );

				// This expression is here for better compressibility (see addClass)
				cur = elem.nodeType === 1 && ( " " + stripAndCollapse( curValue ) + " " );

				if ( cur ) {
					j = 0;
					while ( ( clazz = classes[ j++ ] ) ) {

						// Remove *all* instances
						while ( cur.indexOf( " " + clazz + " " ) > -1 ) {
							cur = cur.replace( " " + clazz + " ", " " );
						}
					}

					// Only assign if different to avoid unneeded rendering.
					finalValue = stripAndCollapse( cur );
					if ( curValue !== finalValue ) {
						elem.setAttribute( "class", finalValue );
					}
				}
			}
		}

		return this;
	},

	toggleClass: function( value, stateVal ) {
		var type = typeof value,
			isValidValue = type === "string" || Array.isArray( value );

		if ( typeof stateVal === "boolean" && isValidValue ) {
			return stateVal ? this.addClass( value ) : this.removeClass( value );
		}

		if ( isFunction( value ) ) {
			return this.each( function( i ) {
				jQuery( this ).toggleClass(
					value.call( this, i, getClass( this ), stateVal ),
					stateVal
				);
			} );
		}

		return this.each( function() {
			var className, i, self, classNames;

			if ( isValidValue ) {

				// Toggle individual class names
				i = 0;
				self = jQuery( this );
				classNames = classesToArray( value );

				while ( ( className = classNames[ i++ ] ) ) {

					// Check each className given, space separated list
					if ( self.hasClass( className ) ) {
						self.removeClass( className );
					} else {
						self.addClass( className );
					}
				}

			// Toggle whole class name
			} else if ( value === undefined || type === "boolean" ) {
				className = getClass( this );
				if ( className ) {

					// Store className if set
					dataPriv.set( this, "__className__", className );
				}

				// If the element has a class name or if we're passed `false`,
				// then remove the whole classname (if there was one, the above saved it).
				// Otherwise bring back whatever was previously saved (if anything),
				// falling back to the empty string if nothing was stored.
				if ( this.setAttribute ) {
					this.setAttribute( "class",
						className || value === false ?
							"" :
							dataPriv.get( this, "__className__" ) || ""
					);
				}
			}
		} );
	},

	hasClass: function( selector ) {
		var className, elem,
			i = 0;

		className = " " + selector + " ";
		while ( ( elem = this[ i++ ] ) ) {
			if ( elem.nodeType === 1 &&
				( " " + stripAndCollapse( getClass( elem ) ) + " " ).indexOf( className ) > -1 ) {
				return true;
			}
		}

		return false;
	}
} );




var rreturn = /\r/g;

jQuery.fn.extend( {
	val: function( value ) {
		var hooks, ret, valueIsFunction,
			elem = this[ 0 ];

		if ( !arguments.length ) {
			if ( elem ) {
				hooks = jQuery.valHooks[ elem.type ] ||
					jQuery.valHooks[ elem.nodeName.toLowerCase() ];

				if ( hooks &&
					"get" in hooks &&
					( ret = hooks.get( elem, "value" ) ) !== undefined
				) {
					return ret;
				}

				ret = elem.value;

				// Handle most common string cases
				if ( typeof ret === "string" ) {
					return ret.replace( rreturn, "" );
				}

				// Handle cases where value is null/undef or number
				return ret == null ? "" : ret;
			}

			return;
		}

		valueIsFunction = isFunction( value );

		return this.each( function( i ) {
			var val;

			if ( this.nodeType !== 1 ) {
				return;
			}

			if ( valueIsFunction ) {
				val = value.call( this, i, jQuery( this ).val() );
			} else {
				val = value;
			}

			// Treat null/undefined as ""; convert numbers to string
			if ( val == null ) {
				val = "";

			} else if ( typeof val === "number" ) {
				val += "";

			} else if ( Array.isArray( val ) ) {
				val = jQuery.map( val, function( value ) {
					return value == null ? "" : value + "";
				} );
			}

			hooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];

			// If set returns undefined, fall back to normal setting
			if ( !hooks || !( "set" in hooks ) || hooks.set( this, val, "value" ) === undefined ) {
				this.value = val;
			}
		} );
	}
} );

jQuery.extend( {
	valHooks: {
		option: {
			get: function( elem ) {

				var val = jQuery.find.attr( elem, "value" );
				return val != null ?
					val :

					// Support: IE <=10 - 11 only
					// option.text throws exceptions (#14686, #14858)
					// Strip and collapse whitespace
					// https://html.spec.whatwg.org/#strip-and-collapse-whitespace
					stripAndCollapse( jQuery.text( elem ) );
			}
		},
		select: {
			get: function( elem ) {
				var value, option, i,
					options = elem.options,
					index = elem.selectedIndex,
					one = elem.type === "select-one",
					values = one ? null : [],
					max = one ? index + 1 : options.length;

				if ( index < 0 ) {
					i = max;

				} else {
					i = one ? index : 0;
				}

				// Loop through all the selected options
				for ( ; i < max; i++ ) {
					option = options[ i ];

					// Support: IE <=9 only
					// IE8-9 doesn't update selected after form reset (#2551)
					if ( ( option.selected || i === index ) &&

							// Don't return options that are disabled or in a disabled optgroup
							!option.disabled &&
							( !option.parentNode.disabled ||
								!nodeName( option.parentNode, "optgroup" ) ) ) {

						// Get the specific value for the option
						value = jQuery( option ).val();

						// We don't need an array for one selects
						if ( one ) {
							return value;
						}

						// Multi-Selects return an array
						values.push( value );
					}
				}

				return values;
			},

			set: function( elem, value ) {
				var optionSet, option,
					options = elem.options,
					values = jQuery.makeArray( value ),
					i = options.length;

				while ( i-- ) {
					option = options[ i ];

					/* eslint-disable no-cond-assign */

					if ( option.selected =
						jQuery.inArray( jQuery.valHooks.option.get( option ), values ) > -1
					) {
						optionSet = true;
					}

					/* eslint-enable no-cond-assign */
				}

				// Force browsers to behave consistently when non-matching value is set
				if ( !optionSet ) {
					elem.selectedIndex = -1;
				}
				return values;
			}
		}
	}
} );

// Radios and checkboxes getter/setter
jQuery.each( [ "radio", "checkbox" ], function() {
	jQuery.valHooks[ this ] = {
		set: function( elem, value ) {
			if ( Array.isArray( value ) ) {
				return ( elem.checked = jQuery.inArray( jQuery( elem ).val(), value ) > -1 );
			}
		}
	};
	if ( !support.checkOn ) {
		jQuery.valHooks[ this ].get = function( elem ) {
			return elem.getAttribute( "value" ) === null ? "on" : elem.value;
		};
	}
} );




// Return jQuery for attributes-only inclusion


support.focusin = "onfocusin" in window;


var rfocusMorph = /^(?:focusinfocus|focusoutblur)$/,
	stopPropagationCallback = function( e ) {
		e.stopPropagation();
	};

jQuery.extend( jQuery.event, {

	trigger: function( event, data, elem, onlyHandlers ) {

		var i, cur, tmp, bubbleType, ontype, handle, special, lastElement,
			eventPath = [ elem || document ],
			type = hasOwn.call( event, "type" ) ? event.type : event,
			namespaces = hasOwn.call( event, "namespace" ) ? event.namespace.split( "." ) : [];

		cur = lastElement = tmp = elem = elem || document;

		// Don't do events on text and comment nodes
		if ( elem.nodeType === 3 || elem.nodeType === 8 ) {
			return;
		}

		// focus/blur morphs to focusin/out; ensure we're not firing them right now
		if ( rfocusMorph.test( type + jQuery.event.triggered ) ) {
			return;
		}

		if ( type.indexOf( "." ) > -1 ) {

			// Namespaced trigger; create a regexp to match event type in handle()
			namespaces = type.split( "." );
			type = namespaces.shift();
			namespaces.sort();
		}
		ontype = type.indexOf( ":" ) < 0 && "on" + type;

		// Caller can pass in a jQuery.Event object, Object, or just an event type string
		event = event[ jQuery.expando ] ?
			event :
			new jQuery.Event( type, typeof event === "object" && event );

		// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)
		event.isTrigger = onlyHandlers ? 2 : 3;
		event.namespace = namespaces.join( "." );
		event.rnamespace = event.namespace ?
			new RegExp( "(^|\\.)" + namespaces.join( "\\.(?:.*\\.|)" ) + "(\\.|$)" ) :
			null;

		// Clean up the event in case it is being reused
		event.result = undefined;
		if ( !event.target ) {
			event.target = elem;
		}

		// Clone any incoming data and prepend the event, creating the handler arg list
		data = data == null ?
			[ event ] :
			jQuery.makeArray( data, [ event ] );

		// Allow special events to draw outside the lines
		special = jQuery.event.special[ type ] || {};
		if ( !onlyHandlers && special.trigger && special.trigger.apply( elem, data ) === false ) {
			return;
		}

		// Determine event propagation path in advance, per W3C events spec (#9951)
		// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)
		if ( !onlyHandlers && !special.noBubble && !isWindow( elem ) ) {

			bubbleType = special.delegateType || type;
			if ( !rfocusMorph.test( bubbleType + type ) ) {
				cur = cur.parentNode;
			}
			for ( ; cur; cur = cur.parentNode ) {
				eventPath.push( cur );
				tmp = cur;
			}

			// Only add window if we got to document (e.g., not plain obj or detached DOM)
			if ( tmp === ( elem.ownerDocument || document ) ) {
				eventPath.push( tmp.defaultView || tmp.parentWindow || window );
			}
		}

		// Fire handlers on the event path
		i = 0;
		while ( ( cur = eventPath[ i++ ] ) && !event.isPropagationStopped() ) {
			lastElement = cur;
			event.type = i > 1 ?
				bubbleType :
				special.bindType || type;

			// jQuery handler
			handle = ( dataPriv.get( cur, "events" ) || Object.create( null ) )[ event.type ] &&
				dataPriv.get( cur, "handle" );
			if ( handle ) {
				handle.apply( cur, data );
			}

			// Native handler
			handle = ontype && cur[ ontype ];
			if ( handle && handle.apply && acceptData( cur ) ) {
				event.result = handle.apply( cur, data );
				if ( event.result === false ) {
					event.preventDefault();
				}
			}
		}
		event.type = type;

		// If nobody prevented the default action, do it now
		if ( !onlyHandlers && !event.isDefaultPrevented() ) {

			if ( ( !special._default ||
				special._default.apply( eventPath.pop(), data ) === false ) &&
				acceptData( elem ) ) {

				// Call a native DOM method on the target with the same name as the event.
				// Don't do default actions on window, that's where global variables be (#6170)
				if ( ontype && isFunction( elem[ type ] ) && !isWindow( elem ) ) {

					// Don't re-trigger an onFOO event when we call its FOO() method
					tmp = elem[ ontype ];

					if ( tmp ) {
						elem[ ontype ] = null;
					}

					// Prevent re-triggering of the same event, since we already bubbled it above
					jQuery.event.triggered = type;

					if ( event.isPropagationStopped() ) {
						lastElement.addEventListener( type, stopPropagationCallback );
					}

					elem[ type ]();

					if ( event.isPropagationStopped() ) {
						lastElement.removeEventListener( type, stopPropagationCallback );
					}

					jQuery.event.triggered = undefined;

					if ( tmp ) {
						elem[ ontype ] = tmp;
					}
				}
			}
		}

		return event.result;
	},

	// Piggyback on a donor event to simulate a different one
	// Used only for `focus(in | out)` events
	simulate: function( type, elem, event ) {
		var e = jQuery.extend(
			new jQuery.Event(),
			event,
			{
				type: type,
				isSimulated: true
			}
		);

		jQuery.event.trigger( e, null, elem );
	}

} );

jQuery.fn.extend( {

	trigger: function( type, data ) {
		return this.each( function() {
			jQuery.event.trigger( type, data, this );
		} );
	},
	triggerHandler: function( type, data ) {
		var elem = this[ 0 ];
		if ( elem ) {
			return jQuery.event.trigger( type, data, elem, true );
		}
	}
} );


// Support: Firefox <=44
// Firefox doesn't have focus(in | out) events
// Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787
//
// Support: Chrome <=48 - 49, Safari <=9.0 - 9.1
// focus(in | out) events fire after focus & blur events,
// which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order
// Related ticket - https://bugs.chromium.org/p/chromium/issues/detail?id=449857
if ( !support.focusin ) {
	jQuery.each( { focus: "focusin", blur: "focusout" }, function( orig, fix ) {

		// Attach a single capturing handler on the document while someone wants focusin/focusout
		var handler = function( event ) {
			jQuery.event.simulate( fix, event.target, jQuery.event.fix( event ) );
		};

		jQuery.event.special[ fix ] = {
			setup: function() {

				// Handle: regular nodes (via `this.ownerDocument`), window
				// (via `this.document`) & document (via `this`).
				var doc = this.ownerDocument || this.document || this,
					attaches = dataPriv.access( doc, fix );

				if ( !attaches ) {
					doc.addEventListener( orig, handler, true );
				}
				dataPriv.access( doc, fix, ( attaches || 0 ) + 1 );
			},
			teardown: function() {
				var doc = this.ownerDocument || this.document || this,
					attaches = dataPriv.access( doc, fix ) - 1;

				if ( !attaches ) {
					doc.removeEventListener( orig, handler, true );
					dataPriv.remove( doc, fix );

				} else {
					dataPriv.access( doc, fix, attaches );
				}
			}
		};
	} );
}
var location = window.location;

var nonce = { guid: Date.now() };

var rquery = ( /\?/ );



// Cross-browser xml parsing
jQuery.parseXML = function( data ) {
	var xml, parserErrorElem;
	if ( !data || typeof data !== "string" ) {
		return null;
	}

	// Support: IE 9 - 11 only
	// IE throws on parseFromString with invalid input.
	try {
		xml = ( new window.DOMParser() ).parseFromString( data, "text/xml" );
	} catch ( e ) {}

	parserErrorElem = xml && xml.getElementsByTagName( "parsererror" )[ 0 ];
	if ( !xml || parserErrorElem ) {
		jQuery.error( "Invalid XML: " + (
			parserErrorElem ?
				jQuery.map( parserErrorElem.childNodes, function( el ) {
					return el.textContent;
				} ).join( "\n" ) :
				data
		) );
	}
	return xml;
};


var
	rbracket = /\[\]$/,
	rCRLF = /\r?\n/g,
	rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,
	rsubmittable = /^(?:input|select|textarea|keygen)/i;

function buildParams( prefix, obj, traditional, add ) {
	var name;

	if ( Array.isArray( obj ) ) {

		// Serialize array item.
		jQuery.each( obj, function( i, v ) {
			if ( traditional || rbracket.test( prefix ) ) {

				// Treat each array item as a scalar.
				add( prefix, v );

			} else {

				// Item is non-scalar (array or object), encode its numeric index.
				buildParams(
					prefix + "[" + ( typeof v === "object" && v != null ? i : "" ) + "]",
					v,
					traditional,
					add
				);
			}
		} );

	} else if ( !traditional && toType( obj ) === "object" ) {

		// Serialize object item.
		for ( name in obj ) {
			buildParams( prefix + "[" + name + "]", obj[ name ], traditional, add );
		}

	} else {

		// Serialize scalar item.
		add( prefix, obj );
	}
}

// Serialize an array of form elements or a set of
// key/values into a query string
jQuery.param = function( a, traditional ) {
	var prefix,
		s = [],
		add = function( key, valueOrFunction ) {

			// If value is a function, invoke it and use its return value
			var value = isFunction( valueOrFunction ) ?
				valueOrFunction() :
				valueOrFunction;

			s[ s.length ] = encodeURIComponent( key ) + "=" +
				encodeURIComponent( value == null ? "" : value );
		};

	if ( a == null ) {
		return "";
	}

	// If an array was passed in, assume that it is an array of form elements.
	if ( Array.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {

		// Serialize the form elements
		jQuery.each( a, function() {
			add( this.name, this.value );
		} );

	} else {

		// If traditional, encode the "old" way (the way 1.3.2 or older
		// did it), otherwise encode params recursively.
		for ( prefix in a ) {
			buildParams( prefix, a[ prefix ], traditional, add );
		}
	}

	// Return the resulting serialization
	return s.join( "&" );
};

jQuery.fn.extend( {
	serialize: function() {
		return jQuery.param( this.serializeArray() );
	},
	serializeArray: function() {
		return this.map( function() {

			// Can add propHook for "elements" to filter or add form elements
			var elements = jQuery.prop( this, "elements" );
			return elements ? jQuery.makeArray( elements ) : this;
		} ).filter( function() {
			var type = this.type;

			// Use .is( ":disabled" ) so that fieldset[disabled] works
			return this.name && !jQuery( this ).is( ":disabled" ) &&
				rsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&
				( this.checked || !rcheckableType.test( type ) );
		} ).map( function( _i, elem ) {
			var val = jQuery( this ).val();

			if ( val == null ) {
				return null;
			}

			if ( Array.isArray( val ) ) {
				return jQuery.map( val, function( val ) {
					return { name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
				} );
			}

			return { name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
		} ).get();
	}
} );


var
	r20 = /%20/g,
	rhash = /#.*$/,
	rantiCache = /([?&])_=[^&]*/,
	rheaders = /^(.*?):[ \t]*([^\r\n]*)$/mg,

	// #7653, #8125, #8152: local protocol detection
	rlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,
	rnoContent = /^(?:GET|HEAD)$/,
	rprotocol = /^\/\//,

	/* Prefilters
	 * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)
	 * 2) These are called:
	 *    - BEFORE asking for a transport
	 *    - AFTER param serialization (s.data is a string if s.processData is true)
	 * 3) key is the dataType
	 * 4) the catchall symbol "*" can be used
	 * 5) execution will start with transport dataType and THEN continue down to "*" if needed
	 */
	prefilters = {},

	/* Transports bindings
	 * 1) key is the dataType
	 * 2) the catchall symbol "*" can be used
	 * 3) selection will start with transport dataType and THEN go to "*" if needed
	 */
	transports = {},

	// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression
	allTypes = "*/".concat( "*" ),

	// Anchor tag for parsing the document origin
	originAnchor = document.createElement( "a" );

originAnchor.href = location.href;

// Base "constructor" for jQuery.ajaxPrefilter and jQuery.ajaxTransport
function addToPrefiltersOrTransports( structure ) {

	// dataTypeExpression is optional and defaults to "*"
	return function( dataTypeExpression, func ) {

		if ( typeof dataTypeExpression !== "string" ) {
			func = dataTypeExpression;
			dataTypeExpression = "*";
		}

		var dataType,
			i = 0,
			dataTypes = dataTypeExpression.toLowerCase().match( rnothtmlwhite ) || [];

		if ( isFunction( func ) ) {

			// For each dataType in the dataTypeExpression
			while ( ( dataType = dataTypes[ i++ ] ) ) {

				// Prepend if requested
				if ( dataType[ 0 ] === "+" ) {
					dataType = dataType.slice( 1 ) || "*";
					( structure[ dataType ] = structure[ dataType ] || [] ).unshift( func );

				// Otherwise append
				} else {
					( structure[ dataType ] = structure[ dataType ] || [] ).push( func );
				}
			}
		}
	};
}

// Base inspection function for prefilters and transports
function inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {

	var inspected = {},
		seekingTransport = ( structure === transports );

	function inspect( dataType ) {
		var selected;
		inspected[ dataType ] = true;
		jQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {
			var dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );
			if ( typeof dataTypeOrTransport === "string" &&
				!seekingTransport && !inspected[ dataTypeOrTransport ] ) {

				options.dataTypes.unshift( dataTypeOrTransport );
				inspect( dataTypeOrTransport );
				return false;
			} else if ( seekingTransport ) {
				return !( selected = dataTypeOrTransport );
			}
		} );
		return selected;
	}

	return inspect( options.dataTypes[ 0 ] ) || !inspected[ "*" ] && inspect( "*" );
}

// A special extend for ajax options
// that takes "flat" options (not to be deep extended)
// Fixes #9887
function ajaxExtend( target, src ) {
	var key, deep,
		flatOptions = jQuery.ajaxSettings.flatOptions || {};

	for ( key in src ) {
		if ( src[ key ] !== undefined ) {
			( flatOptions[ key ] ? target : ( deep || ( deep = {} ) ) )[ key ] = src[ key ];
		}
	}
	if ( deep ) {
		jQuery.extend( true, target, deep );
	}

	return target;
}

/* Handles responses to an ajax request:
 * - finds the right dataType (mediates between content-type and expected dataType)
 * - returns the corresponding response
 */
function ajaxHandleResponses( s, jqXHR, responses ) {

	var ct, type, finalDataType, firstDataType,
		contents = s.contents,
		dataTypes = s.dataTypes;

	// Remove auto dataType and get content-type in the process
	while ( dataTypes[ 0 ] === "*" ) {
		dataTypes.shift();
		if ( ct === undefined ) {
			ct = s.mimeType || jqXHR.getResponseHeader( "Content-Type" );
		}
	}

	// Check if we're dealing with a known content-type
	if ( ct ) {
		for ( type in contents ) {
			if ( contents[ type ] && contents[ type ].test( ct ) ) {
				dataTypes.unshift( type );
				break;
			}
		}
	}

	// Check to see if we have a response for the expected dataType
	if ( dataTypes[ 0 ] in responses ) {
		finalDataType = dataTypes[ 0 ];
	} else {

		// Try convertible dataTypes
		for ( type in responses ) {
			if ( !dataTypes[ 0 ] || s.converters[ type + " " + dataTypes[ 0 ] ] ) {
				finalDataType = type;
				break;
			}
			if ( !firstDataType ) {
				firstDataType = type;
			}
		}

		// Or just use first one
		finalDataType = finalDataType || firstDataType;
	}

	// If we found a dataType
	// We add the dataType to the list if needed
	// and return the corresponding response
	if ( finalDataType ) {
		if ( finalDataType !== dataTypes[ 0 ] ) {
			dataTypes.unshift( finalDataType );
		}
		return responses[ finalDataType ];
	}
}

/* Chain conversions given the request and the original response
 * Also sets the responseXXX fields on the jqXHR instance
 */
function ajaxConvert( s, response, jqXHR, isSuccess ) {
	var conv2, current, conv, tmp, prev,
		converters = {},

		// Work with a copy of dataTypes in case we need to modify it for conversion
		dataTypes = s.dataTypes.slice();

	// Create converters map with lowercased keys
	if ( dataTypes[ 1 ] ) {
		for ( conv in s.converters ) {
			converters[ conv.toLowerCase() ] = s.converters[ conv ];
		}
	}

	current = dataTypes.shift();

	// Convert to each sequential dataType
	while ( current ) {

		if ( s.responseFields[ current ] ) {
			jqXHR[ s.responseFields[ current ] ] = response;
		}

		// Apply the dataFilter if provided
		if ( !prev && isSuccess && s.dataFilter ) {
			response = s.dataFilter( response, s.dataType );
		}

		prev = current;
		current = dataTypes.shift();

		if ( current ) {

			// There's only work to do if current dataType is non-auto
			if ( current === "*" ) {

				current = prev;

			// Convert response if prev dataType is non-auto and differs from current
			} else if ( prev !== "*" && prev !== current ) {

				// Seek a direct converter
				conv = converters[ prev + " " + current ] || converters[ "* " + current ];

				// If none found, seek a pair
				if ( !conv ) {
					for ( conv2 in converters ) {

						// If conv2 outputs current
						tmp = conv2.split( " " );
						if ( tmp[ 1 ] === current ) {

							// If prev can be converted to accepted input
							conv = converters[ prev + " " + tmp[ 0 ] ] ||
								converters[ "* " + tmp[ 0 ] ];
							if ( conv ) {

								// Condense equivalence converters
								if ( conv === true ) {
									conv = converters[ conv2 ];

								// Otherwise, insert the intermediate dataType
								} else if ( converters[ conv2 ] !== true ) {
									current = tmp[ 0 ];
									dataTypes.unshift( tmp[ 1 ] );
								}
								break;
							}
						}
					}
				}

				// Apply converter (if not an equivalence)
				if ( conv !== true ) {

					// Unless errors are allowed to bubble, catch and return them
					if ( conv && s.throws ) {
						response = conv( response );
					} else {
						try {
							response = conv( response );
						} catch ( e ) {
							return {
								state: "parsererror",
								error: conv ? e : "No conversion from " + prev + " to " + current
							};
						}
					}
				}
			}
		}
	}

	return { state: "success", data: response };
}

jQuery.extend( {

	// Counter for holding the number of active queries
	active: 0,

	// Last-Modified header cache for next request
	lastModified: {},
	etag: {},

	ajaxSettings: {
		url: location.href,
		type: "GET",
		isLocal: rlocalProtocol.test( location.protocol ),
		global: true,
		processData: true,
		async: true,
		contentType: "application/x-www-form-urlencoded; charset=UTF-8",

		/*
		timeout: 0,
		data: null,
		dataType: null,
		username: null,
		password: null,
		cache: null,
		throws: false,
		traditional: false,
		headers: {},
		*/

		accepts: {
			"*": allTypes,
			text: "text/plain",
			html: "text/html",
			xml: "application/xml, text/xml",
			json: "application/json, text/javascript"
		},

		contents: {
			xml: /\bxml\b/,
			html: /\bhtml/,
			json: /\bjson\b/
		},

		responseFields: {
			xml: "responseXML",
			text: "responseText",
			json: "responseJSON"
		},

		// Data converters
		// Keys separate source (or catchall "*") and destination types with a single space
		converters: {

			// Convert anything to text
			"* text": String,

			// Text to html (true = no transformation)
			"text html": true,

			// Evaluate text as a json expression
			"text json": JSON.parse,

			// Parse text as xml
			"text xml": jQuery.parseXML
		},

		// For options that shouldn't be deep extended:
		// you can add your own custom options here if
		// and when you create one that shouldn't be
		// deep extended (see ajaxExtend)
		flatOptions: {
			url: true,
			context: true
		}
	},

	// Creates a full fledged settings object into target
	// with both ajaxSettings and settings fields.
	// If target is omitted, writes into ajaxSettings.
	ajaxSetup: function( target, settings ) {
		return settings ?

			// Building a settings object
			ajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :

			// Extending ajaxSettings
			ajaxExtend( jQuery.ajaxSettings, target );
	},

	ajaxPrefilter: addToPrefiltersOrTransports( prefilters ),
	ajaxTransport: addToPrefiltersOrTransports( transports ),

	// Main method
	ajax: function( url, options ) {

		// If url is an object, simulate pre-1.5 signature
		if ( typeof url === "object" ) {
			options = url;
			url = undefined;
		}

		// Force options to be an object
		options = options || {};

		var transport,

			// URL without anti-cache param
			cacheURL,

			// Response headers
			responseHeadersString,
			responseHeaders,

			// timeout handle
			timeoutTimer,

			// Url cleanup var
			urlAnchor,

			// Request state (becomes false upon send and true upon completion)
			completed,

			// To know if global events are to be dispatched
			fireGlobals,

			// Loop variable
			i,

			// uncached part of the url
			uncached,

			// Create the final options object
			s = jQuery.ajaxSetup( {}, options ),

			// Callbacks context
			callbackContext = s.context || s,

			// Context for global events is callbackContext if it is a DOM node or jQuery collection
			globalEventContext = s.context &&
				( callbackContext.nodeType || callbackContext.jquery ) ?
				jQuery( callbackContext ) :
				jQuery.event,

			// Deferreds
			deferred = jQuery.Deferred(),
			completeDeferred = jQuery.Callbacks( "once memory" ),

			// Status-dependent callbacks
			statusCode = s.statusCode || {},

			// Headers (they are sent all at once)
			requestHeaders = {},
			requestHeadersNames = {},

			// Default abort message
			strAbort = "canceled",

			// Fake xhr
			jqXHR = {
				readyState: 0,

				// Builds headers hashtable if needed
				getResponseHeader: function( key ) {
					var match;
					if ( completed ) {
						if ( !responseHeaders ) {
							responseHeaders = {};
							while ( ( match = rheaders.exec( responseHeadersString ) ) ) {
								responseHeaders[ match[ 1 ].toLowerCase() + " " ] =
									( responseHeaders[ match[ 1 ].toLowerCase() + " " ] || [] )
										.concat( match[ 2 ] );
							}
						}
						match = responseHeaders[ key.toLowerCase() + " " ];
					}
					return match == null ? null : match.join( ", " );
				},

				// Raw string
				getAllResponseHeaders: function() {
					return completed ? responseHeadersString : null;
				},

				// Caches the header
				setRequestHeader: function( name, value ) {
					if ( completed == null ) {
						name = requestHeadersNames[ name.toLowerCase() ] =
							requestHeadersNames[ name.toLowerCase() ] || name;
						requestHeaders[ name ] = value;
					}
					return this;
				},

				// Overrides response content-type header
				overrideMimeType: function( type ) {
					if ( completed == null ) {
						s.mimeType = type;
					}
					return this;
				},

				// Status-dependent callbacks
				statusCode: function( map ) {
					var code;
					if ( map ) {
						if ( completed ) {

							// Execute the appropriate callbacks
							jqXHR.always( map[ jqXHR.status ] );
						} else {

							// Lazy-add the new callbacks in a way that preserves old ones
							for ( code in map ) {
								statusCode[ code ] = [ statusCode[ code ], map[ code ] ];
							}
						}
					}
					return this;
				},

				// Cancel the request
				abort: function( statusText ) {
					var finalText = statusText || strAbort;
					if ( transport ) {
						transport.abort( finalText );
					}
					done( 0, finalText );
					return this;
				}
			};

		// Attach deferreds
		deferred.promise( jqXHR );

		// Add protocol if not provided (prefilters might expect it)
		// Handle falsy url in the settings object (#10093: consistency with old signature)
		// We also use the url parameter if available
		s.url = ( ( url || s.url || location.href ) + "" )
			.replace( rprotocol, location.protocol + "//" );

		// Alias method option to type as per ticket #12004
		s.type = options.method || options.type || s.method || s.type;

		// Extract dataTypes list
		s.dataTypes = ( s.dataType || "*" ).toLowerCase().match( rnothtmlwhite ) || [ "" ];

		// A cross-domain request is in order when the origin doesn't match the current origin.
		if ( s.crossDomain == null ) {
			urlAnchor = document.createElement( "a" );

			// Support: IE <=8 - 11, Edge 12 - 15
			// IE throws exception on accessing the href property if url is malformed,
			// e.g. http://example.com:80x/
			try {
				urlAnchor.href = s.url;

				// Support: IE <=8 - 11 only
				// Anchor's host property isn't correctly set when s.url is relative
				urlAnchor.href = urlAnchor.href;
				s.crossDomain = originAnchor.protocol + "//" + originAnchor.host !==
					urlAnchor.protocol + "//" + urlAnchor.host;
			} catch ( e ) {

				// If there is an error parsing the URL, assume it is crossDomain,
				// it can be rejected by the transport if it is invalid
				s.crossDomain = true;
			}
		}

		// Convert data if not already a string
		if ( s.data && s.processData && typeof s.data !== "string" ) {
			s.data = jQuery.param( s.data, s.traditional );
		}

		// Apply prefilters
		inspectPrefiltersOrTransports( prefilters, s, options, jqXHR );

		// If request was aborted inside a prefilter, stop there
		if ( completed ) {
			return jqXHR;
		}

		// We can fire global events as of now if asked to
		// Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)
		fireGlobals = jQuery.event && s.global;

		// Watch for a new set of requests
		if ( fireGlobals && jQuery.active++ === 0 ) {
			jQuery.event.trigger( "ajaxStart" );
		}

		// Uppercase the type
		s.type = s.type.toUpperCase();

		// Determine if request has content
		s.hasContent = !rnoContent.test( s.type );

		// Save the URL in case we're toying with the If-Modified-Since
		// and/or If-None-Match header later on
		// Remove hash to simplify url manipulation
		cacheURL = s.url.replace( rhash, "" );

		// More options handling for requests with no content
		if ( !s.hasContent ) {

			// Remember the hash so we can put it back
			uncached = s.url.slice( cacheURL.length );

			// If data is available and should be processed, append data to url
			if ( s.data && ( s.processData || typeof s.data === "string" ) ) {
				cacheURL += ( rquery.test( cacheURL ) ? "&" : "?" ) + s.data;

				// #9682: remove data so that it's not used in an eventual retry
				delete s.data;
			}

			// Add or update anti-cache param if needed
			if ( s.cache === false ) {
				cacheURL = cacheURL.replace( rantiCache, "$1" );
				uncached = ( rquery.test( cacheURL ) ? "&" : "?" ) + "_=" + ( nonce.guid++ ) +
					uncached;
			}

			// Put hash and anti-cache on the URL that will be requested (gh-1732)
			s.url = cacheURL + uncached;

		// Change '%20' to '+' if this is encoded form body content (gh-2658)
		} else if ( s.data && s.processData &&
			( s.contentType || "" ).indexOf( "application/x-www-form-urlencoded" ) === 0 ) {
			s.data = s.data.replace( r20, "+" );
		}

		// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
		if ( s.ifModified ) {
			if ( jQuery.lastModified[ cacheURL ] ) {
				jqXHR.setRequestHeader( "If-Modified-Since", jQuery.lastModified[ cacheURL ] );
			}
			if ( jQuery.etag[ cacheURL ] ) {
				jqXHR.setRequestHeader( "If-None-Match", jQuery.etag[ cacheURL ] );
			}
		}

		// Set the correct header, if data is being sent
		if ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {
			jqXHR.setRequestHeader( "Content-Type", s.contentType );
		}

		// Set the Accepts header for the server, depending on the dataType
		jqXHR.setRequestHeader(
			"Accept",
			s.dataTypes[ 0 ] && s.accepts[ s.dataTypes[ 0 ] ] ?
				s.accepts[ s.dataTypes[ 0 ] ] +
					( s.dataTypes[ 0 ] !== "*" ? ", " + allTypes + "; q=0.01" : "" ) :
				s.accepts[ "*" ]
		);

		// Check for headers option
		for ( i in s.headers ) {
			jqXHR.setRequestHeader( i, s.headers[ i ] );
		}

		// Allow custom headers/mimetypes and early abort
		if ( s.beforeSend &&
			( s.beforeSend.call( callbackContext, jqXHR, s ) === false || completed ) ) {

			// Abort if not done already and return
			return jqXHR.abort();
		}

		// Aborting is no longer a cancellation
		strAbort = "abort";

		// Install callbacks on deferreds
		completeDeferred.add( s.complete );
		jqXHR.done( s.success );
		jqXHR.fail( s.error );

		// Get transport
		transport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );

		// If no transport, we auto-abort
		if ( !transport ) {
			done( -1, "No Transport" );
		} else {
			jqXHR.readyState = 1;

			// Send global event
			if ( fireGlobals ) {
				globalEventContext.trigger( "ajaxSend", [ jqXHR, s ] );
			}

			// If request was aborted inside ajaxSend, stop there
			if ( completed ) {
				return jqXHR;
			}

			// Timeout
			if ( s.async && s.timeout > 0 ) {
				timeoutTimer = window.setTimeout( function() {
					jqXHR.abort( "timeout" );
				}, s.timeout );
			}

			try {
				completed = false;
				transport.send( requestHeaders, done );
			} catch ( e ) {

				// Rethrow post-completion exceptions
				if ( completed ) {
					throw e;
				}

				// Propagate others as results
				done( -1, e );
			}
		}

		// Callback for when everything is done
		function done( status, nativeStatusText, responses, headers ) {
			var isSuccess, success, error, response, modified,
				statusText = nativeStatusText;

			// Ignore repeat invocations
			if ( completed ) {
				return;
			}

			completed = true;

			// Clear timeout if it exists
			if ( timeoutTimer ) {
				window.clearTimeout( timeoutTimer );
			}

			// Dereference transport for early garbage collection
			// (no matter how long the jqXHR object will be used)
			transport = undefined;

			// Cache response headers
			responseHeadersString = headers || "";

			// Set readyState
			jqXHR.readyState = status > 0 ? 4 : 0;

			// Determine if successful
			isSuccess = status >= 200 && status < 300 || status === 304;

			// Get response data
			if ( responses ) {
				response = ajaxHandleResponses( s, jqXHR, responses );
			}

			// Use a noop converter for missing script but not if jsonp
			if ( !isSuccess &&
				jQuery.inArray( "script", s.dataTypes ) > -1 &&
				jQuery.inArray( "json", s.dataTypes ) < 0 ) {
				s.converters[ "text script" ] = function() {};
			}

			// Convert no matter what (that way responseXXX fields are always set)
			response = ajaxConvert( s, response, jqXHR, isSuccess );

			// If successful, handle type chaining
			if ( isSuccess ) {

				// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
				if ( s.ifModified ) {
					modified = jqXHR.getResponseHeader( "Last-Modified" );
					if ( modified ) {
						jQuery.lastModified[ cacheURL ] = modified;
					}
					modified = jqXHR.getResponseHeader( "etag" );
					if ( modified ) {
						jQuery.etag[ cacheURL ] = modified;
					}
				}

				// if no content
				if ( status === 204 || s.type === "HEAD" ) {
					statusText = "nocontent";

				// if not modified
				} else if ( status === 304 ) {
					statusText = "notmodified";

				// If we have data, let's convert it
				} else {
					statusText = response.state;
					success = response.data;
					error = response.error;
					isSuccess = !error;
				}
			} else {

				// Extract error from statusText and normalize for non-aborts
				error = statusText;
				if ( status || !statusText ) {
					statusText = "error";
					if ( status < 0 ) {
						status = 0;
					}
				}
			}

			// Set data for the fake xhr object
			jqXHR.status = status;
			jqXHR.statusText = ( nativeStatusText || statusText ) + "";

			// Success/Error
			if ( isSuccess ) {
				deferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );
			} else {
				deferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );
			}

			// Status-dependent callbacks
			jqXHR.statusCode( statusCode );
			statusCode = undefined;

			if ( fireGlobals ) {
				globalEventContext.trigger( isSuccess ? "ajaxSuccess" : "ajaxError",
					[ jqXHR, s, isSuccess ? success : error ] );
			}

			// Complete
			completeDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );

			if ( fireGlobals ) {
				globalEventContext.trigger( "ajaxComplete", [ jqXHR, s ] );

				// Handle the global AJAX counter
				if ( !( --jQuery.active ) ) {
					jQuery.event.trigger( "ajaxStop" );
				}
			}
		}

		return jqXHR;
	},

	getJSON: function( url, data, callback ) {
		return jQuery.get( url, data, callback, "json" );
	},

	getScript: function( url, callback ) {
		return jQuery.get( url, undefined, callback, "script" );
	}
} );

jQuery.each( [ "get", "post" ], function( _i, method ) {
	jQuery[ method ] = function( url, data, callback, type ) {

		// Shift arguments if data argument was omitted
		if ( isFunction( data ) ) {
			type = type || callback;
			callback = data;
			data = undefined;
		}

		// The url can be an options object (which then must have .url)
		return jQuery.ajax( jQuery.extend( {
			url: url,
			type: method,
			dataType: type,
			data: data,
			success: callback
		}, jQuery.isPlainObject( url ) && url ) );
	};
} );

jQuery.ajaxPrefilter( function( s ) {
	var i;
	for ( i in s.headers ) {
		if ( i.toLowerCase() === "content-type" ) {
			s.contentType = s.headers[ i ] || "";
		}
	}
} );


jQuery._evalUrl = function( url, options, doc ) {
	return jQuery.ajax( {
		url: url,

		// Make this explicit, since user can override this through ajaxSetup (#11264)
		type: "GET",
		dataType: "script",
		cache: true,
		async: false,
		global: false,

		// Only evaluate the response if it is successful (gh-4126)
		// dataFilter is not invoked for failure responses, so using it instead
		// of the default converter is kludgy but it works.
		converters: {
			"text script": function() {}
		},
		dataFilter: function( response ) {
			jQuery.globalEval( response, options, doc );
		}
	} );
};


jQuery.fn.extend( {
	wrapAll: function( html ) {
		var wrap;

		if ( this[ 0 ] ) {
			if ( isFunction( html ) ) {
				html = html.call( this[ 0 ] );
			}

			// The elements to wrap the target around
			wrap = jQuery( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );

			if ( this[ 0 ].parentNode ) {
				wrap.insertBefore( this[ 0 ] );
			}

			wrap.map( function() {
				var elem = this;

				while ( elem.firstElementChild ) {
					elem = elem.firstElementChild;
				}

				return elem;
			} ).append( this );
		}

		return this;
	},

	wrapInner: function( html ) {
		if ( isFunction( html ) ) {
			return this.each( function( i ) {
				jQuery( this ).wrapInner( html.call( this, i ) );
			} );
		}

		return this.each( function() {
			var self = jQuery( this ),
				contents = self.contents();

			if ( contents.length ) {
				contents.wrapAll( html );

			} else {
				self.append( html );
			}
		} );
	},

	wrap: function( html ) {
		var htmlIsFunction = isFunction( html );

		return this.each( function( i ) {
			jQuery( this ).wrapAll( htmlIsFunction ? html.call( this, i ) : html );
		} );
	},

	unwrap: function( selector ) {
		this.parent( selector ).not( "body" ).each( function() {
			jQuery( this ).replaceWith( this.childNodes );
		} );
		return this;
	}
} );


jQuery.expr.pseudos.hidden = function( elem ) {
	return !jQuery.expr.pseudos.visible( elem );
};
jQuery.expr.pseudos.visible = function( elem ) {
	return !!( elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length );
};




jQuery.ajaxSettings.xhr = function() {
	try {
		return new window.XMLHttpRequest();
	} catch ( e ) {}
};

var xhrSuccessStatus = {

		// File protocol always yields status code 0, assume 200
		0: 200,

		// Support: IE <=9 only
		// #1450: sometimes IE returns 1223 when it should be 204
		1223: 204
	},
	xhrSupported = jQuery.ajaxSettings.xhr();

support.cors = !!xhrSupported && ( "withCredentials" in xhrSupported );
support.ajax = xhrSupported = !!xhrSupported;

jQuery.ajaxTransport( function( options ) {
	var callback, errorCallback;

	// Cross domain only allowed if supported through XMLHttpRequest
	if ( support.cors || xhrSupported && !options.crossDomain ) {
		return {
			send: function( headers, complete ) {
				var i,
					xhr = options.xhr();

				xhr.open(
					options.type,
					options.url,
					options.async,
					options.username,
					options.password
				);

				// Apply custom fields if provided
				if ( options.xhrFields ) {
					for ( i in options.xhrFields ) {
						xhr[ i ] = options.xhrFields[ i ];
					}
				}

				// Override mime type if needed
				if ( options.mimeType && xhr.overrideMimeType ) {
					xhr.overrideMimeType( options.mimeType );
				}

				// X-Requested-With header
				// For cross-domain requests, seeing as conditions for a preflight are
				// akin to a jigsaw puzzle, we simply never set it to be sure.
				// (it can always be set on a per-request basis or even using ajaxSetup)
				// For same-domain requests, won't change header if already provided.
				if ( !options.crossDomain && !headers[ "X-Requested-With" ] ) {
					headers[ "X-Requested-With" ] = "XMLHttpRequest";
				}

				// Set headers
				for ( i in headers ) {
					xhr.setRequestHeader( i, headers[ i ] );
				}

				// Callback
				callback = function( type ) {
					return function() {
						if ( callback ) {
							callback = errorCallback = xhr.onload =
								xhr.onerror = xhr.onabort = xhr.ontimeout =
									xhr.onreadystatechange = null;

							if ( type === "abort" ) {
								xhr.abort();
							} else if ( type === "error" ) {

								// Support: IE <=9 only
								// On a manual native abort, IE9 throws
								// errors on any property access that is not readyState
								if ( typeof xhr.status !== "number" ) {
									complete( 0, "error" );
								} else {
									complete(

										// File: protocol always yields status 0; see #8605, #14207
										xhr.status,
										xhr.statusText
									);
								}
							} else {
								complete(
									xhrSuccessStatus[ xhr.status ] || xhr.status,
									xhr.statusText,

									// Support: IE <=9 only
									// IE9 has no XHR2 but throws on binary (trac-11426)
									// For XHR2 non-text, let the caller handle it (gh-2498)
									( xhr.responseType || "text" ) !== "text"  ||
									typeof xhr.responseText !== "string" ?
										{ binary: xhr.response } :
										{ text: xhr.responseText },
									xhr.getAllResponseHeaders()
								);
							}
						}
					};
				};

				// Listen to events
				xhr.onload = callback();
				errorCallback = xhr.onerror = xhr.ontimeout = callback( "error" );

				// Support: IE 9 only
				// Use onreadystatechange to replace onabort
				// to handle uncaught aborts
				if ( xhr.onabort !== undefined ) {
					xhr.onabort = errorCallback;
				} else {
					xhr.onreadystatechange = function() {

						// Check readyState before timeout as it changes
						if ( xhr.readyState === 4 ) {

							// Allow onerror to be called first,
							// but that will not handle a native abort
							// Also, save errorCallback to a variable
							// as xhr.onerror cannot be accessed
							window.setTimeout( function() {
								if ( callback ) {
									errorCallback();
								}
							} );
						}
					};
				}

				// Create the abort callback
				callback = callback( "abort" );

				try {

					// Do send the request (this may raise an exception)
					xhr.send( options.hasContent && options.data || null );
				} catch ( e ) {

					// #14683: Only rethrow if this hasn't been notified as an error yet
					if ( callback ) {
						throw e;
					}
				}
			},

			abort: function() {
				if ( callback ) {
					callback();
				}
			}
		};
	}
} );




// Prevent auto-execution of scripts when no explicit dataType was provided (See gh-2432)
jQuery.ajaxPrefilter( function( s ) {
	if ( s.crossDomain ) {
		s.contents.script = false;
	}
} );

// Install script dataType
jQuery.ajaxSetup( {
	accepts: {
		script: "text/javascript, application/javascript, " +
			"application/ecmascript, application/x-ecmascript"
	},
	contents: {
		script: /\b(?:java|ecma)script\b/
	},
	converters: {
		"text script": function( text ) {
			jQuery.globalEval( text );
			return text;
		}
	}
} );

// Handle cache's special case and crossDomain
jQuery.ajaxPrefilter( "script", function( s ) {
	if ( s.cache === undefined ) {
		s.cache = false;
	}
	if ( s.crossDomain ) {
		s.type = "GET";
	}
} );

// Bind script tag hack transport
jQuery.ajaxTransport( "script", function( s ) {

	// This transport only deals with cross domain or forced-by-attrs requests
	if ( s.crossDomain || s.scriptAttrs ) {
		var script, callback;
		return {
			send: function( _, complete ) {
				script = jQuery( "<script>" )
					.attr( s.scriptAttrs || {} )
					.prop( { charset: s.scriptCharset, src: s.url } )
					.on( "load error", callback = function( evt ) {
						script.remove();
						callback = null;
						if ( evt ) {
							complete( evt.type === "error" ? 404 : 200, evt.type );
						}
					} );

				// Use native DOM manipulation to avoid our domManip AJAX trickery
				document.head.appendChild( script[ 0 ] );
			},
			abort: function() {
				if ( callback ) {
					callback();
				}
			}
		};
	}
} );




var oldCallbacks = [],
	rjsonp = /(=)\?(?=&|$)|\?\?/;

// Default jsonp settings
jQuery.ajaxSetup( {
	jsonp: "callback",
	jsonpCallback: function() {
		var callback = oldCallbacks.pop() || ( jQuery.expando + "_" + ( nonce.guid++ ) );
		this[ callback ] = true;
		return callback;
	}
} );

// Detect, normalize options and install callbacks for jsonp requests
jQuery.ajaxPrefilter( "json jsonp", function( s, originalSettings, jqXHR ) {

	var callbackName, overwritten, responseContainer,
		jsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?
			"url" :
			typeof s.data === "string" &&
				( s.contentType || "" )
					.indexOf( "application/x-www-form-urlencoded" ) === 0 &&
				rjsonp.test( s.data ) && "data"
		);

	// Handle iff the expected data type is "jsonp" or we have a parameter to set
	if ( jsonProp || s.dataTypes[ 0 ] === "jsonp" ) {

		// Get callback name, remembering preexisting value associated with it
		callbackName = s.jsonpCallback = isFunction( s.jsonpCallback ) ?
			s.jsonpCallback() :
			s.jsonpCallback;

		// Insert callback into url or form data
		if ( jsonProp ) {
			s[ jsonProp ] = s[ jsonProp ].replace( rjsonp, "$1" + callbackName );
		} else if ( s.jsonp !== false ) {
			s.url += ( rquery.test( s.url ) ? "&" : "?" ) + s.jsonp + "=" + callbackName;
		}

		// Use data converter to retrieve json after script execution
		s.converters[ "script json" ] = function() {
			if ( !responseContainer ) {
				jQuery.error( callbackName + " was not called" );
			}
			return responseContainer[ 0 ];
		};

		// Force json dataType
		s.dataTypes[ 0 ] = "json";

		// Install callback
		overwritten = window[ callbackName ];
		window[ callbackName ] = function() {
			responseContainer = arguments;
		};

		// Clean-up function (fires after converters)
		jqXHR.always( function() {

			// If previous value didn't exist - remove it
			if ( overwritten === undefined ) {
				jQuery( window ).removeProp( callbackName );

			// Otherwise restore preexisting value
			} else {
				window[ callbackName ] = overwritten;
			}

			// Save back as free
			if ( s[ callbackName ] ) {

				// Make sure that re-using the options doesn't screw things around
				s.jsonpCallback = originalSettings.jsonpCallback;

				// Save the callback name for future use
				oldCallbacks.push( callbackName );
			}

			// Call if it was a function and we have a response
			if ( responseContainer && isFunction( overwritten ) ) {
				overwritten( responseContainer[ 0 ] );
			}

			responseContainer = overwritten = undefined;
		} );

		// Delegate to script
		return "script";
	}
} );




// Support: Safari 8 only
// In Safari 8 documents created via document.implementation.createHTMLDocument
// collapse sibling forms: the second one becomes a child of the first one.
// Because of that, this security measure has to be disabled in Safari 8.
// https://bugs.webkit.org/show_bug.cgi?id=137337
support.createHTMLDocument = ( function() {
	var body = document.implementation.createHTMLDocument( "" ).body;
	body.innerHTML = "<form></form><form></form>";
	return body.childNodes.length === 2;
} )();


// Argument "data" should be string of html
// context (optional): If specified, the fragment will be created in this context,
// defaults to document
// keepScripts (optional): If true, will include scripts passed in the html string
jQuery.parseHTML = function( data, context, keepScripts ) {
	if ( typeof data !== "string" ) {
		return [];
	}
	if ( typeof context === "boolean" ) {
		keepScripts = context;
		context = false;
	}

	var base, parsed, scripts;

	if ( !context ) {

		// Stop scripts or inline event handlers from being executed immediately
		// by using document.implementation
		if ( support.createHTMLDocument ) {
			context = document.implementation.createHTMLDocument( "" );

			// Set the base href for the created document
			// so any parsed elements with URLs
			// are based on the document's URL (gh-2965)
			base = context.createElement( "base" );
			base.href = document.location.href;
			context.head.appendChild( base );
		} else {
			context = document;
		}
	}

	parsed = rsingleTag.exec( data );
	scripts = !keepScripts && [];

	// Single tag
	if ( parsed ) {
		return [ context.createElement( parsed[ 1 ] ) ];
	}

	parsed = buildFragment( [ data ], context, scripts );

	if ( scripts && scripts.length ) {
		jQuery( scripts ).remove();
	}

	return jQuery.merge( [], parsed.childNodes );
};


/**
 * Load a url into a page
 */
jQuery.fn.load = function( url, params, callback ) {
	var selector, type, response,
		self = this,
		off = url.indexOf( " " );

	if ( off > -1 ) {
		selector = stripAndCollapse( url.slice( off ) );
		url = url.slice( 0, off );
	}

	// If it's a function
	if ( isFunction( params ) ) {

		// We assume that it's the callback
		callback = params;
		params = undefined;

	// Otherwise, build a param string
	} else if ( params && typeof params === "object" ) {
		type = "POST";
	}

	// If we have elements to modify, make the request
	if ( self.length > 0 ) {
		jQuery.ajax( {
			url: url,

			// If "type" variable is undefined, then "GET" method will be used.
			// Make value of this field explicit since
			// user can override it through ajaxSetup method
			type: type || "GET",
			dataType: "html",
			data: params
		} ).done( function( responseText ) {

			// Save response for use in complete callback
			response = arguments;

			self.html( selector ?

				// If a selector was specified, locate the right elements in a dummy div
				// Exclude scripts to avoid IE 'Permission Denied' errors
				jQuery( "<div>" ).append( jQuery.parseHTML( responseText ) ).find( selector ) :

				// Otherwise use the full result
				responseText );

		// If the request succeeds, this function gets "data", "status", "jqXHR"
		// but they are ignored because response was set above.
		// If it fails, this function gets "jqXHR", "status", "error"
		} ).always( callback && function( jqXHR, status ) {
			self.each( function() {
				callback.apply( this, response || [ jqXHR.responseText, status, jqXHR ] );
			} );
		} );
	}

	return this;
};




jQuery.expr.pseudos.animated = function( elem ) {
	return jQuery.grep( jQuery.timers, function( fn ) {
		return elem === fn.elem;
	} ).length;
};




jQuery.offset = {
	setOffset: function( elem, options, i ) {
		var curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition,
			position = jQuery.css( elem, "position" ),
			curElem = jQuery( elem ),
			props = {};

		// Set position first, in-case top/left are set even on static elem
		if ( position === "static" ) {
			elem.style.position = "relative";
		}

		curOffset = curElem.offset();
		curCSSTop = jQuery.css( elem, "top" );
		curCSSLeft = jQuery.css( elem, "left" );
		calculatePosition = ( position === "absolute" || position === "fixed" ) &&
			( curCSSTop + curCSSLeft ).indexOf( "auto" ) > -1;

		// Need to be able to calculate position if either
		// top or left is auto and position is either absolute or fixed
		if ( calculatePosition ) {
			curPosition = curElem.position();
			curTop = curPosition.top;
			curLeft = curPosition.left;

		} else {
			curTop = parseFloat( curCSSTop ) || 0;
			curLeft = parseFloat( curCSSLeft ) || 0;
		}

		if ( isFunction( options ) ) {

			// Use jQuery.extend here to allow modification of coordinates argument (gh-1848)
			options = options.call( elem, i, jQuery.extend( {}, curOffset ) );
		}

		if ( options.top != null ) {
			props.top = ( options.top - curOffset.top ) + curTop;
		}
		if ( options.left != null ) {
			props.left = ( options.left - curOffset.left ) + curLeft;
		}

		if ( "using" in options ) {
			options.using.call( elem, props );

		} else {
			curElem.css( props );
		}
	}
};

jQuery.fn.extend( {

	// offset() relates an element's border box to the document origin
	offset: function( options ) {

		// Preserve chaining for setter
		if ( arguments.length ) {
			return options === undefined ?
				this :
				this.each( function( i ) {
					jQuery.offset.setOffset( this, options, i );
				} );
		}

		var rect, win,
			elem = this[ 0 ];

		if ( !elem ) {
			return;
		}

		// Return zeros for disconnected and hidden (display: none) elements (gh-2310)
		// Support: IE <=11 only
		// Running getBoundingClientRect on a
		// disconnected node in IE throws an error
		if ( !elem.getClientRects().length ) {
			return { top: 0, left: 0 };
		}

		// Get document-relative position by adding viewport scroll to viewport-relative gBCR
		rect = elem.getBoundingClientRect();
		win = elem.ownerDocument.defaultView;
		return {
			top: rect.top + win.pageYOffset,
			left: rect.left + win.pageXOffset
		};
	},

	// position() relates an element's margin box to its offset parent's padding box
	// This corresponds to the behavior of CSS absolute positioning
	position: function() {
		if ( !this[ 0 ] ) {
			return;
		}

		var offsetParent, offset, doc,
			elem = this[ 0 ],
			parentOffset = { top: 0, left: 0 };

		// position:fixed elements are offset from the viewport, which itself always has zero offset
		if ( jQuery.css( elem, "position" ) === "fixed" ) {

			// Assume position:fixed implies availability of getBoundingClientRect
			offset = elem.getBoundingClientRect();

		} else {
			offset = this.offset();

			// Account for the *real* offset parent, which can be the document or its root element
			// when a statically positioned element is identified
			doc = elem.ownerDocument;
			offsetParent = elem.offsetParent || doc.documentElement;
			while ( offsetParent &&
				( offsetParent === doc.body || offsetParent === doc.documentElement ) &&
				jQuery.css( offsetParent, "position" ) === "static" ) {

				offsetParent = offsetParent.parentNode;
			}
			if ( offsetParent && offsetParent !== elem && offsetParent.nodeType === 1 ) {

				// Incorporate borders into its offset, since they are outside its content origin
				parentOffset = jQuery( offsetParent ).offset();
				parentOffset.top += jQuery.css( offsetParent, "borderTopWidth", true );
				parentOffset.left += jQuery.css( offsetParent, "borderLeftWidth", true );
			}
		}

		// Subtract parent offsets and element margins
		return {
			top: offset.top - parentOffset.top - jQuery.css( elem, "marginTop", true ),
			left: offset.left - parentOffset.left - jQuery.css( elem, "marginLeft", true )
		};
	},

	// This method will return documentElement in the following cases:
	// 1) For the element inside the iframe without offsetParent, this method will return
	//    documentElement of the parent window
	// 2) For the hidden or detached element
	// 3) For body or html element, i.e. in case of the html node - it will return itself
	//
	// but those exceptions were never presented as a real life use-cases
	// and might be considered as more preferable results.
	//
	// This logic, however, is not guaranteed and can change at any point in the future
	offsetParent: function() {
		return this.map( function() {
			var offsetParent = this.offsetParent;

			while ( offsetParent && jQuery.css( offsetParent, "position" ) === "static" ) {
				offsetParent = offsetParent.offsetParent;
			}

			return offsetParent || documentElement;
		} );
	}
} );

// Create scrollLeft and scrollTop methods
jQuery.each( { scrollLeft: "pageXOffset", scrollTop: "pageYOffset" }, function( method, prop ) {
	var top = "pageYOffset" === prop;

	jQuery.fn[ method ] = function( val ) {
		return access( this, function( elem, method, val ) {

			// Coalesce documents and windows
			var win;
			if ( isWindow( elem ) ) {
				win = elem;
			} else if ( elem.nodeType === 9 ) {
				win = elem.defaultView;
			}

			if ( val === undefined ) {
				return win ? win[ prop ] : elem[ method ];
			}

			if ( win ) {
				win.scrollTo(
					!top ? val : win.pageXOffset,
					top ? val : win.pageYOffset
				);

			} else {
				elem[ method ] = val;
			}
		}, method, val, arguments.length );
	};
} );

// Support: Safari <=7 - 9.1, Chrome <=37 - 49
// Add the top/left cssHooks using jQuery.fn.position
// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084
// Blink bug: https://bugs.chromium.org/p/chromium/issues/detail?id=589347
// getComputedStyle returns percent when specified for top/left/bottom/right;
// rather than make the css module depend on the offset module, just check for it here
jQuery.each( [ "top", "left" ], function( _i, prop ) {
	jQuery.cssHooks[ prop ] = addGetHookIf( support.pixelPosition,
		function( elem, computed ) {
			if ( computed ) {
				computed = curCSS( elem, prop );

				// If curCSS returns percentage, fallback to offset
				return rnumnonpx.test( computed ) ?
					jQuery( elem ).position()[ prop ] + "px" :
					computed;
			}
		}
	);
} );


// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods
jQuery.each( { Height: "height", Width: "width" }, function( name, type ) {
	jQuery.each( {
		padding: "inner" + name,
		content: type,
		"": "outer" + name
	}, function( defaultExtra, funcName ) {

		// Margin is only for outerHeight, outerWidth
		jQuery.fn[ funcName ] = function( margin, value ) {
			var chainable = arguments.length && ( defaultExtra || typeof margin !== "boolean" ),
				extra = defaultExtra || ( margin === true || value === true ? "margin" : "border" );

			return access( this, function( elem, type, value ) {
				var doc;

				if ( isWindow( elem ) ) {

					// $( window ).outerWidth/Height return w/h including scrollbars (gh-1729)
					return funcName.indexOf( "outer" ) === 0 ?
						elem[ "inner" + name ] :
						elem.document.documentElement[ "client" + name ];
				}

				// Get document width or height
				if ( elem.nodeType === 9 ) {
					doc = elem.documentElement;

					// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],
					// whichever is greatest
					return Math.max(
						elem.body[ "scroll" + name ], doc[ "scroll" + name ],
						elem.body[ "offset" + name ], doc[ "offset" + name ],
						doc[ "client" + name ]
					);
				}

				return value === undefined ?

					// Get width or height on the element, requesting but not forcing parseFloat
					jQuery.css( elem, type, extra ) :

					// Set width or height on the element
					jQuery.style( elem, type, value, extra );
			}, type, chainable ? margin : undefined, chainable );
		};
	} );
} );


jQuery.each( [
	"ajaxStart",
	"ajaxStop",
	"ajaxComplete",
	"ajaxError",
	"ajaxSuccess",
	"ajaxSend"
], function( _i, type ) {
	jQuery.fn[ type ] = function( fn ) {
		return this.on( type, fn );
	};
} );




jQuery.fn.extend( {

	bind: function( types, data, fn ) {
		return this.on( types, null, data, fn );
	},
	unbind: function( types, fn ) {
		return this.off( types, null, fn );
	},

	delegate: function( selector, types, data, fn ) {
		return this.on( types, selector, data, fn );
	},
	undelegate: function( selector, types, fn ) {

		// ( namespace ) or ( selector, types [, fn] )
		return arguments.length === 1 ?
			this.off( selector, "**" ) :
			this.off( types, selector || "**", fn );
	},

	hover: function( fnOver, fnOut ) {
		return this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );
	}
} );

jQuery.each(
	( "blur focus focusin focusout resize scroll click dblclick " +
	"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave " +
	"change select submit keydown keypress keyup contextmenu" ).split( " " ),
	function( _i, name ) {

		// Handle event binding
		jQuery.fn[ name ] = function( data, fn ) {
			return arguments.length > 0 ?
				this.on( name, null, data, fn ) :
				this.trigger( name );
		};
	}
);




// Support: Android <=4.0 only
// Make sure we trim BOM and NBSP
var rtrim = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g;

// Bind a function to a context, optionally partially applying any
// arguments.
// jQuery.proxy is deprecated to promote standards (specifically Function#bind)
// However, it is not slated for removal any time soon
jQuery.proxy = function( fn, context ) {
	var tmp, args, proxy;

	if ( typeof context === "string" ) {
		tmp = fn[ context ];
		context = fn;
		fn = tmp;
	}

	// Quick check to determine if target is callable, in the spec
	// this throws a TypeError, but we will just return undefined.
	if ( !isFunction( fn ) ) {
		return undefined;
	}

	// Simulated bind
	args = slice.call( arguments, 2 );
	proxy = function() {
		return fn.apply( context || this, args.concat( slice.call( arguments ) ) );
	};

	// Set the guid of unique handler to the same of original handler, so it can be removed
	proxy.guid = fn.guid = fn.guid || jQuery.guid++;

	return proxy;
};

jQuery.holdReady = function( hold ) {
	if ( hold ) {
		jQuery.readyWait++;
	} else {
		jQuery.ready( true );
	}
};
jQuery.isArray = Array.isArray;
jQuery.parseJSON = JSON.parse;
jQuery.nodeName = nodeName;
jQuery.isFunction = isFunction;
jQuery.isWindow = isWindow;
jQuery.camelCase = camelCase;
jQuery.type = toType;

jQuery.now = Date.now;

jQuery.isNumeric = function( obj ) {

	// As of jQuery 3.0, isNumeric is limited to
	// strings and numbers (primitives or objects)
	// that can be coerced to finite numbers (gh-2662)
	var type = jQuery.type( obj );
	return ( type === "number" || type === "string" ) &&

		// parseFloat NaNs numeric-cast false positives ("")
		// ...but misinterprets leading-number strings, particularly hex literals ("0x...")
		// subtraction forces infinities to NaN
		!isNaN( obj - parseFloat( obj ) );
};

jQuery.trim = function( text ) {
	return text == null ?
		"" :
		( text + "" ).replace( rtrim, "" );
};



// Register as a named AMD module, since jQuery can be concatenated with other
// files that may use define, but not via a proper concatenation script that
// understands anonymous AMD modules. A named AMD is safest and most robust
// way to register. Lowercase jquery is used because AMD module names are
// derived from file names, and jQuery is normally delivered in a lowercase
// file name. Do this after creating the global so that if an AMD module wants
// to call noConflict to hide this version of jQuery, it will work.

// Note that for maximum portability, libraries that are not jQuery should
// declare themselves as anonymous modules, and avoid setting a global if an
// AMD loader is present. jQuery is a special case. For more information, see
// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon

if ( true ) {
	!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function() {
		return jQuery;
	}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
}




var

	// Map over jQuery in case of overwrite
	_jQuery = window.jQuery,

	// Map over the $ in case of overwrite
	_$ = window.$;

jQuery.noConflict = function( deep ) {
	if ( window.$ === jQuery ) {
		window.$ = _$;
	}

	if ( deep && window.jQuery === jQuery ) {
		window.jQuery = _jQuery;
	}

	return jQuery;
};

// Expose jQuery and $ identifiers, even in AMD
// (#7102#comment:10, https://github.com/jquery/jquery/pull/557)
// and CommonJS for browser emulators (#13566)
if ( typeof noGlobal === "undefined" ) {
	window.jQuery = window.$ = jQuery;
}




return jQuery;
} );


/***/ }),

/***/ 3379:
/***/ ((module) => {

"use strict";


var stylesInDOM = [];

function getIndexByIdentifier(identifier) {
  var result = -1;

  for (var i = 0; i < stylesInDOM.length; i++) {
    if (stylesInDOM[i].identifier === identifier) {
      result = i;
      break;
    }
  }

  return result;
}

function modulesToDom(list, options) {
  var idCountMap = {};
  var identifiers = [];

  for (var i = 0; i < list.length; i++) {
    var item = list[i];
    var id = options.base ? item[0] + options.base : item[0];
    var count = idCountMap[id] || 0;
    var identifier = "".concat(id, " ").concat(count);
    idCountMap[id] = count + 1;
    var indexByIdentifier = getIndexByIdentifier(identifier);
    var obj = {
      css: item[1],
      media: item[2],
      sourceMap: item[3],
      supports: item[4],
      layer: item[5]
    };

    if (indexByIdentifier !== -1) {
      stylesInDOM[indexByIdentifier].references++;
      stylesInDOM[indexByIdentifier].updater(obj);
    } else {
      var updater = addElementStyle(obj, options);
      options.byIndex = i;
      stylesInDOM.splice(i, 0, {
        identifier: identifier,
        updater: updater,
        references: 1
      });
    }

    identifiers.push(identifier);
  }

  return identifiers;
}

function addElementStyle(obj, options) {
  var api = options.domAPI(options);
  api.update(obj);

  var updater = function updater(newObj) {
    if (newObj) {
      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {
        return;
      }

      api.update(obj = newObj);
    } else {
      api.remove();
    }
  };

  return updater;
}

module.exports = function (list, options) {
  options = options || {};
  list = list || [];
  var lastIdentifiers = modulesToDom(list, options);
  return function update(newList) {
    newList = newList || [];

    for (var i = 0; i < lastIdentifiers.length; i++) {
      var identifier = lastIdentifiers[i];
      var index = getIndexByIdentifier(identifier);
      stylesInDOM[index].references--;
    }

    var newLastIdentifiers = modulesToDom(newList, options);

    for (var _i = 0; _i < lastIdentifiers.length; _i++) {
      var _identifier = lastIdentifiers[_i];

      var _index = getIndexByIdentifier(_identifier);

      if (stylesInDOM[_index].references === 0) {
        stylesInDOM[_index].updater();

        stylesInDOM.splice(_index, 1);
      }
    }

    lastIdentifiers = newLastIdentifiers;
  };
};

/***/ }),

/***/ 569:
/***/ ((module) => {

"use strict";


var memo = {};
/* istanbul ignore next  */

function getTarget(target) {
  if (typeof memo[target] === "undefined") {
    var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself

    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {
      try {
        // This will throw an exception if access to iframe is blocked
        // due to cross-origin restrictions
        styleTarget = styleTarget.contentDocument.head;
      } catch (e) {
        // istanbul ignore next
        styleTarget = null;
      }
    }

    memo[target] = styleTarget;
  }

  return memo[target];
}
/* istanbul ignore next  */


function insertBySelector(insert, style) {
  var target = getTarget(insert);

  if (!target) {
    throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");
  }

  target.appendChild(style);
}

module.exports = insertBySelector;

/***/ }),

/***/ 9216:
/***/ ((module) => {

"use strict";


/* istanbul ignore next  */
function insertStyleElement(options) {
  var element = document.createElement("style");
  options.setAttributes(element, options.attributes);
  options.insert(element, options.options);
  return element;
}

module.exports = insertStyleElement;

/***/ }),

/***/ 3565:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


/* istanbul ignore next  */
function setAttributesWithoutAttributes(styleElement) {
  var nonce =  true ? __webpack_require__.nc : 0;

  if (nonce) {
    styleElement.setAttribute("nonce", nonce);
  }
}

module.exports = setAttributesWithoutAttributes;

/***/ }),

/***/ 7795:
/***/ ((module) => {

"use strict";


/* istanbul ignore next  */
function apply(styleElement, options, obj) {
  var css = "";

  if (obj.supports) {
    css += "@supports (".concat(obj.supports, ") {");
  }

  if (obj.media) {
    css += "@media ".concat(obj.media, " {");
  }

  var needLayer = typeof obj.layer !== "undefined";

  if (needLayer) {
    css += "@layer".concat(obj.layer.length > 0 ? " ".concat(obj.layer) : "", " {");
  }

  css += obj.css;

  if (needLayer) {
    css += "}";
  }

  if (obj.media) {
    css += "}";
  }

  if (obj.supports) {
    css += "}";
  }

  var sourceMap = obj.sourceMap;

  if (sourceMap && typeof btoa !== "undefined") {
    css += "\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), " */");
  } // For old IE

  /* istanbul ignore if  */


  options.styleTagTransform(css, styleElement, options.options);
}

function removeStyleElement(styleElement) {
  // istanbul ignore if
  if (styleElement.parentNode === null) {
    return false;
  }

  styleElement.parentNode.removeChild(styleElement);
}
/* istanbul ignore next  */


function domAPI(options) {
  var styleElement = options.insertStyleElement(options);
  return {
    update: function update(obj) {
      apply(styleElement, options, obj);
    },
    remove: function remove() {
      removeStyleElement(styleElement);
    }
  };
}

module.exports = domAPI;

/***/ }),

/***/ 4589:
/***/ ((module) => {

"use strict";


/* istanbul ignore next  */
function styleTagTransform(css, styleElement) {
  if (styleElement.styleSheet) {
    styleElement.styleSheet.cssText = css;
  } else {
    while (styleElement.firstChild) {
      styleElement.removeChild(styleElement.firstChild);
    }

    styleElement.appendChild(document.createTextNode(css));
  }
}

module.exports = styleTagTransform;

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			loaded: false,
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/node module decorator */
/******/ 	(() => {
/******/ 		__webpack_require__.nmd = (module) => {
/******/ 			module.paths = [];
/******/ 			if (!module.children) module.children = [];
/******/ 			return module;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/nonce */
/******/ 	(() => {
/******/ 		__webpack_require__.nc = undefined;
/******/ 	})();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be in strict mode.
(() => {
"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "GraphTemplatesPlugin": () => (/* reexport */ graphTemplatesPlugin)
});

// NAMESPACE OBJECT: ./node_modules/d3/src/index.js
var d3_src_namespaceObject = {};
__webpack_require__.r(d3_src_namespaceObject);
__webpack_require__.d(d3_src_namespaceObject, {
  "Adder": () => (Adder),
  "Delaunay": () => (Delaunay),
  "FormatSpecifier": () => (FormatSpecifier),
  "InternMap": () => (InternMap),
  "InternSet": () => (InternSet),
  "Node": () => (Node),
  "Voronoi": () => (Voronoi),
  "ZoomTransform": () => (Transform),
  "active": () => (active),
  "arc": () => (arc),
  "area": () => (d3_shape_src_area),
  "areaRadial": () => (areaRadial),
  "ascending": () => (ascending),
  "autoType": () => (autoType),
  "axisBottom": () => (axisBottom),
  "axisLeft": () => (axisLeft),
  "axisRight": () => (axisRight),
  "axisTop": () => (axisTop),
  "bin": () => (bin),
  "bisect": () => (bisect),
  "bisectCenter": () => (bisectCenter),
  "bisectLeft": () => (bisectLeft),
  "bisectRight": () => (bisectRight),
  "bisector": () => (bisector),
  "blob": () => (blob),
  "brush": () => (brush),
  "brushSelection": () => (brushSelection),
  "brushX": () => (brushX),
  "brushY": () => (brushY),
  "buffer": () => (buffer),
  "chord": () => (chord),
  "chordDirected": () => (chordDirected),
  "chordTranspose": () => (chordTranspose),
  "cluster": () => (cluster),
  "color": () => (color),
  "contourDensity": () => (density),
  "contours": () => (contours),
  "count": () => (count),
  "create": () => (src_create),
  "creator": () => (creator),
  "cross": () => (cross),
  "csv": () => (dsv_csv),
  "csvFormat": () => (csvFormat),
  "csvFormatBody": () => (csvFormatBody),
  "csvFormatRow": () => (csvFormatRow),
  "csvFormatRows": () => (csvFormatRows),
  "csvFormatValue": () => (csvFormatValue),
  "csvParse": () => (csvParse),
  "csvParseRows": () => (csvParseRows),
  "cubehelix": () => (cubehelix_cubehelix),
  "cumsum": () => (cumsum),
  "curveBasis": () => (curve_basis),
  "curveBasisClosed": () => (curve_basisClosed),
  "curveBasisOpen": () => (basisOpen),
  "curveBumpX": () => (bumpX),
  "curveBumpY": () => (bumpY),
  "curveBundle": () => (bundle),
  "curveCardinal": () => (cardinal),
  "curveCardinalClosed": () => (cardinalClosed),
  "curveCardinalOpen": () => (cardinalOpen),
  "curveCatmullRom": () => (catmullRom),
  "curveCatmullRomClosed": () => (catmullRomClosed),
  "curveCatmullRomOpen": () => (catmullRomOpen),
  "curveLinear": () => (curve_linear),
  "curveLinearClosed": () => (linearClosed),
  "curveMonotoneX": () => (monotoneX),
  "curveMonotoneY": () => (monotoneY),
  "curveNatural": () => (natural),
  "curveStep": () => (step),
  "curveStepAfter": () => (stepAfter),
  "curveStepBefore": () => (stepBefore),
  "descending": () => (descending),
  "deviation": () => (deviation),
  "difference": () => (difference),
  "disjoint": () => (disjoint),
  "dispatch": () => (src_dispatch),
  "drag": () => (drag),
  "dragDisable": () => (nodrag),
  "dragEnable": () => (yesdrag),
  "dsv": () => (dsv_dsv),
  "dsvFormat": () => (dsv),
  "easeBack": () => (backInOut),
  "easeBackIn": () => (backIn),
  "easeBackInOut": () => (backInOut),
  "easeBackOut": () => (backOut),
  "easeBounce": () => (bounceOut),
  "easeBounceIn": () => (bounceIn),
  "easeBounceInOut": () => (bounceInOut),
  "easeBounceOut": () => (bounceOut),
  "easeCircle": () => (circleInOut),
  "easeCircleIn": () => (circleIn),
  "easeCircleInOut": () => (circleInOut),
  "easeCircleOut": () => (circleOut),
  "easeCubic": () => (cubicInOut),
  "easeCubicIn": () => (cubicIn),
  "easeCubicInOut": () => (cubicInOut),
  "easeCubicOut": () => (cubicOut),
  "easeElastic": () => (elasticOut),
  "easeElasticIn": () => (elasticIn),
  "easeElasticInOut": () => (elasticInOut),
  "easeElasticOut": () => (elasticOut),
  "easeExp": () => (expInOut),
  "easeExpIn": () => (expIn),
  "easeExpInOut": () => (expInOut),
  "easeExpOut": () => (expOut),
  "easeLinear": () => (linear_linear),
  "easePoly": () => (polyInOut),
  "easePolyIn": () => (polyIn),
  "easePolyInOut": () => (polyInOut),
  "easePolyOut": () => (polyOut),
  "easeQuad": () => (quadInOut),
  "easeQuadIn": () => (quadIn),
  "easeQuadInOut": () => (quadInOut),
  "easeQuadOut": () => (quadOut),
  "easeSin": () => (sinInOut),
  "easeSinIn": () => (sinIn),
  "easeSinInOut": () => (sinInOut),
  "easeSinOut": () => (sinOut),
  "every": () => (every),
  "extent": () => (extent),
  "fcumsum": () => (fcumsum),
  "filter": () => (filter),
  "flatGroup": () => (flatGroup),
  "flatRollup": () => (flatRollup),
  "forceCenter": () => (src_center),
  "forceCollide": () => (collide),
  "forceLink": () => (src_link),
  "forceManyBody": () => (manyBody),
  "forceRadial": () => (radial),
  "forceSimulation": () => (simulation),
  "forceX": () => (src_x),
  "forceY": () => (src_y),
  "format": () => (format),
  "formatDefaultLocale": () => (defaultLocale),
  "formatLocale": () => (locale),
  "formatPrefix": () => (formatPrefix),
  "formatSpecifier": () => (formatSpecifier),
  "fsum": () => (fsum),
  "geoAlbers": () => (albers),
  "geoAlbersUsa": () => (albersUsa),
  "geoArea": () => (d3_geo_src_area),
  "geoAzimuthalEqualArea": () => (azimuthalEqualArea),
  "geoAzimuthalEqualAreaRaw": () => (azimuthalEqualAreaRaw),
  "geoAzimuthalEquidistant": () => (azimuthalEquidistant),
  "geoAzimuthalEquidistantRaw": () => (azimuthalEquidistantRaw),
  "geoBounds": () => (bounds),
  "geoCentroid": () => (centroid),
  "geoCircle": () => (circle),
  "geoClipAntimeridian": () => (antimeridian),
  "geoClipCircle": () => (clip_circle),
  "geoClipExtent": () => (clip_extent),
  "geoClipRectangle": () => (clipRectangle),
  "geoConicConformal": () => (conicConformal),
  "geoConicConformalRaw": () => (conicConformalRaw),
  "geoConicEqualArea": () => (conicEqualArea),
  "geoConicEqualAreaRaw": () => (conicEqualAreaRaw),
  "geoConicEquidistant": () => (conicEquidistant),
  "geoConicEquidistantRaw": () => (conicEquidistantRaw),
  "geoContains": () => (src_contains),
  "geoDistance": () => (distance),
  "geoEqualEarth": () => (equalEarth),
  "geoEqualEarthRaw": () => (equalEarthRaw),
  "geoEquirectangular": () => (equirectangular),
  "geoEquirectangularRaw": () => (equirectangularRaw),
  "geoGnomonic": () => (gnomonic),
  "geoGnomonicRaw": () => (gnomonicRaw),
  "geoGraticule": () => (graticule),
  "geoGraticule10": () => (graticule10),
  "geoIdentity": () => (projection_identity),
  "geoInterpolate": () => (src_interpolate),
  "geoLength": () => (src_length),
  "geoMercator": () => (mercator),
  "geoMercatorRaw": () => (mercatorRaw),
  "geoNaturalEarth1": () => (naturalEarth1),
  "geoNaturalEarth1Raw": () => (naturalEarth1Raw),
  "geoOrthographic": () => (orthographic),
  "geoOrthographicRaw": () => (orthographicRaw),
  "geoPath": () => (d3_geo_src_path),
  "geoProjection": () => (projection),
  "geoProjectionMutator": () => (projectionMutator),
  "geoRotation": () => (rotation),
  "geoStereographic": () => (stereographic),
  "geoStereographicRaw": () => (stereographicRaw),
  "geoStream": () => (stream),
  "geoTransform": () => (transform),
  "geoTransverseMercator": () => (transverseMercator),
  "geoTransverseMercatorRaw": () => (transverseMercatorRaw),
  "gray": () => (gray),
  "greatest": () => (greatest),
  "greatestIndex": () => (greatestIndex),
  "group": () => (group),
  "groupSort": () => (groupSort),
  "groups": () => (groups),
  "hcl": () => (hcl),
  "hierarchy": () => (hierarchy),
  "histogram": () => (bin),
  "hsl": () => (hsl),
  "html": () => (xml_html),
  "image": () => (src_image),
  "index": () => (index),
  "indexes": () => (indexes),
  "interpolate": () => (value),
  "interpolateArray": () => (src_array),
  "interpolateBasis": () => (src_basis),
  "interpolateBasisClosed": () => (basisClosed),
  "interpolateBlues": () => (Blues),
  "interpolateBrBG": () => (BrBG),
  "interpolateBuGn": () => (BuGn),
  "interpolateBuPu": () => (BuPu),
  "interpolateCividis": () => (cividis),
  "interpolateCool": () => (cool),
  "interpolateCubehelix": () => (src_cubehelix),
  "interpolateCubehelixDefault": () => (sequential_multi_cubehelix),
  "interpolateCubehelixLong": () => (cubehelixLong),
  "interpolateDate": () => (date),
  "interpolateDiscrete": () => (discrete),
  "interpolateGnBu": () => (GnBu),
  "interpolateGreens": () => (Greens),
  "interpolateGreys": () => (Greys),
  "interpolateHcl": () => (src_hcl),
  "interpolateHclLong": () => (hclLong),
  "interpolateHsl": () => (src_hsl),
  "interpolateHslLong": () => (hslLong),
  "interpolateHue": () => (src_hue),
  "interpolateInferno": () => (inferno),
  "interpolateLab": () => (lab_lab),
  "interpolateMagma": () => (magma),
  "interpolateNumber": () => (src_number),
  "interpolateNumberArray": () => (numberArray),
  "interpolateObject": () => (object),
  "interpolateOrRd": () => (OrRd),
  "interpolateOranges": () => (Oranges),
  "interpolatePRGn": () => (PRGn),
  "interpolatePiYG": () => (PiYG),
  "interpolatePlasma": () => (plasma),
  "interpolatePuBu": () => (PuBu),
  "interpolatePuBuGn": () => (PuBuGn),
  "interpolatePuOr": () => (PuOr),
  "interpolatePuRd": () => (PuRd),
  "interpolatePurples": () => (Purples),
  "interpolateRainbow": () => (rainbow),
  "interpolateRdBu": () => (RdBu),
  "interpolateRdGy": () => (RdGy),
  "interpolateRdPu": () => (RdPu),
  "interpolateRdYlBu": () => (RdYlBu),
  "interpolateRdYlGn": () => (RdYlGn),
  "interpolateReds": () => (Reds),
  "interpolateRgb": () => (rgb),
  "interpolateRgbBasis": () => (rgbBasis),
  "interpolateRgbBasisClosed": () => (rgbBasisClosed),
  "interpolateRound": () => (round),
  "interpolateSinebow": () => (sinebow),
  "interpolateSpectral": () => (Spectral),
  "interpolateString": () => (string),
  "interpolateTransformCss": () => (interpolateTransformCss),
  "interpolateTransformSvg": () => (interpolateTransformSvg),
  "interpolateTurbo": () => (turbo),
  "interpolateViridis": () => (viridis),
  "interpolateWarm": () => (warm),
  "interpolateYlGn": () => (YlGn),
  "interpolateYlGnBu": () => (YlGnBu),
  "interpolateYlOrBr": () => (YlOrBr),
  "interpolateYlOrRd": () => (YlOrRd),
  "interpolateZoom": () => (src_zoom),
  "interrupt": () => (interrupt),
  "intersection": () => (intersection),
  "interval": () => (src_interval),
  "isoFormat": () => (isoFormat),
  "isoParse": () => (isoParse),
  "json": () => (json),
  "lab": () => (lab),
  "lch": () => (lch),
  "least": () => (least),
  "leastIndex": () => (leastIndex),
  "line": () => (src_line),
  "lineRadial": () => (src_lineRadial),
  "link": () => (link_link),
  "linkHorizontal": () => (linkHorizontal),
  "linkRadial": () => (linkRadial),
  "linkVertical": () => (linkVertical),
  "local": () => (local_local),
  "map": () => (map_map),
  "matcher": () => (matcher),
  "max": () => (max),
  "maxIndex": () => (maxIndex),
  "mean": () => (mean),
  "median": () => (median),
  "merge": () => (merge),
  "min": () => (min),
  "minIndex": () => (minIndex),
  "mode": () => (mode),
  "namespace": () => (namespace),
  "namespaces": () => (namespaces),
  "nice": () => (nice),
  "now": () => (now),
  "pack": () => (pack),
  "packEnclose": () => (enclose),
  "packSiblings": () => (siblings),
  "pairs": () => (pairs),
  "partition": () => (partition),
  "path": () => (src_path),
  "permute": () => (permute),
  "pie": () => (pie),
  "piecewise": () => (piecewise),
  "pointRadial": () => (pointRadial),
  "pointer": () => (pointer),
  "pointers": () => (pointers),
  "polygonArea": () => (d3_polygon_src_area),
  "polygonCentroid": () => (src_centroid),
  "polygonContains": () => (d3_polygon_src_contains),
  "polygonHull": () => (hull),
  "polygonLength": () => (d3_polygon_src_length),
  "precisionFixed": () => (precisionFixed),
  "precisionPrefix": () => (precisionPrefix),
  "precisionRound": () => (precisionRound),
  "quadtree": () => (quadtree),
  "quantile": () => (quantile),
  "quantileSorted": () => (quantileSorted),
  "quantize": () => (quantize),
  "quickselect": () => (quickselect),
  "radialArea": () => (areaRadial),
  "radialLine": () => (src_lineRadial),
  "randomBates": () => (bates),
  "randomBernoulli": () => (bernoulli),
  "randomBeta": () => (beta),
  "randomBinomial": () => (binomial),
  "randomCauchy": () => (cauchy),
  "randomExponential": () => (src_exponential),
  "randomGamma": () => (src_gamma),
  "randomGeometric": () => (geometric),
  "randomInt": () => (src_int),
  "randomIrwinHall": () => (irwinHall),
  "randomLcg": () => (lcg_lcg),
  "randomLogNormal": () => (logNormal),
  "randomLogistic": () => (logistic),
  "randomNormal": () => (normal),
  "randomPareto": () => (pareto),
  "randomPoisson": () => (poisson),
  "randomUniform": () => (uniform),
  "randomWeibull": () => (weibull),
  "range": () => (range),
  "rank": () => (rank),
  "reduce": () => (reduce),
  "reverse": () => (reverse),
  "rgb": () => (color_rgb),
  "ribbon": () => (src_ribbon),
  "ribbonArrow": () => (ribbonArrow),
  "rollup": () => (rollup),
  "rollups": () => (rollups),
  "scaleBand": () => (band),
  "scaleDiverging": () => (diverging),
  "scaleDivergingLog": () => (divergingLog),
  "scaleDivergingPow": () => (divergingPow),
  "scaleDivergingSqrt": () => (divergingSqrt),
  "scaleDivergingSymlog": () => (divergingSymlog),
  "scaleIdentity": () => (identity_identity),
  "scaleImplicit": () => (implicit),
  "scaleLinear": () => (src_linear_linear),
  "scaleLog": () => (log_log),
  "scaleOrdinal": () => (ordinal),
  "scalePoint": () => (point),
  "scalePow": () => (pow_pow),
  "scaleQuantile": () => (quantile_quantile),
  "scaleQuantize": () => (quantize_quantize),
  "scaleRadial": () => (radial_radial),
  "scaleSequential": () => (sequential),
  "scaleSequentialLog": () => (sequentialLog),
  "scaleSequentialPow": () => (sequentialPow),
  "scaleSequentialQuantile": () => (sequentialQuantile),
  "scaleSequentialSqrt": () => (sequentialSqrt),
  "scaleSequentialSymlog": () => (sequentialSymlog),
  "scaleSqrt": () => (pow_sqrt),
  "scaleSymlog": () => (symlog),
  "scaleThreshold": () => (threshold),
  "scaleTime": () => (time),
  "scaleUtc": () => (utcTime),
  "scan": () => (scan),
  "schemeAccent": () => (Accent),
  "schemeBlues": () => (Blues_scheme),
  "schemeBrBG": () => (scheme),
  "schemeBuGn": () => (BuGn_scheme),
  "schemeBuPu": () => (BuPu_scheme),
  "schemeCategory10": () => (category10),
  "schemeDark2": () => (Dark2),
  "schemeGnBu": () => (GnBu_scheme),
  "schemeGreens": () => (Greens_scheme),
  "schemeGreys": () => (Greys_scheme),
  "schemeOrRd": () => (OrRd_scheme),
  "schemeOranges": () => (Oranges_scheme),
  "schemePRGn": () => (PRGn_scheme),
  "schemePaired": () => (Paired),
  "schemePastel1": () => (Pastel1),
  "schemePastel2": () => (Pastel2),
  "schemePiYG": () => (PiYG_scheme),
  "schemePuBu": () => (PuBu_scheme),
  "schemePuBuGn": () => (PuBuGn_scheme),
  "schemePuOr": () => (PuOr_scheme),
  "schemePuRd": () => (PuRd_scheme),
  "schemePurples": () => (Purples_scheme),
  "schemeRdBu": () => (RdBu_scheme),
  "schemeRdGy": () => (RdGy_scheme),
  "schemeRdPu": () => (RdPu_scheme),
  "schemeRdYlBu": () => (RdYlBu_scheme),
  "schemeRdYlGn": () => (RdYlGn_scheme),
  "schemeReds": () => (Reds_scheme),
  "schemeSet1": () => (Set1),
  "schemeSet2": () => (Set2),
  "schemeSet3": () => (Set3),
  "schemeSpectral": () => (Spectral_scheme),
  "schemeTableau10": () => (Tableau10),
  "schemeYlGn": () => (YlGn_scheme),
  "schemeYlGnBu": () => (YlGnBu_scheme),
  "schemeYlOrBr": () => (YlOrBr_scheme),
  "schemeYlOrRd": () => (YlOrRd_scheme),
  "select": () => (src_select),
  "selectAll": () => (src_selectAll),
  "selection": () => (src_selection),
  "selector": () => (selector),
  "selectorAll": () => (selectorAll),
  "shuffle": () => (shuffle),
  "shuffler": () => (shuffler),
  "some": () => (some),
  "sort": () => (sort),
  "stack": () => (stack),
  "stackOffsetDiverging": () => (offset_diverging),
  "stackOffsetExpand": () => (expand),
  "stackOffsetNone": () => (offset_none),
  "stackOffsetSilhouette": () => (silhouette),
  "stackOffsetWiggle": () => (wiggle),
  "stackOrderAppearance": () => (appearance),
  "stackOrderAscending": () => (order_ascending),
  "stackOrderDescending": () => (order_descending),
  "stackOrderInsideOut": () => (insideOut),
  "stackOrderNone": () => (order_none),
  "stackOrderReverse": () => (order_reverse),
  "stratify": () => (stratify),
  "style": () => (styleValue),
  "subset": () => (subset),
  "sum": () => (sum_sum),
  "superset": () => (superset),
  "svg": () => (svg),
  "symbol": () => (symbol_Symbol),
  "symbolAsterisk": () => (asterisk),
  "symbolCircle": () => (symbol_circle),
  "symbolCross": () => (symbol_cross),
  "symbolDiamond": () => (diamond),
  "symbolDiamond2": () => (diamond2),
  "symbolPlus": () => (plus),
  "symbolSquare": () => (symbol_square),
  "symbolSquare2": () => (square2),
  "symbolStar": () => (star),
  "symbolTriangle": () => (triangle),
  "symbolTriangle2": () => (triangle2),
  "symbolWye": () => (wye),
  "symbolX": () => (symbol_x),
  "symbols": () => (symbolsFill),
  "symbolsFill": () => (symbolsFill),
  "symbolsStroke": () => (symbolsStroke),
  "text": () => (src_text),
  "thresholdFreedmanDiaconis": () => (thresholdFreedmanDiaconis),
  "thresholdScott": () => (thresholdScott),
  "thresholdSturges": () => (thresholdSturges),
  "tickFormat": () => (tickFormat),
  "tickIncrement": () => (tickIncrement),
  "tickStep": () => (tickStep),
  "ticks": () => (ticks),
  "timeDay": () => (src_day),
  "timeDays": () => (days),
  "timeFormat": () => (timeFormat),
  "timeFormatDefaultLocale": () => (defaultLocale_defaultLocale),
  "timeFormatLocale": () => (formatLocale),
  "timeFriday": () => (friday),
  "timeFridays": () => (fridays),
  "timeHour": () => (src_hour),
  "timeHours": () => (hours),
  "timeInterval": () => (newInterval),
  "timeMillisecond": () => (src_millisecond),
  "timeMilliseconds": () => (milliseconds),
  "timeMinute": () => (src_minute),
  "timeMinutes": () => (minutes),
  "timeMonday": () => (monday),
  "timeMondays": () => (mondays),
  "timeMonth": () => (src_month),
  "timeMonths": () => (months),
  "timeParse": () => (timeParse),
  "timeSaturday": () => (saturday),
  "timeSaturdays": () => (saturdays),
  "timeSecond": () => (src_second),
  "timeSeconds": () => (seconds),
  "timeSunday": () => (sunday),
  "timeSundays": () => (sundays),
  "timeThursday": () => (thursday),
  "timeThursdays": () => (thursdays),
  "timeTickInterval": () => (timeTickInterval),
  "timeTicks": () => (timeTicks),
  "timeTuesday": () => (tuesday),
  "timeTuesdays": () => (tuesdays),
  "timeWednesday": () => (wednesday),
  "timeWednesdays": () => (wednesdays),
  "timeWeek": () => (sunday),
  "timeWeeks": () => (sundays),
  "timeYear": () => (src_year),
  "timeYears": () => (years),
  "timeout": () => (src_timeout),
  "timer": () => (timer),
  "timerFlush": () => (timerFlush),
  "transition": () => (transition_transition),
  "transpose": () => (transpose),
  "tree": () => (tree),
  "treemap": () => (treemap),
  "treemapBinary": () => (binary),
  "treemapDice": () => (dice),
  "treemapResquarify": () => (resquarify),
  "treemapSlice": () => (treemap_slice),
  "treemapSliceDice": () => (sliceDice),
  "treemapSquarify": () => (squarify),
  "tsv": () => (dsv_tsv),
  "tsvFormat": () => (tsvFormat),
  "tsvFormatBody": () => (tsvFormatBody),
  "tsvFormatRow": () => (tsvFormatRow),
  "tsvFormatRows": () => (tsvFormatRows),
  "tsvFormatValue": () => (tsvFormatValue),
  "tsvParse": () => (tsvParse),
  "tsvParseRows": () => (tsvParseRows),
  "union": () => (union),
  "utcDay": () => (src_utcDay),
  "utcDays": () => (utcDays),
  "utcFormat": () => (utcFormat),
  "utcFriday": () => (utcFriday),
  "utcFridays": () => (utcFridays),
  "utcHour": () => (src_utcHour),
  "utcHours": () => (utcHours),
  "utcMillisecond": () => (src_millisecond),
  "utcMilliseconds": () => (milliseconds),
  "utcMinute": () => (src_utcMinute),
  "utcMinutes": () => (utcMinutes),
  "utcMonday": () => (utcMonday),
  "utcMondays": () => (utcMondays),
  "utcMonth": () => (src_utcMonth),
  "utcMonths": () => (utcMonths),
  "utcParse": () => (utcParse),
  "utcSaturday": () => (utcSaturday),
  "utcSaturdays": () => (utcSaturdays),
  "utcSecond": () => (src_second),
  "utcSeconds": () => (seconds),
  "utcSunday": () => (utcSunday),
  "utcSundays": () => (utcSundays),
  "utcThursday": () => (utcThursday),
  "utcThursdays": () => (utcThursdays),
  "utcTickInterval": () => (utcTickInterval),
  "utcTicks": () => (utcTicks),
  "utcTuesday": () => (utcTuesday),
  "utcTuesdays": () => (utcTuesdays),
  "utcWednesday": () => (utcWednesday),
  "utcWednesdays": () => (utcWednesdays),
  "utcWeek": () => (utcSunday),
  "utcWeeks": () => (utcSundays),
  "utcYear": () => (src_utcYear),
  "utcYears": () => (utcYears),
  "variance": () => (variance),
  "window": () => (src_window),
  "xml": () => (xml),
  "zip": () => (zip),
  "zoom": () => (zoom),
  "zoomIdentity": () => (transform_identity),
  "zoomTransform": () => (transform_transform)
});

// EXTERNAL MODULE: ./node_modules/jquery/dist/jquery.js
var jquery = __webpack_require__(9755);
var jquery_default = /*#__PURE__*/__webpack_require__.n(jquery);
;// CONCATENATED MODULE: ./src/libs/korejquery.js
 //import './jquery.tmpl.min'

/*!
 * jQuery Templates Plugin 1.0.0pre
 * http://github.com/jquery/jquery-tmpl
 * Requires jQuery 1.4.2
 *
 * Copyright 2011, Software Freedom Conservancy, Inc.
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 */

(function (jQuery) {
  var oldManip = jQuery.fn.domManip,
      tmplItmAtt = "_tmplitem",
      htmlExpr = /^[^<]*(<[\w\W]+>)[^>]*$|\{\{\! /,
      newTmplItems = {},
      wrappedItems = {},
      appendToTmplItems,
      topTmplItem = {
    key: 0,
    data: {}
  },
      itemKey = 0,
      cloneIndex = 0,
      stack = [];

  function newTmplItem(options, parentItem, fn, data) {
    // Returns a template item data structure for a new rendered instance of a template (a 'template item').
    // The content field is a hierarchical array of strings and nested items (to be
    // removed and replaced by nodes field of dom elements, once inserted in DOM).
    var newItem = {
      data: data || data === 0 || data === false ? data : parentItem ? parentItem.data : {},
      _wrap: parentItem ? parentItem._wrap : null,
      tmpl: null,
      parent: parentItem || null,
      nodes: [],
      calls: tiCalls,
      nest: tiNest,
      wrap: tiWrap,
      html: tiHtml,
      update: tiUpdate
    };

    if (options) {
      jQuery.extend(newItem, options, {
        nodes: [],
        parent: parentItem
      });
    }

    if (fn) {
      // Build the hierarchical content to be used during insertion into DOM
      newItem.tmpl = fn;
      newItem._ctnt = newItem._ctnt || newItem.tmpl(jQuery, newItem);
      newItem.key = ++itemKey; // Keep track of new template item, until it is stored as jQuery Data on DOM element

      (stack.length ? wrappedItems : newTmplItems)[itemKey] = newItem;
    }

    return newItem;
  } // Override appendTo etc., in order to provide support for targeting multiple elements. (This code would disappear if integrated in jquery core).


  jQuery.each({
    appendTo: "append",
    prependTo: "prepend",
    insertBefore: "before",
    insertAfter: "after",
    replaceAll: "replaceWith"
  }, function (name, original) {
    jQuery.fn[name] = function (selector) {
      var ret = [],
          insert = jQuery(selector),
          elems,
          i,
          l,
          tmplItems,
          parent = this.length === 1 && this[0].parentNode;
      appendToTmplItems = newTmplItems || {};

      if (parent && parent.nodeType === 11 && parent.childNodes.length === 1 && insert.length === 1) {
        insert[original](this[0]);
        ret = this;
      } else {
        for (i = 0, l = insert.length; i < l; i++) {
          cloneIndex = i;
          elems = (i > 0 ? this.clone(true) : this).get();
          jQuery(insert[i])[original](elems);
          ret = ret.concat(elems);
        }

        cloneIndex = 0;
        ret = this.pushStack(ret, name, insert.selector);
      }

      tmplItems = appendToTmplItems;
      appendToTmplItems = null;
      jQuery.tmpl.complete(tmplItems);
      return ret;
    };
  });
  jQuery.fn.extend({
    // Use first wrapped element as template markup.
    // Return wrapped set of template items, obtained by rendering template against data.
    tmpl: function tmpl(data, options, parentItem) {
      return jQuery.tmpl(this[0], data, options, parentItem);
    },
    // Find which rendered template item the first wrapped DOM element belongs to
    tmplItem: function tmplItem() {
      return jQuery.tmplItem(this[0]);
    },
    // Consider the first wrapped element as a template declaration, and get the compiled template or store it as a named template.
    template: function template(name) {
      return jQuery.template(name, this[0]);
    },
    domManip: function domManip(args, table, callback, options) {
      if (args[0] && jQuery.isArray(args[0])) {
        var dmArgs = jQuery.makeArray(arguments),
            elems = args[0],
            elemsLength = elems.length,
            i = 0,
            tmplItem;

        while (i < elemsLength && !(tmplItem = jQuery.data(elems[i++], "tmplItem"))) {}

        if (tmplItem && cloneIndex) {
          dmArgs[2] = function (fragClone) {
            // Handler called by oldManip when rendered template has been inserted into DOM.
            jQuery.tmpl.afterManip(this, fragClone, callback);
          };
        }

        oldManip.apply(this, dmArgs);
      } else {
        oldManip.apply(this, arguments);
      }

      cloneIndex = 0;

      if (!appendToTmplItems) {
        jQuery.tmpl.complete(newTmplItems);
      }

      return this;
    }
  });
  jQuery.extend({
    // Return wrapped set of template items, obtained by rendering template against data.
    tmpl: function tmpl(_tmpl, data, options, parentItem) {
      var ret,
          topLevel = !parentItem;

      if (topLevel) {
        // This is a top-level tmpl call (not from a nested template using {{tmpl}})
        parentItem = topTmplItem;
        _tmpl = jQuery.template[_tmpl] || jQuery.template(null, _tmpl);
        wrappedItems = {}; // Any wrapped items will be rebuilt, since this is top level
      } else if (!_tmpl) {
        // The template item is already associated with DOM - this is a refresh.
        // Re-evaluate rendered template for the parentItem
        _tmpl = parentItem.tmpl;
        newTmplItems[parentItem.key] = parentItem;
        parentItem.nodes = [];

        if (parentItem.wrapped) {
          updateWrapped(parentItem, parentItem.wrapped);
        } // Rebuild, without creating a new template item


        return jQuery(build(parentItem, null, parentItem.tmpl(jQuery, parentItem)));
      }

      if (!_tmpl) {
        return []; // Could throw...
      }

      if (typeof data === "function") {
        data = data.call(parentItem || {});
      }

      if (options && options.wrapped) {
        updateWrapped(options, options.wrapped);
      }

      ret = jQuery.isArray(data) ? jQuery.map(data, function (dataItem) {
        return dataItem ? newTmplItem(options, parentItem, _tmpl, dataItem) : null;
      }) : [newTmplItem(options, parentItem, _tmpl, data)];
      return topLevel ? jQuery(build(parentItem, null, ret)) : ret;
    },
    // Return rendered template item for an element.
    tmplItem: function tmplItem(elem) {
      var tmplItem;

      if (elem instanceof jQuery) {
        elem = elem[0];
      }

      while (elem && elem.nodeType === 1 && !(tmplItem = jQuery.data(elem, "tmplItem")) && (elem = elem.parentNode)) {}

      return tmplItem || topTmplItem;
    },
    // Set:
    // Use $.template( name, tmpl ) to cache a named template,
    // where tmpl is a template string, a script element or a jQuery instance wrapping a script element, etc.
    // Use $( "selector" ).template( name ) to provide access by name to a script block template declaration.
    // Get:
    // Use $.template( name ) to access a cached template.
    // Also $( selectorToScriptBlock ).template(), or $.template( null, templateString )
    // will return the compiled template, without adding a name reference.
    // If templateString includes at least one HTML tag, $.template( templateString ) is equivalent
    // to $.template( null, templateString )
    template: function template(name, tmpl) {
      if (tmpl) {
        // Compile template and associate with name
        if (typeof tmpl === "string") {
          // This is an HTML string being passed directly in.
          tmpl = buildTmplFn(tmpl);
        } else if (tmpl instanceof jQuery) {
          tmpl = tmpl[0] || {};
        }

        if (tmpl.nodeType) {
          // If this is a template block, use cached copy, or generate tmpl function and cache.
          tmpl = jQuery.data(tmpl, "tmpl") || jQuery.data(tmpl, "tmpl", buildTmplFn(tmpl.innerHTML)); // Issue: In IE, if the container element is not a script block, the innerHTML will remove quotes from attribute values whenever the value does not include white space.
          // This means that foo="${x}" will not work if the value of x includes white space: foo="${x}" -> foo=value of x.
          // To correct this, include space in tag: foo="${ x }" -> foo="value of x"
        }

        return typeof name === "string" ? jQuery.template[name] = tmpl : tmpl;
      } // Return named compiled template


      return name ? typeof name !== "string" ? jQuery.template(null, name) : jQuery.template[name] || // If not in map, and not containing at least on HTML tag, treat as a selector.
      // (If integrated with core, use quickExpr.exec)
      jQuery.template(null, htmlExpr.test(name) ? name : jQuery(name)) : null;
    },
    encode: function encode(text) {
      // Do HTML encoding replacing < > & and ' and " by corresponding entities.
      return ("" + text).split("<").join("&lt;").split(">").join("&gt;").split('"').join("&#34;").split("'").join("&#39;");
    }
  });
  jQuery.extend(jQuery.tmpl, {
    tag: {
      "tmpl": {
        _default: {
          $2: "null"
        },
        open: "if($notnull_1){__=__.concat($item.nest($1,$2));}" // tmpl target parameter can be of type function, so use $1, not $1a (so not auto detection of functions)
        // This means that {{tmpl foo}} treats foo as a template (which IS a function).
        // Explicit parens can be used if foo is a function that returns a template: {{tmpl foo()}}.

      },
      "wrap": {
        _default: {
          $2: "null"
        },
        open: "$item.calls(__,$1,$2);__=[];",
        close: "call=$item.calls();__=call._.concat($item.wrap(call,__));"
      },
      "each": {
        _default: {
          $2: "$index, $value"
        },
        open: "if($notnull_1){$.each($1a,function($2){with(this){",
        close: "}});}"
      },
      "if": {
        open: "if(($notnull_1) && $1a){",
        close: "}"
      },
      "else": {
        _default: {
          $1: "true"
        },
        open: "}else if(($notnull_1) && $1a){"
      },
      "html": {
        // Unecoded expression evaluation.
        open: "if($notnull_1){__.push($1a);}"
      },
      "=": {
        // Encoded expression evaluation. Abbreviated form is ${}.
        _default: {
          $1: "$data"
        },
        open: "if($notnull_1){__.push($.encode($1a));}"
      },
      "!": {
        // Comment tag. Skipped by parser
        open: ""
      }
    },
    // This stub can be overridden, e.g. in jquery.tmplPlus for providing rendered events
    complete: function complete(items) {
      newTmplItems = {};
    },
    // Call this from code which overrides domManip, or equivalent
    // Manage cloning/storing template items etc.
    afterManip: function afterManip(elem, fragClone, callback) {
      // Provides cloned fragment ready for fixup prior to and after insertion into DOM
      var content = fragClone.nodeType === 11 ? jQuery.makeArray(fragClone.childNodes) : fragClone.nodeType === 1 ? [fragClone] : []; // Return fragment to original caller (e.g. append) for DOM insertion

      callback.call(elem, fragClone); // Fragment has been inserted:- Add inserted nodes to tmplItem data structure. Replace inserted element annotations by jQuery.data.

      storeTmplItems(content);
      cloneIndex++;
    }
  }); //========================== Private helper functions, used by code above ==========================

  function build(tmplItem, nested, content) {
    // Convert hierarchical content into flat string array
    // and finally return array of fragments ready for DOM insertion
    var frag,
        ret = content ? jQuery.map(content, function (item) {
      return typeof item === "string" ? // Insert template item annotations, to be converted to jQuery.data( "tmplItem" ) when elems are inserted into DOM.
      tmplItem.key ? item.replace(/(<\w+)(?=[\s>])(?![^>]*_tmplitem)([^>]*)/g, "$1 " + tmplItmAtt + "=\"" + tmplItem.key + "\" $2") : item : // This is a child template item. Build nested template.
      build(item, tmplItem, item._ctnt);
    }) : // If content is not defined, insert tmplItem directly. Not a template item. May be a string, or a string array, e.g. from {{html $item.html()}}.
    tmplItem;

    if (nested) {
      return ret;
    } // top-level template


    ret = ret.join(""); // Support templates which have initial or final text nodes, or consist only of text
    // Also support HTML entities within the HTML markup.

    ret.replace(/^\s*([^<\s][^<]*)?(<[\w\W]+>)([^>]*[^>\s])?\s*$/, function (all, before, middle, after) {
      frag = jQuery(middle).get();
      storeTmplItems(frag);

      if (before) {
        frag = unencode(before).concat(frag);
      }

      if (after) {
        frag = frag.concat(unencode(after));
      }
    });
    return frag ? frag : unencode(ret);
  }

  function unencode(text) {
    // Use createElement, since createTextNode will not render HTML entities correctly
    var el = document.createElement("div");
    el.innerHTML = text;
    return jQuery.makeArray(el.childNodes);
  } // Generate a reusable function that will serve to render a template against data


  function buildTmplFn(markup) {
    return new Function("jQuery", "$item", // Use the variable __ to hold a string array while building the compiled template. (See https://github.com/jquery/jquery-tmpl/issues#issue/10).
    "var $=jQuery,call,__=[],$data=$item.data;" + // Introduce the data as local variables using with(){}
    "with($data){__.push('" + // Convert the template into pure JavaScript
    jQuery.trim(markup).replace(/([\\'])/g, "\\$1").replace(/[\r\t\n]/g, " ").replace(/\$\{([^\}]*)\}/g, "{{= $1}}").replace(/\{\{(\/?)(\w+|.)(?:\(((?:[^\}]|\}(?!\}))*?)?\))?(?:\s+(.*?)?)?(\(((?:[^\}]|\}(?!\}))*?)\))?\s*\}\}/g, function (all, slash, type, fnargs, target, parens, args) {
      var tag = jQuery.tmpl.tag[type],
          def,
          expr,
          exprAutoFnDetect;

      if (!tag) {
        throw "Unknown template tag: " + type;
      }

      def = tag._default || [];

      if (parens && !/\w$/.test(target)) {
        target += parens;
        parens = "";
      }

      if (target) {
        target = unescape(target);
        args = args ? "," + unescape(args) + ")" : parens ? ")" : ""; // Support for target being things like a.toLowerCase();
        // In that case don't call with template item as 'this' pointer. Just evaluate...

        expr = parens ? target.indexOf(".") > -1 ? target + unescape(parens) : "(" + target + ").call($item" + args : target;
        exprAutoFnDetect = parens ? expr : "(typeof(" + target + ")==='function'?(" + target + ").call($item):(" + target + "))";
      } else {
        exprAutoFnDetect = expr = def.$1 || "null";
      }

      fnargs = unescape(fnargs);
      return "');" + tag[slash ? "close" : "open"].split("$notnull_1").join(target ? "typeof(" + target + ")!=='undefined' && (" + target + ")!=null" : "true").split("$1a").join(exprAutoFnDetect).split("$1").join(expr).split("$2").join(fnargs || def.$2 || "") + "__.push('";
    }) + "');}return __;");
  }

  function updateWrapped(options, wrapped) {
    // Build the wrapped content.
    options._wrap = build(options, true, // Suport imperative scenario in which options.wrapped can be set to a selector or an HTML string.
    jQuery.isArray(wrapped) ? wrapped : [htmlExpr.test(wrapped) ? wrapped : jQuery(wrapped).html()]).join("");
  }

  function unescape(args) {
    return args ? args.replace(/\\'/g, "'").replace(/\\\\/g, "\\") : null;
  }

  function outerHtml(elem) {
    var div = document.createElement("div");
    div.appendChild(elem.cloneNode(true));
    return div.innerHTML;
  } // Store template items in jQuery.data(), ensuring a unique tmplItem data data structure for each rendered template instance.


  function storeTmplItems(content) {
    var keySuffix = "_" + cloneIndex,
        elem,
        elems,
        newClonedItems = {},
        i,
        l,
        m;

    for (i = 0, l = content.length; i < l; i++) {
      if ((elem = content[i]).nodeType !== 1) {
        continue;
      }

      elems = elem.getElementsByTagName("*");

      for (m = elems.length - 1; m >= 0; m--) {
        processItemKey(elems[m]);
      }

      processItemKey(elem);
    }

    function processItemKey(el) {
      var pntKey,
          pntNode = el,
          pntItem,
          tmplItem,
          key; // Ensure that each rendered template inserted into the DOM has its own template item,

      if (key = el.getAttribute(tmplItmAtt)) {
        while (pntNode.parentNode && (pntNode = pntNode.parentNode).nodeType === 1 && !(pntKey = pntNode.getAttribute(tmplItmAtt))) {}

        if (pntKey !== key) {
          // The next ancestor with a _tmplitem expando is on a different key than this one.
          // So this is a top-level element within this template item
          // Set pntNode to the key of the parentNode, or to 0 if pntNode.parentNode is null, or pntNode is a fragment.
          pntNode = pntNode.parentNode ? pntNode.nodeType === 11 ? 0 : pntNode.getAttribute(tmplItmAtt) || 0 : 0;

          if (!(tmplItem = newTmplItems[key])) {
            // The item is for wrapped content, and was copied from the temporary parent wrappedItem.
            tmplItem = wrappedItems[key];
            tmplItem = newTmplItem(tmplItem, newTmplItems[pntNode] || wrappedItems[pntNode]);
            tmplItem.key = ++itemKey;
            newTmplItems[itemKey] = tmplItem;
          }

          if (cloneIndex) {
            cloneTmplItem(key);
          }
        }

        el.removeAttribute(tmplItmAtt);
      } else if (cloneIndex && (tmplItem = jQuery.data(el, "tmplItem"))) {
        // This was a rendered element, cloned during append or appendTo etc.
        // TmplItem stored in jQuery data has already been cloned in cloneCopyEvent. We must replace it with a fresh cloned tmplItem.
        cloneTmplItem(tmplItem.key);
        newTmplItems[tmplItem.key] = tmplItem;
        pntNode = jQuery.data(el.parentNode, "tmplItem");
        pntNode = pntNode ? pntNode.key : 0;
      }

      if (tmplItem) {
        pntItem = tmplItem; // Find the template item of the parent element.
        // (Using !=, not !==, since pntItem.key is number, and pntNode may be a string)

        while (pntItem && pntItem.key != pntNode) {
          // Add this element as a top-level node for this rendered template item, as well as for any
          // ancestor items between this item and the item of its parent element
          pntItem.nodes.push(el);
          pntItem = pntItem.parent;
        } // Delete content built during rendering - reduce API surface area and memory use, and avoid exposing of stale data after rendering...


        delete tmplItem._ctnt;
        delete tmplItem._wrap; // Store template item as jQuery data on the element

        jQuery.data(el, "tmplItem", tmplItem);
      }

      function cloneTmplItem(key) {
        key = key + keySuffix;
        tmplItem = newClonedItems[key] = newClonedItems[key] || newTmplItem(tmplItem, newTmplItems[tmplItem.parent.key + keySuffix] || tmplItem.parent);
      }
    }
  } //---- Helper functions for template item ----


  function tiCalls(content, tmpl, data, options) {
    if (!content) {
      return stack.pop();
    }

    stack.push({
      _: content,
      tmpl: tmpl,
      item: this,
      data: data,
      options: options
    });
  }

  function tiNest(tmpl, data, options) {
    // nested template, using {{tmpl}} tag
    return jQuery.tmpl(jQuery.template(tmpl), data, options, this);
  }

  function tiWrap(call, wrapped) {
    // nested template, using {{wrap}} tag
    var options = call.options || {};
    options.wrapped = wrapped; // Apply the template, which may incorporate wrapped content,

    return jQuery.tmpl(jQuery.template(call.tmpl), call.data, options, call.item);
  }

  function tiHtml(filter, textOnly) {
    var wrapped = this._wrap;
    return jQuery.map(jQuery(jQuery.isArray(wrapped) ? wrapped.join("") : wrapped).filter(filter || "*"), function (e) {
      return textOnly ? e.innerText || e.textContent : e.outerHTML || outerHtml(e);
    });
  }

  function tiUpdate() {
    var coll = this.nodes;
    jQuery.tmpl(null, null, null, this).insertBefore(coll[0]);
    jQuery(coll).remove();
  }
})((jquery_default()));

/* harmony default export */ const korejquery = ((jquery_default()));
// EXTERNAL MODULE: ./src/libs/emoji.js
var emoji = __webpack_require__(7711);
var emoji_default = /*#__PURE__*/__webpack_require__.n(emoji);
;// CONCATENATED MODULE: ./src/utils/helpers.js
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }




var KoreHelpers = /*#__PURE__*/_createClass(function KoreHelpers() {
  _classCallCheck(this, KoreHelpers);
});

_defineProperty(KoreHelpers, "helpers", {
  'nl2br': function nl2br(str, runEmojiCheck) {
    if (runEmojiCheck) {
      str = emoji_default().shortnameToImage(str);
    }

    str = str.replace(/(?:\r\n|\r|\n)/g, '<br />');
    return str;
  },
  'br2nl': function br2nl(str) {
    str = str.replace(/<br \/>/g, '\n');
    return str;
  },
  'formatAMPM': function formatAMPM(date) {
    var hours = date.getHours();
    var minutes = date.getMinutes();
    var seconds = date.getSeconds();
    var ampm = hours >= 12 ? 'pm' : 'am';
    hours = hours % 12;
    hours = hours ? hours : 12; // the hour '0' should be '12'

    minutes = minutes < 10 ? '0' + minutes : minutes;
    seconds = seconds < 10 ? '0' + seconds : seconds;
    var strTime = hours + ':' + minutes + ':' + seconds + ' ' + ampm;
    return strTime;
  },
  'formatDate': function formatDate(date) {
    var d = new Date(date);

    if (isNaN(d.getTime())) {
      var _tmpDate = new Date().getTime();

      d = new Date(_tmpDate);
    }

    return d.toDateString() + " at " + this.formatAMPM(d);
  },
  'convertMDtoHTML': function convertMDtoHTML(val, responseType, msgItem) {
    if (_typeof(val) === 'object') {
      try {
        val = JSON.stringify(val);
      } catch (error) {
        val = "";
      }
    }

    var hyperLinksMap = {};
    var mdre = {};

    if (msgItem && msgItem.cInfo && msgItem.cInfo.ignoreCheckMark) {
      var ignoreCheckMark = msgItem.cInfo.ignoreCheckMark;
    } //mdre.date = new RegExp(/\\d\(\s*(.{10})\s*\)/g);


    mdre.date = new RegExp(/\\d\(\s*(.{10})\s*(?:,\s*["'](.+?)["']\s*)?\)/g);
    mdre.time = new RegExp(/\\t\(\s*(.{8}\.\d{0,3})\s*\)/g); //mdre.datetime = new RegExp(/\\dt\(\s*(.{10})[T](.{12})([z]|[Z]|[+-]\d{4})\s*\)/g);

    mdre.datetime = new RegExp(/\\(d|dt|t)\(\s*([-0-9]{10}[T][0-9:.]{12})([z]|[Z]|[+-]\d{4})[\s]*,[\s]*["']([a-zA-Z\W]+)["']\s*\)/g);
    mdre.num = new RegExp(/\\#\(\s*(\d*.\d*)\s*\)/g);
    mdre.curr = new RegExp(/\\\$\((\d*.\d*)[,](\s*[\"\']\s*\w{3}\s*[\"\']\s*)\)|\\\$\((\d*.\d*)[,](\s*\w{3}\s*)\)/g);
    var regEx = {};
    regEx.SPECIAL_CHARS = /[\=\`\~\!@#\$\%\^&\*\(\)_\-\+\{\}\:"\[\];\',\.\/<>\?\|\\]+/;
    regEx.EMAIL = /^[-a-z0-9~!$%^&*_=+}{\']+(\.[-a-z0-9~!$%^&*_=+}{\']+)*@(([a-zA-Z0-9\-])+\.)+([a-zA-Z0-9]{2,255})+$/i;
    regEx.MENTION = /(^|\s|\\n|")@([^\s]*)(?:[\s]\[([^\]]*)\])?["]?/gi;
    regEx.HASHTAG = /(^|\s|\\n)#(\S+)/g;
    regEx.NEWLINE = /\n/g;
    var _regExForLink = /((?:http\:\/\/|https\:\/\/|www\.)+\S*\.(?:(?:\.\S)*[^\,\s\.])*\/?)/gi; // var _regExForMarkdownLink = /\[([^\]]+)\](|\s)+\(([^\)])+\)/g;

    var _regExForMarkdownLink = /\[([^\]]+)\](|\s)\((?:[^)(]+|\((?:[^)(]+|\([^)(]*\))*\))*\)?/g;
    var str = val || '';
    var mmntns = {};
    mmntns.sd = new RegExp(/^(d{1})[^d]|[^d](d{1})[^d]/g);
    mmntns.dd = new RegExp(/^(d{2})[^d]|[^d](d{2})[^d]/g);
    mmntns.fy = new RegExp(/(y{4})|y{2}/g);
    var regexkeys = Object.keys(mdre);

    function matchmap(regexval, stringval) {
      var da;
      var matches = [];

      while ((da = regexval.exec(stringval)) !== null) {
        var keypair = {};
        keypair.index = da.index;
        keypair.matchexp = da[0];

        if (da.length > 1) {
          for (var n = 1; n < da.length; n++) {
            var mstr = "matchval" + n.toString();
            keypair[mstr] = da[n];
          }
        }

        matches.push(keypair);
      }

      return matches;
    }

    function ucreplacer(match) {
      return match.toUpperCase();
    }

    function xssAttack(txtStr) {
      //   if (compObj && compObj[0] && compObj[0].componentType === "text") {
      var textHasXSS;

      if (txtStr) {
        textHasXSS = txtStr.isNotAllowedHTMLTags();
      }

      if (textHasXSS && !textHasXSS.isValid) {
        txtStr = txtStr.escapeHTML();
      }

      return txtStr; //return compObj[0].componentBody;
    }

    for (var j = 0; j < regexkeys.length; j++) {
      var k;

      switch (regexkeys[j]) {
        case 'date':
          var strvald = str;
          var datematcharray = matchmap(mdre.date, strvald);

          if (datematcharray.length) {
            for (k = 0; k < datematcharray.length; k++) {
              //var fdate = moment(datematcharray[k].matchval).format('DD,dd,MM,YYY');
              var fdate = new Date(datematcharray[k].matchval1).toLocaleDateString();
              fdate = ' ' + fdate.toString() + ' ';
              str = str.replace(datematcharray[k].matchexp.toString(), fdate);
            }
          }

          break;

        case 'time':
          var strvalt = str;
          var timematcharray = matchmap(mdre.time, strvalt);

          if (timematcharray.length) {
            for (k = 0; k < timematcharray.length; k++) {
              var ftime = new Date(timematcharray[k].matchval1).toLocaleTimeString();
              ftime = ' ' + ftime.toString() + ' ';
              str = str.replace(timematcharray[k].matchexp.toString(), ftime);
            }
          }

          break;

        case 'datetime':
          var strvaldt = str;
          var dtimematcharray = matchmap(mdre.datetime, strvaldt);

          if (dtimematcharray.length) {
            for (k = 0; k < dtimematcharray.length; k++) {
              var ms = '';
              var mergekeylength = Object.keys(dtimematcharray[k]).length - 2;

              for (var l = 2; l < mergekeylength; l++) {
                var keystr = "matchval" + l.toString();
                ms += dtimematcharray[k][keystr];
              }

              var foptionstring = "matchval" + mergekeylength.toString();
              var fmtstr = dtimematcharray[k][foptionstring];
              fmtstr = fmtstr.replace(mmntns.fy, ucreplacer);
              fmtstr = fmtstr.replace(mmntns.dd, ucreplacer);
              fmtstr = fmtstr.replace(mmntns.sd, ucreplacer); //var fdtime = new Date(dtimematcharray[k].matchval).toLocaleString();

              var fdtime = moment(ms).format(fmtstr);
              fdtime = ' ' + fdtime.toString() + ' ';
              str = str.replace(dtimematcharray[k].matchexp.toString(), fdtime);
            }
          }

          break;

        case 'num':
          var strnumval = str;
          var nummatcharray = matchmap(mdre.num, strnumval);

          if (nummatcharray.length) {
            for (k = 0; k < nummatcharray.length; k++) {
              var fnum = Number(nummatcharray[k].matchval1).toLocaleString();
              fnum = ' ' + fnum.toString() + ' ';
              str = str.replace(nummatcharray[k].matchexp.toString(), fnum);
            }
          }

          break;

        case 'curr':
          var strcurval = str;
          var currmatcharray = matchmap(mdre.curr, strcurval);
          var browserLang = window.navigator.language || window.navigator.browserLanguage;
          var curcode = new RegExp(/\w{3}/);

          if (currmatcharray.length) {
            for (k = 0; k < currmatcharray.length; k++) {
              var currops = {},
                  fcode;
              currops.style = 'currency';

              if (currmatcharray[k].matchval2) {
                fcode = curcode.exec(currmatcharray[k].matchval2);
              }

              currops.currency = fcode[0].toString();
              var fcurr = Number(currmatcharray[k].matchval1).toLocaleString(browserLang, currops); //check for browser support if browser doesnot suppor we get the same value back and we append the currency Code

              if (currmatcharray[k].matchval1.toString() === fcurr.toString()) {
                fcurr = ' ' + fcurr.toString() + ' ' + currops.currency;
              } else {
                fcurr = ' ' + fcurr.toString() + ' ';
              }

              str = str.replace(currmatcharray[k].matchexp.toString(), fcurr);
            }
          }

          break;
      }
    }

    function nextLnReplacer(match, p1, offset, string) {
      return "<br/>";
    }

    function ignoreWords(str) {
      var _words = ['onclick', 'onmouse', 'onblur', 'onscroll', 'onStart'];

      _words.forEach(function (word) {
        var regEx = new RegExp(word, "ig");
        str = str.replace(regEx, "");
      });

      return str;
    }

    var nextln = regEx.NEWLINE;

    function linkreplacer(match, p1, offset, string) {
      var dummyString = string.replace(_regExForMarkdownLink, '[]');
      dummyString = ignoreWords(dummyString);

      if (dummyString.indexOf(match) !== -1) {
        var _link = p1.indexOf('http') < 0 ? 'http://' + match : match,
            _target; //_link = encodeURIComponent(_link);


        var target = "target='underscoreblank'";

        if (hyperLinksMap) {
          var _randomKey = "korerandom://" + Object.keys(hyperLinksMap).length;

          hyperLinksMap[_randomKey] = _link;
          _link = _randomKey;
        }

        return "<span class='isLink'><a id='linkEvent'" + _target + " href=\"" + _link + "\">" + match + "</a></span>";
      } else {
        return match;
      }
    } //check for whether to linkify or not
    // try {
    //     str = decodeURIComponent(str);
    // } catch (e) {
    //     str = str || '';
    // }


    if (typeof str === 'number') {
      str = str.toString();
    }

    str = str || '';
    var newStr = '',
        wrapper1;

    if (responseType === 'user') {
      str = str.replace(/onerror=/gi, 'abc-error=');
      wrapper1 = document.createElement('div');
      newStr = str.replace(/“/g, '\"').replace(/”/g, '\"');
      newStr = newStr.replace(/</g, '&lt;').replace(/>/g, '&gt;');
      wrapper1.innerHTML = xssAttack(newStr);

      if (korejquery(wrapper1).find('a').attr('href')) {
        str = newStr;
      } else {
        str = newStr.replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(_regExForLink, linkreplacer);
      }
    } else {
      wrapper1 = document.createElement('div'); //str = str.replace(/&lt;/g, '<').replace(/&gt;/g, '>');

      wrapper1.innerHTML = xssAttack(str);

      if (korejquery(wrapper1).find('a').attr('href')) {
        var linkArray = str.match(/<a[^>]*>([^<]+)<\/a>/g);

        for (var x = 0; x < linkArray.length; x++) {
          var _newLA = document.createElement('div');

          var _detectedLink = linkArray[x];
          _newLA.innerHTML = linkArray[x]; //for mailto: links, new line character need to be repaced with %0A 

          if (_detectedLink.indexOf("href='mailto:") > -1 || _detectedLink.indexOf('href="mailto:') > -1) {
            _detectedLink = _detectedLink.split('\n').join("%0A");
          }

          var _randomKey = "korerandom://" + Object.keys(hyperLinksMap).length;

          _newLA.innerHTML = _detectedLink;

          var _aEle = _newLA.getElementsByTagName('a');

          if (_aEle && _aEle[0] && _aEle[0].href) {
            hyperLinksMap[_randomKey] = _aEle[0].href;
            _aEle[0].href = _randomKey;
          }

          korejquery(_newLA).find('a').attr('target', 'underscoreblank');
          str = str.replace(linkArray[x], _newLA.innerHTML);
        }
      } else {
        str = wrapper1.innerHTML.replace(_regExForLink, linkreplacer);
      }
    }

    if (ignoreCheckMark) {
      str = val;
    } else {
      str = this.checkMarkdowns(str, hyperLinksMap);
    }

    var hrefRefs = Object.keys(hyperLinksMap);

    if (hrefRefs && hrefRefs.length) {
      hrefRefs.forEach(function (hrefRef) {
        function customStrReplacer() {
          //custom replacer is used as by default replace() replaces with '$' in place of '$$'
          return hyperLinksMap[hrefRef];
        }

        str = str.replace(hrefRef, customStrReplacer);
      });
    }

    str = str.replaceAll('target="underscoreblank"', 'target="_blank"');
    str = str.replaceAll("target='underscoreblank'", 'target="_blank"');

    if (responseType === 'user') {
      str = str.replace(/abc-error=/gi, 'onerror=');
    }

    return this.nl2br(str, true);
  },
  'checkMarkdowns': function checkMarkdowns(val, hyperLinksMap) {
    function isEven(n) {
      n = Number(n);
      return n === 0 || !!(n && !(n % 2));
    }

    if (val === '') {
      return val;
    }

    var txtArr = val.split(/\r?\n/);

    for (var i = 0; i < txtArr.length; i++) {
      var _lineBreakAdded = false;

      if (txtArr[i].indexOf('#h6') === 0 || txtArr[i].indexOf('#H6') === 0) {
        txtArr[i] = '<h6>' + txtArr[i].substring(3) + '</h6>';
        _lineBreakAdded = true;
      } else if (txtArr[i].indexOf('#h5') === 0 || txtArr[i].indexOf('#H5') === 0) {
        txtArr[i] = '<h5>' + txtArr[i].substring(3) + '</h5>';
        _lineBreakAdded = true;
      } else if (txtArr[i].indexOf('#h4') === 0 || txtArr[i].indexOf('#H4') === 0) {
        txtArr[i] = '<h4>' + txtArr[i].substring(3) + '</h4>';
        _lineBreakAdded = true;
      } else if (txtArr[i].indexOf('#h3') === 0 || txtArr[i].indexOf('#H3') === 0) {
        txtArr[i] = '<h3>' + txtArr[i].substring(3) + '</h3>';
        _lineBreakAdded = true;
      } else if (txtArr[i].indexOf('#h2') === 0 || txtArr[i].indexOf('#H2') === 0) {
        txtArr[i] = '<h2>' + txtArr[i].substring(3) + '</h2>';
        _lineBreakAdded = true;
      } else if (txtArr[i].indexOf('#h1') === 0 || txtArr[i].indexOf('#H1') === 0) {
        txtArr[i] = '<h1>' + txtArr[i].substring(3) + '</h1>';
        _lineBreakAdded = true;
      } else if (txtArr[i].length === 0) {
        txtArr[i] = '\r\n';
        _lineBreakAdded = true;
      } else if (txtArr[i].indexOf('*') === 0) {
        if (!isEven(txtArr[i].split('*').length - 1)) {
          txtArr[i] = '\r\n&#9679; ' + txtArr[i].substring(1);
          _lineBreakAdded = true;
        }
      } else if (txtArr[i].indexOf('>>') === 0) {
        if (txtArr[i].substring(2).indexOf('*') === 0) {
          if (!isEven(txtArr[i].substring(2).split('*').length - 1)) {
            txtArr[i] = '\r\n&#9679; ' + txtArr[i].substring(3);
            _lineBreakAdded = true;
          }

          txtArr[i] = '<p class="indent">' + txtArr[i] + '</p>';
        } else {
          txtArr[i] = '<p class="indent">' + txtArr[i].substring(2) + '</p>';
        }

        _lineBreakAdded = true;
      } else if (txtArr[i].indexOf('&gt;&gt;') === 0) {
        if (txtArr[i].substring(8).indexOf('*') === 0) {
          // add ">>*" for sub bullet point 
          if (!isEven(txtArr[i].substring(8).split('*').length - 1)) {
            txtArr[i] = '\r\n&#9679; ' + txtArr[i].substring(9);
            _lineBreakAdded = true;
          }

          txtArr[i] = '<p class="indent">' + txtArr[i] + '</p>';
        } else {
          txtArr[i] = '<p class="indent">' + txtArr[i].substring(8) + '</p>';
        }

        _lineBreakAdded = true;
      } else if (txtArr[i].indexOf('---') === 0 || txtArr[i].indexOf('___') === 0) {
        txtArr[i] = '<hr/>' + txtArr[i].substring(3);
        _lineBreakAdded = true;
      }

      var j; // Matches Image markup ![test](http://google.com/image.png)

      if (txtArr[i].indexOf(' ![') === -1) {
        // replace method trimming last'$' character, to handle this adding ' ![' extra space
        txtArr[i] = txtArr[i].replace('![', ' ![');
      }

      var _matchImage = txtArr[i].match(/\!\[([^\]]+)\](|\s)+\(([^\)])+\)/g);

      if (_matchImage && _matchImage.length > 0) {
        for (j = 0; j < _matchImage.length; j++) {
          var _imgTxt = _matchImage[j].substring(2, _matchImage[j].indexOf(']'));

          var remainingString = _matchImage[j].substring(_matchImage[j].indexOf(']') + 1).trim();

          var _imgLink = remainingString.substring(1, remainingString.indexOf(')'));

          if (hyperLinksMap) {
            var _randomKey = "korerandom://" + Object.keys(hyperLinksMap).length;

            hyperLinksMap[_randomKey] = _imgLink;
            _imgLink = _randomKey;
          }

          _imgLink = '<img src="' + _imgLink + '" alt="' + _imgTxt + '">';

          var _tempImg = txtArr[i].split(' ');

          for (var k = 0; k < _tempImg.length; k++) {
            if (_tempImg[k] === _matchImage[j]) {
              _tempImg[k] = _imgLink;
            }
          }

          txtArr[i] = _tempImg.join(' ');
          txtArr[i] = txtArr[i].replace(_matchImage[j], _imgLink);
        }
      } // Matches link markup [test](http://google.com/)
      //var _matchLink = txtArr[i].match(/\[([^\]]+)\](|\s)+\(([^\)])+\)/g);


      var _matchLink = txtArr[i].match(/\[([^\]]+)\](|\s)\((?:[^)(]+|\((?:[^)(]+|\([^)(]*\))*\))*\)/g);

      if (_matchLink && _matchLink.length > 0) {
        for (j = 0; j < _matchLink.length; j++) {
          var _linkTxt = _matchLink[j].substring(1, _matchLink[j].indexOf(']'));

          var remainingString = _matchLink[j].substring(_matchLink[j].indexOf(']') + 1).trim();

          var _linkLink = remainingString.substring(1, remainingString.lastIndexOf(')'));

          _linkLink = _linkLink.replace(/\\n/g, "%0A");

          if (hyperLinksMap) {
            var _randomKey = "korerandom://" + Object.keys(hyperLinksMap).length;

            hyperLinksMap[_randomKey] = _linkLink;
            _linkLink = _randomKey;
          }

          _linkLink = '<span class="isLink"><a id="linkEvent" href="' + _linkLink + '" target="underscoreblank">' + this.checkMarkdowns(_linkTxt) + '</a></span>';
          txtArr[i] = txtArr[i].replace(_matchLink[j], _linkLink);
        }
      } // Matches bold markup *test* doesnot match * test *, * test*. If all these are required then replace \S with \s


      var _matchAstrik = txtArr[i].match(/\*\S([^*]*?)\*/g);

      if (_matchAstrik && _matchAstrik.length > 0) {
        for (j = 0; j < _matchAstrik.length; j++) {
          var _boldTxt = _matchAstrik[j];
          var validBoldGroup = true;

          if (_boldTxt.includes('*')) {
            var _tempStr = _boldTxt.replace(/\*/g, ''); // var letterNumber = /^[0-9a-zA-Z!@#$%^&()_ +\-=\[\]{};':"\\|,.<>\/?]+$/;


            if (!(_tempStr && _tempStr.length)) {
              validBoldGroup = false;
            }
          }

          if (validBoldGroup) {
            _boldTxt = _boldTxt.substring(1, _boldTxt.length - 1);
            _boldTxt = '<b>' + _boldTxt.trim() + '</b>';
            txtArr[i] = txtArr[i].replace(_matchAstrik[j], _boldTxt);
          }
        }
      } //For backward compatability who used ~ for Italics
      //Matches italic markup ~test~ doesnot match ~ test ~, ~test ~, ~ test~. If all these are required then replace \S with \s


      var _matchItalic = txtArr[i].match(/\~\S([^*]*?)\S\~/g);

      if (_matchItalic && _matchItalic.length > 0) {
        for (j = 0; j < _matchItalic.length; j++) {
          var _italicTxt = _matchItalic[j];

          if (txtArr[i].indexOf(_italicTxt) === 0 || txtArr[i][txtArr[i].indexOf(_italicTxt) - 1] === ' ' || txtArr[i].indexOf(_italicTxt) !== -1) {
            _italicTxt = _italicTxt.substring(1, _italicTxt.length - 1);
            _italicTxt = '<i class="markdownItalic">' + _italicTxt + '</i>';
            txtArr[i] = txtArr[i].replace(_matchItalic[j], _italicTxt);
          }
        }
      } // Matches italic markup _test_ doesnot match _ test _, _test _, _ test_. If all these are required then replace \S with \s


      var _matchItalic = txtArr[i].match(/\_\S([^*]*?)\S\_/g);

      if (_matchItalic && _matchItalic.length > 0) {
        for (j = 0; j < _matchItalic.length; j++) {
          var _italicTxt = _matchItalic[j];

          if (txtArr[i].indexOf(_italicTxt) === 0 || txtArr[i][txtArr[i].indexOf(_italicTxt) - 1] === ' ' || txtArr[i].indexOf(_italicTxt) !== -1) {
            var validItalicMark = true;

            if (txtArr[i][txtArr[i].indexOf(_italicTxt) + _italicTxt.length]) {
              if (txtArr[i][txtArr[i].indexOf(_italicTxt) + _italicTxt.length] !== ' ') {
                validItalicMark = false;
              }
            }

            if (validItalicMark) {
              _italicTxt = _italicTxt.substring(1, _italicTxt.length - 1) + ' ';
              _italicTxt = '<i class="markdownItalic">' + _italicTxt + '</i>';
              txtArr[i] = txtArr[i].replace(_matchItalic[j], _italicTxt);
            }
          }
        }
      } // Matches bold markup ~test~ doesnot match ~ test ~, ~test ~, ~ test~. If all these are required then replace \S with \s


      var _matchItalic = txtArr[i].match(/\~\S([^*]*?)\S\~/g);

      if (_matchItalic && _matchItalic.length > 0) {
        for (j = 0; j < _matchItalic.length; j++) {
          var _italicTxt = _matchItalic[j];

          if (txtArr[i].indexOf(_italicTxt) === 0 || txtArr[i][txtArr[i].indexOf(_italicTxt) - 1] === ' ' || txtArr[i].indexOf(_italicTxt) !== -1) {
            _italicTxt = _italicTxt.substring(1, _italicTxt.length - 1);
            _italicTxt = '<i class="markdownItalic">' + _italicTxt + '</i>';
            txtArr[i] = txtArr[i].replace(_matchItalic[j], _italicTxt);
          }
        }
      } // Matches bold markup ~test~ doesnot match ~ test ~, ~test ~, ~ test~. If all these are required then replace \S with \s


      var _matchPre = txtArr[i].match(/\`\`\`\S([^*]*?)\S\`\`\`/g);

      var _matchPre1 = txtArr[i].match(/\'\'\'\S([^*]*?)\S\'\'\'/g);

      if (_matchPre && _matchPre.length > 0) {
        for (j = 0; j < _matchPre.length; j++) {
          var _preTxt = _matchPre[j];
          _preTxt = _preTxt.substring(3, _preTxt.length - 3);
          _preTxt = '<pre>' + _preTxt + '</pre>';
          txtArr[i] = txtArr[i].replace(_matchPre[j], _preTxt);
        }

        _lineBreakAdded = true;
      }

      if (_matchPre1 && _matchPre1.length > 0) {
        for (j = 0; j < _matchPre1.length; j++) {
          var _preTxt = _matchPre1[j];
          _preTxt = _preTxt.substring(3, _preTxt.length - 3);
          _preTxt = '<pre>' + _preTxt + '</pre>';
          txtArr[i] = txtArr[i].replace(_matchPre1[j], _preTxt);
        }

        _lineBreakAdded = true;
      }

      if (!_lineBreakAdded && i > 0) {
        txtArr[i] = '\r\n' + txtArr[i];
      }
    }

    val = txtArr.join('');
    return val;
  }
});

(function () {
  String.prototype.isNotAllowedHTMLTags = function () {
    var wrapper = document.createElement("div");
    wrapper.innerHTML = this;
    var setFlags = {
      isValid: true,
      key: ""
    };

    try {
      if (korejquery(wrapper).find("script").length || korejquery(wrapper).find("video").length || korejquery(wrapper).find("audio").length) {
        setFlags.isValid = false;
      }

      if (korejquery(wrapper).find("link").length && korejquery(wrapper).find("link").attr("href").indexOf("script") !== -1) {
        if (detectScriptTag.test(korejquery(wrapper).find("link").attr("href"))) {
          setFlags.isValid = false;
        } else {
          setFlags.isValid = true;
        }
      }

      if (korejquery(wrapper).find("a").length && korejquery(wrapper).find("a").attr("href").indexOf("script") !== -1) {
        if (detectScriptTag.test(korejquery(wrapper).find("a").attr("href"))) {
          setFlags.isValid = false;
        } else {
          setFlags.isValid = true;
        }
      }

      if (korejquery(wrapper).find("img").length && korejquery(wrapper).find("img").attr("src").indexOf("script") !== -1) {
        if (detectScriptTag.test(korejquery(wrapper).find("img").attr("href"))) {
          setFlags.isValid = false;
        } else {
          setFlags.isValid = true;
        }
      }

      if (korejquery(wrapper).find("object").length) {
        setFlags.isValid = false;
      }

      return setFlags;
    } catch (e) {
      return setFlags;
    }
  };

  String.prototype.escapeHTML = function () {
    // '&': '&amp;',
    var escapeTokens = {
      "<": "&lt;",
      ">": "&gt;",
      '"': "&quot;",
      "'": "&#x27;"
    };
    var htmlTags = /[<>"']/g;
    return "".concat(this).replace(htmlTags, function (match) {
      return escapeTokens[match];
    });
  };

  String.prototype.replaceAll = function (search, replacement) {
    var target = this;
    return target.replace(new RegExp(search, "g"), replacement);
  };

  if (!String.prototype.includes) {
    String.prototype.includes = function (search, start) {
      if (search instanceof RegExp) {
        throw TypeError("first argument must not be a RegExp");
      }

      if (start === undefined) {
        start = 0;
      }

      return this.indexOf(search, start) !== -1;
    };
  }

  String.prototype.isNotAllowedHTMLTags = function () {
    var wrapper = document.createElement("div");
    wrapper.innerHTML = this;
    var setFlags = {
      isValid: true,
      key: ""
    };

    try {
      if (korejquery(wrapper).find("script").length || korejquery(wrapper).find("video").length || korejquery(wrapper).find("audio").length) {
        setFlags.isValid = false;
      }

      if (korejquery(wrapper).find("link").length && korejquery(wrapper).find("link").attr("href").indexOf("script") !== -1) {
        if (detectScriptTag.test(korejquery(wrapper).find("link").attr("href"))) {
          setFlags.isValid = false;
        } else {
          setFlags.isValid = true;
        }
      }

      if (korejquery(wrapper).find("a").length && korejquery(wrapper).find("a").attr("href").indexOf("script") !== -1) {
        if (detectScriptTag.test(korejquery(wrapper).find("a").attr("href"))) {
          setFlags.isValid = false;
        } else {
          setFlags.isValid = true;
        }
      }

      if (korejquery(wrapper).find("img").length && korejquery(wrapper).find("img").attr("src").indexOf("script") !== -1) {
        if (detectScriptTag.test(korejquery(wrapper).find("img").attr("href"))) {
          setFlags.isValid = false;
        } else {
          setFlags.isValid = true;
        }
      }

      if (korejquery(wrapper).find("object").length) {
        setFlags.isValid = false;
      }

      return setFlags;
    } catch (e) {
      return setFlags;
    }
  };

  String.prototype.escapeHTML = function () {
    // '&': '&amp;',
    var escapeTokens = {
      "<": "&lt;",
      ">": "&gt;",
      '"': "&quot;",
      "'": "&#x27;"
    };
    var htmlTags = /[<>"']/g;
    return "".concat(this).replace(htmlTags, function (match) {
      return escapeTokens[match];
    });
  };

  String.prototype.replaceAll = function (search, replacement) {
    var target = this;
    return target.replace(new RegExp(search, "g"), replacement);
  };

  if (!String.prototype.includes) {
    String.prototype.includes = function (search, start) {
      if (search instanceof RegExp) {
        throw TypeError("first argument must not be a RegExp");
      }

      if (start === undefined) {
        start = 0;
      }

      return this.indexOf(search, start) !== -1;
    };
  }
})();

/* harmony default export */ const helpers = (KoreHelpers);
;// CONCATENATED MODULE: ./node_modules/d3-array/src/ascending.js
function ascending(a, b) {
  return a == null || b == null ? NaN : a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;
}

;// CONCATENATED MODULE: ./node_modules/d3-array/src/descending.js
function descending(a, b) {
  return a == null || b == null ? NaN
    : b < a ? -1
    : b > a ? 1
    : b >= a ? 0
    : NaN;
}

;// CONCATENATED MODULE: ./node_modules/d3-array/src/bisector.js



function bisector(f) {
  let compare1, compare2, delta;

  // If an accessor is specified, promote it to a comparator. In this case we
  // can test whether the search value is (self-) comparable. We can’t do this
  // for a comparator (except for specific, known comparators) because we can’t
  // tell if the comparator is symmetric, and an asymmetric comparator can’t be
  // used to test whether a single value is comparable.
  if (f.length !== 2) {
    compare1 = ascending;
    compare2 = (d, x) => ascending(f(d), x);
    delta = (d, x) => f(d) - x;
  } else {
    compare1 = f === ascending || f === descending ? f : zero;
    compare2 = f;
    delta = f;
  }

  function left(a, x, lo = 0, hi = a.length) {
    if (lo < hi) {
      if (compare1(x, x) !== 0) return hi;
      do {
        const mid = (lo + hi) >>> 1;
        if (compare2(a[mid], x) < 0) lo = mid + 1;
        else hi = mid;
      } while (lo < hi);
    }
    return lo;
  }

  function right(a, x, lo = 0, hi = a.length) {
    if (lo < hi) {
      if (compare1(x, x) !== 0) return hi;
      do {
        const mid = (lo + hi) >>> 1;
        if (compare2(a[mid], x) <= 0) lo = mid + 1;
        else hi = mid;
      } while (lo < hi);
    }
    return lo;
  }

  function center(a, x, lo = 0, hi = a.length) {
    const i = left(a, x, lo, hi - 1);
    return i > lo && delta(a[i - 1], x) > -delta(a[i], x) ? i - 1 : i;
  }

  return {left, center, right};
}

function zero() {
  return 0;
}

;// CONCATENATED MODULE: ./node_modules/d3-array/src/number.js
function number(x) {
  return x === null ? NaN : +x;
}

function* numbers(values, valueof) {
  if (valueof === undefined) {
    for (let value of values) {
      if (value != null && (value = +value) >= value) {
        yield value;
      }
    }
  } else {
    let index = -1;
    for (let value of values) {
      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {
        yield value;
      }
    }
  }
}

;// CONCATENATED MODULE: ./node_modules/d3-array/src/bisect.js




const ascendingBisect = bisector(ascending);
const bisectRight = ascendingBisect.right;
const bisectLeft = ascendingBisect.left;
const bisectCenter = bisector(number).center;
/* harmony default export */ const bisect = (bisectRight);

;// CONCATENATED MODULE: ./node_modules/d3-array/src/count.js
function count(values, valueof) {
  let count = 0;
  if (valueof === undefined) {
    for (let value of values) {
      if (value != null && (value = +value) >= value) {
        ++count;
      }
    }
  } else {
    let index = -1;
    for (let value of values) {
      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {
        ++count;
      }
    }
  }
  return count;
}

;// CONCATENATED MODULE: ./node_modules/d3-array/src/cross.js
function cross_length(array) {
  return array.length | 0;
}

function empty(length) {
  return !(length > 0);
}

function arrayify(values) {
  return typeof values !== "object" || "length" in values ? values : Array.from(values);
}

function reducer(reduce) {
  return values => reduce(...values);
}

function cross(...values) {
  const reduce = typeof values[values.length - 1] === "function" && reducer(values.pop());
  values = values.map(arrayify);
  const lengths = values.map(cross_length);
  const j = values.length - 1;
  const index = new Array(j + 1).fill(0);
  const product = [];
  if (j < 0 || lengths.some(empty)) return product;
  while (true) {
    product.push(index.map((j, i) => values[i][j]));
    let i = j;
    while (++index[i] === lengths[i]) {
      if (i === 0) return reduce ? product.map(reduce) : product;
      index[i--] = 0;
    }
  }
}

;// CONCATENATED MODULE: ./node_modules/d3-array/src/cumsum.js
function cumsum(values, valueof) {
  var sum = 0, index = 0;
  return Float64Array.from(values, valueof === undefined
    ? v => (sum += +v || 0)
    : v => (sum += +valueof(v, index++, values) || 0));
}
;// CONCATENATED MODULE: ./node_modules/d3-array/src/variance.js
function variance(values, valueof) {
  let count = 0;
  let delta;
  let mean = 0;
  let sum = 0;
  if (valueof === undefined) {
    for (let value of values) {
      if (value != null && (value = +value) >= value) {
        delta = value - mean;
        mean += delta / ++count;
        sum += delta * (value - mean);
      }
    }
  } else {
    let index = -1;
    for (let value of values) {
      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {
        delta = value - mean;
        mean += delta / ++count;
        sum += delta * (value - mean);
      }
    }
  }
  if (count > 1) return sum / (count - 1);
}

;// CONCATENATED MODULE: ./node_modules/d3-array/src/deviation.js


function deviation(values, valueof) {
  const v = variance(values, valueof);
  return v ? Math.sqrt(v) : v;
}

;// CONCATENATED MODULE: ./node_modules/d3-array/src/extent.js
function extent(values, valueof) {
  let min;
  let max;
  if (valueof === undefined) {
    for (const value of values) {
      if (value != null) {
        if (min === undefined) {
          if (value >= value) min = max = value;
        } else {
          if (min > value) min = value;
          if (max < value) max = value;
        }
      }
    }
  } else {
    let index = -1;
    for (let value of values) {
      if ((value = valueof(value, ++index, values)) != null) {
        if (min === undefined) {
          if (value >= value) min = max = value;
        } else {
          if (min > value) min = value;
          if (max < value) max = value;
        }
      }
    }
  }
  return [min, max];
}

;// CONCATENATED MODULE: ./node_modules/d3-array/src/fsum.js
// https://github.com/python/cpython/blob/a74eea238f5baba15797e2e8b570d153bc8690a7/Modules/mathmodule.c#L1423
class Adder {
  constructor() {
    this._partials = new Float64Array(32);
    this._n = 0;
  }
  add(x) {
    const p = this._partials;
    let i = 0;
    for (let j = 0; j < this._n && j < 32; j++) {
      const y = p[j],
        hi = x + y,
        lo = Math.abs(x) < Math.abs(y) ? x - (hi - y) : y - (hi - x);
      if (lo) p[i++] = lo;
      x = hi;
    }
    p[i] = x;
    this._n = i + 1;
    return this;
  }
  valueOf() {
    const p = this._partials;
    let n = this._n, x, y, lo, hi = 0;
    if (n > 0) {
      hi = p[--n];
      while (n > 0) {
        x = hi;
        y = p[--n];
        hi = x + y;
        lo = y - (hi - x);
        if (lo) break;
      }
      if (n > 0 && ((lo < 0 && p[n - 1] < 0) || (lo > 0 && p[n - 1] > 0))) {
        y = lo * 2;
        x = hi + y;
        if (y == x - hi) hi = x;
      }
    }
    return hi;
  }
}

function fsum(values, valueof) {
  const adder = new Adder();
  if (valueof === undefined) {
    for (let value of values) {
      if (value = +value) {
        adder.add(value);
      }
    }
  } else {
    let index = -1;
    for (let value of values) {
      if (value = +valueof(value, ++index, values)) {
        adder.add(value);
      }
    }
  }
  return +adder;
}

function fcumsum(values, valueof) {
  const adder = new Adder();
  let index = -1;
  return Float64Array.from(values, valueof === undefined
      ? v => adder.add(+v || 0)
      : v => adder.add(+valueof(v, ++index, values) || 0)
  );
}

;// CONCATENATED MODULE: ./node_modules/internmap/src/index.js
class InternMap extends Map {
  constructor(entries, key = keyof) {
    super();
    Object.defineProperties(this, {_intern: {value: new Map()}, _key: {value: key}});
    if (entries != null) for (const [key, value] of entries) this.set(key, value);
  }
  get(key) {
    return super.get(intern_get(this, key));
  }
  has(key) {
    return super.has(intern_get(this, key));
  }
  set(key, value) {
    return super.set(intern_set(this, key), value);
  }
  delete(key) {
    return super.delete(intern_delete(this, key));
  }
}

class InternSet extends Set {
  constructor(values, key = keyof) {
    super();
    Object.defineProperties(this, {_intern: {value: new Map()}, _key: {value: key}});
    if (values != null) for (const value of values) this.add(value);
  }
  has(value) {
    return super.has(intern_get(this, value));
  }
  add(value) {
    return super.add(intern_set(this, value));
  }
  delete(value) {
    return super.delete(intern_delete(this, value));
  }
}

function intern_get({_intern, _key}, value) {
  const key = _key(value);
  return _intern.has(key) ? _intern.get(key) : value;
}

function intern_set({_intern, _key}, value) {
  const key = _key(value);
  if (_intern.has(key)) return _intern.get(key);
  _intern.set(key, value);
  return value;
}

function intern_delete({_intern, _key}, value) {
  const key = _key(value);
  if (_intern.has(key)) {
    value = _intern.get(key);
    _intern.delete(key);
  }
  return value;
}

function keyof(value) {
  return value !== null && typeof value === "object" ? value.valueOf() : value;
}

;// CONCATENATED MODULE: ./node_modules/d3-array/src/identity.js
function identity(x) {
  return x;
}

;// CONCATENATED MODULE: ./node_modules/d3-array/src/group.js



function group(values, ...keys) {
  return nest(values, identity, identity, keys);
}

function groups(values, ...keys) {
  return nest(values, Array.from, identity, keys);
}

function flatten(groups, keys) {
  for (let i = 1, n = keys.length; i < n; ++i) {
    groups = groups.flatMap(g => g.pop().map(([key, value]) => [...g, key, value]));
  }
  return groups;
}

function flatGroup(values, ...keys) {
  return flatten(groups(values, ...keys), keys);
}

function flatRollup(values, reduce, ...keys) {
  return flatten(rollups(values, reduce, ...keys), keys);
}

function rollup(values, reduce, ...keys) {
  return nest(values, identity, reduce, keys);
}

function rollups(values, reduce, ...keys) {
  return nest(values, Array.from, reduce, keys);
}

function index(values, ...keys) {
  return nest(values, identity, unique, keys);
}

function indexes(values, ...keys) {
  return nest(values, Array.from, unique, keys);
}

function unique(values) {
  if (values.length !== 1) throw new Error("duplicate key");
  return values[0];
}

function nest(values, map, reduce, keys) {
  return (function regroup(values, i) {
    if (i >= keys.length) return reduce(values);
    const groups = new InternMap();
    const keyof = keys[i++];
    let index = -1;
    for (const value of values) {
      const key = keyof(value, ++index, values);
      const group = groups.get(key);
      if (group) group.push(value);
      else groups.set(key, [value]);
    }
    for (const [key, values] of groups) {
      groups.set(key, regroup(values, i));
    }
    return map(groups);
  })(values, 0);
}

;// CONCATENATED MODULE: ./node_modules/d3-array/src/permute.js
function permute(source, keys) {
  return Array.from(keys, key => source[key]);
}

;// CONCATENATED MODULE: ./node_modules/d3-array/src/sort.js



function sort(values, ...F) {
  if (typeof values[Symbol.iterator] !== "function") throw new TypeError("values is not iterable");
  values = Array.from(values);
  let [f] = F;
  if ((f && f.length !== 2) || F.length > 1) {
    const index = Uint32Array.from(values, (d, i) => i);
    if (F.length > 1) {
      F = F.map(f => values.map(f));
      index.sort((i, j) => {
        for (const f of F) {
          const c = ascendingDefined(f[i], f[j]);
          if (c) return c;
        }
      });
    } else {
      f = values.map(f);
      index.sort((i, j) => ascendingDefined(f[i], f[j]));
    }
    return permute(values, index);
  }
  return values.sort(compareDefined(f));
}

function compareDefined(compare = ascending) {
  if (compare === ascending) return ascendingDefined;
  if (typeof compare !== "function") throw new TypeError("compare is not a function");
  return (a, b) => {
    const x = compare(a, b);
    if (x || x === 0) return x;
    return (compare(b, b) === 0) - (compare(a, a) === 0);
  };
}

function ascendingDefined(a, b) {
  return (a == null || !(a >= a)) - (b == null || !(b >= b)) || (a < b ? -1 : a > b ? 1 : 0);
}

;// CONCATENATED MODULE: ./node_modules/d3-array/src/groupSort.js




function groupSort(values, reduce, key) {
  return (reduce.length !== 2
    ? sort(rollup(values, reduce, key), (([ak, av], [bk, bv]) => ascending(av, bv) || ascending(ak, bk)))
    : sort(group(values, key), (([ak, av], [bk, bv]) => reduce(av, bv) || ascending(ak, bk))))
    .map(([key]) => key);
}

;// CONCATENATED MODULE: ./node_modules/d3-array/src/array.js
var array = Array.prototype;

var slice = array.slice;
var map = array.map;

;// CONCATENATED MODULE: ./node_modules/d3-array/src/constant.js
function constant(x) {
  return () => x;
}

;// CONCATENATED MODULE: ./node_modules/d3-array/src/ticks.js
var e10 = Math.sqrt(50),
    e5 = Math.sqrt(10),
    e2 = Math.sqrt(2);

function ticks(start, stop, count) {
  var reverse,
      i = -1,
      n,
      ticks,
      step;

  stop = +stop, start = +start, count = +count;
  if (start === stop && count > 0) return [start];
  if (reverse = stop < start) n = start, start = stop, stop = n;
  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];

  if (step > 0) {
    let r0 = Math.round(start / step), r1 = Math.round(stop / step);
    if (r0 * step < start) ++r0;
    if (r1 * step > stop) --r1;
    ticks = new Array(n = r1 - r0 + 1);
    while (++i < n) ticks[i] = (r0 + i) * step;
  } else {
    step = -step;
    let r0 = Math.round(start * step), r1 = Math.round(stop * step);
    if (r0 / step < start) ++r0;
    if (r1 / step > stop) --r1;
    ticks = new Array(n = r1 - r0 + 1);
    while (++i < n) ticks[i] = (r0 + i) / step;
  }

  if (reverse) ticks.reverse();

  return ticks;
}

function tickIncrement(start, stop, count) {
  var step = (stop - start) / Math.max(0, count),
      power = Math.floor(Math.log(step) / Math.LN10),
      error = step / Math.pow(10, power);
  return power >= 0
      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)
      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);
}

function tickStep(start, stop, count) {
  var step0 = Math.abs(stop - start) / Math.max(0, count),
      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),
      error = step0 / step1;
  if (error >= e10) step1 *= 10;
  else if (error >= e5) step1 *= 5;
  else if (error >= e2) step1 *= 2;
  return stop < start ? -step1 : step1;
}

;// CONCATENATED MODULE: ./node_modules/d3-array/src/nice.js


function nice(start, stop, count) {
  let prestep;
  while (true) {
    const step = tickIncrement(start, stop, count);
    if (step === prestep || step === 0 || !isFinite(step)) {
      return [start, stop];
    } else if (step > 0) {
      start = Math.floor(start / step) * step;
      stop = Math.ceil(stop / step) * step;
    } else if (step < 0) {
      start = Math.ceil(start * step) / step;
      stop = Math.floor(stop * step) / step;
    }
    prestep = step;
  }
}

;// CONCATENATED MODULE: ./node_modules/d3-array/src/threshold/sturges.js


function thresholdSturges(values) {
  return Math.ceil(Math.log(count(values)) / Math.LN2) + 1;
}

;// CONCATENATED MODULE: ./node_modules/d3-array/src/bin.js









function bin() {
  var value = identity,
      domain = extent,
      threshold = thresholdSturges;

  function histogram(data) {
    if (!Array.isArray(data)) data = Array.from(data);

    var i,
        n = data.length,
        x,
        step,
        values = new Array(n);

    for (i = 0; i < n; ++i) {
      values[i] = value(data[i], i, data);
    }

    var xz = domain(values),
        x0 = xz[0],
        x1 = xz[1],
        tz = threshold(values, x0, x1);

    // Convert number of thresholds into uniform thresholds, and nice the
    // default domain accordingly.
    if (!Array.isArray(tz)) {
      const max = x1, tn = +tz;
      if (domain === extent) [x0, x1] = nice(x0, x1, tn);
      tz = ticks(x0, x1, tn);

      // If the domain is aligned with the first tick (which it will by
      // default), then we can use quantization rather than bisection to bin
      // values, which is substantially faster.
      if (tz[0] <= x0) step = tickIncrement(x0, x1, tn);

      // If the last threshold is coincident with the domain’s upper bound, the
      // last bin will be zero-width. If the default domain is used, and this
      // last threshold is coincident with the maximum input value, we can
      // extend the niced upper bound by one tick to ensure uniform bin widths;
      // otherwise, we simply remove the last threshold. Note that we don’t
      // coerce values or the domain to numbers, and thus must be careful to
      // compare order (>=) rather than strict equality (===)!
      if (tz[tz.length - 1] >= x1) {
        if (max >= x1 && domain === extent) {
          const step = tickIncrement(x0, x1, tn);
          if (isFinite(step)) {
            if (step > 0) {
              x1 = (Math.floor(x1 / step) + 1) * step;
            } else if (step < 0) {
              x1 = (Math.ceil(x1 * -step) + 1) / -step;
            }
          }
        } else {
          tz.pop();
        }
      }
    }

    // Remove any thresholds outside the domain.
    var m = tz.length;
    while (tz[0] <= x0) tz.shift(), --m;
    while (tz[m - 1] > x1) tz.pop(), --m;

    var bins = new Array(m + 1),
        bin;

    // Initialize bins.
    for (i = 0; i <= m; ++i) {
      bin = bins[i] = [];
      bin.x0 = i > 0 ? tz[i - 1] : x0;
      bin.x1 = i < m ? tz[i] : x1;
    }

    // Assign data to bins by value, ignoring any outside the domain.
    if (isFinite(step)) {
      if (step > 0) {
        for (i = 0; i < n; ++i) {
          if ((x = values[i]) != null && x0 <= x && x <= x1) {
            bins[Math.min(m, Math.floor((x - x0) / step))].push(data[i]);
          }
        }
      } else if (step < 0) {
        for (i = 0; i < n; ++i) {
          if ((x = values[i]) != null && x0 <= x && x <= x1) {
            const j = Math.floor((x0 - x) * step);
            bins[Math.min(m, j + (tz[j] <= x))].push(data[i]); // handle off-by-one due to rounding
          }
        }
      }
    } else {
      for (i = 0; i < n; ++i) {
        if ((x = values[i]) != null && x0 <= x && x <= x1) {
          bins[bisect(tz, x, 0, m)].push(data[i]);
        }
      }
    }

    return bins;
  }

  histogram.value = function(_) {
    return arguments.length ? (value = typeof _ === "function" ? _ : constant(_), histogram) : value;
  };

  histogram.domain = function(_) {
    return arguments.length ? (domain = typeof _ === "function" ? _ : constant([_[0], _[1]]), histogram) : domain;
  };

  histogram.thresholds = function(_) {
    return arguments.length ? (threshold = typeof _ === "function" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;
  };

  return histogram;
}

;// CONCATENATED MODULE: ./node_modules/d3-array/src/max.js
function max(values, valueof) {
  let max;
  if (valueof === undefined) {
    for (const value of values) {
      if (value != null
          && (max < value || (max === undefined && value >= value))) {
        max = value;
      }
    }
  } else {
    let index = -1;
    for (let value of values) {
      if ((value = valueof(value, ++index, values)) != null
          && (max < value || (max === undefined && value >= value))) {
        max = value;
      }
    }
  }
  return max;
}

;// CONCATENATED MODULE: ./node_modules/d3-array/src/min.js
function min(values, valueof) {
  let min;
  if (valueof === undefined) {
    for (const value of values) {
      if (value != null
          && (min > value || (min === undefined && value >= value))) {
        min = value;
      }
    }
  } else {
    let index = -1;
    for (let value of values) {
      if ((value = valueof(value, ++index, values)) != null
          && (min > value || (min === undefined && value >= value))) {
        min = value;
      }
    }
  }
  return min;
}

;// CONCATENATED MODULE: ./node_modules/d3-array/src/quickselect.js


// Based on https://github.com/mourner/quickselect
// ISC license, Copyright 2018 Vladimir Agafonkin.
function quickselect(array, k, left = 0, right = array.length - 1, compare) {
  compare = compare === undefined ? ascendingDefined : compareDefined(compare);

  while (right > left) {
    if (right - left > 600) {
      const n = right - left + 1;
      const m = k - left + 1;
      const z = Math.log(n);
      const s = 0.5 * Math.exp(2 * z / 3);
      const sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);
      const newLeft = Math.max(left, Math.floor(k - m * s / n + sd));
      const newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));
      quickselect(array, k, newLeft, newRight, compare);
    }

    const t = array[k];
    let i = left;
    let j = right;

    swap(array, left, k);
    if (compare(array[right], t) > 0) swap(array, left, right);

    while (i < j) {
      swap(array, i, j), ++i, --j;
      while (compare(array[i], t) < 0) ++i;
      while (compare(array[j], t) > 0) --j;
    }

    if (compare(array[left], t) === 0) swap(array, left, j);
    else ++j, swap(array, j, right);

    if (j <= k) left = j + 1;
    if (k <= j) right = j - 1;
  }
  return array;
}

function swap(array, i, j) {
  const t = array[i];
  array[i] = array[j];
  array[j] = t;
}

;// CONCATENATED MODULE: ./node_modules/d3-array/src/quantile.js





function quantile(values, p, valueof) {
  values = Float64Array.from(numbers(values, valueof));
  if (!(n = values.length)) return;
  if ((p = +p) <= 0 || n < 2) return min(values);
  if (p >= 1) return max(values);
  var n,
      i = (n - 1) * p,
      i0 = Math.floor(i),
      value0 = max(quickselect(values, i0).subarray(0, i0 + 1)),
      value1 = min(values.subarray(i0 + 1));
  return value0 + (value1 - value0) * (i - i0);
}

function quantileSorted(values, p, valueof = number) {
  if (!(n = values.length)) return;
  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);
  if (p >= 1) return +valueof(values[n - 1], n - 1, values);
  var n,
      i = (n - 1) * p,
      i0 = Math.floor(i),
      value0 = +valueof(values[i0], i0, values),
      value1 = +valueof(values[i0 + 1], i0 + 1, values);
  return value0 + (value1 - value0) * (i - i0);
}

;// CONCATENATED MODULE: ./node_modules/d3-array/src/threshold/freedmanDiaconis.js



function thresholdFreedmanDiaconis(values, min, max) {
  return Math.ceil((max - min) / (2 * (quantile(values, 0.75) - quantile(values, 0.25)) * Math.pow(count(values), -1 / 3)));
}

;// CONCATENATED MODULE: ./node_modules/d3-array/src/threshold/scott.js



function thresholdScott(values, min, max) {
  return Math.ceil((max - min) * Math.cbrt(count(values)) / (3.49 * deviation(values)));
}

;// CONCATENATED MODULE: ./node_modules/d3-array/src/maxIndex.js
function maxIndex(values, valueof) {
  let max;
  let maxIndex = -1;
  let index = -1;
  if (valueof === undefined) {
    for (const value of values) {
      ++index;
      if (value != null
          && (max < value || (max === undefined && value >= value))) {
        max = value, maxIndex = index;
      }
    }
  } else {
    for (let value of values) {
      if ((value = valueof(value, ++index, values)) != null
          && (max < value || (max === undefined && value >= value))) {
        max = value, maxIndex = index;
      }
    }
  }
  return maxIndex;
}

;// CONCATENATED MODULE: ./node_modules/d3-array/src/mean.js
function mean(values, valueof) {
  let count = 0;
  let sum = 0;
  if (valueof === undefined) {
    for (let value of values) {
      if (value != null && (value = +value) >= value) {
        ++count, sum += value;
      }
    }
  } else {
    let index = -1;
    for (let value of values) {
      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {
        ++count, sum += value;
      }
    }
  }
  if (count) return sum / count;
}

;// CONCATENATED MODULE: ./node_modules/d3-array/src/median.js


function median(values, valueof) {
  return quantile(values, 0.5, valueof);
}

;// CONCATENATED MODULE: ./node_modules/d3-array/src/merge.js
function* merge_flatten(arrays) {
  for (const array of arrays) {
    yield* array;
  }
}

function merge(arrays) {
  return Array.from(merge_flatten(arrays));
}

;// CONCATENATED MODULE: ./node_modules/d3-array/src/minIndex.js
function minIndex(values, valueof) {
  let min;
  let minIndex = -1;
  let index = -1;
  if (valueof === undefined) {
    for (const value of values) {
      ++index;
      if (value != null
          && (min > value || (min === undefined && value >= value))) {
        min = value, minIndex = index;
      }
    }
  } else {
    for (let value of values) {
      if ((value = valueof(value, ++index, values)) != null
          && (min > value || (min === undefined && value >= value))) {
        min = value, minIndex = index;
      }
    }
  }
  return minIndex;
}

;// CONCATENATED MODULE: ./node_modules/d3-array/src/mode.js


function mode(values, valueof) {
  const counts = new InternMap();
  if (valueof === undefined) {
    for (let value of values) {
      if (value != null && value >= value) {
        counts.set(value, (counts.get(value) || 0) + 1);
      }
    }
  } else {
    let index = -1;
    for (let value of values) {
      if ((value = valueof(value, ++index, values)) != null && value >= value) {
        counts.set(value, (counts.get(value) || 0) + 1);
      }
    }
  }
  let modeValue;
  let modeCount = 0;
  for (const [value, count] of counts) {
    if (count > modeCount) {
      modeCount = count;
      modeValue = value;
    }
  }
  return modeValue;
}

;// CONCATENATED MODULE: ./node_modules/d3-array/src/pairs.js
function pairs(values, pairof = pair) {
  const pairs = [];
  let previous;
  let first = false;
  for (const value of values) {
    if (first) pairs.push(pairof(previous, value));
    previous = value;
    first = true;
  }
  return pairs;
}

function pair(a, b) {
  return [a, b];
}

;// CONCATENATED MODULE: ./node_modules/d3-array/src/range.js
function range(start, stop, step) {
  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;

  var i = -1,
      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,
      range = new Array(n);

  while (++i < n) {
    range[i] = start + i * step;
  }

  return range;
}

;// CONCATENATED MODULE: ./node_modules/d3-array/src/rank.js



function rank(values, valueof = ascending) {
  if (typeof values[Symbol.iterator] !== "function") throw new TypeError("values is not iterable");
  let V = Array.from(values);
  const R = new Float64Array(V.length);
  if (valueof.length !== 2) V = V.map(valueof), valueof = ascending;
  const compareIndex = (i, j) => valueof(V[i], V[j]);
  let k, r;
  Uint32Array
    .from(V, (_, i) => i)
    .sort(valueof === ascending ? (i, j) => ascendingDefined(V[i], V[j]) : compareDefined(compareIndex))
    .forEach((j, i) => {
      const c = compareIndex(j, k === undefined ? j : k);
      if (c >= 0) {
        if (k === undefined || c > 0) k = j, r = i;
        R[j] = r;
      } else {
        R[j] = NaN;
      }
    });
  return R;
}

;// CONCATENATED MODULE: ./node_modules/d3-array/src/least.js


function least(values, compare = ascending) {
  let min;
  let defined = false;
  if (compare.length === 1) {
    let minValue;
    for (const element of values) {
      const value = compare(element);
      if (defined
          ? ascending(value, minValue) < 0
          : ascending(value, value) === 0) {
        min = element;
        minValue = value;
        defined = true;
      }
    }
  } else {
    for (const value of values) {
      if (defined
          ? compare(value, min) < 0
          : compare(value, value) === 0) {
        min = value;
        defined = true;
      }
    }
  }
  return min;
}

;// CONCATENATED MODULE: ./node_modules/d3-array/src/leastIndex.js



function leastIndex(values, compare = ascending) {
  if (compare.length === 1) return minIndex(values, compare);
  let minValue;
  let min = -1;
  let index = -1;
  for (const value of values) {
    ++index;
    if (min < 0
        ? compare(value, value) === 0
        : compare(value, minValue) < 0) {
      minValue = value;
      min = index;
    }
  }
  return min;
}

;// CONCATENATED MODULE: ./node_modules/d3-array/src/greatest.js


function greatest(values, compare = ascending) {
  let max;
  let defined = false;
  if (compare.length === 1) {
    let maxValue;
    for (const element of values) {
      const value = compare(element);
      if (defined
          ? ascending(value, maxValue) > 0
          : ascending(value, value) === 0) {
        max = element;
        maxValue = value;
        defined = true;
      }
    }
  } else {
    for (const value of values) {
      if (defined
          ? compare(value, max) > 0
          : compare(value, value) === 0) {
        max = value;
        defined = true;
      }
    }
  }
  return max;
}

;// CONCATENATED MODULE: ./node_modules/d3-array/src/greatestIndex.js



function greatestIndex(values, compare = ascending) {
  if (compare.length === 1) return maxIndex(values, compare);
  let maxValue;
  let max = -1;
  let index = -1;
  for (const value of values) {
    ++index;
    if (max < 0
        ? compare(value, value) === 0
        : compare(value, maxValue) > 0) {
      maxValue = value;
      max = index;
    }
  }
  return max;
}

;// CONCATENATED MODULE: ./node_modules/d3-array/src/scan.js


function scan(values, compare) {
  const index = leastIndex(values, compare);
  return index < 0 ? undefined : index;
}

;// CONCATENATED MODULE: ./node_modules/d3-array/src/shuffle.js
/* harmony default export */ const shuffle = (shuffler(Math.random));

function shuffler(random) {
  return function shuffle(array, i0 = 0, i1 = array.length) {
    let m = i1 - (i0 = +i0);
    while (m) {
      const i = random() * m-- | 0, t = array[m + i0];
      array[m + i0] = array[i + i0];
      array[i + i0] = t;
    }
    return array;
  };
}

;// CONCATENATED MODULE: ./node_modules/d3-array/src/sum.js
function sum_sum(values, valueof) {
  let sum = 0;
  if (valueof === undefined) {
    for (let value of values) {
      if (value = +value) {
        sum += value;
      }
    }
  } else {
    let index = -1;
    for (let value of values) {
      if (value = +valueof(value, ++index, values)) {
        sum += value;
      }
    }
  }
  return sum;
}

;// CONCATENATED MODULE: ./node_modules/d3-array/src/transpose.js


function transpose(matrix) {
  if (!(n = matrix.length)) return [];
  for (var i = -1, m = min(matrix, transpose_length), transpose = new Array(m); ++i < m;) {
    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {
      row[j] = matrix[j][i];
    }
  }
  return transpose;
}

function transpose_length(d) {
  return d.length;
}

;// CONCATENATED MODULE: ./node_modules/d3-array/src/zip.js


function zip() {
  return transpose(arguments);
}

;// CONCATENATED MODULE: ./node_modules/d3-array/src/every.js
function every(values, test) {
  if (typeof test !== "function") throw new TypeError("test is not a function");
  let index = -1;
  for (const value of values) {
    if (!test(value, ++index, values)) {
      return false;
    }
  }
  return true;
}

;// CONCATENATED MODULE: ./node_modules/d3-array/src/some.js
function some(values, test) {
  if (typeof test !== "function") throw new TypeError("test is not a function");
  let index = -1;
  for (const value of values) {
    if (test(value, ++index, values)) {
      return true;
    }
  }
  return false;
}

;// CONCATENATED MODULE: ./node_modules/d3-array/src/filter.js
function filter(values, test) {
  if (typeof test !== "function") throw new TypeError("test is not a function");
  const array = [];
  let index = -1;
  for (const value of values) {
    if (test(value, ++index, values)) {
      array.push(value);
    }
  }
  return array;
}

;// CONCATENATED MODULE: ./node_modules/d3-array/src/map.js
function map_map(values, mapper) {
  if (typeof values[Symbol.iterator] !== "function") throw new TypeError("values is not iterable");
  if (typeof mapper !== "function") throw new TypeError("mapper is not a function");
  return Array.from(values, (value, index) => mapper(value, index, values));
}

;// CONCATENATED MODULE: ./node_modules/d3-array/src/reduce.js
function reduce(values, reducer, value) {
  if (typeof reducer !== "function") throw new TypeError("reducer is not a function");
  const iterator = values[Symbol.iterator]();
  let done, next, index = -1;
  if (arguments.length < 3) {
    ({done, value} = iterator.next());
    if (done) return;
    ++index;
  }
  while (({done, value: next} = iterator.next()), !done) {
    value = reducer(value, next, ++index, values);
  }
  return value;
}

;// CONCATENATED MODULE: ./node_modules/d3-array/src/reverse.js
function reverse(values) {
  if (typeof values[Symbol.iterator] !== "function") throw new TypeError("values is not iterable");
  return Array.from(values).reverse();
}

;// CONCATENATED MODULE: ./node_modules/d3-array/src/difference.js


function difference(values, ...others) {
  values = new InternSet(values);
  for (const other of others) {
    for (const value of other) {
      values.delete(value);
    }
  }
  return values;
}

;// CONCATENATED MODULE: ./node_modules/d3-array/src/disjoint.js


function disjoint(values, other) {
  const iterator = other[Symbol.iterator](), set = new InternSet();
  for (const v of values) {
    if (set.has(v)) return false;
    let value, done;
    while (({value, done} = iterator.next())) {
      if (done) break;
      if (Object.is(v, value)) return false;
      set.add(value);
    }
  }
  return true;
}

;// CONCATENATED MODULE: ./node_modules/d3-array/src/intersection.js


function intersection(values, ...others) {
  values = new InternSet(values);
  others = others.map(set);
  out: for (const value of values) {
    for (const other of others) {
      if (!other.has(value)) {
        values.delete(value);
        continue out;
      }
    }
  }
  return values;
}

function set(values) {
  return values instanceof InternSet ? values : new InternSet(values);
}

;// CONCATENATED MODULE: ./node_modules/d3-array/src/superset.js
function superset(values, other) {
  const iterator = values[Symbol.iterator](), set = new Set();
  for (const o of other) {
    const io = intern(o);
    if (set.has(io)) continue;
    let value, done;
    while (({value, done} = iterator.next())) {
      if (done) return false;
      const ivalue = intern(value);
      set.add(ivalue);
      if (Object.is(io, ivalue)) break;
    }
  }
  return true;
}

function intern(value) {
  return value !== null && typeof value === "object" ? value.valueOf() : value;
}

;// CONCATENATED MODULE: ./node_modules/d3-array/src/subset.js


function subset(values, other) {
  return superset(other, values);
}

;// CONCATENATED MODULE: ./node_modules/d3-array/src/union.js


function union(...others) {
  const set = new InternSet();
  for (const other of others) {
    for (const o of other) {
      set.add(o);
    }
  }
  return set;
}

;// CONCATENATED MODULE: ./node_modules/d3-array/src/index.js












 // Deprecated; use bin.






















 // Deprecated; use leastIndex.





















;// CONCATENATED MODULE: ./node_modules/d3-axis/src/identity.js
/* harmony default export */ function src_identity(x) {
  return x;
}

;// CONCATENATED MODULE: ./node_modules/d3-axis/src/axis.js


var axis_top = 1,
    right = 2,
    bottom = 3,
    left = 4,
    epsilon = 1e-6;

function translateX(x) {
  return "translate(" + x + ",0)";
}

function translateY(y) {
  return "translate(0," + y + ")";
}

function axis_number(scale) {
  return d => +scale(d);
}

function center(scale, offset) {
  offset = Math.max(0, scale.bandwidth() - offset * 2) / 2;
  if (scale.round()) offset = Math.round(offset);
  return d => +scale(d) + offset;
}

function entering() {
  return !this.__axis;
}

function axis(orient, scale) {
  var tickArguments = [],
      tickValues = null,
      tickFormat = null,
      tickSizeInner = 6,
      tickSizeOuter = 6,
      tickPadding = 3,
      offset = typeof window !== "undefined" && window.devicePixelRatio > 1 ? 0 : 0.5,
      k = orient === axis_top || orient === left ? -1 : 1,
      x = orient === left || orient === right ? "x" : "y",
      transform = orient === axis_top || orient === bottom ? translateX : translateY;

  function axis(context) {
    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,
        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : src_identity) : tickFormat,
        spacing = Math.max(tickSizeInner, 0) + tickPadding,
        range = scale.range(),
        range0 = +range[0] + offset,
        range1 = +range[range.length - 1] + offset,
        position = (scale.bandwidth ? center : axis_number)(scale.copy(), offset),
        selection = context.selection ? context.selection() : context,
        path = selection.selectAll(".domain").data([null]),
        tick = selection.selectAll(".tick").data(values, scale).order(),
        tickExit = tick.exit(),
        tickEnter = tick.enter().append("g").attr("class", "tick"),
        line = tick.select("line"),
        text = tick.select("text");

    path = path.merge(path.enter().insert("path", ".tick")
        .attr("class", "domain")
        .attr("stroke", "currentColor"));

    tick = tick.merge(tickEnter);

    line = line.merge(tickEnter.append("line")
        .attr("stroke", "currentColor")
        .attr(x + "2", k * tickSizeInner));

    text = text.merge(tickEnter.append("text")
        .attr("fill", "currentColor")
        .attr(x, k * spacing)
        .attr("dy", orient === axis_top ? "0em" : orient === bottom ? "0.71em" : "0.32em"));

    if (context !== selection) {
      path = path.transition(context);
      tick = tick.transition(context);
      line = line.transition(context);
      text = text.transition(context);

      tickExit = tickExit.transition(context)
          .attr("opacity", epsilon)
          .attr("transform", function(d) { return isFinite(d = position(d)) ? transform(d + offset) : this.getAttribute("transform"); });

      tickEnter
          .attr("opacity", epsilon)
          .attr("transform", function(d) { var p = this.parentNode.__axis; return transform((p && isFinite(p = p(d)) ? p : position(d)) + offset); });
    }

    tickExit.remove();

    path
        .attr("d", orient === left || orient === right
            ? (tickSizeOuter ? "M" + k * tickSizeOuter + "," + range0 + "H" + offset + "V" + range1 + "H" + k * tickSizeOuter : "M" + offset + "," + range0 + "V" + range1)
            : (tickSizeOuter ? "M" + range0 + "," + k * tickSizeOuter + "V" + offset + "H" + range1 + "V" + k * tickSizeOuter : "M" + range0 + "," + offset + "H" + range1));

    tick
        .attr("opacity", 1)
        .attr("transform", function(d) { return transform(position(d) + offset); });

    line
        .attr(x + "2", k * tickSizeInner);

    text
        .attr(x, k * spacing)
        .text(format);

    selection.filter(entering)
        .attr("fill", "none")
        .attr("font-size", 10)
        .attr("font-family", "sans-serif")
        .attr("text-anchor", orient === right ? "start" : orient === left ? "end" : "middle");

    selection
        .each(function() { this.__axis = position; });
  }

  axis.scale = function(_) {
    return arguments.length ? (scale = _, axis) : scale;
  };

  axis.ticks = function() {
    return tickArguments = Array.from(arguments), axis;
  };

  axis.tickArguments = function(_) {
    return arguments.length ? (tickArguments = _ == null ? [] : Array.from(_), axis) : tickArguments.slice();
  };

  axis.tickValues = function(_) {
    return arguments.length ? (tickValues = _ == null ? null : Array.from(_), axis) : tickValues && tickValues.slice();
  };

  axis.tickFormat = function(_) {
    return arguments.length ? (tickFormat = _, axis) : tickFormat;
  };

  axis.tickSize = function(_) {
    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;
  };

  axis.tickSizeInner = function(_) {
    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;
  };

  axis.tickSizeOuter = function(_) {
    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;
  };

  axis.tickPadding = function(_) {
    return arguments.length ? (tickPadding = +_, axis) : tickPadding;
  };

  axis.offset = function(_) {
    return arguments.length ? (offset = +_, axis) : offset;
  };

  return axis;
}

function axisTop(scale) {
  return axis(axis_top, scale);
}

function axisRight(scale) {
  return axis(right, scale);
}

function axisBottom(scale) {
  return axis(bottom, scale);
}

function axisLeft(scale) {
  return axis(left, scale);
}

;// CONCATENATED MODULE: ./node_modules/d3-axis/src/index.js


;// CONCATENATED MODULE: ./node_modules/d3-dispatch/src/dispatch.js
var noop = {value: () => {}};

function dispatch() {
  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {
    if (!(t = arguments[i] + "") || (t in _) || /[\s.]/.test(t)) throw new Error("illegal type: " + t);
    _[t] = [];
  }
  return new Dispatch(_);
}

function Dispatch(_) {
  this._ = _;
}

function parseTypenames(typenames, types) {
  return typenames.trim().split(/^|\s+/).map(function(t) {
    var name = "", i = t.indexOf(".");
    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);
    if (t && !types.hasOwnProperty(t)) throw new Error("unknown type: " + t);
    return {type: t, name: name};
  });
}

Dispatch.prototype = dispatch.prototype = {
  constructor: Dispatch,
  on: function(typename, callback) {
    var _ = this._,
        T = parseTypenames(typename + "", _),
        t,
        i = -1,
        n = T.length;

    // If no callback was specified, return the callback of the given type and name.
    if (arguments.length < 2) {
      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;
      return;
    }

    // If a type was specified, set the callback for the given type and name.
    // Otherwise, if a null callback was specified, remove callbacks of the given name.
    if (callback != null && typeof callback !== "function") throw new Error("invalid callback: " + callback);
    while (++i < n) {
      if (t = (typename = T[i]).type) _[t] = dispatch_set(_[t], typename.name, callback);
      else if (callback == null) for (t in _) _[t] = dispatch_set(_[t], typename.name, null);
    }

    return this;
  },
  copy: function() {
    var copy = {}, _ = this._;
    for (var t in _) copy[t] = _[t].slice();
    return new Dispatch(copy);
  },
  call: function(type, that) {
    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];
    if (!this._.hasOwnProperty(type)) throw new Error("unknown type: " + type);
    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);
  },
  apply: function(type, that, args) {
    if (!this._.hasOwnProperty(type)) throw new Error("unknown type: " + type);
    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);
  }
};

function get(type, name) {
  for (var i = 0, n = type.length, c; i < n; ++i) {
    if ((c = type[i]).name === name) {
      return c.value;
    }
  }
}

function dispatch_set(type, name, callback) {
  for (var i = 0, n = type.length; i < n; ++i) {
    if (type[i].name === name) {
      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));
      break;
    }
  }
  if (callback != null) type.push({name: name, value: callback});
  return type;
}

/* harmony default export */ const src_dispatch = (dispatch);

;// CONCATENATED MODULE: ./node_modules/d3-selection/src/selector.js
function none() {}

/* harmony default export */ function selector(selector) {
  return selector == null ? none : function() {
    return this.querySelector(selector);
  };
}

;// CONCATENATED MODULE: ./node_modules/d3-selection/src/selection/select.js



/* harmony default export */ function selection_select(select) {
  if (typeof select !== "function") select = selector(select);

  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {
      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {
        if ("__data__" in node) subnode.__data__ = node.__data__;
        subgroup[i] = subnode;
      }
    }
  }

  return new Selection(subgroups, this._parents);
}

;// CONCATENATED MODULE: ./node_modules/d3-selection/src/array.js
// Given something array like (or null), returns something that is strictly an
// array. This is used to ensure that array-like objects passed to d3.selectAll
// or selection.selectAll are converted into proper arrays when creating a
// selection; we don’t ever want to create a selection backed by a live
// HTMLCollection or NodeList. However, note that selection.selectAll will use a
// static NodeList as a group, since it safely derived from querySelectorAll.
function array_array(x) {
  return x == null ? [] : Array.isArray(x) ? x : Array.from(x);
}

;// CONCATENATED MODULE: ./node_modules/d3-selection/src/selectorAll.js
function selectorAll_empty() {
  return [];
}

/* harmony default export */ function selectorAll(selector) {
  return selector == null ? selectorAll_empty : function() {
    return this.querySelectorAll(selector);
  };
}

;// CONCATENATED MODULE: ./node_modules/d3-selection/src/selection/selectAll.js




function arrayAll(select) {
  return function() {
    return array_array(select.apply(this, arguments));
  };
}

/* harmony default export */ function selectAll(select) {
  if (typeof select === "function") select = arrayAll(select);
  else select = selectorAll(select);

  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {
      if (node = group[i]) {
        subgroups.push(select.call(node, node.__data__, i, group));
        parents.push(node);
      }
    }
  }

  return new Selection(subgroups, parents);
}

;// CONCATENATED MODULE: ./node_modules/d3-selection/src/matcher.js
/* harmony default export */ function matcher(selector) {
  return function() {
    return this.matches(selector);
  };
}

function childMatcher(selector) {
  return function(node) {
    return node.matches(selector);
  };
}


;// CONCATENATED MODULE: ./node_modules/d3-selection/src/selection/selectChild.js


var find = Array.prototype.find;

function childFind(match) {
  return function() {
    return find.call(this.children, match);
  };
}

function childFirst() {
  return this.firstElementChild;
}

/* harmony default export */ function selectChild(match) {
  return this.select(match == null ? childFirst
      : childFind(typeof match === "function" ? match : childMatcher(match)));
}

;// CONCATENATED MODULE: ./node_modules/d3-selection/src/selection/selectChildren.js


var selectChildren_filter = Array.prototype.filter;

function children() {
  return Array.from(this.children);
}

function childrenFilter(match) {
  return function() {
    return selectChildren_filter.call(this.children, match);
  };
}

/* harmony default export */ function selectChildren(match) {
  return this.selectAll(match == null ? children
      : childrenFilter(typeof match === "function" ? match : childMatcher(match)));
}

;// CONCATENATED MODULE: ./node_modules/d3-selection/src/selection/filter.js



/* harmony default export */ function selection_filter(match) {
  if (typeof match !== "function") match = matcher(match);

  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {
      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {
        subgroup.push(node);
      }
    }
  }

  return new Selection(subgroups, this._parents);
}

;// CONCATENATED MODULE: ./node_modules/d3-selection/src/selection/sparse.js
/* harmony default export */ function sparse(update) {
  return new Array(update.length);
}

;// CONCATENATED MODULE: ./node_modules/d3-selection/src/selection/enter.js



/* harmony default export */ function enter() {
  return new Selection(this._enter || this._groups.map(sparse), this._parents);
}

function EnterNode(parent, datum) {
  this.ownerDocument = parent.ownerDocument;
  this.namespaceURI = parent.namespaceURI;
  this._next = null;
  this._parent = parent;
  this.__data__ = datum;
}

EnterNode.prototype = {
  constructor: EnterNode,
  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },
  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },
  querySelector: function(selector) { return this._parent.querySelector(selector); },
  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }
};

;// CONCATENATED MODULE: ./node_modules/d3-selection/src/constant.js
/* harmony default export */ function src_constant(x) {
  return function() {
    return x;
  };
}

;// CONCATENATED MODULE: ./node_modules/d3-selection/src/selection/data.js




function bindIndex(parent, group, enter, update, exit, data) {
  var i = 0,
      node,
      groupLength = group.length,
      dataLength = data.length;

  // Put any non-null nodes that fit into update.
  // Put any null nodes into enter.
  // Put any remaining data into enter.
  for (; i < dataLength; ++i) {
    if (node = group[i]) {
      node.__data__ = data[i];
      update[i] = node;
    } else {
      enter[i] = new EnterNode(parent, data[i]);
    }
  }

  // Put any non-null nodes that don’t fit into exit.
  for (; i < groupLength; ++i) {
    if (node = group[i]) {
      exit[i] = node;
    }
  }
}

function bindKey(parent, group, enter, update, exit, data, key) {
  var i,
      node,
      nodeByKeyValue = new Map,
      groupLength = group.length,
      dataLength = data.length,
      keyValues = new Array(groupLength),
      keyValue;

  // Compute the key for each node.
  // If multiple nodes have the same key, the duplicates are added to exit.
  for (i = 0; i < groupLength; ++i) {
    if (node = group[i]) {
      keyValues[i] = keyValue = key.call(node, node.__data__, i, group) + "";
      if (nodeByKeyValue.has(keyValue)) {
        exit[i] = node;
      } else {
        nodeByKeyValue.set(keyValue, node);
      }
    }
  }

  // Compute the key for each datum.
  // If there a node associated with this key, join and add it to update.
  // If there is not (or the key is a duplicate), add it to enter.
  for (i = 0; i < dataLength; ++i) {
    keyValue = key.call(parent, data[i], i, data) + "";
    if (node = nodeByKeyValue.get(keyValue)) {
      update[i] = node;
      node.__data__ = data[i];
      nodeByKeyValue.delete(keyValue);
    } else {
      enter[i] = new EnterNode(parent, data[i]);
    }
  }

  // Add any remaining nodes that were not bound to data to exit.
  for (i = 0; i < groupLength; ++i) {
    if ((node = group[i]) && (nodeByKeyValue.get(keyValues[i]) === node)) {
      exit[i] = node;
    }
  }
}

function datum(node) {
  return node.__data__;
}

/* harmony default export */ function data(value, key) {
  if (!arguments.length) return Array.from(this, datum);

  var bind = key ? bindKey : bindIndex,
      parents = this._parents,
      groups = this._groups;

  if (typeof value !== "function") value = src_constant(value);

  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {
    var parent = parents[j],
        group = groups[j],
        groupLength = group.length,
        data = arraylike(value.call(parent, parent && parent.__data__, j, parents)),
        dataLength = data.length,
        enterGroup = enter[j] = new Array(dataLength),
        updateGroup = update[j] = new Array(dataLength),
        exitGroup = exit[j] = new Array(groupLength);

    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);

    // Now connect the enter nodes to their following update node, such that
    // appendChild can insert the materialized enter node before this node,
    // rather than at the end of the parent node.
    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {
      if (previous = enterGroup[i0]) {
        if (i0 >= i1) i1 = i0 + 1;
        while (!(next = updateGroup[i1]) && ++i1 < dataLength);
        previous._next = next || null;
      }
    }
  }

  update = new Selection(update, parents);
  update._enter = enter;
  update._exit = exit;
  return update;
}

// Given some data, this returns an array-like view of it: an object that
// exposes a length property and allows numeric indexing. Note that unlike
// selectAll, this isn’t worried about “live” collections because the resulting
// array will only be used briefly while data is being bound. (It is possible to
// cause the data to change while iterating by using a key function, but please
// don’t; we’d rather avoid a gratuitous copy.)
function arraylike(data) {
  return typeof data === "object" && "length" in data
    ? data // Array, TypedArray, NodeList, array-like
    : Array.from(data); // Map, Set, iterable, string, or anything else
}

;// CONCATENATED MODULE: ./node_modules/d3-selection/src/selection/exit.js



/* harmony default export */ function exit() {
  return new Selection(this._exit || this._groups.map(sparse), this._parents);
}

;// CONCATENATED MODULE: ./node_modules/d3-selection/src/selection/join.js
/* harmony default export */ function join(onenter, onupdate, onexit) {
  var enter = this.enter(), update = this, exit = this.exit();
  if (typeof onenter === "function") {
    enter = onenter(enter);
    if (enter) enter = enter.selection();
  } else {
    enter = enter.append(onenter + "");
  }
  if (onupdate != null) {
    update = onupdate(update);
    if (update) update = update.selection();
  }
  if (onexit == null) exit.remove(); else onexit(exit);
  return enter && update ? enter.merge(update).order() : update;
}

;// CONCATENATED MODULE: ./node_modules/d3-selection/src/selection/merge.js


/* harmony default export */ function selection_merge(context) {
  var selection = context.selection ? context.selection() : context;

  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {
    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {
      if (node = group0[i] || group1[i]) {
        merge[i] = node;
      }
    }
  }

  for (; j < m0; ++j) {
    merges[j] = groups0[j];
  }

  return new Selection(merges, this._parents);
}

;// CONCATENATED MODULE: ./node_modules/d3-selection/src/selection/order.js
/* harmony default export */ function order() {

  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {
    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {
      if (node = group[i]) {
        if (next && node.compareDocumentPosition(next) ^ 4) next.parentNode.insertBefore(node, next);
        next = node;
      }
    }
  }

  return this;
}

;// CONCATENATED MODULE: ./node_modules/d3-selection/src/selection/sort.js


/* harmony default export */ function selection_sort(compare) {
  if (!compare) compare = sort_ascending;

  function compareNode(a, b) {
    return a && b ? compare(a.__data__, b.__data__) : !a - !b;
  }

  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {
      if (node = group[i]) {
        sortgroup[i] = node;
      }
    }
    sortgroup.sort(compareNode);
  }

  return new Selection(sortgroups, this._parents).order();
}

function sort_ascending(a, b) {
  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;
}

;// CONCATENATED MODULE: ./node_modules/d3-selection/src/selection/call.js
/* harmony default export */ function call() {
  var callback = arguments[0];
  arguments[0] = this;
  callback.apply(null, arguments);
  return this;
}

;// CONCATENATED MODULE: ./node_modules/d3-selection/src/selection/nodes.js
/* harmony default export */ function nodes() {
  return Array.from(this);
}

;// CONCATENATED MODULE: ./node_modules/d3-selection/src/selection/node.js
/* harmony default export */ function node() {

  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {
    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {
      var node = group[i];
      if (node) return node;
    }
  }

  return null;
}

;// CONCATENATED MODULE: ./node_modules/d3-selection/src/selection/size.js
/* harmony default export */ function size() {
  let size = 0;
  for (const node of this) ++size; // eslint-disable-line no-unused-vars
  return size;
}

;// CONCATENATED MODULE: ./node_modules/d3-selection/src/selection/empty.js
/* harmony default export */ function selection_empty() {
  return !this.node();
}

;// CONCATENATED MODULE: ./node_modules/d3-selection/src/selection/each.js
/* harmony default export */ function each(callback) {

  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {
    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {
      if (node = group[i]) callback.call(node, node.__data__, i, group);
    }
  }

  return this;
}

;// CONCATENATED MODULE: ./node_modules/d3-selection/src/namespaces.js
var xhtml = "http://www.w3.org/1999/xhtml";

/* harmony default export */ const namespaces = ({
  svg: "http://www.w3.org/2000/svg",
  xhtml: xhtml,
  xlink: "http://www.w3.org/1999/xlink",
  xml: "http://www.w3.org/XML/1998/namespace",
  xmlns: "http://www.w3.org/2000/xmlns/"
});

;// CONCATENATED MODULE: ./node_modules/d3-selection/src/namespace.js


/* harmony default export */ function namespace(name) {
  var prefix = name += "", i = prefix.indexOf(":");
  if (i >= 0 && (prefix = name.slice(0, i)) !== "xmlns") name = name.slice(i + 1);
  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name; // eslint-disable-line no-prototype-builtins
}

;// CONCATENATED MODULE: ./node_modules/d3-selection/src/selection/attr.js


function attrRemove(name) {
  return function() {
    this.removeAttribute(name);
  };
}

function attrRemoveNS(fullname) {
  return function() {
    this.removeAttributeNS(fullname.space, fullname.local);
  };
}

function attrConstant(name, value) {
  return function() {
    this.setAttribute(name, value);
  };
}

function attrConstantNS(fullname, value) {
  return function() {
    this.setAttributeNS(fullname.space, fullname.local, value);
  };
}

function attrFunction(name, value) {
  return function() {
    var v = value.apply(this, arguments);
    if (v == null) this.removeAttribute(name);
    else this.setAttribute(name, v);
  };
}

function attrFunctionNS(fullname, value) {
  return function() {
    var v = value.apply(this, arguments);
    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);
    else this.setAttributeNS(fullname.space, fullname.local, v);
  };
}

/* harmony default export */ function attr(name, value) {
  var fullname = namespace(name);

  if (arguments.length < 2) {
    var node = this.node();
    return fullname.local
        ? node.getAttributeNS(fullname.space, fullname.local)
        : node.getAttribute(fullname);
  }

  return this.each((value == null
      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === "function"
      ? (fullname.local ? attrFunctionNS : attrFunction)
      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));
}

;// CONCATENATED MODULE: ./node_modules/d3-selection/src/window.js
/* harmony default export */ function src_window(node) {
  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node
      || (node.document && node) // node is a Window
      || node.defaultView; // node is a Document
}

;// CONCATENATED MODULE: ./node_modules/d3-selection/src/selection/style.js


function styleRemove(name) {
  return function() {
    this.style.removeProperty(name);
  };
}

function styleConstant(name, value, priority) {
  return function() {
    this.style.setProperty(name, value, priority);
  };
}

function styleFunction(name, value, priority) {
  return function() {
    var v = value.apply(this, arguments);
    if (v == null) this.style.removeProperty(name);
    else this.style.setProperty(name, v, priority);
  };
}

/* harmony default export */ function style(name, value, priority) {
  return arguments.length > 1
      ? this.each((value == null
            ? styleRemove : typeof value === "function"
            ? styleFunction
            : styleConstant)(name, value, priority == null ? "" : priority))
      : styleValue(this.node(), name);
}

function styleValue(node, name) {
  return node.style.getPropertyValue(name)
      || src_window(node).getComputedStyle(node, null).getPropertyValue(name);
}

;// CONCATENATED MODULE: ./node_modules/d3-selection/src/selection/property.js
function propertyRemove(name) {
  return function() {
    delete this[name];
  };
}

function propertyConstant(name, value) {
  return function() {
    this[name] = value;
  };
}

function propertyFunction(name, value) {
  return function() {
    var v = value.apply(this, arguments);
    if (v == null) delete this[name];
    else this[name] = v;
  };
}

/* harmony default export */ function property(name, value) {
  return arguments.length > 1
      ? this.each((value == null
          ? propertyRemove : typeof value === "function"
          ? propertyFunction
          : propertyConstant)(name, value))
      : this.node()[name];
}

;// CONCATENATED MODULE: ./node_modules/d3-selection/src/selection/classed.js
function classArray(string) {
  return string.trim().split(/^|\s+/);
}

function classList(node) {
  return node.classList || new ClassList(node);
}

function ClassList(node) {
  this._node = node;
  this._names = classArray(node.getAttribute("class") || "");
}

ClassList.prototype = {
  add: function(name) {
    var i = this._names.indexOf(name);
    if (i < 0) {
      this._names.push(name);
      this._node.setAttribute("class", this._names.join(" "));
    }
  },
  remove: function(name) {
    var i = this._names.indexOf(name);
    if (i >= 0) {
      this._names.splice(i, 1);
      this._node.setAttribute("class", this._names.join(" "));
    }
  },
  contains: function(name) {
    return this._names.indexOf(name) >= 0;
  }
};

function classedAdd(node, names) {
  var list = classList(node), i = -1, n = names.length;
  while (++i < n) list.add(names[i]);
}

function classedRemove(node, names) {
  var list = classList(node), i = -1, n = names.length;
  while (++i < n) list.remove(names[i]);
}

function classedTrue(names) {
  return function() {
    classedAdd(this, names);
  };
}

function classedFalse(names) {
  return function() {
    classedRemove(this, names);
  };
}

function classedFunction(names, value) {
  return function() {
    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);
  };
}

/* harmony default export */ function classed(name, value) {
  var names = classArray(name + "");

  if (arguments.length < 2) {
    var list = classList(this.node()), i = -1, n = names.length;
    while (++i < n) if (!list.contains(names[i])) return false;
    return true;
  }

  return this.each((typeof value === "function"
      ? classedFunction : value
      ? classedTrue
      : classedFalse)(names, value));
}

;// CONCATENATED MODULE: ./node_modules/d3-selection/src/selection/text.js
function textRemove() {
  this.textContent = "";
}

function textConstant(value) {
  return function() {
    this.textContent = value;
  };
}

function textFunction(value) {
  return function() {
    var v = value.apply(this, arguments);
    this.textContent = v == null ? "" : v;
  };
}

/* harmony default export */ function selection_text(value) {
  return arguments.length
      ? this.each(value == null
          ? textRemove : (typeof value === "function"
          ? textFunction
          : textConstant)(value))
      : this.node().textContent;
}

;// CONCATENATED MODULE: ./node_modules/d3-selection/src/selection/html.js
function htmlRemove() {
  this.innerHTML = "";
}

function htmlConstant(value) {
  return function() {
    this.innerHTML = value;
  };
}

function htmlFunction(value) {
  return function() {
    var v = value.apply(this, arguments);
    this.innerHTML = v == null ? "" : v;
  };
}

/* harmony default export */ function html(value) {
  return arguments.length
      ? this.each(value == null
          ? htmlRemove : (typeof value === "function"
          ? htmlFunction
          : htmlConstant)(value))
      : this.node().innerHTML;
}

;// CONCATENATED MODULE: ./node_modules/d3-selection/src/selection/raise.js
function raise() {
  if (this.nextSibling) this.parentNode.appendChild(this);
}

/* harmony default export */ function selection_raise() {
  return this.each(raise);
}

;// CONCATENATED MODULE: ./node_modules/d3-selection/src/selection/lower.js
function lower() {
  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);
}

/* harmony default export */ function selection_lower() {
  return this.each(lower);
}

;// CONCATENATED MODULE: ./node_modules/d3-selection/src/creator.js



function creatorInherit(name) {
  return function() {
    var document = this.ownerDocument,
        uri = this.namespaceURI;
    return uri === xhtml && document.documentElement.namespaceURI === xhtml
        ? document.createElement(name)
        : document.createElementNS(uri, name);
  };
}

function creatorFixed(fullname) {
  return function() {
    return this.ownerDocument.createElementNS(fullname.space, fullname.local);
  };
}

/* harmony default export */ function creator(name) {
  var fullname = namespace(name);
  return (fullname.local
      ? creatorFixed
      : creatorInherit)(fullname);
}

;// CONCATENATED MODULE: ./node_modules/d3-selection/src/selection/append.js


/* harmony default export */ function append(name) {
  var create = typeof name === "function" ? name : creator(name);
  return this.select(function() {
    return this.appendChild(create.apply(this, arguments));
  });
}

;// CONCATENATED MODULE: ./node_modules/d3-selection/src/selection/insert.js



function constantNull() {
  return null;
}

/* harmony default export */ function insert(name, before) {
  var create = typeof name === "function" ? name : creator(name),
      select = before == null ? constantNull : typeof before === "function" ? before : selector(before);
  return this.select(function() {
    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);
  });
}

;// CONCATENATED MODULE: ./node_modules/d3-selection/src/selection/remove.js
function remove() {
  var parent = this.parentNode;
  if (parent) parent.removeChild(this);
}

/* harmony default export */ function selection_remove() {
  return this.each(remove);
}

;// CONCATENATED MODULE: ./node_modules/d3-selection/src/selection/clone.js
function selection_cloneShallow() {
  var clone = this.cloneNode(false), parent = this.parentNode;
  return parent ? parent.insertBefore(clone, this.nextSibling) : clone;
}

function selection_cloneDeep() {
  var clone = this.cloneNode(true), parent = this.parentNode;
  return parent ? parent.insertBefore(clone, this.nextSibling) : clone;
}

/* harmony default export */ function clone(deep) {
  return this.select(deep ? selection_cloneDeep : selection_cloneShallow);
}

;// CONCATENATED MODULE: ./node_modules/d3-selection/src/selection/datum.js
/* harmony default export */ function selection_datum(value) {
  return arguments.length
      ? this.property("__data__", value)
      : this.node().__data__;
}

;// CONCATENATED MODULE: ./node_modules/d3-selection/src/selection/on.js
function contextListener(listener) {
  return function(event) {
    listener.call(this, event, this.__data__);
  };
}

function on_parseTypenames(typenames) {
  return typenames.trim().split(/^|\s+/).map(function(t) {
    var name = "", i = t.indexOf(".");
    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);
    return {type: t, name: name};
  });
}

function onRemove(typename) {
  return function() {
    var on = this.__on;
    if (!on) return;
    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {
      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {
        this.removeEventListener(o.type, o.listener, o.options);
      } else {
        on[++i] = o;
      }
    }
    if (++i) on.length = i;
    else delete this.__on;
  };
}

function onAdd(typename, value, options) {
  return function() {
    var on = this.__on, o, listener = contextListener(value);
    if (on) for (var j = 0, m = on.length; j < m; ++j) {
      if ((o = on[j]).type === typename.type && o.name === typename.name) {
        this.removeEventListener(o.type, o.listener, o.options);
        this.addEventListener(o.type, o.listener = listener, o.options = options);
        o.value = value;
        return;
      }
    }
    this.addEventListener(typename.type, listener, options);
    o = {type: typename.type, name: typename.name, value: value, listener: listener, options: options};
    if (!on) this.__on = [o];
    else on.push(o);
  };
}

/* harmony default export */ function on(typename, value, options) {
  var typenames = on_parseTypenames(typename + ""), i, n = typenames.length, t;

  if (arguments.length < 2) {
    var on = this.node().__on;
    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {
      for (i = 0, o = on[j]; i < n; ++i) {
        if ((t = typenames[i]).type === o.type && t.name === o.name) {
          return o.value;
        }
      }
    }
    return;
  }

  on = value ? onAdd : onRemove;
  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, options));
  return this;
}

;// CONCATENATED MODULE: ./node_modules/d3-selection/src/selection/dispatch.js


function dispatchEvent(node, type, params) {
  var window = src_window(node),
      event = window.CustomEvent;

  if (typeof event === "function") {
    event = new event(type, params);
  } else {
    event = window.document.createEvent("Event");
    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;
    else event.initEvent(type, false, false);
  }

  node.dispatchEvent(event);
}

function dispatchConstant(type, params) {
  return function() {
    return dispatchEvent(this, type, params);
  };
}

function dispatchFunction(type, params) {
  return function() {
    return dispatchEvent(this, type, params.apply(this, arguments));
  };
}

/* harmony default export */ function selection_dispatch(type, params) {
  return this.each((typeof params === "function"
      ? dispatchFunction
      : dispatchConstant)(type, params));
}

;// CONCATENATED MODULE: ./node_modules/d3-selection/src/selection/iterator.js
/* harmony default export */ function* iterator() {
  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {
    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {
      if (node = group[i]) yield node;
    }
  }
}

;// CONCATENATED MODULE: ./node_modules/d3-selection/src/selection/index.js



































var root = [null];

function Selection(groups, parents) {
  this._groups = groups;
  this._parents = parents;
}

function selection() {
  return new Selection([[document.documentElement]], root);
}

function selection_selection() {
  return this;
}

Selection.prototype = selection.prototype = {
  constructor: Selection,
  select: selection_select,
  selectAll: selectAll,
  selectChild: selectChild,
  selectChildren: selectChildren,
  filter: selection_filter,
  data: data,
  enter: enter,
  exit: exit,
  join: join,
  merge: selection_merge,
  selection: selection_selection,
  order: order,
  sort: selection_sort,
  call: call,
  nodes: nodes,
  node: node,
  size: size,
  empty: selection_empty,
  each: each,
  attr: attr,
  style: style,
  property: property,
  classed: classed,
  text: selection_text,
  html: html,
  raise: selection_raise,
  lower: selection_lower,
  append: append,
  insert: insert,
  remove: selection_remove,
  clone: clone,
  datum: selection_datum,
  on: on,
  dispatch: selection_dispatch,
  [Symbol.iterator]: iterator
};

/* harmony default export */ const src_selection = (selection);

;// CONCATENATED MODULE: ./node_modules/d3-selection/src/select.js


/* harmony default export */ function src_select(selector) {
  return typeof selector === "string"
      ? new Selection([[document.querySelector(selector)]], [document.documentElement])
      : new Selection([[selector]], root);
}

;// CONCATENATED MODULE: ./node_modules/d3-drag/src/noevent.js
// These are typically used in conjunction with noevent to ensure that we can
// preventDefault on the event.
const nonpassive = {passive: false};
const nonpassivecapture = {capture: true, passive: false};

function nopropagation(event) {
  event.stopImmediatePropagation();
}

/* harmony default export */ function noevent(event) {
  event.preventDefault();
  event.stopImmediatePropagation();
}

;// CONCATENATED MODULE: ./node_modules/d3-drag/src/nodrag.js



/* harmony default export */ function nodrag(view) {
  var root = view.document.documentElement,
      selection = src_select(view).on("dragstart.drag", noevent, nonpassivecapture);
  if ("onselectstart" in root) {
    selection.on("selectstart.drag", noevent, nonpassivecapture);
  } else {
    root.__noselect = root.style.MozUserSelect;
    root.style.MozUserSelect = "none";
  }
}

function yesdrag(view, noclick) {
  var root = view.document.documentElement,
      selection = src_select(view).on("dragstart.drag", null);
  if (noclick) {
    selection.on("click.drag", noevent, nonpassivecapture);
    setTimeout(function() { selection.on("click.drag", null); }, 0);
  }
  if ("onselectstart" in root) {
    selection.on("selectstart.drag", null);
  } else {
    root.style.MozUserSelect = root.__noselect;
    delete root.__noselect;
  }
}

;// CONCATENATED MODULE: ./node_modules/d3-color/src/define.js
/* harmony default export */ function src_define(constructor, factory, prototype) {
  constructor.prototype = factory.prototype = prototype;
  prototype.constructor = constructor;
}

function extend(parent, definition) {
  var prototype = Object.create(parent.prototype);
  for (var key in definition) prototype[key] = definition[key];
  return prototype;
}

;// CONCATENATED MODULE: ./node_modules/d3-color/src/color.js


function Color() {}

var darker = 0.7;
var brighter = 1 / darker;

var reI = "\\s*([+-]?\\d+)\\s*",
    reN = "\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)\\s*",
    reP = "\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)%\\s*",
    reHex = /^#([0-9a-f]{3,8})$/,
    reRgbInteger = new RegExp(`^rgb\\(${reI},${reI},${reI}\\)$`),
    reRgbPercent = new RegExp(`^rgb\\(${reP},${reP},${reP}\\)$`),
    reRgbaInteger = new RegExp(`^rgba\\(${reI},${reI},${reI},${reN}\\)$`),
    reRgbaPercent = new RegExp(`^rgba\\(${reP},${reP},${reP},${reN}\\)$`),
    reHslPercent = new RegExp(`^hsl\\(${reN},${reP},${reP}\\)$`),
    reHslaPercent = new RegExp(`^hsla\\(${reN},${reP},${reP},${reN}\\)$`);

var named = {
  aliceblue: 0xf0f8ff,
  antiquewhite: 0xfaebd7,
  aqua: 0x00ffff,
  aquamarine: 0x7fffd4,
  azure: 0xf0ffff,
  beige: 0xf5f5dc,
  bisque: 0xffe4c4,
  black: 0x000000,
  blanchedalmond: 0xffebcd,
  blue: 0x0000ff,
  blueviolet: 0x8a2be2,
  brown: 0xa52a2a,
  burlywood: 0xdeb887,
  cadetblue: 0x5f9ea0,
  chartreuse: 0x7fff00,
  chocolate: 0xd2691e,
  coral: 0xff7f50,
  cornflowerblue: 0x6495ed,
  cornsilk: 0xfff8dc,
  crimson: 0xdc143c,
  cyan: 0x00ffff,
  darkblue: 0x00008b,
  darkcyan: 0x008b8b,
  darkgoldenrod: 0xb8860b,
  darkgray: 0xa9a9a9,
  darkgreen: 0x006400,
  darkgrey: 0xa9a9a9,
  darkkhaki: 0xbdb76b,
  darkmagenta: 0x8b008b,
  darkolivegreen: 0x556b2f,
  darkorange: 0xff8c00,
  darkorchid: 0x9932cc,
  darkred: 0x8b0000,
  darksalmon: 0xe9967a,
  darkseagreen: 0x8fbc8f,
  darkslateblue: 0x483d8b,
  darkslategray: 0x2f4f4f,
  darkslategrey: 0x2f4f4f,
  darkturquoise: 0x00ced1,
  darkviolet: 0x9400d3,
  deeppink: 0xff1493,
  deepskyblue: 0x00bfff,
  dimgray: 0x696969,
  dimgrey: 0x696969,
  dodgerblue: 0x1e90ff,
  firebrick: 0xb22222,
  floralwhite: 0xfffaf0,
  forestgreen: 0x228b22,
  fuchsia: 0xff00ff,
  gainsboro: 0xdcdcdc,
  ghostwhite: 0xf8f8ff,
  gold: 0xffd700,
  goldenrod: 0xdaa520,
  gray: 0x808080,
  green: 0x008000,
  greenyellow: 0xadff2f,
  grey: 0x808080,
  honeydew: 0xf0fff0,
  hotpink: 0xff69b4,
  indianred: 0xcd5c5c,
  indigo: 0x4b0082,
  ivory: 0xfffff0,
  khaki: 0xf0e68c,
  lavender: 0xe6e6fa,
  lavenderblush: 0xfff0f5,
  lawngreen: 0x7cfc00,
  lemonchiffon: 0xfffacd,
  lightblue: 0xadd8e6,
  lightcoral: 0xf08080,
  lightcyan: 0xe0ffff,
  lightgoldenrodyellow: 0xfafad2,
  lightgray: 0xd3d3d3,
  lightgreen: 0x90ee90,
  lightgrey: 0xd3d3d3,
  lightpink: 0xffb6c1,
  lightsalmon: 0xffa07a,
  lightseagreen: 0x20b2aa,
  lightskyblue: 0x87cefa,
  lightslategray: 0x778899,
  lightslategrey: 0x778899,
  lightsteelblue: 0xb0c4de,
  lightyellow: 0xffffe0,
  lime: 0x00ff00,
  limegreen: 0x32cd32,
  linen: 0xfaf0e6,
  magenta: 0xff00ff,
  maroon: 0x800000,
  mediumaquamarine: 0x66cdaa,
  mediumblue: 0x0000cd,
  mediumorchid: 0xba55d3,
  mediumpurple: 0x9370db,
  mediumseagreen: 0x3cb371,
  mediumslateblue: 0x7b68ee,
  mediumspringgreen: 0x00fa9a,
  mediumturquoise: 0x48d1cc,
  mediumvioletred: 0xc71585,
  midnightblue: 0x191970,
  mintcream: 0xf5fffa,
  mistyrose: 0xffe4e1,
  moccasin: 0xffe4b5,
  navajowhite: 0xffdead,
  navy: 0x000080,
  oldlace: 0xfdf5e6,
  olive: 0x808000,
  olivedrab: 0x6b8e23,
  orange: 0xffa500,
  orangered: 0xff4500,
  orchid: 0xda70d6,
  palegoldenrod: 0xeee8aa,
  palegreen: 0x98fb98,
  paleturquoise: 0xafeeee,
  palevioletred: 0xdb7093,
  papayawhip: 0xffefd5,
  peachpuff: 0xffdab9,
  peru: 0xcd853f,
  pink: 0xffc0cb,
  plum: 0xdda0dd,
  powderblue: 0xb0e0e6,
  purple: 0x800080,
  rebeccapurple: 0x663399,
  red: 0xff0000,
  rosybrown: 0xbc8f8f,
  royalblue: 0x4169e1,
  saddlebrown: 0x8b4513,
  salmon: 0xfa8072,
  sandybrown: 0xf4a460,
  seagreen: 0x2e8b57,
  seashell: 0xfff5ee,
  sienna: 0xa0522d,
  silver: 0xc0c0c0,
  skyblue: 0x87ceeb,
  slateblue: 0x6a5acd,
  slategray: 0x708090,
  slategrey: 0x708090,
  snow: 0xfffafa,
  springgreen: 0x00ff7f,
  steelblue: 0x4682b4,
  tan: 0xd2b48c,
  teal: 0x008080,
  thistle: 0xd8bfd8,
  tomato: 0xff6347,
  turquoise: 0x40e0d0,
  violet: 0xee82ee,
  wheat: 0xf5deb3,
  white: 0xffffff,
  whitesmoke: 0xf5f5f5,
  yellow: 0xffff00,
  yellowgreen: 0x9acd32
};

src_define(Color, color, {
  copy(channels) {
    return Object.assign(new this.constructor, this, channels);
  },
  displayable() {
    return this.rgb().displayable();
  },
  hex: color_formatHex, // Deprecated! Use color.formatHex.
  formatHex: color_formatHex,
  formatHex8: color_formatHex8,
  formatHsl: color_formatHsl,
  formatRgb: color_formatRgb,
  toString: color_formatRgb
});

function color_formatHex() {
  return this.rgb().formatHex();
}

function color_formatHex8() {
  return this.rgb().formatHex8();
}

function color_formatHsl() {
  return hslConvert(this).formatHsl();
}

function color_formatRgb() {
  return this.rgb().formatRgb();
}

function color(format) {
  var m, l;
  format = (format + "").trim().toLowerCase();
  return (m = reHex.exec(format)) ? (l = m[1].length, m = parseInt(m[1], 16), l === 6 ? rgbn(m) // #ff0000
      : l === 3 ? new Rgb((m >> 8 & 0xf) | (m >> 4 & 0xf0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1) // #f00
      : l === 8 ? rgba(m >> 24 & 0xff, m >> 16 & 0xff, m >> 8 & 0xff, (m & 0xff) / 0xff) // #ff000000
      : l === 4 ? rgba((m >> 12 & 0xf) | (m >> 8 & 0xf0), (m >> 8 & 0xf) | (m >> 4 & 0xf0), (m >> 4 & 0xf) | (m & 0xf0), (((m & 0xf) << 4) | (m & 0xf)) / 0xff) // #f000
      : null) // invalid hex
      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)
      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)
      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)
      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)
      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)
      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)
      : named.hasOwnProperty(format) ? rgbn(named[format]) // eslint-disable-line no-prototype-builtins
      : format === "transparent" ? new Rgb(NaN, NaN, NaN, 0)
      : null;
}

function rgbn(n) {
  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);
}

function rgba(r, g, b, a) {
  if (a <= 0) r = g = b = NaN;
  return new Rgb(r, g, b, a);
}

function rgbConvert(o) {
  if (!(o instanceof Color)) o = color(o);
  if (!o) return new Rgb;
  o = o.rgb();
  return new Rgb(o.r, o.g, o.b, o.opacity);
}

function color_rgb(r, g, b, opacity) {
  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);
}

function Rgb(r, g, b, opacity) {
  this.r = +r;
  this.g = +g;
  this.b = +b;
  this.opacity = +opacity;
}

src_define(Rgb, color_rgb, extend(Color, {
  brighter(k) {
    k = k == null ? brighter : Math.pow(brighter, k);
    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);
  },
  darker(k) {
    k = k == null ? darker : Math.pow(darker, k);
    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);
  },
  rgb() {
    return this;
  },
  clamp() {
    return new Rgb(clampi(this.r), clampi(this.g), clampi(this.b), clampa(this.opacity));
  },
  displayable() {
    return (-0.5 <= this.r && this.r < 255.5)
        && (-0.5 <= this.g && this.g < 255.5)
        && (-0.5 <= this.b && this.b < 255.5)
        && (0 <= this.opacity && this.opacity <= 1);
  },
  hex: rgb_formatHex, // Deprecated! Use color.formatHex.
  formatHex: rgb_formatHex,
  formatHex8: rgb_formatHex8,
  formatRgb: rgb_formatRgb,
  toString: rgb_formatRgb
}));

function rgb_formatHex() {
  return `#${hex(this.r)}${hex(this.g)}${hex(this.b)}`;
}

function rgb_formatHex8() {
  return `#${hex(this.r)}${hex(this.g)}${hex(this.b)}${hex((isNaN(this.opacity) ? 1 : this.opacity) * 255)}`;
}

function rgb_formatRgb() {
  const a = clampa(this.opacity);
  return `${a === 1 ? "rgb(" : "rgba("}${clampi(this.r)}, ${clampi(this.g)}, ${clampi(this.b)}${a === 1 ? ")" : `, ${a})`}`;
}

function clampa(opacity) {
  return isNaN(opacity) ? 1 : Math.max(0, Math.min(1, opacity));
}

function clampi(value) {
  return Math.max(0, Math.min(255, Math.round(value) || 0));
}

function hex(value) {
  value = clampi(value);
  return (value < 16 ? "0" : "") + value.toString(16);
}

function hsla(h, s, l, a) {
  if (a <= 0) h = s = l = NaN;
  else if (l <= 0 || l >= 1) h = s = NaN;
  else if (s <= 0) h = NaN;
  return new Hsl(h, s, l, a);
}

function hslConvert(o) {
  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);
  if (!(o instanceof Color)) o = color(o);
  if (!o) return new Hsl;
  if (o instanceof Hsl) return o;
  o = o.rgb();
  var r = o.r / 255,
      g = o.g / 255,
      b = o.b / 255,
      min = Math.min(r, g, b),
      max = Math.max(r, g, b),
      h = NaN,
      s = max - min,
      l = (max + min) / 2;
  if (s) {
    if (r === max) h = (g - b) / s + (g < b) * 6;
    else if (g === max) h = (b - r) / s + 2;
    else h = (r - g) / s + 4;
    s /= l < 0.5 ? max + min : 2 - max - min;
    h *= 60;
  } else {
    s = l > 0 && l < 1 ? 0 : h;
  }
  return new Hsl(h, s, l, o.opacity);
}

function hsl(h, s, l, opacity) {
  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);
}

function Hsl(h, s, l, opacity) {
  this.h = +h;
  this.s = +s;
  this.l = +l;
  this.opacity = +opacity;
}

src_define(Hsl, hsl, extend(Color, {
  brighter(k) {
    k = k == null ? brighter : Math.pow(brighter, k);
    return new Hsl(this.h, this.s, this.l * k, this.opacity);
  },
  darker(k) {
    k = k == null ? darker : Math.pow(darker, k);
    return new Hsl(this.h, this.s, this.l * k, this.opacity);
  },
  rgb() {
    var h = this.h % 360 + (this.h < 0) * 360,
        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,
        l = this.l,
        m2 = l + (l < 0.5 ? l : 1 - l) * s,
        m1 = 2 * l - m2;
    return new Rgb(
      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),
      hsl2rgb(h, m1, m2),
      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),
      this.opacity
    );
  },
  clamp() {
    return new Hsl(clamph(this.h), clampt(this.s), clampt(this.l), clampa(this.opacity));
  },
  displayable() {
    return (0 <= this.s && this.s <= 1 || isNaN(this.s))
        && (0 <= this.l && this.l <= 1)
        && (0 <= this.opacity && this.opacity <= 1);
  },
  formatHsl() {
    const a = clampa(this.opacity);
    return `${a === 1 ? "hsl(" : "hsla("}${clamph(this.h)}, ${clampt(this.s) * 100}%, ${clampt(this.l) * 100}%${a === 1 ? ")" : `, ${a})`}`;
  }
}));

function clamph(value) {
  value = (value || 0) % 360;
  return value < 0 ? value + 360 : value;
}

function clampt(value) {
  return Math.max(0, Math.min(1, value || 0));
}

/* From FvD 13.37, CSS Color Module Level 3 */
function hsl2rgb(h, m1, m2) {
  return (h < 60 ? m1 + (m2 - m1) * h / 60
      : h < 180 ? m2
      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60
      : m1) * 255;
}

;// CONCATENATED MODULE: ./node_modules/d3-interpolate/src/basis.js
function basis(t1, v0, v1, v2, v3) {
  var t2 = t1 * t1, t3 = t2 * t1;
  return ((1 - 3 * t1 + 3 * t2 - t3) * v0
      + (4 - 6 * t2 + 3 * t3) * v1
      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2
      + t3 * v3) / 6;
}

/* harmony default export */ function src_basis(values) {
  var n = values.length - 1;
  return function(t) {
    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),
        v1 = values[i],
        v2 = values[i + 1],
        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,
        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;
    return basis((t - i / n) * n, v0, v1, v2, v3);
  };
}

;// CONCATENATED MODULE: ./node_modules/d3-interpolate/src/basisClosed.js


/* harmony default export */ function basisClosed(values) {
  var n = values.length;
  return function(t) {
    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),
        v0 = values[(i + n - 1) % n],
        v1 = values[i % n],
        v2 = values[(i + 1) % n],
        v3 = values[(i + 2) % n];
    return basis((t - i / n) * n, v0, v1, v2, v3);
  };
}

;// CONCATENATED MODULE: ./node_modules/d3-interpolate/src/constant.js
/* harmony default export */ const d3_interpolate_src_constant = (x => () => x);

;// CONCATENATED MODULE: ./node_modules/d3-interpolate/src/color.js


function linear(a, d) {
  return function(t) {
    return a + t * d;
  };
}

function exponential(a, b, y) {
  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {
    return Math.pow(a + t * b, y);
  };
}

function hue(a, b) {
  var d = b - a;
  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : d3_interpolate_src_constant(isNaN(a) ? b : a);
}

function gamma(y) {
  return (y = +y) === 1 ? nogamma : function(a, b) {
    return b - a ? exponential(a, b, y) : d3_interpolate_src_constant(isNaN(a) ? b : a);
  };
}

function nogamma(a, b) {
  var d = b - a;
  return d ? linear(a, d) : d3_interpolate_src_constant(isNaN(a) ? b : a);
}

;// CONCATENATED MODULE: ./node_modules/d3-interpolate/src/rgb.js





/* harmony default export */ const rgb = ((function rgbGamma(y) {
  var color = gamma(y);

  function rgb(start, end) {
    var r = color((start = color_rgb(start)).r, (end = color_rgb(end)).r),
        g = color(start.g, end.g),
        b = color(start.b, end.b),
        opacity = nogamma(start.opacity, end.opacity);
    return function(t) {
      start.r = r(t);
      start.g = g(t);
      start.b = b(t);
      start.opacity = opacity(t);
      return start + "";
    };
  }

  rgb.gamma = rgbGamma;

  return rgb;
})(1));

function rgbSpline(spline) {
  return function(colors) {
    var n = colors.length,
        r = new Array(n),
        g = new Array(n),
        b = new Array(n),
        i, color;
    for (i = 0; i < n; ++i) {
      color = color_rgb(colors[i]);
      r[i] = color.r || 0;
      g[i] = color.g || 0;
      b[i] = color.b || 0;
    }
    r = spline(r);
    g = spline(g);
    b = spline(b);
    color.opacity = 1;
    return function(t) {
      color.r = r(t);
      color.g = g(t);
      color.b = b(t);
      return color + "";
    };
  };
}

var rgbBasis = rgbSpline(src_basis);
var rgbBasisClosed = rgbSpline(basisClosed);

;// CONCATENATED MODULE: ./node_modules/d3-interpolate/src/numberArray.js
/* harmony default export */ function numberArray(a, b) {
  if (!b) b = [];
  var n = a ? Math.min(b.length, a.length) : 0,
      c = b.slice(),
      i;
  return function(t) {
    for (i = 0; i < n; ++i) c[i] = a[i] * (1 - t) + b[i] * t;
    return c;
  };
}

function isNumberArray(x) {
  return ArrayBuffer.isView(x) && !(x instanceof DataView);
}

;// CONCATENATED MODULE: ./node_modules/d3-interpolate/src/array.js



/* harmony default export */ function src_array(a, b) {
  return (isNumberArray(b) ? numberArray : genericArray)(a, b);
}

function genericArray(a, b) {
  var nb = b ? b.length : 0,
      na = a ? Math.min(nb, a.length) : 0,
      x = new Array(na),
      c = new Array(nb),
      i;

  for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);
  for (; i < nb; ++i) c[i] = b[i];

  return function(t) {
    for (i = 0; i < na; ++i) c[i] = x[i](t);
    return c;
  };
}

;// CONCATENATED MODULE: ./node_modules/d3-interpolate/src/date.js
/* harmony default export */ function date(a, b) {
  var d = new Date;
  return a = +a, b = +b, function(t) {
    return d.setTime(a * (1 - t) + b * t), d;
  };
}

;// CONCATENATED MODULE: ./node_modules/d3-interpolate/src/number.js
/* harmony default export */ function src_number(a, b) {
  return a = +a, b = +b, function(t) {
    return a * (1 - t) + b * t;
  };
}

;// CONCATENATED MODULE: ./node_modules/d3-interpolate/src/object.js


/* harmony default export */ function object(a, b) {
  var i = {},
      c = {},
      k;

  if (a === null || typeof a !== "object") a = {};
  if (b === null || typeof b !== "object") b = {};

  for (k in b) {
    if (k in a) {
      i[k] = value(a[k], b[k]);
    } else {
      c[k] = b[k];
    }
  }

  return function(t) {
    for (k in i) c[k] = i[k](t);
    return c;
  };
}

;// CONCATENATED MODULE: ./node_modules/d3-interpolate/src/string.js


var reA = /[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,
    reB = new RegExp(reA.source, "g");

function string_zero(b) {
  return function() {
    return b;
  };
}

function one(b) {
  return function(t) {
    return b(t) + "";
  };
}

/* harmony default export */ function string(a, b) {
  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b
      am, // current match in a
      bm, // current match in b
      bs, // string preceding current number in b, if any
      i = -1, // index in s
      s = [], // string constants and placeholders
      q = []; // number interpolators

  // Coerce inputs to strings.
  a = a + "", b = b + "";

  // Interpolate pairs of numbers in a & b.
  while ((am = reA.exec(a))
      && (bm = reB.exec(b))) {
    if ((bs = bm.index) > bi) { // a string precedes the next number in b
      bs = b.slice(bi, bs);
      if (s[i]) s[i] += bs; // coalesce with previous string
      else s[++i] = bs;
    }
    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match
      if (s[i]) s[i] += bm; // coalesce with previous string
      else s[++i] = bm;
    } else { // interpolate non-matching numbers
      s[++i] = null;
      q.push({i: i, x: src_number(am, bm)});
    }
    bi = reB.lastIndex;
  }

  // Add remains of b.
  if (bi < b.length) {
    bs = b.slice(bi);
    if (s[i]) s[i] += bs; // coalesce with previous string
    else s[++i] = bs;
  }

  // Special optimization for only a single match.
  // Otherwise, interpolate each of the numbers and rejoin the string.
  return s.length < 2 ? (q[0]
      ? one(q[0].x)
      : string_zero(b))
      : (b = q.length, function(t) {
          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);
          return s.join("");
        });
}

;// CONCATENATED MODULE: ./node_modules/d3-interpolate/src/value.js










/* harmony default export */ function value(a, b) {
  var t = typeof b, c;
  return b == null || t === "boolean" ? d3_interpolate_src_constant(b)
      : (t === "number" ? src_number
      : t === "string" ? ((c = color(b)) ? (b = c, rgb) : string)
      : b instanceof color ? rgb
      : b instanceof Date ? date
      : isNumberArray(b) ? numberArray
      : Array.isArray(b) ? genericArray
      : typeof b.valueOf !== "function" && typeof b.toString !== "function" || isNaN(b) ? object
      : src_number)(a, b);
}

;// CONCATENATED MODULE: ./node_modules/d3-selection/src/sourceEvent.js
/* harmony default export */ function sourceEvent(event) {
  let sourceEvent;
  while (sourceEvent = event.sourceEvent) event = sourceEvent;
  return event;
}

;// CONCATENATED MODULE: ./node_modules/d3-selection/src/pointer.js


/* harmony default export */ function pointer(event, node) {
  event = sourceEvent(event);
  if (node === undefined) node = event.currentTarget;
  if (node) {
    var svg = node.ownerSVGElement || node;
    if (svg.createSVGPoint) {
      var point = svg.createSVGPoint();
      point.x = event.clientX, point.y = event.clientY;
      point = point.matrixTransform(node.getScreenCTM().inverse());
      return [point.x, point.y];
    }
    if (node.getBoundingClientRect) {
      var rect = node.getBoundingClientRect();
      return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];
    }
  }
  return [event.pageX, event.pageY];
}

;// CONCATENATED MODULE: ./node_modules/d3-timer/src/timer.js
var timer_frame = 0, // is an animation frame pending?
    timeout = 0, // is a timeout pending?
    interval = 0, // are any timers active?
    pokeDelay = 1000, // how frequently we check for clock skew
    taskHead,
    taskTail,
    clockLast = 0,
    clockNow = 0,
    clockSkew = 0,
    clock = typeof performance === "object" && performance.now ? performance : Date,
    setFrame = typeof window === "object" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };

function now() {
  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);
}

function clearNow() {
  clockNow = 0;
}

function Timer() {
  this._call =
  this._time =
  this._next = null;
}

Timer.prototype = timer.prototype = {
  constructor: Timer,
  restart: function(callback, delay, time) {
    if (typeof callback !== "function") throw new TypeError("callback is not a function");
    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);
    if (!this._next && taskTail !== this) {
      if (taskTail) taskTail._next = this;
      else taskHead = this;
      taskTail = this;
    }
    this._call = callback;
    this._time = time;
    sleep();
  },
  stop: function() {
    if (this._call) {
      this._call = null;
      this._time = Infinity;
      sleep();
    }
  }
};

function timer(callback, delay, time) {
  var t = new Timer;
  t.restart(callback, delay, time);
  return t;
}

function timerFlush() {
  now(); // Get the current time, if not already set.
  ++timer_frame; // Pretend we’ve set an alarm, if we haven’t already.
  var t = taskHead, e;
  while (t) {
    if ((e = clockNow - t._time) >= 0) t._call.call(undefined, e);
    t = t._next;
  }
  --timer_frame;
}

function wake() {
  clockNow = (clockLast = clock.now()) + clockSkew;
  timer_frame = timeout = 0;
  try {
    timerFlush();
  } finally {
    timer_frame = 0;
    nap();
    clockNow = 0;
  }
}

function poke() {
  var now = clock.now(), delay = now - clockLast;
  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;
}

function nap() {
  var t0, t1 = taskHead, t2, time = Infinity;
  while (t1) {
    if (t1._call) {
      if (time > t1._time) time = t1._time;
      t0 = t1, t1 = t1._next;
    } else {
      t2 = t1._next, t1._next = null;
      t1 = t0 ? t0._next = t2 : taskHead = t2;
    }
  }
  taskTail = t0;
  sleep(time);
}

function sleep(time) {
  if (timer_frame) return; // Soonest alarm already set, or will be.
  if (timeout) timeout = clearTimeout(timeout);
  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.
  if (delay > 24) {
    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);
    if (interval) interval = clearInterval(interval);
  } else {
    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);
    timer_frame = 1, setFrame(wake);
  }
}

;// CONCATENATED MODULE: ./node_modules/d3-timer/src/timeout.js


/* harmony default export */ function src_timeout(callback, delay, time) {
  var t = new Timer;
  delay = delay == null ? 0 : +delay;
  t.restart(elapsed => {
    t.stop();
    callback(elapsed + delay);
  }, delay, time);
  return t;
}

;// CONCATENATED MODULE: ./node_modules/d3-transition/src/transition/schedule.js



var emptyOn = src_dispatch("start", "end", "cancel", "interrupt");
var emptyTween = [];

var CREATED = 0;
var SCHEDULED = 1;
var STARTING = 2;
var STARTED = 3;
var RUNNING = 4;
var ENDING = 5;
var ENDED = 6;

/* harmony default export */ function schedule(node, name, id, index, group, timing) {
  var schedules = node.__transition;
  if (!schedules) node.__transition = {};
  else if (id in schedules) return;
  create(node, id, {
    name: name,
    index: index, // For context during callback.
    group: group, // For context during callback.
    on: emptyOn,
    tween: emptyTween,
    time: timing.time,
    delay: timing.delay,
    duration: timing.duration,
    ease: timing.ease,
    timer: null,
    state: CREATED
  });
}

function init(node, id) {
  var schedule = schedule_get(node, id);
  if (schedule.state > CREATED) throw new Error("too late; already scheduled");
  return schedule;
}

function schedule_set(node, id) {
  var schedule = schedule_get(node, id);
  if (schedule.state > STARTED) throw new Error("too late; already running");
  return schedule;
}

function schedule_get(node, id) {
  var schedule = node.__transition;
  if (!schedule || !(schedule = schedule[id])) throw new Error("transition not found");
  return schedule;
}

function create(node, id, self) {
  var schedules = node.__transition,
      tween;

  // Initialize the self timer when the transition is created.
  // Note the actual delay is not known until the first callback!
  schedules[id] = self;
  self.timer = timer(schedule, 0, self.time);

  function schedule(elapsed) {
    self.state = SCHEDULED;
    self.timer.restart(start, self.delay, self.time);

    // If the elapsed delay is less than our first sleep, start immediately.
    if (self.delay <= elapsed) start(elapsed - self.delay);
  }

  function start(elapsed) {
    var i, j, n, o;

    // If the state is not SCHEDULED, then we previously errored on start.
    if (self.state !== SCHEDULED) return stop();

    for (i in schedules) {
      o = schedules[i];
      if (o.name !== self.name) continue;

      // While this element already has a starting transition during this frame,
      // defer starting an interrupting transition until that transition has a
      // chance to tick (and possibly end); see d3/d3-transition#54!
      if (o.state === STARTED) return src_timeout(start);

      // Interrupt the active transition, if any.
      if (o.state === RUNNING) {
        o.state = ENDED;
        o.timer.stop();
        o.on.call("interrupt", node, node.__data__, o.index, o.group);
        delete schedules[i];
      }

      // Cancel any pre-empted transitions.
      else if (+i < id) {
        o.state = ENDED;
        o.timer.stop();
        o.on.call("cancel", node, node.__data__, o.index, o.group);
        delete schedules[i];
      }
    }

    // Defer the first tick to end of the current frame; see d3/d3#1576.
    // Note the transition may be canceled after start and before the first tick!
    // Note this must be scheduled before the start event; see d3/d3-transition#16!
    // Assuming this is successful, subsequent callbacks go straight to tick.
    src_timeout(function() {
      if (self.state === STARTED) {
        self.state = RUNNING;
        self.timer.restart(tick, self.delay, self.time);
        tick(elapsed);
      }
    });

    // Dispatch the start event.
    // Note this must be done before the tween are initialized.
    self.state = STARTING;
    self.on.call("start", node, node.__data__, self.index, self.group);
    if (self.state !== STARTING) return; // interrupted
    self.state = STARTED;

    // Initialize the tween, deleting null tween.
    tween = new Array(n = self.tween.length);
    for (i = 0, j = -1; i < n; ++i) {
      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {
        tween[++j] = o;
      }
    }
    tween.length = j + 1;
  }

  function tick(elapsed) {
    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),
        i = -1,
        n = tween.length;

    while (++i < n) {
      tween[i].call(node, t);
    }

    // Dispatch the end event.
    if (self.state === ENDING) {
      self.on.call("end", node, node.__data__, self.index, self.group);
      stop();
    }
  }

  function stop() {
    self.state = ENDED;
    self.timer.stop();
    delete schedules[id];
    for (var i in schedules) return; // eslint-disable-line no-unused-vars
    delete node.__transition;
  }
}

;// CONCATENATED MODULE: ./node_modules/d3-transition/src/interrupt.js


/* harmony default export */ function interrupt(node, name) {
  var schedules = node.__transition,
      schedule,
      active,
      empty = true,
      i;

  if (!schedules) return;

  name = name == null ? null : name + "";

  for (i in schedules) {
    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }
    active = schedule.state > STARTING && schedule.state < ENDING;
    schedule.state = ENDED;
    schedule.timer.stop();
    schedule.on.call(active ? "interrupt" : "cancel", node, node.__data__, schedule.index, schedule.group);
    delete schedules[i];
  }

  if (empty) delete node.__transition;
}

;// CONCATENATED MODULE: ./node_modules/d3-transition/src/selection/interrupt.js


/* harmony default export */ function selection_interrupt(name) {
  return this.each(function() {
    interrupt(this, name);
  });
}

;// CONCATENATED MODULE: ./node_modules/d3-interpolate/src/transform/decompose.js
var degrees = 180 / Math.PI;

var decompose_identity = {
  translateX: 0,
  translateY: 0,
  rotate: 0,
  skewX: 0,
  scaleX: 1,
  scaleY: 1
};

/* harmony default export */ function decompose(a, b, c, d, e, f) {
  var scaleX, scaleY, skewX;
  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;
  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;
  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;
  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;
  return {
    translateX: e,
    translateY: f,
    rotate: Math.atan2(b, a) * degrees,
    skewX: Math.atan(skewX) * degrees,
    scaleX: scaleX,
    scaleY: scaleY
  };
}

;// CONCATENATED MODULE: ./node_modules/d3-interpolate/src/transform/parse.js


var svgNode;

/* eslint-disable no-undef */
function parseCss(value) {
  const m = new (typeof DOMMatrix === "function" ? DOMMatrix : WebKitCSSMatrix)(value + "");
  return m.isIdentity ? decompose_identity : decompose(m.a, m.b, m.c, m.d, m.e, m.f);
}

function parseSvg(value) {
  if (value == null) return decompose_identity;
  if (!svgNode) svgNode = document.createElementNS("http://www.w3.org/2000/svg", "g");
  svgNode.setAttribute("transform", value);
  if (!(value = svgNode.transform.baseVal.consolidate())) return decompose_identity;
  value = value.matrix;
  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);
}

;// CONCATENATED MODULE: ./node_modules/d3-interpolate/src/transform/index.js



function interpolateTransform(parse, pxComma, pxParen, degParen) {

  function pop(s) {
    return s.length ? s.pop() + " " : "";
  }

  function translate(xa, ya, xb, yb, s, q) {
    if (xa !== xb || ya !== yb) {
      var i = s.push("translate(", null, pxComma, null, pxParen);
      q.push({i: i - 4, x: src_number(xa, xb)}, {i: i - 2, x: src_number(ya, yb)});
    } else if (xb || yb) {
      s.push("translate(" + xb + pxComma + yb + pxParen);
    }
  }

  function rotate(a, b, s, q) {
    if (a !== b) {
      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path
      q.push({i: s.push(pop(s) + "rotate(", null, degParen) - 2, x: src_number(a, b)});
    } else if (b) {
      s.push(pop(s) + "rotate(" + b + degParen);
    }
  }

  function skewX(a, b, s, q) {
    if (a !== b) {
      q.push({i: s.push(pop(s) + "skewX(", null, degParen) - 2, x: src_number(a, b)});
    } else if (b) {
      s.push(pop(s) + "skewX(" + b + degParen);
    }
  }

  function scale(xa, ya, xb, yb, s, q) {
    if (xa !== xb || ya !== yb) {
      var i = s.push(pop(s) + "scale(", null, ",", null, ")");
      q.push({i: i - 4, x: src_number(xa, xb)}, {i: i - 2, x: src_number(ya, yb)});
    } else if (xb !== 1 || yb !== 1) {
      s.push(pop(s) + "scale(" + xb + "," + yb + ")");
    }
  }

  return function(a, b) {
    var s = [], // string constants and placeholders
        q = []; // number interpolators
    a = parse(a), b = parse(b);
    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);
    rotate(a.rotate, b.rotate, s, q);
    skewX(a.skewX, b.skewX, s, q);
    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);
    a = b = null; // gc
    return function(t) {
      var i = -1, n = q.length, o;
      while (++i < n) s[(o = q[i]).i] = o.x(t);
      return s.join("");
    };
  };
}

var interpolateTransformCss = interpolateTransform(parseCss, "px, ", "px)", "deg)");
var interpolateTransformSvg = interpolateTransform(parseSvg, ", ", ")", ")");

;// CONCATENATED MODULE: ./node_modules/d3-transition/src/transition/tween.js


function tweenRemove(id, name) {
  var tween0, tween1;
  return function() {
    var schedule = schedule_set(this, id),
        tween = schedule.tween;

    // If this node shared tween with the previous node,
    // just assign the updated shared tween and we’re done!
    // Otherwise, copy-on-write.
    if (tween !== tween0) {
      tween1 = tween0 = tween;
      for (var i = 0, n = tween1.length; i < n; ++i) {
        if (tween1[i].name === name) {
          tween1 = tween1.slice();
          tween1.splice(i, 1);
          break;
        }
      }
    }

    schedule.tween = tween1;
  };
}

function tweenFunction(id, name, value) {
  var tween0, tween1;
  if (typeof value !== "function") throw new Error;
  return function() {
    var schedule = schedule_set(this, id),
        tween = schedule.tween;

    // If this node shared tween with the previous node,
    // just assign the updated shared tween and we’re done!
    // Otherwise, copy-on-write.
    if (tween !== tween0) {
      tween1 = (tween0 = tween).slice();
      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {
        if (tween1[i].name === name) {
          tween1[i] = t;
          break;
        }
      }
      if (i === n) tween1.push(t);
    }

    schedule.tween = tween1;
  };
}

/* harmony default export */ function tween(name, value) {
  var id = this._id;

  name += "";

  if (arguments.length < 2) {
    var tween = schedule_get(this.node(), id).tween;
    for (var i = 0, n = tween.length, t; i < n; ++i) {
      if ((t = tween[i]).name === name) {
        return t.value;
      }
    }
    return null;
  }

  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));
}

function tweenValue(transition, name, value) {
  var id = transition._id;

  transition.each(function() {
    var schedule = schedule_set(this, id);
    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);
  });

  return function(node) {
    return schedule_get(node, id).value[name];
  };
}

;// CONCATENATED MODULE: ./node_modules/d3-transition/src/transition/interpolate.js



/* harmony default export */ function interpolate(a, b) {
  var c;
  return (typeof b === "number" ? src_number
      : b instanceof color ? rgb
      : (c = color(b)) ? (b = c, rgb)
      : string)(a, b);
}

;// CONCATENATED MODULE: ./node_modules/d3-transition/src/transition/attr.js





function attr_attrRemove(name) {
  return function() {
    this.removeAttribute(name);
  };
}

function attr_attrRemoveNS(fullname) {
  return function() {
    this.removeAttributeNS(fullname.space, fullname.local);
  };
}

function attr_attrConstant(name, interpolate, value1) {
  var string00,
      string1 = value1 + "",
      interpolate0;
  return function() {
    var string0 = this.getAttribute(name);
    return string0 === string1 ? null
        : string0 === string00 ? interpolate0
        : interpolate0 = interpolate(string00 = string0, value1);
  };
}

function attr_attrConstantNS(fullname, interpolate, value1) {
  var string00,
      string1 = value1 + "",
      interpolate0;
  return function() {
    var string0 = this.getAttributeNS(fullname.space, fullname.local);
    return string0 === string1 ? null
        : string0 === string00 ? interpolate0
        : interpolate0 = interpolate(string00 = string0, value1);
  };
}

function attr_attrFunction(name, interpolate, value) {
  var string00,
      string10,
      interpolate0;
  return function() {
    var string0, value1 = value(this), string1;
    if (value1 == null) return void this.removeAttribute(name);
    string0 = this.getAttribute(name);
    string1 = value1 + "";
    return string0 === string1 ? null
        : string0 === string00 && string1 === string10 ? interpolate0
        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));
  };
}

function attr_attrFunctionNS(fullname, interpolate, value) {
  var string00,
      string10,
      interpolate0;
  return function() {
    var string0, value1 = value(this), string1;
    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);
    string0 = this.getAttributeNS(fullname.space, fullname.local);
    string1 = value1 + "";
    return string0 === string1 ? null
        : string0 === string00 && string1 === string10 ? interpolate0
        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));
  };
}

/* harmony default export */ function transition_attr(name, value) {
  var fullname = namespace(name), i = fullname === "transform" ? interpolateTransformSvg : interpolate;
  return this.attrTween(name, typeof value === "function"
      ? (fullname.local ? attr_attrFunctionNS : attr_attrFunction)(fullname, i, tweenValue(this, "attr." + name, value))
      : value == null ? (fullname.local ? attr_attrRemoveNS : attr_attrRemove)(fullname)
      : (fullname.local ? attr_attrConstantNS : attr_attrConstant)(fullname, i, value));
}

;// CONCATENATED MODULE: ./node_modules/d3-transition/src/transition/attrTween.js


function attrInterpolate(name, i) {
  return function(t) {
    this.setAttribute(name, i.call(this, t));
  };
}

function attrInterpolateNS(fullname, i) {
  return function(t) {
    this.setAttributeNS(fullname.space, fullname.local, i.call(this, t));
  };
}

function attrTweenNS(fullname, value) {
  var t0, i0;
  function tween() {
    var i = value.apply(this, arguments);
    if (i !== i0) t0 = (i0 = i) && attrInterpolateNS(fullname, i);
    return t0;
  }
  tween._value = value;
  return tween;
}

function attrTween(name, value) {
  var t0, i0;
  function tween() {
    var i = value.apply(this, arguments);
    if (i !== i0) t0 = (i0 = i) && attrInterpolate(name, i);
    return t0;
  }
  tween._value = value;
  return tween;
}

/* harmony default export */ function transition_attrTween(name, value) {
  var key = "attr." + name;
  if (arguments.length < 2) return (key = this.tween(key)) && key._value;
  if (value == null) return this.tween(key, null);
  if (typeof value !== "function") throw new Error;
  var fullname = namespace(name);
  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));
}

;// CONCATENATED MODULE: ./node_modules/d3-transition/src/transition/delay.js


function delayFunction(id, value) {
  return function() {
    init(this, id).delay = +value.apply(this, arguments);
  };
}

function delayConstant(id, value) {
  return value = +value, function() {
    init(this, id).delay = value;
  };
}

/* harmony default export */ function delay(value) {
  var id = this._id;

  return arguments.length
      ? this.each((typeof value === "function"
          ? delayFunction
          : delayConstant)(id, value))
      : schedule_get(this.node(), id).delay;
}

;// CONCATENATED MODULE: ./node_modules/d3-transition/src/transition/duration.js


function durationFunction(id, value) {
  return function() {
    schedule_set(this, id).duration = +value.apply(this, arguments);
  };
}

function durationConstant(id, value) {
  return value = +value, function() {
    schedule_set(this, id).duration = value;
  };
}

/* harmony default export */ function duration(value) {
  var id = this._id;

  return arguments.length
      ? this.each((typeof value === "function"
          ? durationFunction
          : durationConstant)(id, value))
      : schedule_get(this.node(), id).duration;
}

;// CONCATENATED MODULE: ./node_modules/d3-transition/src/transition/ease.js


function easeConstant(id, value) {
  if (typeof value !== "function") throw new Error;
  return function() {
    schedule_set(this, id).ease = value;
  };
}

/* harmony default export */ function ease(value) {
  var id = this._id;

  return arguments.length
      ? this.each(easeConstant(id, value))
      : schedule_get(this.node(), id).ease;
}

;// CONCATENATED MODULE: ./node_modules/d3-transition/src/transition/easeVarying.js


function easeVarying(id, value) {
  return function() {
    var v = value.apply(this, arguments);
    if (typeof v !== "function") throw new Error;
    schedule_set(this, id).ease = v;
  };
}

/* harmony default export */ function transition_easeVarying(value) {
  if (typeof value !== "function") throw new Error;
  return this.each(easeVarying(this._id, value));
}

;// CONCATENATED MODULE: ./node_modules/d3-transition/src/transition/filter.js



/* harmony default export */ function transition_filter(match) {
  if (typeof match !== "function") match = matcher(match);

  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {
      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {
        subgroup.push(node);
      }
    }
  }

  return new Transition(subgroups, this._parents, this._name, this._id);
}

;// CONCATENATED MODULE: ./node_modules/d3-transition/src/transition/merge.js


/* harmony default export */ function transition_merge(transition) {
  if (transition._id !== this._id) throw new Error;

  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {
    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {
      if (node = group0[i] || group1[i]) {
        merge[i] = node;
      }
    }
  }

  for (; j < m0; ++j) {
    merges[j] = groups0[j];
  }

  return new Transition(merges, this._parents, this._name, this._id);
}

;// CONCATENATED MODULE: ./node_modules/d3-transition/src/transition/on.js


function start(name) {
  return (name + "").trim().split(/^|\s+/).every(function(t) {
    var i = t.indexOf(".");
    if (i >= 0) t = t.slice(0, i);
    return !t || t === "start";
  });
}

function onFunction(id, name, listener) {
  var on0, on1, sit = start(name) ? init : schedule_set;
  return function() {
    var schedule = sit(this, id),
        on = schedule.on;

    // If this node shared a dispatch with the previous node,
    // just assign the updated shared dispatch and we’re done!
    // Otherwise, copy-on-write.
    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);

    schedule.on = on1;
  };
}

/* harmony default export */ function transition_on(name, listener) {
  var id = this._id;

  return arguments.length < 2
      ? schedule_get(this.node(), id).on.on(name)
      : this.each(onFunction(id, name, listener));
}

;// CONCATENATED MODULE: ./node_modules/d3-transition/src/transition/remove.js
function removeFunction(id) {
  return function() {
    var parent = this.parentNode;
    for (var i in this.__transition) if (+i !== id) return;
    if (parent) parent.removeChild(this);
  };
}

/* harmony default export */ function transition_remove() {
  return this.on("end.remove", removeFunction(this._id));
}

;// CONCATENATED MODULE: ./node_modules/d3-transition/src/transition/select.js




/* harmony default export */ function transition_select(select) {
  var name = this._name,
      id = this._id;

  if (typeof select !== "function") select = selector(select);

  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {
      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {
        if ("__data__" in node) subnode.__data__ = node.__data__;
        subgroup[i] = subnode;
        schedule(subgroup[i], name, id, i, subgroup, schedule_get(node, id));
      }
    }
  }

  return new Transition(subgroups, this._parents, name, id);
}

;// CONCATENATED MODULE: ./node_modules/d3-transition/src/transition/selectAll.js




/* harmony default export */ function transition_selectAll(select) {
  var name = this._name,
      id = this._id;

  if (typeof select !== "function") select = selectorAll(select);

  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {
      if (node = group[i]) {
        for (var children = select.call(node, node.__data__, i, group), child, inherit = schedule_get(node, id), k = 0, l = children.length; k < l; ++k) {
          if (child = children[k]) {
            schedule(child, name, id, k, children, inherit);
          }
        }
        subgroups.push(children);
        parents.push(node);
      }
    }
  }

  return new Transition(subgroups, parents, name, id);
}

;// CONCATENATED MODULE: ./node_modules/d3-transition/src/transition/selection.js


var selection_Selection = src_selection.prototype.constructor;

/* harmony default export */ function transition_selection() {
  return new selection_Selection(this._groups, this._parents);
}

;// CONCATENATED MODULE: ./node_modules/d3-transition/src/transition/style.js






function styleNull(name, interpolate) {
  var string00,
      string10,
      interpolate0;
  return function() {
    var string0 = styleValue(this, name),
        string1 = (this.style.removeProperty(name), styleValue(this, name));
    return string0 === string1 ? null
        : string0 === string00 && string1 === string10 ? interpolate0
        : interpolate0 = interpolate(string00 = string0, string10 = string1);
  };
}

function style_styleRemove(name) {
  return function() {
    this.style.removeProperty(name);
  };
}

function style_styleConstant(name, interpolate, value1) {
  var string00,
      string1 = value1 + "",
      interpolate0;
  return function() {
    var string0 = styleValue(this, name);
    return string0 === string1 ? null
        : string0 === string00 ? interpolate0
        : interpolate0 = interpolate(string00 = string0, value1);
  };
}

function style_styleFunction(name, interpolate, value) {
  var string00,
      string10,
      interpolate0;
  return function() {
    var string0 = styleValue(this, name),
        value1 = value(this),
        string1 = value1 + "";
    if (value1 == null) string1 = value1 = (this.style.removeProperty(name), styleValue(this, name));
    return string0 === string1 ? null
        : string0 === string00 && string1 === string10 ? interpolate0
        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));
  };
}

function styleMaybeRemove(id, name) {
  var on0, on1, listener0, key = "style." + name, event = "end." + key, remove;
  return function() {
    var schedule = schedule_set(this, id),
        on = schedule.on,
        listener = schedule.value[key] == null ? remove || (remove = style_styleRemove(name)) : undefined;

    // If this node shared a dispatch with the previous node,
    // just assign the updated shared dispatch and we’re done!
    // Otherwise, copy-on-write.
    if (on !== on0 || listener0 !== listener) (on1 = (on0 = on).copy()).on(event, listener0 = listener);

    schedule.on = on1;
  };
}

/* harmony default export */ function transition_style(name, value, priority) {
  var i = (name += "") === "transform" ? interpolateTransformCss : interpolate;
  return value == null ? this
      .styleTween(name, styleNull(name, i))
      .on("end.style." + name, style_styleRemove(name))
    : typeof value === "function" ? this
      .styleTween(name, style_styleFunction(name, i, tweenValue(this, "style." + name, value)))
      .each(styleMaybeRemove(this._id, name))
    : this
      .styleTween(name, style_styleConstant(name, i, value), priority)
      .on("end.style." + name, null);
}

;// CONCATENATED MODULE: ./node_modules/d3-transition/src/transition/styleTween.js
function styleInterpolate(name, i, priority) {
  return function(t) {
    this.style.setProperty(name, i.call(this, t), priority);
  };
}

function styleTween(name, value, priority) {
  var t, i0;
  function tween() {
    var i = value.apply(this, arguments);
    if (i !== i0) t = (i0 = i) && styleInterpolate(name, i, priority);
    return t;
  }
  tween._value = value;
  return tween;
}

/* harmony default export */ function transition_styleTween(name, value, priority) {
  var key = "style." + (name += "");
  if (arguments.length < 2) return (key = this.tween(key)) && key._value;
  if (value == null) return this.tween(key, null);
  if (typeof value !== "function") throw new Error;
  return this.tween(key, styleTween(name, value, priority == null ? "" : priority));
}

;// CONCATENATED MODULE: ./node_modules/d3-transition/src/transition/text.js


function text_textConstant(value) {
  return function() {
    this.textContent = value;
  };
}

function text_textFunction(value) {
  return function() {
    var value1 = value(this);
    this.textContent = value1 == null ? "" : value1;
  };
}

/* harmony default export */ function transition_text(value) {
  return this.tween("text", typeof value === "function"
      ? text_textFunction(tweenValue(this, "text", value))
      : text_textConstant(value == null ? "" : value + ""));
}

;// CONCATENATED MODULE: ./node_modules/d3-transition/src/transition/textTween.js
function textInterpolate(i) {
  return function(t) {
    this.textContent = i.call(this, t);
  };
}

function textTween(value) {
  var t0, i0;
  function tween() {
    var i = value.apply(this, arguments);
    if (i !== i0) t0 = (i0 = i) && textInterpolate(i);
    return t0;
  }
  tween._value = value;
  return tween;
}

/* harmony default export */ function transition_textTween(value) {
  var key = "text";
  if (arguments.length < 1) return (key = this.tween(key)) && key._value;
  if (value == null) return this.tween(key, null);
  if (typeof value !== "function") throw new Error;
  return this.tween(key, textTween(value));
}

;// CONCATENATED MODULE: ./node_modules/d3-transition/src/transition/transition.js



/* harmony default export */ function transition() {
  var name = this._name,
      id0 = this._id,
      id1 = newId();

  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {
      if (node = group[i]) {
        var inherit = schedule_get(node, id0);
        schedule(node, name, id1, i, group, {
          time: inherit.time + inherit.delay + inherit.duration,
          delay: 0,
          duration: inherit.duration,
          ease: inherit.ease
        });
      }
    }
  }

  return new Transition(groups, this._parents, name, id1);
}

;// CONCATENATED MODULE: ./node_modules/d3-transition/src/transition/end.js


/* harmony default export */ function end() {
  var on0, on1, that = this, id = that._id, size = that.size();
  return new Promise(function(resolve, reject) {
    var cancel = {value: reject},
        end = {value: function() { if (--size === 0) resolve(); }};

    that.each(function() {
      var schedule = schedule_set(this, id),
          on = schedule.on;

      // If this node shared a dispatch with the previous node,
      // just assign the updated shared dispatch and we’re done!
      // Otherwise, copy-on-write.
      if (on !== on0) {
        on1 = (on0 = on).copy();
        on1._.cancel.push(cancel);
        on1._.interrupt.push(cancel);
        on1._.end.push(end);
      }

      schedule.on = on1;
    });

    // The selection was empty, resolve end immediately
    if (size === 0) resolve();
  });
}

;// CONCATENATED MODULE: ./node_modules/d3-transition/src/transition/index.js






















var id = 0;

function Transition(groups, parents, name, id) {
  this._groups = groups;
  this._parents = parents;
  this._name = name;
  this._id = id;
}

function transition_transition(name) {
  return src_selection().transition(name);
}

function newId() {
  return ++id;
}

var selection_prototype = src_selection.prototype;

Transition.prototype = transition_transition.prototype = {
  constructor: Transition,
  select: transition_select,
  selectAll: transition_selectAll,
  selectChild: selection_prototype.selectChild,
  selectChildren: selection_prototype.selectChildren,
  filter: transition_filter,
  merge: transition_merge,
  selection: transition_selection,
  transition: transition,
  call: selection_prototype.call,
  nodes: selection_prototype.nodes,
  node: selection_prototype.node,
  size: selection_prototype.size,
  empty: selection_prototype.empty,
  each: selection_prototype.each,
  on: transition_on,
  attr: transition_attr,
  attrTween: transition_attrTween,
  style: transition_style,
  styleTween: transition_styleTween,
  text: transition_text,
  textTween: transition_textTween,
  remove: transition_remove,
  tween: tween,
  delay: delay,
  duration: duration,
  ease: ease,
  easeVarying: transition_easeVarying,
  end: end,
  [Symbol.iterator]: selection_prototype[Symbol.iterator]
};

;// CONCATENATED MODULE: ./node_modules/d3-ease/src/cubic.js
function cubicIn(t) {
  return t * t * t;
}

function cubicOut(t) {
  return --t * t * t + 1;
}

function cubicInOut(t) {
  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;
}

;// CONCATENATED MODULE: ./node_modules/d3-transition/src/selection/transition.js





var defaultTiming = {
  time: null, // Set on use.
  delay: 0,
  duration: 250,
  ease: cubicInOut
};

function inherit(node, id) {
  var timing;
  while (!(timing = node.__transition) || !(timing = timing[id])) {
    if (!(node = node.parentNode)) {
      throw new Error(`transition ${id} not found`);
    }
  }
  return timing;
}

/* harmony default export */ function selection_transition(name) {
  var id,
      timing;

  if (name instanceof Transition) {
    id = name._id, name = name._name;
  } else {
    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + "";
  }

  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {
      if (node = group[i]) {
        schedule(node, name, id, i, group, timing || inherit(node, id));
      }
    }
  }

  return new Transition(groups, this._parents, name, id);
}

;// CONCATENATED MODULE: ./node_modules/d3-transition/src/selection/index.js




src_selection.prototype.interrupt = selection_interrupt;
src_selection.prototype.transition = selection_transition;

;// CONCATENATED MODULE: ./node_modules/d3-transition/src/active.js



var active_root = [null];

/* harmony default export */ function active(node, name) {
  var schedules = node.__transition,
      schedule,
      i;

  if (schedules) {
    name = name == null ? null : name + "";
    for (i in schedules) {
      if ((schedule = schedules[i]).state > SCHEDULED && schedule.name === name) {
        return new Transition([[node]], active_root, name, +i);
      }
    }
  }

  return null;
}

;// CONCATENATED MODULE: ./node_modules/d3-transition/src/index.js





;// CONCATENATED MODULE: ./node_modules/d3-brush/src/constant.js
/* harmony default export */ const d3_brush_src_constant = (x => () => x);

;// CONCATENATED MODULE: ./node_modules/d3-brush/src/event.js
function BrushEvent(type, {
  sourceEvent,
  target,
  selection,
  mode,
  dispatch
}) {
  Object.defineProperties(this, {
    type: {value: type, enumerable: true, configurable: true},
    sourceEvent: {value: sourceEvent, enumerable: true, configurable: true},
    target: {value: target, enumerable: true, configurable: true},
    selection: {value: selection, enumerable: true, configurable: true},
    mode: {value: mode, enumerable: true, configurable: true},
    _: {value: dispatch}
  });
}

;// CONCATENATED MODULE: ./node_modules/d3-brush/src/noevent.js
function noevent_nopropagation(event) {
  event.stopImmediatePropagation();
}

/* harmony default export */ function src_noevent(event) {
  event.preventDefault();
  event.stopImmediatePropagation();
}

;// CONCATENATED MODULE: ./node_modules/d3-brush/src/brush.js









var MODE_DRAG = {name: "drag"},
    MODE_SPACE = {name: "space"},
    MODE_HANDLE = {name: "handle"},
    MODE_CENTER = {name: "center"};

const {abs, max: brush_max, min: brush_min} = Math;

function number1(e) {
  return [+e[0], +e[1]];
}

function number2(e) {
  return [number1(e[0]), number1(e[1])];
}

var X = {
  name: "x",
  handles: ["w", "e"].map(type),
  input: function(x, e) { return x == null ? null : [[+x[0], e[0][1]], [+x[1], e[1][1]]]; },
  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }
};

var Y = {
  name: "y",
  handles: ["n", "s"].map(type),
  input: function(y, e) { return y == null ? null : [[e[0][0], +y[0]], [e[1][0], +y[1]]]; },
  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }
};

var XY = {
  name: "xy",
  handles: ["n", "w", "e", "s", "nw", "ne", "sw", "se"].map(type),
  input: function(xy) { return xy == null ? null : number2(xy); },
  output: function(xy) { return xy; }
};

var cursors = {
  overlay: "crosshair",
  selection: "move",
  n: "ns-resize",
  e: "ew-resize",
  s: "ns-resize",
  w: "ew-resize",
  nw: "nwse-resize",
  ne: "nesw-resize",
  se: "nwse-resize",
  sw: "nesw-resize"
};

var flipX = {
  e: "w",
  w: "e",
  nw: "ne",
  ne: "nw",
  se: "sw",
  sw: "se"
};

var flipY = {
  n: "s",
  s: "n",
  nw: "sw",
  ne: "se",
  se: "ne",
  sw: "nw"
};

var signsX = {
  overlay: +1,
  selection: +1,
  n: null,
  e: +1,
  s: null,
  w: -1,
  nw: -1,
  ne: +1,
  se: +1,
  sw: -1
};

var signsY = {
  overlay: +1,
  selection: +1,
  n: -1,
  e: null,
  s: +1,
  w: null,
  nw: -1,
  ne: -1,
  se: +1,
  sw: +1
};

function type(t) {
  return {type: t};
}

// Ignore right-click, since that should open the context menu.
function defaultFilter(event) {
  return !event.ctrlKey && !event.button;
}

function defaultExtent() {
  var svg = this.ownerSVGElement || this;
  if (svg.hasAttribute("viewBox")) {
    svg = svg.viewBox.baseVal;
    return [[svg.x, svg.y], [svg.x + svg.width, svg.y + svg.height]];
  }
  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];
}

function defaultTouchable() {
  return navigator.maxTouchPoints || ("ontouchstart" in this);
}

// Like d3.local, but with the name “__brush” rather than auto-generated.
function local(node) {
  while (!node.__brush) if (!(node = node.parentNode)) return;
  return node.__brush;
}

function brush_empty(extent) {
  return extent[0][0] === extent[1][0]
      || extent[0][1] === extent[1][1];
}

function brushSelection(node) {
  var state = node.__brush;
  return state ? state.dim.output(state.selection) : null;
}

function brushX() {
  return brush_brush(X);
}

function brushY() {
  return brush_brush(Y);
}

/* harmony default export */ function brush() {
  return brush_brush(XY);
}

function brush_brush(dim) {
  var extent = defaultExtent,
      filter = defaultFilter,
      touchable = defaultTouchable,
      keys = true,
      listeners = src_dispatch("start", "brush", "end"),
      handleSize = 6,
      touchending;

  function brush(group) {
    var overlay = group
        .property("__brush", initialize)
      .selectAll(".overlay")
      .data([type("overlay")]);

    overlay.enter().append("rect")
        .attr("class", "overlay")
        .attr("pointer-events", "all")
        .attr("cursor", cursors.overlay)
      .merge(overlay)
        .each(function() {
          var extent = local(this).extent;
          src_select(this)
              .attr("x", extent[0][0])
              .attr("y", extent[0][1])
              .attr("width", extent[1][0] - extent[0][0])
              .attr("height", extent[1][1] - extent[0][1]);
        });

    group.selectAll(".selection")
      .data([type("selection")])
      .enter().append("rect")
        .attr("class", "selection")
        .attr("cursor", cursors.selection)
        .attr("fill", "#777")
        .attr("fill-opacity", 0.3)
        .attr("stroke", "#fff")
        .attr("shape-rendering", "crispEdges");

    var handle = group.selectAll(".handle")
      .data(dim.handles, function(d) { return d.type; });

    handle.exit().remove();

    handle.enter().append("rect")
        .attr("class", function(d) { return "handle handle--" + d.type; })
        .attr("cursor", function(d) { return cursors[d.type]; });

    group
        .each(redraw)
        .attr("fill", "none")
        .attr("pointer-events", "all")
        .on("mousedown.brush", started)
      .filter(touchable)
        .on("touchstart.brush", started)
        .on("touchmove.brush", touchmoved)
        .on("touchend.brush touchcancel.brush", touchended)
        .style("touch-action", "none")
        .style("-webkit-tap-highlight-color", "rgba(0,0,0,0)");
  }

  brush.move = function(group, selection, event) {
    if (group.tween) {
      group
          .on("start.brush", function(event) { emitter(this, arguments).beforestart().start(event); })
          .on("interrupt.brush end.brush", function(event) { emitter(this, arguments).end(event); })
          .tween("brush", function() {
            var that = this,
                state = that.__brush,
                emit = emitter(that, arguments),
                selection0 = state.selection,
                selection1 = dim.input(typeof selection === "function" ? selection.apply(this, arguments) : selection, state.extent),
                i = value(selection0, selection1);

            function tween(t) {
              state.selection = t === 1 && selection1 === null ? null : i(t);
              redraw.call(that);
              emit.brush();
            }

            return selection0 !== null && selection1 !== null ? tween : tween(1);
          });
    } else {
      group
          .each(function() {
            var that = this,
                args = arguments,
                state = that.__brush,
                selection1 = dim.input(typeof selection === "function" ? selection.apply(that, args) : selection, state.extent),
                emit = emitter(that, args).beforestart();

            interrupt(that);
            state.selection = selection1 === null ? null : selection1;
            redraw.call(that);
            emit.start(event).brush(event).end(event);
          });
    }
  };

  brush.clear = function(group, event) {
    brush.move(group, null, event);
  };

  function redraw() {
    var group = src_select(this),
        selection = local(this).selection;

    if (selection) {
      group.selectAll(".selection")
          .style("display", null)
          .attr("x", selection[0][0])
          .attr("y", selection[0][1])
          .attr("width", selection[1][0] - selection[0][0])
          .attr("height", selection[1][1] - selection[0][1]);

      group.selectAll(".handle")
          .style("display", null)
          .attr("x", function(d) { return d.type[d.type.length - 1] === "e" ? selection[1][0] - handleSize / 2 : selection[0][0] - handleSize / 2; })
          .attr("y", function(d) { return d.type[0] === "s" ? selection[1][1] - handleSize / 2 : selection[0][1] - handleSize / 2; })
          .attr("width", function(d) { return d.type === "n" || d.type === "s" ? selection[1][0] - selection[0][0] + handleSize : handleSize; })
          .attr("height", function(d) { return d.type === "e" || d.type === "w" ? selection[1][1] - selection[0][1] + handleSize : handleSize; });
    }

    else {
      group.selectAll(".selection,.handle")
          .style("display", "none")
          .attr("x", null)
          .attr("y", null)
          .attr("width", null)
          .attr("height", null);
    }
  }

  function emitter(that, args, clean) {
    var emit = that.__brush.emitter;
    return emit && (!clean || !emit.clean) ? emit : new Emitter(that, args, clean);
  }

  function Emitter(that, args, clean) {
    this.that = that;
    this.args = args;
    this.state = that.__brush;
    this.active = 0;
    this.clean = clean;
  }

  Emitter.prototype = {
    beforestart: function() {
      if (++this.active === 1) this.state.emitter = this, this.starting = true;
      return this;
    },
    start: function(event, mode) {
      if (this.starting) this.starting = false, this.emit("start", event, mode);
      else this.emit("brush", event);
      return this;
    },
    brush: function(event, mode) {
      this.emit("brush", event, mode);
      return this;
    },
    end: function(event, mode) {
      if (--this.active === 0) delete this.state.emitter, this.emit("end", event, mode);
      return this;
    },
    emit: function(type, event, mode) {
      var d = src_select(this.that).datum();
      listeners.call(
        type,
        this.that,
        new BrushEvent(type, {
          sourceEvent: event,
          target: brush,
          selection: dim.output(this.state.selection),
          mode,
          dispatch: listeners
        }),
        d
      );
    }
  };

  function started(event) {
    if (touchending && !event.touches) return;
    if (!filter.apply(this, arguments)) return;

    var that = this,
        type = event.target.__data__.type,
        mode = (keys && event.metaKey ? type = "overlay" : type) === "selection" ? MODE_DRAG : (keys && event.altKey ? MODE_CENTER : MODE_HANDLE),
        signX = dim === Y ? null : signsX[type],
        signY = dim === X ? null : signsY[type],
        state = local(that),
        extent = state.extent,
        selection = state.selection,
        W = extent[0][0], w0, w1,
        N = extent[0][1], n0, n1,
        E = extent[1][0], e0, e1,
        S = extent[1][1], s0, s1,
        dx = 0,
        dy = 0,
        moving,
        shifting = signX && signY && keys && event.shiftKey,
        lockX,
        lockY,
        points = Array.from(event.touches || [event], t => {
          const i = t.identifier;
          t = pointer(t, that);
          t.point0 = t.slice();
          t.identifier = i;
          return t;
        });

    interrupt(that);
    var emit = emitter(that, arguments, true).beforestart();

    if (type === "overlay") {
      if (selection) moving = true;
      const pts = [points[0], points[1] || points[0]];
      state.selection = selection = [[
          w0 = dim === Y ? W : brush_min(pts[0][0], pts[1][0]),
          n0 = dim === X ? N : brush_min(pts[0][1], pts[1][1])
        ], [
          e0 = dim === Y ? E : brush_max(pts[0][0], pts[1][0]),
          s0 = dim === X ? S : brush_max(pts[0][1], pts[1][1])
        ]];
      if (points.length > 1) move(event);
    } else {
      w0 = selection[0][0];
      n0 = selection[0][1];
      e0 = selection[1][0];
      s0 = selection[1][1];
    }

    w1 = w0;
    n1 = n0;
    e1 = e0;
    s1 = s0;

    var group = src_select(that)
        .attr("pointer-events", "none");

    var overlay = group.selectAll(".overlay")
        .attr("cursor", cursors[type]);

    if (event.touches) {
      emit.moved = moved;
      emit.ended = ended;
    } else {
      var view = src_select(event.view)
          .on("mousemove.brush", moved, true)
          .on("mouseup.brush", ended, true);
      if (keys) view
          .on("keydown.brush", keydowned, true)
          .on("keyup.brush", keyupped, true)

      nodrag(event.view);
    }

    redraw.call(that);
    emit.start(event, mode.name);

    function moved(event) {
      for (const p of event.changedTouches || [event]) {
        for (const d of points)
          if (d.identifier === p.identifier) d.cur = pointer(p, that);
      }
      if (shifting && !lockX && !lockY && points.length === 1) {
        const point = points[0];
        if (abs(point.cur[0] - point[0]) > abs(point.cur[1] - point[1]))
          lockY = true;
        else
          lockX = true;
      }
      for (const point of points)
        if (point.cur) point[0] = point.cur[0], point[1] = point.cur[1];
      moving = true;
      src_noevent(event);
      move(event);
    }

    function move(event) {
      const point = points[0], point0 = point.point0;
      var t;

      dx = point[0] - point0[0];
      dy = point[1] - point0[1];

      switch (mode) {
        case MODE_SPACE:
        case MODE_DRAG: {
          if (signX) dx = brush_max(W - w0, brush_min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;
          if (signY) dy = brush_max(N - n0, brush_min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;
          break;
        }
        case MODE_HANDLE: {
          if (points[1]) {
            if (signX) w1 = brush_max(W, brush_min(E, points[0][0])), e1 = brush_max(W, brush_min(E, points[1][0])), signX = 1;
            if (signY) n1 = brush_max(N, brush_min(S, points[0][1])), s1 = brush_max(N, brush_min(S, points[1][1])), signY = 1;
          } else {
            if (signX < 0) dx = brush_max(W - w0, brush_min(E - w0, dx)), w1 = w0 + dx, e1 = e0;
            else if (signX > 0) dx = brush_max(W - e0, brush_min(E - e0, dx)), w1 = w0, e1 = e0 + dx;
            if (signY < 0) dy = brush_max(N - n0, brush_min(S - n0, dy)), n1 = n0 + dy, s1 = s0;
            else if (signY > 0) dy = brush_max(N - s0, brush_min(S - s0, dy)), n1 = n0, s1 = s0 + dy;
          }
          break;
        }
        case MODE_CENTER: {
          if (signX) w1 = brush_max(W, brush_min(E, w0 - dx * signX)), e1 = brush_max(W, brush_min(E, e0 + dx * signX));
          if (signY) n1 = brush_max(N, brush_min(S, n0 - dy * signY)), s1 = brush_max(N, brush_min(S, s0 + dy * signY));
          break;
        }
      }

      if (e1 < w1) {
        signX *= -1;
        t = w0, w0 = e0, e0 = t;
        t = w1, w1 = e1, e1 = t;
        if (type in flipX) overlay.attr("cursor", cursors[type = flipX[type]]);
      }

      if (s1 < n1) {
        signY *= -1;
        t = n0, n0 = s0, s0 = t;
        t = n1, n1 = s1, s1 = t;
        if (type in flipY) overlay.attr("cursor", cursors[type = flipY[type]]);
      }

      if (state.selection) selection = state.selection; // May be set by brush.move!
      if (lockX) w1 = selection[0][0], e1 = selection[1][0];
      if (lockY) n1 = selection[0][1], s1 = selection[1][1];

      if (selection[0][0] !== w1
          || selection[0][1] !== n1
          || selection[1][0] !== e1
          || selection[1][1] !== s1) {
        state.selection = [[w1, n1], [e1, s1]];
        redraw.call(that);
        emit.brush(event, mode.name);
      }
    }

    function ended(event) {
      noevent_nopropagation(event);
      if (event.touches) {
        if (event.touches.length) return;
        if (touchending) clearTimeout(touchending);
        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!
      } else {
        yesdrag(event.view, moving);
        view.on("keydown.brush keyup.brush mousemove.brush mouseup.brush", null);
      }
      group.attr("pointer-events", "all");
      overlay.attr("cursor", cursors.overlay);
      if (state.selection) selection = state.selection; // May be set by brush.move (on start)!
      if (brush_empty(selection)) state.selection = null, redraw.call(that);
      emit.end(event, mode.name);
    }

    function keydowned(event) {
      switch (event.keyCode) {
        case 16: { // SHIFT
          shifting = signX && signY;
          break;
        }
        case 18: { // ALT
          if (mode === MODE_HANDLE) {
            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;
            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;
            mode = MODE_CENTER;
            move(event);
          }
          break;
        }
        case 32: { // SPACE; takes priority over ALT
          if (mode === MODE_HANDLE || mode === MODE_CENTER) {
            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;
            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;
            mode = MODE_SPACE;
            overlay.attr("cursor", cursors.selection);
            move(event);
          }
          break;
        }
        default: return;
      }
      src_noevent(event);
    }

    function keyupped(event) {
      switch (event.keyCode) {
        case 16: { // SHIFT
          if (shifting) {
            lockX = lockY = shifting = false;
            move(event);
          }
          break;
        }
        case 18: { // ALT
          if (mode === MODE_CENTER) {
            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;
            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;
            mode = MODE_HANDLE;
            move(event);
          }
          break;
        }
        case 32: { // SPACE
          if (mode === MODE_SPACE) {
            if (event.altKey) {
              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;
              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;
              mode = MODE_CENTER;
            } else {
              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;
              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;
              mode = MODE_HANDLE;
            }
            overlay.attr("cursor", cursors[type]);
            move(event);
          }
          break;
        }
        default: return;
      }
      src_noevent(event);
    }
  }

  function touchmoved(event) {
    emitter(this, arguments).moved(event);
  }

  function touchended(event) {
    emitter(this, arguments).ended(event);
  }

  function initialize() {
    var state = this.__brush || {selection: null};
    state.extent = number2(extent.apply(this, arguments));
    state.dim = dim;
    return state;
  }

  brush.extent = function(_) {
    return arguments.length ? (extent = typeof _ === "function" ? _ : d3_brush_src_constant(number2(_)), brush) : extent;
  };

  brush.filter = function(_) {
    return arguments.length ? (filter = typeof _ === "function" ? _ : d3_brush_src_constant(!!_), brush) : filter;
  };

  brush.touchable = function(_) {
    return arguments.length ? (touchable = typeof _ === "function" ? _ : d3_brush_src_constant(!!_), brush) : touchable;
  };

  brush.handleSize = function(_) {
    return arguments.length ? (handleSize = +_, brush) : handleSize;
  };

  brush.keyModifiers = function(_) {
    return arguments.length ? (keys = !!_, brush) : keys;
  };

  brush.on = function() {
    var value = listeners.on.apply(listeners, arguments);
    return value === listeners ? brush : value;
  };

  return brush;
}

;// CONCATENATED MODULE: ./node_modules/d3-brush/src/index.js


;// CONCATENATED MODULE: ./node_modules/d3-chord/src/math.js
var math_abs = Math.abs;
var cos = Math.cos;
var sin = Math.sin;
var pi = Math.PI;
var halfPi = pi / 2;
var tau = pi * 2;
var math_max = Math.max;
var math_epsilon = 1e-12;

;// CONCATENATED MODULE: ./node_modules/d3-chord/src/chord.js


function chord_range(i, j) {
  return Array.from({length: j - i}, (_, k) => i + k);
}

function compareValue(compare) {
  return function(a, b) {
    return compare(
      a.source.value + a.target.value,
      b.source.value + b.target.value
    );
  };
}

/* harmony default export */ function chord() {
  return chord_chord(false, false);
}

function chordTranspose() {
  return chord_chord(false, true);
}

function chordDirected() {
  return chord_chord(true, false);
}

function chord_chord(directed, transpose) {
  var padAngle = 0,
      sortGroups = null,
      sortSubgroups = null,
      sortChords = null;

  function chord(matrix) {
    var n = matrix.length,
        groupSums = new Array(n),
        groupIndex = chord_range(0, n),
        chords = new Array(n * n),
        groups = new Array(n),
        k = 0, dx;

    matrix = Float64Array.from({length: n * n}, transpose
        ? (_, i) => matrix[i % n][i / n | 0]
        : (_, i) => matrix[i / n | 0][i % n]);

    // Compute the scaling factor from value to angle in [0, 2pi].
    for (let i = 0; i < n; ++i) {
      let x = 0;
      for (let j = 0; j < n; ++j) x += matrix[i * n + j] + directed * matrix[j * n + i];
      k += groupSums[i] = x;
    }
    k = math_max(0, tau - padAngle * n) / k;
    dx = k ? padAngle : tau / n;

    // Compute the angles for each group and constituent chord.
    {
      let x = 0;
      if (sortGroups) groupIndex.sort((a, b) => sortGroups(groupSums[a], groupSums[b]));
      for (const i of groupIndex) {
        const x0 = x;
        if (directed) {
          const subgroupIndex = chord_range(~n + 1, n).filter(j => j < 0 ? matrix[~j * n + i] : matrix[i * n + j]);
          if (sortSubgroups) subgroupIndex.sort((a, b) => sortSubgroups(a < 0 ? -matrix[~a * n + i] : matrix[i * n + a], b < 0 ? -matrix[~b * n + i] : matrix[i * n + b]));
          for (const j of subgroupIndex) {
            if (j < 0) {
              const chord = chords[~j * n + i] || (chords[~j * n + i] = {source: null, target: null});
              chord.target = {index: i, startAngle: x, endAngle: x += matrix[~j * n + i] * k, value: matrix[~j * n + i]};
            } else {
              const chord = chords[i * n + j] || (chords[i * n + j] = {source: null, target: null});
              chord.source = {index: i, startAngle: x, endAngle: x += matrix[i * n + j] * k, value: matrix[i * n + j]};
            }
          }
          groups[i] = {index: i, startAngle: x0, endAngle: x, value: groupSums[i]};
        } else {
          const subgroupIndex = chord_range(0, n).filter(j => matrix[i * n + j] || matrix[j * n + i]);
          if (sortSubgroups) subgroupIndex.sort((a, b) => sortSubgroups(matrix[i * n + a], matrix[i * n + b]));
          for (const j of subgroupIndex) {
            let chord;
            if (i < j) {
              chord = chords[i * n + j] || (chords[i * n + j] = {source: null, target: null});
              chord.source = {index: i, startAngle: x, endAngle: x += matrix[i * n + j] * k, value: matrix[i * n + j]};
            } else {
              chord = chords[j * n + i] || (chords[j * n + i] = {source: null, target: null});
              chord.target = {index: i, startAngle: x, endAngle: x += matrix[i * n + j] * k, value: matrix[i * n + j]};
              if (i === j) chord.source = chord.target;
            }
            if (chord.source && chord.target && chord.source.value < chord.target.value) {
              const source = chord.source;
              chord.source = chord.target;
              chord.target = source;
            }
          }
          groups[i] = {index: i, startAngle: x0, endAngle: x, value: groupSums[i]};
        }
        x += dx;
      }
    }

    // Remove empty chords.
    chords = Object.values(chords);
    chords.groups = groups;
    return sortChords ? chords.sort(sortChords) : chords;
  }

  chord.padAngle = function(_) {
    return arguments.length ? (padAngle = math_max(0, _), chord) : padAngle;
  };

  chord.sortGroups = function(_) {
    return arguments.length ? (sortGroups = _, chord) : sortGroups;
  };

  chord.sortSubgroups = function(_) {
    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;
  };

  chord.sortChords = function(_) {
    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;
  };

  return chord;
}

;// CONCATENATED MODULE: ./node_modules/d3-path/src/path.js
const path_pi = Math.PI,
    path_tau = 2 * path_pi,
    path_epsilon = 1e-6,
    tauEpsilon = path_tau - path_epsilon;

function Path() {
  this._x0 = this._y0 = // start of current subpath
  this._x1 = this._y1 = null; // end of current subpath
  this._ = "";
}

function path() {
  return new Path;
}

Path.prototype = path.prototype = {
  constructor: Path,
  moveTo: function(x, y) {
    this._ += "M" + (this._x0 = this._x1 = +x) + "," + (this._y0 = this._y1 = +y);
  },
  closePath: function() {
    if (this._x1 !== null) {
      this._x1 = this._x0, this._y1 = this._y0;
      this._ += "Z";
    }
  },
  lineTo: function(x, y) {
    this._ += "L" + (this._x1 = +x) + "," + (this._y1 = +y);
  },
  quadraticCurveTo: function(x1, y1, x, y) {
    this._ += "Q" + (+x1) + "," + (+y1) + "," + (this._x1 = +x) + "," + (this._y1 = +y);
  },
  bezierCurveTo: function(x1, y1, x2, y2, x, y) {
    this._ += "C" + (+x1) + "," + (+y1) + "," + (+x2) + "," + (+y2) + "," + (this._x1 = +x) + "," + (this._y1 = +y);
  },
  arcTo: function(x1, y1, x2, y2, r) {
    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;
    var x0 = this._x1,
        y0 = this._y1,
        x21 = x2 - x1,
        y21 = y2 - y1,
        x01 = x0 - x1,
        y01 = y0 - y1,
        l01_2 = x01 * x01 + y01 * y01;

    // Is the radius negative? Error.
    if (r < 0) throw new Error("negative radius: " + r);

    // Is this path empty? Move to (x1,y1).
    if (this._x1 === null) {
      this._ += "M" + (this._x1 = x1) + "," + (this._y1 = y1);
    }

    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.
    else if (!(l01_2 > path_epsilon));

    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?
    // Equivalently, is (x1,y1) coincident with (x2,y2)?
    // Or, is the radius zero? Line to (x1,y1).
    else if (!(Math.abs(y01 * x21 - y21 * x01) > path_epsilon) || !r) {
      this._ += "L" + (this._x1 = x1) + "," + (this._y1 = y1);
    }

    // Otherwise, draw an arc!
    else {
      var x20 = x2 - x0,
          y20 = y2 - y0,
          l21_2 = x21 * x21 + y21 * y21,
          l20_2 = x20 * x20 + y20 * y20,
          l21 = Math.sqrt(l21_2),
          l01 = Math.sqrt(l01_2),
          l = r * Math.tan((path_pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),
          t01 = l / l01,
          t21 = l / l21;

      // If the start tangent is not coincident with (x0,y0), line to.
      if (Math.abs(t01 - 1) > path_epsilon) {
        this._ += "L" + (x1 + t01 * x01) + "," + (y1 + t01 * y01);
      }

      this._ += "A" + r + "," + r + ",0,0," + (+(y01 * x20 > x01 * y20)) + "," + (this._x1 = x1 + t21 * x21) + "," + (this._y1 = y1 + t21 * y21);
    }
  },
  arc: function(x, y, r, a0, a1, ccw) {
    x = +x, y = +y, r = +r, ccw = !!ccw;
    var dx = r * Math.cos(a0),
        dy = r * Math.sin(a0),
        x0 = x + dx,
        y0 = y + dy,
        cw = 1 ^ ccw,
        da = ccw ? a0 - a1 : a1 - a0;

    // Is the radius negative? Error.
    if (r < 0) throw new Error("negative radius: " + r);

    // Is this path empty? Move to (x0,y0).
    if (this._x1 === null) {
      this._ += "M" + x0 + "," + y0;
    }

    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).
    else if (Math.abs(this._x1 - x0) > path_epsilon || Math.abs(this._y1 - y0) > path_epsilon) {
      this._ += "L" + x0 + "," + y0;
    }

    // Is this arc empty? We’re done.
    if (!r) return;

    // Does the angle go the wrong way? Flip the direction.
    if (da < 0) da = da % path_tau + path_tau;

    // Is this a complete circle? Draw two arcs to complete the circle.
    if (da > tauEpsilon) {
      this._ += "A" + r + "," + r + ",0,1," + cw + "," + (x - dx) + "," + (y - dy) + "A" + r + "," + r + ",0,1," + cw + "," + (this._x1 = x0) + "," + (this._y1 = y0);
    }

    // Is this arc non-empty? Draw an arc!
    else if (da > path_epsilon) {
      this._ += "A" + r + "," + r + ",0," + (+(da >= path_pi)) + "," + cw + "," + (this._x1 = x + r * Math.cos(a1)) + "," + (this._y1 = y + r * Math.sin(a1));
    }
  },
  rect: function(x, y, w, h) {
    this._ += "M" + (this._x0 = this._x1 = +x) + "," + (this._y0 = this._y1 = +y) + "h" + (+w) + "v" + (+h) + "h" + (-w) + "Z";
  },
  toString: function() {
    return this._;
  }
};

/* harmony default export */ const src_path = (path);

;// CONCATENATED MODULE: ./node_modules/d3-chord/src/array.js
var array_slice = Array.prototype.slice;

;// CONCATENATED MODULE: ./node_modules/d3-chord/src/constant.js
/* harmony default export */ function d3_chord_src_constant(x) {
  return function() {
    return x;
  };
}

;// CONCATENATED MODULE: ./node_modules/d3-chord/src/ribbon.js





function defaultSource(d) {
  return d.source;
}

function defaultTarget(d) {
  return d.target;
}

function defaultRadius(d) {
  return d.radius;
}

function defaultStartAngle(d) {
  return d.startAngle;
}

function defaultEndAngle(d) {
  return d.endAngle;
}

function defaultPadAngle() {
  return 0;
}

function defaultArrowheadRadius() {
  return 10;
}

function ribbon(headRadius) {
  var source = defaultSource,
      target = defaultTarget,
      sourceRadius = defaultRadius,
      targetRadius = defaultRadius,
      startAngle = defaultStartAngle,
      endAngle = defaultEndAngle,
      padAngle = defaultPadAngle,
      context = null;

  function ribbon() {
    var buffer,
        s = source.apply(this, arguments),
        t = target.apply(this, arguments),
        ap = padAngle.apply(this, arguments) / 2,
        argv = array_slice.call(arguments),
        sr = +sourceRadius.apply(this, (argv[0] = s, argv)),
        sa0 = startAngle.apply(this, argv) - halfPi,
        sa1 = endAngle.apply(this, argv) - halfPi,
        tr = +targetRadius.apply(this, (argv[0] = t, argv)),
        ta0 = startAngle.apply(this, argv) - halfPi,
        ta1 = endAngle.apply(this, argv) - halfPi;

    if (!context) context = buffer = src_path();

    if (ap > math_epsilon) {
      if (math_abs(sa1 - sa0) > ap * 2 + math_epsilon) sa1 > sa0 ? (sa0 += ap, sa1 -= ap) : (sa0 -= ap, sa1 += ap);
      else sa0 = sa1 = (sa0 + sa1) / 2;
      if (math_abs(ta1 - ta0) > ap * 2 + math_epsilon) ta1 > ta0 ? (ta0 += ap, ta1 -= ap) : (ta0 -= ap, ta1 += ap);
      else ta0 = ta1 = (ta0 + ta1) / 2;
    }

    context.moveTo(sr * cos(sa0), sr * sin(sa0));
    context.arc(0, 0, sr, sa0, sa1);
    if (sa0 !== ta0 || sa1 !== ta1) {
      if (headRadius) {
        var hr = +headRadius.apply(this, arguments), tr2 = tr - hr, ta2 = (ta0 + ta1) / 2;
        context.quadraticCurveTo(0, 0, tr2 * cos(ta0), tr2 * sin(ta0));
        context.lineTo(tr * cos(ta2), tr * sin(ta2));
        context.lineTo(tr2 * cos(ta1), tr2 * sin(ta1));
      } else {
        context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));
        context.arc(0, 0, tr, ta0, ta1);
      }
    }
    context.quadraticCurveTo(0, 0, sr * cos(sa0), sr * sin(sa0));
    context.closePath();

    if (buffer) return context = null, buffer + "" || null;
  }

  if (headRadius) ribbon.headRadius = function(_) {
    return arguments.length ? (headRadius = typeof _ === "function" ? _ : d3_chord_src_constant(+_), ribbon) : headRadius;
  };

  ribbon.radius = function(_) {
    return arguments.length ? (sourceRadius = targetRadius = typeof _ === "function" ? _ : d3_chord_src_constant(+_), ribbon) : sourceRadius;
  };

  ribbon.sourceRadius = function(_) {
    return arguments.length ? (sourceRadius = typeof _ === "function" ? _ : d3_chord_src_constant(+_), ribbon) : sourceRadius;
  };

  ribbon.targetRadius = function(_) {
    return arguments.length ? (targetRadius = typeof _ === "function" ? _ : d3_chord_src_constant(+_), ribbon) : targetRadius;
  };

  ribbon.startAngle = function(_) {
    return arguments.length ? (startAngle = typeof _ === "function" ? _ : d3_chord_src_constant(+_), ribbon) : startAngle;
  };

  ribbon.endAngle = function(_) {
    return arguments.length ? (endAngle = typeof _ === "function" ? _ : d3_chord_src_constant(+_), ribbon) : endAngle;
  };

  ribbon.padAngle = function(_) {
    return arguments.length ? (padAngle = typeof _ === "function" ? _ : d3_chord_src_constant(+_), ribbon) : padAngle;
  };

  ribbon.source = function(_) {
    return arguments.length ? (source = _, ribbon) : source;
  };

  ribbon.target = function(_) {
    return arguments.length ? (target = _, ribbon) : target;
  };

  ribbon.context = function(_) {
    return arguments.length ? ((context = _ == null ? null : _), ribbon) : context;
  };

  return ribbon;
}

/* harmony default export */ function src_ribbon() {
  return ribbon();
}

function ribbonArrow() {
  return ribbon(defaultArrowheadRadius);
}

;// CONCATENATED MODULE: ./node_modules/d3-chord/src/index.js



;// CONCATENATED MODULE: ./node_modules/d3-color/src/math.js
const radians = Math.PI / 180;
const math_degrees = 180 / Math.PI;

;// CONCATENATED MODULE: ./node_modules/d3-color/src/lab.js




// https://observablehq.com/@mbostock/lab-and-rgb
const K = 18,
    Xn = 0.96422,
    Yn = 1,
    Zn = 0.82521,
    t0 = 4 / 29,
    t1 = 6 / 29,
    t2 = 3 * t1 * t1,
    t3 = t1 * t1 * t1;

function labConvert(o) {
  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);
  if (o instanceof Hcl) return hcl2lab(o);
  if (!(o instanceof Rgb)) o = rgbConvert(o);
  var r = rgb2lrgb(o.r),
      g = rgb2lrgb(o.g),
      b = rgb2lrgb(o.b),
      y = xyz2lab((0.2225045 * r + 0.7168786 * g + 0.0606169 * b) / Yn), x, z;
  if (r === g && g === b) x = z = y; else {
    x = xyz2lab((0.4360747 * r + 0.3850649 * g + 0.1430804 * b) / Xn);
    z = xyz2lab((0.0139322 * r + 0.0971045 * g + 0.7141733 * b) / Zn);
  }
  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);
}

function gray(l, opacity) {
  return new Lab(l, 0, 0, opacity == null ? 1 : opacity);
}

function lab(l, a, b, opacity) {
  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);
}

function Lab(l, a, b, opacity) {
  this.l = +l;
  this.a = +a;
  this.b = +b;
  this.opacity = +opacity;
}

src_define(Lab, lab, extend(Color, {
  brighter(k) {
    return new Lab(this.l + K * (k == null ? 1 : k), this.a, this.b, this.opacity);
  },
  darker(k) {
    return new Lab(this.l - K * (k == null ? 1 : k), this.a, this.b, this.opacity);
  },
  rgb() {
    var y = (this.l + 16) / 116,
        x = isNaN(this.a) ? y : y + this.a / 500,
        z = isNaN(this.b) ? y : y - this.b / 200;
    x = Xn * lab2xyz(x);
    y = Yn * lab2xyz(y);
    z = Zn * lab2xyz(z);
    return new Rgb(
      lrgb2rgb( 3.1338561 * x - 1.6168667 * y - 0.4906146 * z),
      lrgb2rgb(-0.9787684 * x + 1.9161415 * y + 0.0334540 * z),
      lrgb2rgb( 0.0719453 * x - 0.2289914 * y + 1.4052427 * z),
      this.opacity
    );
  }
}));

function xyz2lab(t) {
  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;
}

function lab2xyz(t) {
  return t > t1 ? t * t * t : t2 * (t - t0);
}

function lrgb2rgb(x) {
  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);
}

function rgb2lrgb(x) {
  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);
}

function hclConvert(o) {
  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);
  if (!(o instanceof Lab)) o = labConvert(o);
  if (o.a === 0 && o.b === 0) return new Hcl(NaN, 0 < o.l && o.l < 100 ? 0 : NaN, o.l, o.opacity);
  var h = Math.atan2(o.b, o.a) * math_degrees;
  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);
}

function lch(l, c, h, opacity) {
  return arguments.length === 1 ? hclConvert(l) : new Hcl(h, c, l, opacity == null ? 1 : opacity);
}

function hcl(h, c, l, opacity) {
  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);
}

function Hcl(h, c, l, opacity) {
  this.h = +h;
  this.c = +c;
  this.l = +l;
  this.opacity = +opacity;
}

function hcl2lab(o) {
  if (isNaN(o.h)) return new Lab(o.l, 0, 0, o.opacity);
  var h = o.h * radians;
  return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);
}

src_define(Hcl, hcl, extend(Color, {
  brighter(k) {
    return new Hcl(this.h, this.c, this.l + K * (k == null ? 1 : k), this.opacity);
  },
  darker(k) {
    return new Hcl(this.h, this.c, this.l - K * (k == null ? 1 : k), this.opacity);
  },
  rgb() {
    return hcl2lab(this).rgb();
  }
}));

;// CONCATENATED MODULE: ./node_modules/d3-color/src/cubehelix.js




var A = -0.14861,
    B = +1.78277,
    C = -0.29227,
    D = -0.90649,
    E = +1.97294,
    ED = E * D,
    EB = E * B,
    BC_DA = B * C - D * A;

function cubehelixConvert(o) {
  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);
  if (!(o instanceof Rgb)) o = rgbConvert(o);
  var r = o.r / 255,
      g = o.g / 255,
      b = o.b / 255,
      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),
      bl = b - l,
      k = (E * (g - l) - C * bl) / D,
      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1
      h = s ? Math.atan2(k, bl) * math_degrees - 120 : NaN;
  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);
}

function cubehelix_cubehelix(h, s, l, opacity) {
  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);
}

function Cubehelix(h, s, l, opacity) {
  this.h = +h;
  this.s = +s;
  this.l = +l;
  this.opacity = +opacity;
}

src_define(Cubehelix, cubehelix_cubehelix, extend(Color, {
  brighter(k) {
    k = k == null ? brighter : Math.pow(brighter, k);
    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);
  },
  darker(k) {
    k = k == null ? darker : Math.pow(darker, k);
    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);
  },
  rgb() {
    var h = isNaN(this.h) ? 0 : (this.h + 120) * radians,
        l = +this.l,
        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),
        cosh = Math.cos(h),
        sinh = Math.sin(h);
    return new Rgb(
      255 * (l + a * (A * cosh + B * sinh)),
      255 * (l + a * (C * cosh + D * sinh)),
      255 * (l + a * (E * cosh)),
      this.opacity
    );
  }
}));

;// CONCATENATED MODULE: ./node_modules/d3-color/src/index.js




;// CONCATENATED MODULE: ./node_modules/d3-contour/src/array.js
var src_array_array = Array.prototype;

var src_array_slice = src_array_array.slice;

;// CONCATENATED MODULE: ./node_modules/d3-contour/src/ascending.js
/* harmony default export */ function src_ascending(a, b) {
  return a - b;
}

;// CONCATENATED MODULE: ./node_modules/d3-contour/src/area.js
/* harmony default export */ function src_area(ring) {
  var i = 0, n = ring.length, area = ring[n - 1][1] * ring[0][0] - ring[n - 1][0] * ring[0][1];
  while (++i < n) area += ring[i - 1][1] * ring[i][0] - ring[i - 1][0] * ring[i][1];
  return area;
}

;// CONCATENATED MODULE: ./node_modules/d3-contour/src/constant.js
/* harmony default export */ const d3_contour_src_constant = (x => () => x);

;// CONCATENATED MODULE: ./node_modules/d3-contour/src/contains.js
/* harmony default export */ function contains(ring, hole) {
  var i = -1, n = hole.length, c;
  while (++i < n) if (c = ringContains(ring, hole[i])) return c;
  return 0;
}

function ringContains(ring, point) {
  var x = point[0], y = point[1], contains = -1;
  for (var i = 0, n = ring.length, j = n - 1; i < n; j = i++) {
    var pi = ring[i], xi = pi[0], yi = pi[1], pj = ring[j], xj = pj[0], yj = pj[1];
    if (segmentContains(pi, pj, point)) return 0;
    if (((yi > y) !== (yj > y)) && ((x < (xj - xi) * (y - yi) / (yj - yi) + xi))) contains = -contains;
  }
  return contains;
}

function segmentContains(a, b, c) {
  var i; return collinear(a, b, c) && within(a[i = +(a[0] === b[0])], c[i], b[i]);
}

function collinear(a, b, c) {
  return (b[0] - a[0]) * (c[1] - a[1]) === (c[0] - a[0]) * (b[1] - a[1]);
}

function within(p, q, r) {
  return p <= q && q <= r || r <= q && q <= p;
}

;// CONCATENATED MODULE: ./node_modules/d3-contour/src/noop.js
/* harmony default export */ function src_noop() {}

;// CONCATENATED MODULE: ./node_modules/d3-contour/src/contours.js








var cases = [
  [],
  [[[1.0, 1.5], [0.5, 1.0]]],
  [[[1.5, 1.0], [1.0, 1.5]]],
  [[[1.5, 1.0], [0.5, 1.0]]],
  [[[1.0, 0.5], [1.5, 1.0]]],
  [[[1.0, 1.5], [0.5, 1.0]], [[1.0, 0.5], [1.5, 1.0]]],
  [[[1.0, 0.5], [1.0, 1.5]]],
  [[[1.0, 0.5], [0.5, 1.0]]],
  [[[0.5, 1.0], [1.0, 0.5]]],
  [[[1.0, 1.5], [1.0, 0.5]]],
  [[[0.5, 1.0], [1.0, 0.5]], [[1.5, 1.0], [1.0, 1.5]]],
  [[[1.5, 1.0], [1.0, 0.5]]],
  [[[0.5, 1.0], [1.5, 1.0]]],
  [[[1.0, 1.5], [1.5, 1.0]]],
  [[[0.5, 1.0], [1.0, 1.5]]],
  []
];

/* harmony default export */ function contours() {
  var dx = 1,
      dy = 1,
      threshold = thresholdSturges,
      smooth = smoothLinear;

  function contours(values) {
    var tz = threshold(values);

    // Convert number of thresholds into uniform thresholds.
    if (!Array.isArray(tz)) {
      const e = extent(values), ts = tickStep(e[0], e[1], tz);
      tz = ticks(Math.floor(e[0] / ts) * ts, Math.floor(e[1] / ts - 1) * ts, tz);
    } else {
      tz = tz.slice().sort(src_ascending);
    }

    return tz.map(value => contour(values, value));
  }

  // Accumulate, smooth contour rings, assign holes to exterior rings.
  // Based on https://github.com/mbostock/shapefile/blob/v0.6.2/shp/polygon.js
  function contour(values, value) {
    var polygons = [],
        holes = [];

    isorings(values, value, function(ring) {
      smooth(ring, values, value);
      if (src_area(ring) > 0) polygons.push([ring]);
      else holes.push(ring);
    });

    holes.forEach(function(hole) {
      for (var i = 0, n = polygons.length, polygon; i < n; ++i) {
        if (contains((polygon = polygons[i])[0], hole) !== -1) {
          polygon.push(hole);
          return;
        }
      }
    });

    return {
      type: "MultiPolygon",
      value: value,
      coordinates: polygons
    };
  }

  // Marching squares with isolines stitched into rings.
  // Based on https://github.com/topojson/topojson-client/blob/v3.0.0/src/stitch.js
  function isorings(values, value, callback) {
    var fragmentByStart = new Array,
        fragmentByEnd = new Array,
        x, y, t0, t1, t2, t3;

    // Special case for the first row (y = -1, t2 = t3 = 0).
    x = y = -1;
    t1 = values[0] >= value;
    cases[t1 << 1].forEach(stitch);
    while (++x < dx - 1) {
      t0 = t1, t1 = values[x + 1] >= value;
      cases[t0 | t1 << 1].forEach(stitch);
    }
    cases[t1 << 0].forEach(stitch);

    // General case for the intermediate rows.
    while (++y < dy - 1) {
      x = -1;
      t1 = values[y * dx + dx] >= value;
      t2 = values[y * dx] >= value;
      cases[t1 << 1 | t2 << 2].forEach(stitch);
      while (++x < dx - 1) {
        t0 = t1, t1 = values[y * dx + dx + x + 1] >= value;
        t3 = t2, t2 = values[y * dx + x + 1] >= value;
        cases[t0 | t1 << 1 | t2 << 2 | t3 << 3].forEach(stitch);
      }
      cases[t1 | t2 << 3].forEach(stitch);
    }

    // Special case for the last row (y = dy - 1, t0 = t1 = 0).
    x = -1;
    t2 = values[y * dx] >= value;
    cases[t2 << 2].forEach(stitch);
    while (++x < dx - 1) {
      t3 = t2, t2 = values[y * dx + x + 1] >= value;
      cases[t2 << 2 | t3 << 3].forEach(stitch);
    }
    cases[t2 << 3].forEach(stitch);

    function stitch(line) {
      var start = [line[0][0] + x, line[0][1] + y],
          end = [line[1][0] + x, line[1][1] + y],
          startIndex = index(start),
          endIndex = index(end),
          f, g;
      if (f = fragmentByEnd[startIndex]) {
        if (g = fragmentByStart[endIndex]) {
          delete fragmentByEnd[f.end];
          delete fragmentByStart[g.start];
          if (f === g) {
            f.ring.push(end);
            callback(f.ring);
          } else {
            fragmentByStart[f.start] = fragmentByEnd[g.end] = {start: f.start, end: g.end, ring: f.ring.concat(g.ring)};
          }
        } else {
          delete fragmentByEnd[f.end];
          f.ring.push(end);
          fragmentByEnd[f.end = endIndex] = f;
        }
      } else if (f = fragmentByStart[endIndex]) {
        if (g = fragmentByEnd[startIndex]) {
          delete fragmentByStart[f.start];
          delete fragmentByEnd[g.end];
          if (f === g) {
            f.ring.push(end);
            callback(f.ring);
          } else {
            fragmentByStart[g.start] = fragmentByEnd[f.end] = {start: g.start, end: f.end, ring: g.ring.concat(f.ring)};
          }
        } else {
          delete fragmentByStart[f.start];
          f.ring.unshift(start);
          fragmentByStart[f.start = startIndex] = f;
        }
      } else {
        fragmentByStart[startIndex] = fragmentByEnd[endIndex] = {start: startIndex, end: endIndex, ring: [start, end]};
      }
    }
  }

  function index(point) {
    return point[0] * 2 + point[1] * (dx + 1) * 4;
  }

  function smoothLinear(ring, values, value) {
    ring.forEach(function(point) {
      var x = point[0],
          y = point[1],
          xt = x | 0,
          yt = y | 0,
          v0,
          v1 = values[yt * dx + xt];
      if (x > 0 && x < dx && xt === x) {
        v0 = values[yt * dx + xt - 1];
        point[0] = x + (value - v0) / (v1 - v0) - 0.5;
      }
      if (y > 0 && y < dy && yt === y) {
        v0 = values[(yt - 1) * dx + xt];
        point[1] = y + (value - v0) / (v1 - v0) - 0.5;
      }
    });
  }

  contours.contour = contour;

  contours.size = function(_) {
    if (!arguments.length) return [dx, dy];
    var _0 = Math.floor(_[0]), _1 = Math.floor(_[1]);
    if (!(_0 >= 0 && _1 >= 0)) throw new Error("invalid size");
    return dx = _0, dy = _1, contours;
  };

  contours.thresholds = function(_) {
    return arguments.length ? (threshold = typeof _ === "function" ? _ : Array.isArray(_) ? d3_contour_src_constant(src_array_slice.call(_)) : d3_contour_src_constant(_), contours) : threshold;
  };

  contours.smooth = function(_) {
    return arguments.length ? (smooth = _ ? smoothLinear : src_noop, contours) : smooth === smoothLinear;
  };

  return contours;
}

;// CONCATENATED MODULE: ./node_modules/d3-contour/src/blur.js
// TODO Optimize edge cases.
// TODO Optimize index calculation.
// TODO Optimize arguments.
function blurX(source, target, r) {
  var n = source.width,
      m = source.height,
      w = (r << 1) + 1;
  for (var j = 0; j < m; ++j) {
    for (var i = 0, sr = 0; i < n + r; ++i) {
      if (i < n) {
        sr += source.data[i + j * n];
      }
      if (i >= r) {
        if (i >= w) {
          sr -= source.data[i - w + j * n];
        }
        target.data[i - r + j * n] = sr / Math.min(i + 1, n - 1 + w - i, w);
      }
    }
  }
}

// TODO Optimize edge cases.
// TODO Optimize index calculation.
// TODO Optimize arguments.
function blurY(source, target, r) {
  var n = source.width,
      m = source.height,
      w = (r << 1) + 1;
  for (var i = 0; i < n; ++i) {
    for (var j = 0, sr = 0; j < m + r; ++j) {
      if (j < m) {
        sr += source.data[i + j * n];
      }
      if (j >= r) {
        if (j >= w) {
          sr -= source.data[i + (j - w) * n];
        }
        target.data[i + (j - r) * n] = sr / Math.min(j + 1, m - 1 + w - j, w);
      }
    }
  }
}

;// CONCATENATED MODULE: ./node_modules/d3-contour/src/density.js






function defaultX(d) {
  return d[0];
}

function defaultY(d) {
  return d[1];
}

function defaultWeight() {
  return 1;
}

/* harmony default export */ function density() {
  var x = defaultX,
      y = defaultY,
      weight = defaultWeight,
      dx = 960,
      dy = 500,
      r = 20, // blur radius
      k = 2, // log2(grid cell size)
      o = r * 3, // grid offset, to pad for blur
      n = (dx + o * 2) >> k, // grid width
      m = (dy + o * 2) >> k, // grid height
      threshold = d3_contour_src_constant(20);

  function density(data) {
    var values0 = new Float32Array(n * m),
        values1 = new Float32Array(n * m),
        pow2k = Math.pow(2, -k);

    data.forEach(function(d, i, data) {
      var xi = (x(d, i, data) + o) * pow2k,
          yi = (y(d, i, data) + o) * pow2k,
          wi = +weight(d, i, data);
      if (xi >= 0 && xi < n && yi >= 0 && yi < m) {
        var x0 = Math.floor(xi),
            y0 = Math.floor(yi),
            xt = xi - x0 - 0.5,
            yt = yi - y0 - 0.5;
        values0[x0 + y0 * n] += (1 - xt) * (1 - yt) * wi;
        values0[x0 + 1 + y0 * n] += xt * (1 - yt) * wi;
        values0[x0 + 1 + (y0 + 1) * n] += xt * yt * wi;
        values0[x0 + (y0 + 1) * n] += (1 - xt) * yt * wi;
      }
    });

    // TODO Optimize.
    blurX({width: n, height: m, data: values0}, {width: n, height: m, data: values1}, r >> k);
    blurY({width: n, height: m, data: values1}, {width: n, height: m, data: values0}, r >> k);
    blurX({width: n, height: m, data: values0}, {width: n, height: m, data: values1}, r >> k);
    blurY({width: n, height: m, data: values1}, {width: n, height: m, data: values0}, r >> k);
    blurX({width: n, height: m, data: values0}, {width: n, height: m, data: values1}, r >> k);
    blurY({width: n, height: m, data: values1}, {width: n, height: m, data: values0}, r >> k);

    var tz = threshold(values0);

    // Convert number of thresholds into uniform thresholds.
    if (!Array.isArray(tz)) {
      var stop = max(values0);
      tz = tickStep(0, stop, tz);
      tz = range(0, Math.floor(stop / tz) * tz, tz);
      tz.shift();
    }

    return contours()
        .thresholds(tz)
        .size([n, m])
      (values0)
        .map(transform);
  }

  function transform(geometry) {
    geometry.value *= Math.pow(2, -2 * k); // Density in points per square pixel.
    geometry.coordinates.forEach(transformPolygon);
    return geometry;
  }

  function transformPolygon(coordinates) {
    coordinates.forEach(transformRing);
  }

  function transformRing(coordinates) {
    coordinates.forEach(transformPoint);
  }

  // TODO Optimize.
  function transformPoint(coordinates) {
    coordinates[0] = coordinates[0] * Math.pow(2, k) - o;
    coordinates[1] = coordinates[1] * Math.pow(2, k) - o;
  }

  function resize() {
    o = r * 3;
    n = (dx + o * 2) >> k;
    m = (dy + o * 2) >> k;
    return density;
  }

  density.x = function(_) {
    return arguments.length ? (x = typeof _ === "function" ? _ : d3_contour_src_constant(+_), density) : x;
  };

  density.y = function(_) {
    return arguments.length ? (y = typeof _ === "function" ? _ : d3_contour_src_constant(+_), density) : y;
  };

  density.weight = function(_) {
    return arguments.length ? (weight = typeof _ === "function" ? _ : d3_contour_src_constant(+_), density) : weight;
  };

  density.size = function(_) {
    if (!arguments.length) return [dx, dy];
    var _0 = +_[0], _1 = +_[1];
    if (!(_0 >= 0 && _1 >= 0)) throw new Error("invalid size");
    return dx = _0, dy = _1, resize();
  };

  density.cellSize = function(_) {
    if (!arguments.length) return 1 << k;
    if (!((_ = +_) >= 1)) throw new Error("invalid cell size");
    return k = Math.floor(Math.log(_) / Math.LN2), resize();
  };

  density.thresholds = function(_) {
    return arguments.length ? (threshold = typeof _ === "function" ? _ : Array.isArray(_) ? d3_contour_src_constant(src_array_slice.call(_)) : d3_contour_src_constant(_), density) : threshold;
  };

  density.bandwidth = function(_) {
    if (!arguments.length) return Math.sqrt(r * (r + 1));
    if (!((_ = +_) >= 0)) throw new Error("invalid bandwidth");
    return r = Math.round((Math.sqrt(4 * _ * _ + 1) - 1) / 2), resize();
  };

  return density;
}

;// CONCATENATED MODULE: ./node_modules/d3-contour/src/index.js



;// CONCATENATED MODULE: ./node_modules/robust-predicates/esm/util.js
const util_epsilon = 1.1102230246251565e-16;
const util_splitter = 134217729;
const util_resulterrbound = (3 + 8 * util_epsilon) * util_epsilon;

// fast_expansion_sum_zeroelim routine from oritinal code
function util_sum(elen, e, flen, f, h) {
    let Q, Qnew, hh, bvirt;
    let enow = e[0];
    let fnow = f[0];
    let eindex = 0;
    let findex = 0;
    if ((fnow > enow) === (fnow > -enow)) {
        Q = enow;
        enow = e[++eindex];
    } else {
        Q = fnow;
        fnow = f[++findex];
    }
    let hindex = 0;
    if (eindex < elen && findex < flen) {
        if ((fnow > enow) === (fnow > -enow)) {
            Qnew = enow + Q;
            hh = Q - (Qnew - enow);
            enow = e[++eindex];
        } else {
            Qnew = fnow + Q;
            hh = Q - (Qnew - fnow);
            fnow = f[++findex];
        }
        Q = Qnew;
        if (hh !== 0) {
            h[hindex++] = hh;
        }
        while (eindex < elen && findex < flen) {
            if ((fnow > enow) === (fnow > -enow)) {
                Qnew = Q + enow;
                bvirt = Qnew - Q;
                hh = Q - (Qnew - bvirt) + (enow - bvirt);
                enow = e[++eindex];
            } else {
                Qnew = Q + fnow;
                bvirt = Qnew - Q;
                hh = Q - (Qnew - bvirt) + (fnow - bvirt);
                fnow = f[++findex];
            }
            Q = Qnew;
            if (hh !== 0) {
                h[hindex++] = hh;
            }
        }
    }
    while (eindex < elen) {
        Qnew = Q + enow;
        bvirt = Qnew - Q;
        hh = Q - (Qnew - bvirt) + (enow - bvirt);
        enow = e[++eindex];
        Q = Qnew;
        if (hh !== 0) {
            h[hindex++] = hh;
        }
    }
    while (findex < flen) {
        Qnew = Q + fnow;
        bvirt = Qnew - Q;
        hh = Q - (Qnew - bvirt) + (fnow - bvirt);
        fnow = f[++findex];
        Q = Qnew;
        if (hh !== 0) {
            h[hindex++] = hh;
        }
    }
    if (Q !== 0 || hindex === 0) {
        h[hindex++] = Q;
    }
    return hindex;
}

function util_sum_three(alen, a, blen, b, clen, c, tmp, out) {
    return util_sum(util_sum(alen, a, blen, b, tmp), tmp, clen, c, out);
}

// scale_expansion_zeroelim routine from oritinal code
function util_scale(elen, e, b, h) {
    let Q, sum, hh, product1, product0;
    let bvirt, c, ahi, alo, bhi, blo;

    c = util_splitter * b;
    bhi = c - (c - b);
    blo = b - bhi;
    let enow = e[0];
    Q = enow * b;
    c = util_splitter * enow;
    ahi = c - (c - enow);
    alo = enow - ahi;
    hh = alo * blo - (Q - ahi * bhi - alo * bhi - ahi * blo);
    let hindex = 0;
    if (hh !== 0) {
        h[hindex++] = hh;
    }
    for (let i = 1; i < elen; i++) {
        enow = e[i];
        product1 = enow * b;
        c = util_splitter * enow;
        ahi = c - (c - enow);
        alo = enow - ahi;
        product0 = alo * blo - (product1 - ahi * bhi - alo * bhi - ahi * blo);
        sum = Q + product0;
        bvirt = sum - Q;
        hh = Q - (sum - bvirt) + (product0 - bvirt);
        if (hh !== 0) {
            h[hindex++] = hh;
        }
        Q = product1 + sum;
        hh = sum - (Q - product1);
        if (hh !== 0) {
            h[hindex++] = hh;
        }
    }
    if (Q !== 0 || hindex === 0) {
        h[hindex++] = Q;
    }
    return hindex;
}

function util_negate(elen, e) {
    for (let i = 0; i < elen; i++) e[i] = -e[i];
    return elen;
}

function util_estimate(elen, e) {
    let Q = e[0];
    for (let i = 1; i < elen; i++) Q += e[i];
    return Q;
}

function vec(n) {
    return new Float64Array(n);
}

;// CONCATENATED MODULE: ./node_modules/robust-predicates/esm/orient2d.js


const ccwerrboundA = (3 + 16 * util_epsilon) * util_epsilon;
const ccwerrboundB = (2 + 12 * util_epsilon) * util_epsilon;
const ccwerrboundC = (9 + 64 * util_epsilon) * util_epsilon * util_epsilon;

const orient2d_B = vec(4);
const C1 = vec(8);
const C2 = vec(12);
const orient2d_D = vec(16);
const u = vec(4);

function orient2dadapt(ax, ay, bx, by, cx, cy, detsum) {
    let acxtail, acytail, bcxtail, bcytail;
    let bvirt, c, ahi, alo, bhi, blo, _i, _j, _0, s1, s0, t1, t0, u3;

    const acx = ax - cx;
    const bcx = bx - cx;
    const acy = ay - cy;
    const bcy = by - cy;

    s1 = acx * bcy;
    c = util_splitter * acx;
    ahi = c - (c - acx);
    alo = acx - ahi;
    c = util_splitter * bcy;
    bhi = c - (c - bcy);
    blo = bcy - bhi;
    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);
    t1 = acy * bcx;
    c = util_splitter * acy;
    ahi = c - (c - acy);
    alo = acy - ahi;
    c = util_splitter * bcx;
    bhi = c - (c - bcx);
    blo = bcx - bhi;
    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);
    _i = s0 - t0;
    bvirt = s0 - _i;
    orient2d_B[0] = s0 - (_i + bvirt) + (bvirt - t0);
    _j = s1 + _i;
    bvirt = _j - s1;
    _0 = s1 - (_j - bvirt) + (_i - bvirt);
    _i = _0 - t1;
    bvirt = _0 - _i;
    orient2d_B[1] = _0 - (_i + bvirt) + (bvirt - t1);
    u3 = _j + _i;
    bvirt = u3 - _j;
    orient2d_B[2] = _j - (u3 - bvirt) + (_i - bvirt);
    orient2d_B[3] = u3;

    let det = util_estimate(4, orient2d_B);
    let errbound = ccwerrboundB * detsum;
    if (det >= errbound || -det >= errbound) {
        return det;
    }

    bvirt = ax - acx;
    acxtail = ax - (acx + bvirt) + (bvirt - cx);
    bvirt = bx - bcx;
    bcxtail = bx - (bcx + bvirt) + (bvirt - cx);
    bvirt = ay - acy;
    acytail = ay - (acy + bvirt) + (bvirt - cy);
    bvirt = by - bcy;
    bcytail = by - (bcy + bvirt) + (bvirt - cy);

    if (acxtail === 0 && acytail === 0 && bcxtail === 0 && bcytail === 0) {
        return det;
    }

    errbound = ccwerrboundC * detsum + util_resulterrbound * Math.abs(det);
    det += (acx * bcytail + bcy * acxtail) - (acy * bcxtail + bcx * acytail);
    if (det >= errbound || -det >= errbound) return det;

    s1 = acxtail * bcy;
    c = util_splitter * acxtail;
    ahi = c - (c - acxtail);
    alo = acxtail - ahi;
    c = util_splitter * bcy;
    bhi = c - (c - bcy);
    blo = bcy - bhi;
    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);
    t1 = acytail * bcx;
    c = util_splitter * acytail;
    ahi = c - (c - acytail);
    alo = acytail - ahi;
    c = util_splitter * bcx;
    bhi = c - (c - bcx);
    blo = bcx - bhi;
    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);
    _i = s0 - t0;
    bvirt = s0 - _i;
    u[0] = s0 - (_i + bvirt) + (bvirt - t0);
    _j = s1 + _i;
    bvirt = _j - s1;
    _0 = s1 - (_j - bvirt) + (_i - bvirt);
    _i = _0 - t1;
    bvirt = _0 - _i;
    u[1] = _0 - (_i + bvirt) + (bvirt - t1);
    u3 = _j + _i;
    bvirt = u3 - _j;
    u[2] = _j - (u3 - bvirt) + (_i - bvirt);
    u[3] = u3;
    const C1len = util_sum(4, orient2d_B, 4, u, C1);

    s1 = acx * bcytail;
    c = util_splitter * acx;
    ahi = c - (c - acx);
    alo = acx - ahi;
    c = util_splitter * bcytail;
    bhi = c - (c - bcytail);
    blo = bcytail - bhi;
    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);
    t1 = acy * bcxtail;
    c = util_splitter * acy;
    ahi = c - (c - acy);
    alo = acy - ahi;
    c = util_splitter * bcxtail;
    bhi = c - (c - bcxtail);
    blo = bcxtail - bhi;
    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);
    _i = s0 - t0;
    bvirt = s0 - _i;
    u[0] = s0 - (_i + bvirt) + (bvirt - t0);
    _j = s1 + _i;
    bvirt = _j - s1;
    _0 = s1 - (_j - bvirt) + (_i - bvirt);
    _i = _0 - t1;
    bvirt = _0 - _i;
    u[1] = _0 - (_i + bvirt) + (bvirt - t1);
    u3 = _j + _i;
    bvirt = u3 - _j;
    u[2] = _j - (u3 - bvirt) + (_i - bvirt);
    u[3] = u3;
    const C2len = util_sum(C1len, C1, 4, u, C2);

    s1 = acxtail * bcytail;
    c = util_splitter * acxtail;
    ahi = c - (c - acxtail);
    alo = acxtail - ahi;
    c = util_splitter * bcytail;
    bhi = c - (c - bcytail);
    blo = bcytail - bhi;
    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);
    t1 = acytail * bcxtail;
    c = util_splitter * acytail;
    ahi = c - (c - acytail);
    alo = acytail - ahi;
    c = util_splitter * bcxtail;
    bhi = c - (c - bcxtail);
    blo = bcxtail - bhi;
    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);
    _i = s0 - t0;
    bvirt = s0 - _i;
    u[0] = s0 - (_i + bvirt) + (bvirt - t0);
    _j = s1 + _i;
    bvirt = _j - s1;
    _0 = s1 - (_j - bvirt) + (_i - bvirt);
    _i = _0 - t1;
    bvirt = _0 - _i;
    u[1] = _0 - (_i + bvirt) + (bvirt - t1);
    u3 = _j + _i;
    bvirt = u3 - _j;
    u[2] = _j - (u3 - bvirt) + (_i - bvirt);
    u[3] = u3;
    const Dlen = util_sum(C2len, C2, 4, u, orient2d_D);

    return orient2d_D[Dlen - 1];
}

function orient2d(ax, ay, bx, by, cx, cy) {
    const detleft = (ay - cy) * (bx - cx);
    const detright = (ax - cx) * (by - cy);
    const det = detleft - detright;

    if (detleft === 0 || detright === 0 || (detleft > 0) !== (detright > 0)) return det;

    const detsum = Math.abs(detleft + detright);
    if (Math.abs(det) >= ccwerrboundA * detsum) return det;

    return -orient2dadapt(ax, ay, bx, by, cx, cy, detsum);
}

function orient2dfast(ax, ay, bx, by, cx, cy) {
    return (ay - cy) * (bx - cx) - (ax - cx) * (by - cy);
}

;// CONCATENATED MODULE: ./node_modules/robust-predicates/esm/orient3d.js


const o3derrboundA = (7 + 56 * util_epsilon) * util_epsilon;
const o3derrboundB = (3 + 28 * util_epsilon) * util_epsilon;
const o3derrboundC = (26 + 288 * util_epsilon) * util_epsilon * util_epsilon;

const bc = vec(4);
const ca = vec(4);
const ab = vec(4);
const at_b = vec(4);
const at_c = vec(4);
const bt_c = vec(4);
const bt_a = vec(4);
const ct_a = vec(4);
const ct_b = vec(4);
const bct = vec(8);
const cat = vec(8);
const abt = vec(8);
const orient3d_u = vec(4);

const _8 = vec(8);
const _8b = vec(8);
const _16 = vec(8);
const _12 = vec(12);

let fin = vec(192);
let fin2 = vec(192);

function finadd(finlen, alen, a) {
    finlen = sum(finlen, fin, alen, a, fin2);
    const tmp = fin; fin = fin2; fin2 = tmp;
    return finlen;
}

function tailinit(xtail, ytail, ax, ay, bx, by, a, b) {
    let bvirt, c, ahi, alo, bhi, blo, _i, _j, _k, _0, s1, s0, t1, t0, u3, negate;
    if (xtail === 0) {
        if (ytail === 0) {
            a[0] = 0;
            b[0] = 0;
            return 1;
        } else {
            negate = -ytail;
            s1 = negate * ax;
            c = splitter * negate;
            ahi = c - (c - negate);
            alo = negate - ahi;
            c = splitter * ax;
            bhi = c - (c - ax);
            blo = ax - bhi;
            a[0] = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);
            a[1] = s1;
            s1 = ytail * bx;
            c = splitter * ytail;
            ahi = c - (c - ytail);
            alo = ytail - ahi;
            c = splitter * bx;
            bhi = c - (c - bx);
            blo = bx - bhi;
            b[0] = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);
            b[1] = s1;
            return 2;
        }
    } else {
        if (ytail === 0) {
            s1 = xtail * ay;
            c = splitter * xtail;
            ahi = c - (c - xtail);
            alo = xtail - ahi;
            c = splitter * ay;
            bhi = c - (c - ay);
            blo = ay - bhi;
            a[0] = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);
            a[1] = s1;
            negate = -xtail;
            s1 = negate * by;
            c = splitter * negate;
            ahi = c - (c - negate);
            alo = negate - ahi;
            c = splitter * by;
            bhi = c - (c - by);
            blo = by - bhi;
            b[0] = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);
            b[1] = s1;
            return 2;
        } else {
            s1 = xtail * ay;
            c = splitter * xtail;
            ahi = c - (c - xtail);
            alo = xtail - ahi;
            c = splitter * ay;
            bhi = c - (c - ay);
            blo = ay - bhi;
            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);
            t1 = ytail * ax;
            c = splitter * ytail;
            ahi = c - (c - ytail);
            alo = ytail - ahi;
            c = splitter * ax;
            bhi = c - (c - ax);
            blo = ax - bhi;
            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);
            _i = s0 - t0;
            bvirt = s0 - _i;
            a[0] = s0 - (_i + bvirt) + (bvirt - t0);
            _j = s1 + _i;
            bvirt = _j - s1;
            _0 = s1 - (_j - bvirt) + (_i - bvirt);
            _i = _0 - t1;
            bvirt = _0 - _i;
            a[1] = _0 - (_i + bvirt) + (bvirt - t1);
            u3 = _j + _i;
            bvirt = u3 - _j;
            a[2] = _j - (u3 - bvirt) + (_i - bvirt);
            a[3] = u3;
            s1 = ytail * bx;
            c = splitter * ytail;
            ahi = c - (c - ytail);
            alo = ytail - ahi;
            c = splitter * bx;
            bhi = c - (c - bx);
            blo = bx - bhi;
            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);
            t1 = xtail * by;
            c = splitter * xtail;
            ahi = c - (c - xtail);
            alo = xtail - ahi;
            c = splitter * by;
            bhi = c - (c - by);
            blo = by - bhi;
            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);
            _i = s0 - t0;
            bvirt = s0 - _i;
            b[0] = s0 - (_i + bvirt) + (bvirt - t0);
            _j = s1 + _i;
            bvirt = _j - s1;
            _0 = s1 - (_j - bvirt) + (_i - bvirt);
            _i = _0 - t1;
            bvirt = _0 - _i;
            b[1] = _0 - (_i + bvirt) + (bvirt - t1);
            u3 = _j + _i;
            bvirt = u3 - _j;
            b[2] = _j - (u3 - bvirt) + (_i - bvirt);
            b[3] = u3;
            return 4;
        }
    }
}

function tailadd(finlen, a, b, k, z) {
    let bvirt, c, ahi, alo, bhi, blo, _i, _j, _k, _0, s1, s0, u3;
    s1 = a * b;
    c = splitter * a;
    ahi = c - (c - a);
    alo = a - ahi;
    c = splitter * b;
    bhi = c - (c - b);
    blo = b - bhi;
    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);
    c = splitter * k;
    bhi = c - (c - k);
    blo = k - bhi;
    _i = s0 * k;
    c = splitter * s0;
    ahi = c - (c - s0);
    alo = s0 - ahi;
    orient3d_u[0] = alo * blo - (_i - ahi * bhi - alo * bhi - ahi * blo);
    _j = s1 * k;
    c = splitter * s1;
    ahi = c - (c - s1);
    alo = s1 - ahi;
    _0 = alo * blo - (_j - ahi * bhi - alo * bhi - ahi * blo);
    _k = _i + _0;
    bvirt = _k - _i;
    orient3d_u[1] = _i - (_k - bvirt) + (_0 - bvirt);
    u3 = _j + _k;
    orient3d_u[2] = _k - (u3 - _j);
    orient3d_u[3] = u3;
    finlen = finadd(finlen, 4, orient3d_u);
    if (z !== 0) {
        c = splitter * z;
        bhi = c - (c - z);
        blo = z - bhi;
        _i = s0 * z;
        c = splitter * s0;
        ahi = c - (c - s0);
        alo = s0 - ahi;
        orient3d_u[0] = alo * blo - (_i - ahi * bhi - alo * bhi - ahi * blo);
        _j = s1 * z;
        c = splitter * s1;
        ahi = c - (c - s1);
        alo = s1 - ahi;
        _0 = alo * blo - (_j - ahi * bhi - alo * bhi - ahi * blo);
        _k = _i + _0;
        bvirt = _k - _i;
        orient3d_u[1] = _i - (_k - bvirt) + (_0 - bvirt);
        u3 = _j + _k;
        orient3d_u[2] = _k - (u3 - _j);
        orient3d_u[3] = u3;
        finlen = finadd(finlen, 4, orient3d_u);
    }
    return finlen;
}

function orient3dadapt(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, permanent) {
    let finlen;
    let adxtail, bdxtail, cdxtail;
    let adytail, bdytail, cdytail;
    let adztail, bdztail, cdztail;
    let bvirt, c, ahi, alo, bhi, blo, _i, _j, _k, _0, s1, s0, t1, t0, u3;

    const adx = ax - dx;
    const bdx = bx - dx;
    const cdx = cx - dx;
    const ady = ay - dy;
    const bdy = by - dy;
    const cdy = cy - dy;
    const adz = az - dz;
    const bdz = bz - dz;
    const cdz = cz - dz;

    s1 = bdx * cdy;
    c = splitter * bdx;
    ahi = c - (c - bdx);
    alo = bdx - ahi;
    c = splitter * cdy;
    bhi = c - (c - cdy);
    blo = cdy - bhi;
    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);
    t1 = cdx * bdy;
    c = splitter * cdx;
    ahi = c - (c - cdx);
    alo = cdx - ahi;
    c = splitter * bdy;
    bhi = c - (c - bdy);
    blo = bdy - bhi;
    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);
    _i = s0 - t0;
    bvirt = s0 - _i;
    bc[0] = s0 - (_i + bvirt) + (bvirt - t0);
    _j = s1 + _i;
    bvirt = _j - s1;
    _0 = s1 - (_j - bvirt) + (_i - bvirt);
    _i = _0 - t1;
    bvirt = _0 - _i;
    bc[1] = _0 - (_i + bvirt) + (bvirt - t1);
    u3 = _j + _i;
    bvirt = u3 - _j;
    bc[2] = _j - (u3 - bvirt) + (_i - bvirt);
    bc[3] = u3;
    s1 = cdx * ady;
    c = splitter * cdx;
    ahi = c - (c - cdx);
    alo = cdx - ahi;
    c = splitter * ady;
    bhi = c - (c - ady);
    blo = ady - bhi;
    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);
    t1 = adx * cdy;
    c = splitter * adx;
    ahi = c - (c - adx);
    alo = adx - ahi;
    c = splitter * cdy;
    bhi = c - (c - cdy);
    blo = cdy - bhi;
    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);
    _i = s0 - t0;
    bvirt = s0 - _i;
    ca[0] = s0 - (_i + bvirt) + (bvirt - t0);
    _j = s1 + _i;
    bvirt = _j - s1;
    _0 = s1 - (_j - bvirt) + (_i - bvirt);
    _i = _0 - t1;
    bvirt = _0 - _i;
    ca[1] = _0 - (_i + bvirt) + (bvirt - t1);
    u3 = _j + _i;
    bvirt = u3 - _j;
    ca[2] = _j - (u3 - bvirt) + (_i - bvirt);
    ca[3] = u3;
    s1 = adx * bdy;
    c = splitter * adx;
    ahi = c - (c - adx);
    alo = adx - ahi;
    c = splitter * bdy;
    bhi = c - (c - bdy);
    blo = bdy - bhi;
    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);
    t1 = bdx * ady;
    c = splitter * bdx;
    ahi = c - (c - bdx);
    alo = bdx - ahi;
    c = splitter * ady;
    bhi = c - (c - ady);
    blo = ady - bhi;
    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);
    _i = s0 - t0;
    bvirt = s0 - _i;
    ab[0] = s0 - (_i + bvirt) + (bvirt - t0);
    _j = s1 + _i;
    bvirt = _j - s1;
    _0 = s1 - (_j - bvirt) + (_i - bvirt);
    _i = _0 - t1;
    bvirt = _0 - _i;
    ab[1] = _0 - (_i + bvirt) + (bvirt - t1);
    u3 = _j + _i;
    bvirt = u3 - _j;
    ab[2] = _j - (u3 - bvirt) + (_i - bvirt);
    ab[3] = u3;

    finlen = sum(
        sum(
            scale(4, bc, adz, _8), _8,
            scale(4, ca, bdz, _8b), _8b, _16), _16,
        scale(4, ab, cdz, _8), _8, fin);

    let det = estimate(finlen, fin);
    let errbound = o3derrboundB * permanent;
    if (det >= errbound || -det >= errbound) {
        return det;
    }

    bvirt = ax - adx;
    adxtail = ax - (adx + bvirt) + (bvirt - dx);
    bvirt = bx - bdx;
    bdxtail = bx - (bdx + bvirt) + (bvirt - dx);
    bvirt = cx - cdx;
    cdxtail = cx - (cdx + bvirt) + (bvirt - dx);
    bvirt = ay - ady;
    adytail = ay - (ady + bvirt) + (bvirt - dy);
    bvirt = by - bdy;
    bdytail = by - (bdy + bvirt) + (bvirt - dy);
    bvirt = cy - cdy;
    cdytail = cy - (cdy + bvirt) + (bvirt - dy);
    bvirt = az - adz;
    adztail = az - (adz + bvirt) + (bvirt - dz);
    bvirt = bz - bdz;
    bdztail = bz - (bdz + bvirt) + (bvirt - dz);
    bvirt = cz - cdz;
    cdztail = cz - (cdz + bvirt) + (bvirt - dz);

    if (adxtail === 0 && bdxtail === 0 && cdxtail === 0 &&
        adytail === 0 && bdytail === 0 && cdytail === 0 &&
        adztail === 0 && bdztail === 0 && cdztail === 0) {
        return det;
    }

    errbound = o3derrboundC * permanent + resulterrbound * Math.abs(det);
    det +=
        adz * (bdx * cdytail + cdy * bdxtail - (bdy * cdxtail + cdx * bdytail)) + adztail * (bdx * cdy - bdy * cdx) +
        bdz * (cdx * adytail + ady * cdxtail - (cdy * adxtail + adx * cdytail)) + bdztail * (cdx * ady - cdy * adx) +
        cdz * (adx * bdytail + bdy * adxtail - (ady * bdxtail + bdx * adytail)) + cdztail * (adx * bdy - ady * bdx);
    if (det >= errbound || -det >= errbound) {
        return det;
    }

    const at_len = tailinit(adxtail, adytail, bdx, bdy, cdx, cdy, at_b, at_c);
    const bt_len = tailinit(bdxtail, bdytail, cdx, cdy, adx, ady, bt_c, bt_a);
    const ct_len = tailinit(cdxtail, cdytail, adx, ady, bdx, bdy, ct_a, ct_b);

    const bctlen = sum(bt_len, bt_c, ct_len, ct_b, bct);
    finlen = finadd(finlen, scale(bctlen, bct, adz, _16), _16);

    const catlen = sum(ct_len, ct_a, at_len, at_c, cat);
    finlen = finadd(finlen, scale(catlen, cat, bdz, _16), _16);

    const abtlen = sum(at_len, at_b, bt_len, bt_a, abt);
    finlen = finadd(finlen, scale(abtlen, abt, cdz, _16), _16);

    if (adztail !== 0) {
        finlen = finadd(finlen, scale(4, bc, adztail, _12), _12);
        finlen = finadd(finlen, scale(bctlen, bct, adztail, _16), _16);
    }
    if (bdztail !== 0) {
        finlen = finadd(finlen, scale(4, ca, bdztail, _12), _12);
        finlen = finadd(finlen, scale(catlen, cat, bdztail, _16), _16);
    }
    if (cdztail !== 0) {
        finlen = finadd(finlen, scale(4, ab, cdztail, _12), _12);
        finlen = finadd(finlen, scale(abtlen, abt, cdztail, _16), _16);
    }

    if (adxtail !== 0) {
        if (bdytail !== 0) {
            finlen = tailadd(finlen, adxtail, bdytail, cdz, cdztail);
        }
        if (cdytail !== 0) {
            finlen = tailadd(finlen, -adxtail, cdytail, bdz, bdztail);
        }
    }
    if (bdxtail !== 0) {
        if (cdytail !== 0) {
            finlen = tailadd(finlen, bdxtail, cdytail, adz, adztail);
        }
        if (adytail !== 0) {
            finlen = tailadd(finlen, -bdxtail, adytail, cdz, cdztail);
        }
    }
    if (cdxtail !== 0) {
        if (adytail !== 0) {
            finlen = tailadd(finlen, cdxtail, adytail, bdz, bdztail);
        }
        if (bdytail !== 0) {
            finlen = tailadd(finlen, -cdxtail, bdytail, adz, adztail);
        }
    }

    return fin[finlen - 1];
}

function orient3d(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz) {
    const adx = ax - dx;
    const bdx = bx - dx;
    const cdx = cx - dx;
    const ady = ay - dy;
    const bdy = by - dy;
    const cdy = cy - dy;
    const adz = az - dz;
    const bdz = bz - dz;
    const cdz = cz - dz;

    const bdxcdy = bdx * cdy;
    const cdxbdy = cdx * bdy;

    const cdxady = cdx * ady;
    const adxcdy = adx * cdy;

    const adxbdy = adx * bdy;
    const bdxady = bdx * ady;

    const det =
        adz * (bdxcdy - cdxbdy) +
        bdz * (cdxady - adxcdy) +
        cdz * (adxbdy - bdxady);

    const permanent =
        (Math.abs(bdxcdy) + Math.abs(cdxbdy)) * Math.abs(adz) +
        (Math.abs(cdxady) + Math.abs(adxcdy)) * Math.abs(bdz) +
        (Math.abs(adxbdy) + Math.abs(bdxady)) * Math.abs(cdz);

    const errbound = o3derrboundA * permanent;
    if (det > errbound || -det > errbound) {
        return det;
    }

    return orient3dadapt(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, permanent);
}

function orient3dfast(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz) {
    const adx = ax - dx;
    const bdx = bx - dx;
    const cdx = cx - dx;
    const ady = ay - dy;
    const bdy = by - dy;
    const cdy = cy - dy;
    const adz = az - dz;
    const bdz = bz - dz;
    const cdz = cz - dz;

    return adx * (bdy * cdz - bdz * cdy) +
        bdx * (cdy * adz - cdz * ady) +
        cdx * (ady * bdz - adz * bdy);
}

;// CONCATENATED MODULE: ./node_modules/robust-predicates/esm/incircle.js


const iccerrboundA = (10 + 96 * util_epsilon) * util_epsilon;
const iccerrboundB = (4 + 48 * util_epsilon) * util_epsilon;
const iccerrboundC = (44 + 576 * util_epsilon) * util_epsilon * util_epsilon;

const incircle_bc = vec(4);
const incircle_ca = vec(4);
const incircle_ab = vec(4);
const aa = vec(4);
const bb = vec(4);
const cc = vec(4);
const incircle_u = vec(4);
const v = vec(4);
const axtbc = vec(8);
const aytbc = vec(8);
const bxtca = vec(8);
const bytca = vec(8);
const cxtab = vec(8);
const cytab = vec(8);
const incircle_abt = vec(8);
const incircle_bct = vec(8);
const incircle_cat = vec(8);
const abtt = vec(4);
const bctt = vec(4);
const catt = vec(4);

const incircle_8 = vec(8);
const incircle_16 = vec(16);
const _16b = vec(16);
const _16c = vec(16);
const _32 = vec(32);
const _32b = vec(32);
const _48 = vec(48);
const _64 = vec(64);

let incircle_fin = vec(1152);
let incircle_fin2 = vec(1152);

function incircle_finadd(finlen, a, alen) {
    finlen = sum(finlen, incircle_fin, a, alen, incircle_fin2);
    const tmp = incircle_fin; incircle_fin = incircle_fin2; incircle_fin2 = tmp;
    return finlen;
}

function incircleadapt(ax, ay, bx, by, cx, cy, dx, dy, permanent) {
    let finlen;
    let adxtail, bdxtail, cdxtail, adytail, bdytail, cdytail;
    let axtbclen, aytbclen, bxtcalen, bytcalen, cxtablen, cytablen;
    let abtlen, bctlen, catlen;
    let abttlen, bcttlen, cattlen;
    let n1, n0;

    let bvirt, c, ahi, alo, bhi, blo, _i, _j, _0, s1, s0, t1, t0, u3;

    const adx = ax - dx;
    const bdx = bx - dx;
    const cdx = cx - dx;
    const ady = ay - dy;
    const bdy = by - dy;
    const cdy = cy - dy;

    s1 = bdx * cdy;
    c = splitter * bdx;
    ahi = c - (c - bdx);
    alo = bdx - ahi;
    c = splitter * cdy;
    bhi = c - (c - cdy);
    blo = cdy - bhi;
    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);
    t1 = cdx * bdy;
    c = splitter * cdx;
    ahi = c - (c - cdx);
    alo = cdx - ahi;
    c = splitter * bdy;
    bhi = c - (c - bdy);
    blo = bdy - bhi;
    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);
    _i = s0 - t0;
    bvirt = s0 - _i;
    incircle_bc[0] = s0 - (_i + bvirt) + (bvirt - t0);
    _j = s1 + _i;
    bvirt = _j - s1;
    _0 = s1 - (_j - bvirt) + (_i - bvirt);
    _i = _0 - t1;
    bvirt = _0 - _i;
    incircle_bc[1] = _0 - (_i + bvirt) + (bvirt - t1);
    u3 = _j + _i;
    bvirt = u3 - _j;
    incircle_bc[2] = _j - (u3 - bvirt) + (_i - bvirt);
    incircle_bc[3] = u3;
    s1 = cdx * ady;
    c = splitter * cdx;
    ahi = c - (c - cdx);
    alo = cdx - ahi;
    c = splitter * ady;
    bhi = c - (c - ady);
    blo = ady - bhi;
    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);
    t1 = adx * cdy;
    c = splitter * adx;
    ahi = c - (c - adx);
    alo = adx - ahi;
    c = splitter * cdy;
    bhi = c - (c - cdy);
    blo = cdy - bhi;
    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);
    _i = s0 - t0;
    bvirt = s0 - _i;
    incircle_ca[0] = s0 - (_i + bvirt) + (bvirt - t0);
    _j = s1 + _i;
    bvirt = _j - s1;
    _0 = s1 - (_j - bvirt) + (_i - bvirt);
    _i = _0 - t1;
    bvirt = _0 - _i;
    incircle_ca[1] = _0 - (_i + bvirt) + (bvirt - t1);
    u3 = _j + _i;
    bvirt = u3 - _j;
    incircle_ca[2] = _j - (u3 - bvirt) + (_i - bvirt);
    incircle_ca[3] = u3;
    s1 = adx * bdy;
    c = splitter * adx;
    ahi = c - (c - adx);
    alo = adx - ahi;
    c = splitter * bdy;
    bhi = c - (c - bdy);
    blo = bdy - bhi;
    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);
    t1 = bdx * ady;
    c = splitter * bdx;
    ahi = c - (c - bdx);
    alo = bdx - ahi;
    c = splitter * ady;
    bhi = c - (c - ady);
    blo = ady - bhi;
    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);
    _i = s0 - t0;
    bvirt = s0 - _i;
    incircle_ab[0] = s0 - (_i + bvirt) + (bvirt - t0);
    _j = s1 + _i;
    bvirt = _j - s1;
    _0 = s1 - (_j - bvirt) + (_i - bvirt);
    _i = _0 - t1;
    bvirt = _0 - _i;
    incircle_ab[1] = _0 - (_i + bvirt) + (bvirt - t1);
    u3 = _j + _i;
    bvirt = u3 - _j;
    incircle_ab[2] = _j - (u3 - bvirt) + (_i - bvirt);
    incircle_ab[3] = u3;

    finlen = sum(
        sum(
            sum(
                scale(scale(4, incircle_bc, adx, incircle_8), incircle_8, adx, incircle_16), incircle_16,
                scale(scale(4, incircle_bc, ady, incircle_8), incircle_8, ady, _16b), _16b, _32), _32,
            sum(
                scale(scale(4, incircle_ca, bdx, incircle_8), incircle_8, bdx, incircle_16), incircle_16,
                scale(scale(4, incircle_ca, bdy, incircle_8), incircle_8, bdy, _16b), _16b, _32b), _32b, _64), _64,
        sum(
            scale(scale(4, incircle_ab, cdx, incircle_8), incircle_8, cdx, incircle_16), incircle_16,
            scale(scale(4, incircle_ab, cdy, incircle_8), incircle_8, cdy, _16b), _16b, _32), _32, incircle_fin);

    let det = estimate(finlen, incircle_fin);
    let errbound = iccerrboundB * permanent;
    if (det >= errbound || -det >= errbound) {
        return det;
    }

    bvirt = ax - adx;
    adxtail = ax - (adx + bvirt) + (bvirt - dx);
    bvirt = ay - ady;
    adytail = ay - (ady + bvirt) + (bvirt - dy);
    bvirt = bx - bdx;
    bdxtail = bx - (bdx + bvirt) + (bvirt - dx);
    bvirt = by - bdy;
    bdytail = by - (bdy + bvirt) + (bvirt - dy);
    bvirt = cx - cdx;
    cdxtail = cx - (cdx + bvirt) + (bvirt - dx);
    bvirt = cy - cdy;
    cdytail = cy - (cdy + bvirt) + (bvirt - dy);
    if (adxtail === 0 && bdxtail === 0 && cdxtail === 0 && adytail === 0 && bdytail === 0 && cdytail === 0) {
        return det;
    }

    errbound = iccerrboundC * permanent + resulterrbound * Math.abs(det);
    det += ((adx * adx + ady * ady) * ((bdx * cdytail + cdy * bdxtail) - (bdy * cdxtail + cdx * bdytail)) +
        2 * (adx * adxtail + ady * adytail) * (bdx * cdy - bdy * cdx)) +
        ((bdx * bdx + bdy * bdy) * ((cdx * adytail + ady * cdxtail) - (cdy * adxtail + adx * cdytail)) +
        2 * (bdx * bdxtail + bdy * bdytail) * (cdx * ady - cdy * adx)) +
        ((cdx * cdx + cdy * cdy) * ((adx * bdytail + bdy * adxtail) - (ady * bdxtail + bdx * adytail)) +
        2 * (cdx * cdxtail + cdy * cdytail) * (adx * bdy - ady * bdx));

    if (det >= errbound || -det >= errbound) {
        return det;
    }

    if (bdxtail !== 0 || bdytail !== 0 || cdxtail !== 0 || cdytail !== 0) {
        s1 = adx * adx;
        c = splitter * adx;
        ahi = c - (c - adx);
        alo = adx - ahi;
        s0 = alo * alo - (s1 - ahi * ahi - (ahi + ahi) * alo);
        t1 = ady * ady;
        c = splitter * ady;
        ahi = c - (c - ady);
        alo = ady - ahi;
        t0 = alo * alo - (t1 - ahi * ahi - (ahi + ahi) * alo);
        _i = s0 + t0;
        bvirt = _i - s0;
        aa[0] = s0 - (_i - bvirt) + (t0 - bvirt);
        _j = s1 + _i;
        bvirt = _j - s1;
        _0 = s1 - (_j - bvirt) + (_i - bvirt);
        _i = _0 + t1;
        bvirt = _i - _0;
        aa[1] = _0 - (_i - bvirt) + (t1 - bvirt);
        u3 = _j + _i;
        bvirt = u3 - _j;
        aa[2] = _j - (u3 - bvirt) + (_i - bvirt);
        aa[3] = u3;
    }
    if (cdxtail !== 0 || cdytail !== 0 || adxtail !== 0 || adytail !== 0) {
        s1 = bdx * bdx;
        c = splitter * bdx;
        ahi = c - (c - bdx);
        alo = bdx - ahi;
        s0 = alo * alo - (s1 - ahi * ahi - (ahi + ahi) * alo);
        t1 = bdy * bdy;
        c = splitter * bdy;
        ahi = c - (c - bdy);
        alo = bdy - ahi;
        t0 = alo * alo - (t1 - ahi * ahi - (ahi + ahi) * alo);
        _i = s0 + t0;
        bvirt = _i - s0;
        bb[0] = s0 - (_i - bvirt) + (t0 - bvirt);
        _j = s1 + _i;
        bvirt = _j - s1;
        _0 = s1 - (_j - bvirt) + (_i - bvirt);
        _i = _0 + t1;
        bvirt = _i - _0;
        bb[1] = _0 - (_i - bvirt) + (t1 - bvirt);
        u3 = _j + _i;
        bvirt = u3 - _j;
        bb[2] = _j - (u3 - bvirt) + (_i - bvirt);
        bb[3] = u3;
    }
    if (adxtail !== 0 || adytail !== 0 || bdxtail !== 0 || bdytail !== 0) {
        s1 = cdx * cdx;
        c = splitter * cdx;
        ahi = c - (c - cdx);
        alo = cdx - ahi;
        s0 = alo * alo - (s1 - ahi * ahi - (ahi + ahi) * alo);
        t1 = cdy * cdy;
        c = splitter * cdy;
        ahi = c - (c - cdy);
        alo = cdy - ahi;
        t0 = alo * alo - (t1 - ahi * ahi - (ahi + ahi) * alo);
        _i = s0 + t0;
        bvirt = _i - s0;
        cc[0] = s0 - (_i - bvirt) + (t0 - bvirt);
        _j = s1 + _i;
        bvirt = _j - s1;
        _0 = s1 - (_j - bvirt) + (_i - bvirt);
        _i = _0 + t1;
        bvirt = _i - _0;
        cc[1] = _0 - (_i - bvirt) + (t1 - bvirt);
        u3 = _j + _i;
        bvirt = u3 - _j;
        cc[2] = _j - (u3 - bvirt) + (_i - bvirt);
        cc[3] = u3;
    }

    if (adxtail !== 0) {
        axtbclen = scale(4, incircle_bc, adxtail, axtbc);
        finlen = incircle_finadd(finlen, sum_three(
            scale(axtbclen, axtbc, 2 * adx, incircle_16), incircle_16,
            scale(scale(4, cc, adxtail, incircle_8), incircle_8, bdy, _16b), _16b,
            scale(scale(4, bb, adxtail, incircle_8), incircle_8, -cdy, _16c), _16c, _32, _48), _48);
    }
    if (adytail !== 0) {
        aytbclen = scale(4, incircle_bc, adytail, aytbc);
        finlen = incircle_finadd(finlen, sum_three(
            scale(aytbclen, aytbc, 2 * ady, incircle_16), incircle_16,
            scale(scale(4, bb, adytail, incircle_8), incircle_8, cdx, _16b), _16b,
            scale(scale(4, cc, adytail, incircle_8), incircle_8, -bdx, _16c), _16c, _32, _48), _48);
    }
    if (bdxtail !== 0) {
        bxtcalen = scale(4, incircle_ca, bdxtail, bxtca);
        finlen = incircle_finadd(finlen, sum_three(
            scale(bxtcalen, bxtca, 2 * bdx, incircle_16), incircle_16,
            scale(scale(4, aa, bdxtail, incircle_8), incircle_8, cdy, _16b), _16b,
            scale(scale(4, cc, bdxtail, incircle_8), incircle_8, -ady, _16c), _16c, _32, _48), _48);
    }
    if (bdytail !== 0) {
        bytcalen = scale(4, incircle_ca, bdytail, bytca);
        finlen = incircle_finadd(finlen, sum_three(
            scale(bytcalen, bytca, 2 * bdy, incircle_16), incircle_16,
            scale(scale(4, cc, bdytail, incircle_8), incircle_8, adx, _16b), _16b,
            scale(scale(4, aa, bdytail, incircle_8), incircle_8, -cdx, _16c), _16c, _32, _48), _48);
    }
    if (cdxtail !== 0) {
        cxtablen = scale(4, incircle_ab, cdxtail, cxtab);
        finlen = incircle_finadd(finlen, sum_three(
            scale(cxtablen, cxtab, 2 * cdx, incircle_16), incircle_16,
            scale(scale(4, bb, cdxtail, incircle_8), incircle_8, ady, _16b), _16b,
            scale(scale(4, aa, cdxtail, incircle_8), incircle_8, -bdy, _16c), _16c, _32, _48), _48);
    }
    if (cdytail !== 0) {
        cytablen = scale(4, incircle_ab, cdytail, cytab);
        finlen = incircle_finadd(finlen, sum_three(
            scale(cytablen, cytab, 2 * cdy, incircle_16), incircle_16,
            scale(scale(4, aa, cdytail, incircle_8), incircle_8, bdx, _16b), _16b,
            scale(scale(4, bb, cdytail, incircle_8), incircle_8, -adx, _16c), _16c, _32, _48), _48);
    }

    if (adxtail !== 0 || adytail !== 0) {
        if (bdxtail !== 0 || bdytail !== 0 || cdxtail !== 0 || cdytail !== 0) {
            s1 = bdxtail * cdy;
            c = splitter * bdxtail;
            ahi = c - (c - bdxtail);
            alo = bdxtail - ahi;
            c = splitter * cdy;
            bhi = c - (c - cdy);
            blo = cdy - bhi;
            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);
            t1 = bdx * cdytail;
            c = splitter * bdx;
            ahi = c - (c - bdx);
            alo = bdx - ahi;
            c = splitter * cdytail;
            bhi = c - (c - cdytail);
            blo = cdytail - bhi;
            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);
            _i = s0 + t0;
            bvirt = _i - s0;
            incircle_u[0] = s0 - (_i - bvirt) + (t0 - bvirt);
            _j = s1 + _i;
            bvirt = _j - s1;
            _0 = s1 - (_j - bvirt) + (_i - bvirt);
            _i = _0 + t1;
            bvirt = _i - _0;
            incircle_u[1] = _0 - (_i - bvirt) + (t1 - bvirt);
            u3 = _j + _i;
            bvirt = u3 - _j;
            incircle_u[2] = _j - (u3 - bvirt) + (_i - bvirt);
            incircle_u[3] = u3;
            s1 = cdxtail * -bdy;
            c = splitter * cdxtail;
            ahi = c - (c - cdxtail);
            alo = cdxtail - ahi;
            c = splitter * -bdy;
            bhi = c - (c - -bdy);
            blo = -bdy - bhi;
            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);
            t1 = cdx * -bdytail;
            c = splitter * cdx;
            ahi = c - (c - cdx);
            alo = cdx - ahi;
            c = splitter * -bdytail;
            bhi = c - (c - -bdytail);
            blo = -bdytail - bhi;
            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);
            _i = s0 + t0;
            bvirt = _i - s0;
            v[0] = s0 - (_i - bvirt) + (t0 - bvirt);
            _j = s1 + _i;
            bvirt = _j - s1;
            _0 = s1 - (_j - bvirt) + (_i - bvirt);
            _i = _0 + t1;
            bvirt = _i - _0;
            v[1] = _0 - (_i - bvirt) + (t1 - bvirt);
            u3 = _j + _i;
            bvirt = u3 - _j;
            v[2] = _j - (u3 - bvirt) + (_i - bvirt);
            v[3] = u3;
            bctlen = sum(4, incircle_u, 4, v, incircle_bct);
            s1 = bdxtail * cdytail;
            c = splitter * bdxtail;
            ahi = c - (c - bdxtail);
            alo = bdxtail - ahi;
            c = splitter * cdytail;
            bhi = c - (c - cdytail);
            blo = cdytail - bhi;
            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);
            t1 = cdxtail * bdytail;
            c = splitter * cdxtail;
            ahi = c - (c - cdxtail);
            alo = cdxtail - ahi;
            c = splitter * bdytail;
            bhi = c - (c - bdytail);
            blo = bdytail - bhi;
            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);
            _i = s0 - t0;
            bvirt = s0 - _i;
            bctt[0] = s0 - (_i + bvirt) + (bvirt - t0);
            _j = s1 + _i;
            bvirt = _j - s1;
            _0 = s1 - (_j - bvirt) + (_i - bvirt);
            _i = _0 - t1;
            bvirt = _0 - _i;
            bctt[1] = _0 - (_i + bvirt) + (bvirt - t1);
            u3 = _j + _i;
            bvirt = u3 - _j;
            bctt[2] = _j - (u3 - bvirt) + (_i - bvirt);
            bctt[3] = u3;
            bcttlen = 4;
        } else {
            incircle_bct[0] = 0;
            bctlen = 1;
            bctt[0] = 0;
            bcttlen = 1;
        }
        if (adxtail !== 0) {
            const len = scale(bctlen, incircle_bct, adxtail, _16c);
            finlen = incircle_finadd(finlen, sum(
                scale(axtbclen, axtbc, adxtail, incircle_16), incircle_16,
                scale(len, _16c, 2 * adx, _32), _32, _48), _48);

            const len2 = scale(bcttlen, bctt, adxtail, incircle_8);
            finlen = incircle_finadd(finlen, sum_three(
                scale(len2, incircle_8, 2 * adx, incircle_16), incircle_16,
                scale(len2, incircle_8, adxtail, _16b), _16b,
                scale(len, _16c, adxtail, _32), _32, _32b, _64), _64);

            if (bdytail !== 0) {
                finlen = incircle_finadd(finlen, scale(scale(4, cc, adxtail, incircle_8), incircle_8, bdytail, incircle_16), incircle_16);
            }
            if (cdytail !== 0) {
                finlen = incircle_finadd(finlen, scale(scale(4, bb, -adxtail, incircle_8), incircle_8, cdytail, incircle_16), incircle_16);
            }
        }
        if (adytail !== 0) {
            const len = scale(bctlen, incircle_bct, adytail, _16c);
            finlen = incircle_finadd(finlen, sum(
                scale(aytbclen, aytbc, adytail, incircle_16), incircle_16,
                scale(len, _16c, 2 * ady, _32), _32, _48), _48);

            const len2 = scale(bcttlen, bctt, adytail, incircle_8);
            finlen = incircle_finadd(finlen, sum_three(
                scale(len2, incircle_8, 2 * ady, incircle_16), incircle_16,
                scale(len2, incircle_8, adytail, _16b), _16b,
                scale(len, _16c, adytail, _32), _32, _32b, _64), _64);
        }
    }
    if (bdxtail !== 0 || bdytail !== 0) {
        if (cdxtail !== 0 || cdytail !== 0 || adxtail !== 0 || adytail !== 0) {
            s1 = cdxtail * ady;
            c = splitter * cdxtail;
            ahi = c - (c - cdxtail);
            alo = cdxtail - ahi;
            c = splitter * ady;
            bhi = c - (c - ady);
            blo = ady - bhi;
            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);
            t1 = cdx * adytail;
            c = splitter * cdx;
            ahi = c - (c - cdx);
            alo = cdx - ahi;
            c = splitter * adytail;
            bhi = c - (c - adytail);
            blo = adytail - bhi;
            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);
            _i = s0 + t0;
            bvirt = _i - s0;
            incircle_u[0] = s0 - (_i - bvirt) + (t0 - bvirt);
            _j = s1 + _i;
            bvirt = _j - s1;
            _0 = s1 - (_j - bvirt) + (_i - bvirt);
            _i = _0 + t1;
            bvirt = _i - _0;
            incircle_u[1] = _0 - (_i - bvirt) + (t1 - bvirt);
            u3 = _j + _i;
            bvirt = u3 - _j;
            incircle_u[2] = _j - (u3 - bvirt) + (_i - bvirt);
            incircle_u[3] = u3;
            n1 = -cdy;
            n0 = -cdytail;
            s1 = adxtail * n1;
            c = splitter * adxtail;
            ahi = c - (c - adxtail);
            alo = adxtail - ahi;
            c = splitter * n1;
            bhi = c - (c - n1);
            blo = n1 - bhi;
            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);
            t1 = adx * n0;
            c = splitter * adx;
            ahi = c - (c - adx);
            alo = adx - ahi;
            c = splitter * n0;
            bhi = c - (c - n0);
            blo = n0 - bhi;
            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);
            _i = s0 + t0;
            bvirt = _i - s0;
            v[0] = s0 - (_i - bvirt) + (t0 - bvirt);
            _j = s1 + _i;
            bvirt = _j - s1;
            _0 = s1 - (_j - bvirt) + (_i - bvirt);
            _i = _0 + t1;
            bvirt = _i - _0;
            v[1] = _0 - (_i - bvirt) + (t1 - bvirt);
            u3 = _j + _i;
            bvirt = u3 - _j;
            v[2] = _j - (u3 - bvirt) + (_i - bvirt);
            v[3] = u3;
            catlen = sum(4, incircle_u, 4, v, incircle_cat);
            s1 = cdxtail * adytail;
            c = splitter * cdxtail;
            ahi = c - (c - cdxtail);
            alo = cdxtail - ahi;
            c = splitter * adytail;
            bhi = c - (c - adytail);
            blo = adytail - bhi;
            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);
            t1 = adxtail * cdytail;
            c = splitter * adxtail;
            ahi = c - (c - adxtail);
            alo = adxtail - ahi;
            c = splitter * cdytail;
            bhi = c - (c - cdytail);
            blo = cdytail - bhi;
            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);
            _i = s0 - t0;
            bvirt = s0 - _i;
            catt[0] = s0 - (_i + bvirt) + (bvirt - t0);
            _j = s1 + _i;
            bvirt = _j - s1;
            _0 = s1 - (_j - bvirt) + (_i - bvirt);
            _i = _0 - t1;
            bvirt = _0 - _i;
            catt[1] = _0 - (_i + bvirt) + (bvirt - t1);
            u3 = _j + _i;
            bvirt = u3 - _j;
            catt[2] = _j - (u3 - bvirt) + (_i - bvirt);
            catt[3] = u3;
            cattlen = 4;
        } else {
            incircle_cat[0] = 0;
            catlen = 1;
            catt[0] = 0;
            cattlen = 1;
        }
        if (bdxtail !== 0) {
            const len = scale(catlen, incircle_cat, bdxtail, _16c);
            finlen = incircle_finadd(finlen, sum(
                scale(bxtcalen, bxtca, bdxtail, incircle_16), incircle_16,
                scale(len, _16c, 2 * bdx, _32), _32, _48), _48);

            const len2 = scale(cattlen, catt, bdxtail, incircle_8);
            finlen = incircle_finadd(finlen, sum_three(
                scale(len2, incircle_8, 2 * bdx, incircle_16), incircle_16,
                scale(len2, incircle_8, bdxtail, _16b), _16b,
                scale(len, _16c, bdxtail, _32), _32, _32b, _64), _64);

            if (cdytail !== 0) {
                finlen = incircle_finadd(finlen, scale(scale(4, aa, bdxtail, incircle_8), incircle_8, cdytail, incircle_16), incircle_16);
            }
            if (adytail !== 0) {
                finlen = incircle_finadd(finlen, scale(scale(4, cc, -bdxtail, incircle_8), incircle_8, adytail, incircle_16), incircle_16);
            }
        }
        if (bdytail !== 0) {
            const len = scale(catlen, incircle_cat, bdytail, _16c);
            finlen = incircle_finadd(finlen, sum(
                scale(bytcalen, bytca, bdytail, incircle_16), incircle_16,
                scale(len, _16c, 2 * bdy, _32), _32, _48), _48);

            const len2 = scale(cattlen, catt, bdytail, incircle_8);
            finlen = incircle_finadd(finlen, sum_three(
                scale(len2, incircle_8, 2 * bdy, incircle_16), incircle_16,
                scale(len2, incircle_8, bdytail, _16b), _16b,
                scale(len, _16c, bdytail, _32), _32,  _32b, _64), _64);
        }
    }
    if (cdxtail !== 0 || cdytail !== 0) {
        if (adxtail !== 0 || adytail !== 0 || bdxtail !== 0 || bdytail !== 0) {
            s1 = adxtail * bdy;
            c = splitter * adxtail;
            ahi = c - (c - adxtail);
            alo = adxtail - ahi;
            c = splitter * bdy;
            bhi = c - (c - bdy);
            blo = bdy - bhi;
            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);
            t1 = adx * bdytail;
            c = splitter * adx;
            ahi = c - (c - adx);
            alo = adx - ahi;
            c = splitter * bdytail;
            bhi = c - (c - bdytail);
            blo = bdytail - bhi;
            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);
            _i = s0 + t0;
            bvirt = _i - s0;
            incircle_u[0] = s0 - (_i - bvirt) + (t0 - bvirt);
            _j = s1 + _i;
            bvirt = _j - s1;
            _0 = s1 - (_j - bvirt) + (_i - bvirt);
            _i = _0 + t1;
            bvirt = _i - _0;
            incircle_u[1] = _0 - (_i - bvirt) + (t1 - bvirt);
            u3 = _j + _i;
            bvirt = u3 - _j;
            incircle_u[2] = _j - (u3 - bvirt) + (_i - bvirt);
            incircle_u[3] = u3;
            n1 = -ady;
            n0 = -adytail;
            s1 = bdxtail * n1;
            c = splitter * bdxtail;
            ahi = c - (c - bdxtail);
            alo = bdxtail - ahi;
            c = splitter * n1;
            bhi = c - (c - n1);
            blo = n1 - bhi;
            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);
            t1 = bdx * n0;
            c = splitter * bdx;
            ahi = c - (c - bdx);
            alo = bdx - ahi;
            c = splitter * n0;
            bhi = c - (c - n0);
            blo = n0 - bhi;
            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);
            _i = s0 + t0;
            bvirt = _i - s0;
            v[0] = s0 - (_i - bvirt) + (t0 - bvirt);
            _j = s1 + _i;
            bvirt = _j - s1;
            _0 = s1 - (_j - bvirt) + (_i - bvirt);
            _i = _0 + t1;
            bvirt = _i - _0;
            v[1] = _0 - (_i - bvirt) + (t1 - bvirt);
            u3 = _j + _i;
            bvirt = u3 - _j;
            v[2] = _j - (u3 - bvirt) + (_i - bvirt);
            v[3] = u3;
            abtlen = sum(4, incircle_u, 4, v, incircle_abt);
            s1 = adxtail * bdytail;
            c = splitter * adxtail;
            ahi = c - (c - adxtail);
            alo = adxtail - ahi;
            c = splitter * bdytail;
            bhi = c - (c - bdytail);
            blo = bdytail - bhi;
            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);
            t1 = bdxtail * adytail;
            c = splitter * bdxtail;
            ahi = c - (c - bdxtail);
            alo = bdxtail - ahi;
            c = splitter * adytail;
            bhi = c - (c - adytail);
            blo = adytail - bhi;
            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);
            _i = s0 - t0;
            bvirt = s0 - _i;
            abtt[0] = s0 - (_i + bvirt) + (bvirt - t0);
            _j = s1 + _i;
            bvirt = _j - s1;
            _0 = s1 - (_j - bvirt) + (_i - bvirt);
            _i = _0 - t1;
            bvirt = _0 - _i;
            abtt[1] = _0 - (_i + bvirt) + (bvirt - t1);
            u3 = _j + _i;
            bvirt = u3 - _j;
            abtt[2] = _j - (u3 - bvirt) + (_i - bvirt);
            abtt[3] = u3;
            abttlen = 4;
        } else {
            incircle_abt[0] = 0;
            abtlen = 1;
            abtt[0] = 0;
            abttlen = 1;
        }
        if (cdxtail !== 0) {
            const len = scale(abtlen, incircle_abt, cdxtail, _16c);
            finlen = incircle_finadd(finlen, sum(
                scale(cxtablen, cxtab, cdxtail, incircle_16), incircle_16,
                scale(len, _16c, 2 * cdx, _32), _32, _48), _48);

            const len2 = scale(abttlen, abtt, cdxtail, incircle_8);
            finlen = incircle_finadd(finlen, sum_three(
                scale(len2, incircle_8, 2 * cdx, incircle_16), incircle_16,
                scale(len2, incircle_8, cdxtail, _16b), _16b,
                scale(len, _16c, cdxtail, _32), _32, _32b, _64), _64);

            if (adytail !== 0) {
                finlen = incircle_finadd(finlen, scale(scale(4, bb, cdxtail, incircle_8), incircle_8, adytail, incircle_16), incircle_16);
            }
            if (bdytail !== 0) {
                finlen = incircle_finadd(finlen, scale(scale(4, aa, -cdxtail, incircle_8), incircle_8, bdytail, incircle_16), incircle_16);
            }
        }
        if (cdytail !== 0) {
            const len = scale(abtlen, incircle_abt, cdytail, _16c);
            finlen = incircle_finadd(finlen, sum(
                scale(cytablen, cytab, cdytail, incircle_16), incircle_16,
                scale(len, _16c, 2 * cdy, _32), _32, _48), _48);

            const len2 = scale(abttlen, abtt, cdytail, incircle_8);
            finlen = incircle_finadd(finlen, sum_three(
                scale(len2, incircle_8, 2 * cdy, incircle_16), incircle_16,
                scale(len2, incircle_8, cdytail, _16b), _16b,
                scale(len, _16c, cdytail, _32), _32, _32b, _64), _64);
        }
    }

    return incircle_fin[finlen - 1];
}

function incircle(ax, ay, bx, by, cx, cy, dx, dy) {
    const adx = ax - dx;
    const bdx = bx - dx;
    const cdx = cx - dx;
    const ady = ay - dy;
    const bdy = by - dy;
    const cdy = cy - dy;

    const bdxcdy = bdx * cdy;
    const cdxbdy = cdx * bdy;
    const alift = adx * adx + ady * ady;

    const cdxady = cdx * ady;
    const adxcdy = adx * cdy;
    const blift = bdx * bdx + bdy * bdy;

    const adxbdy = adx * bdy;
    const bdxady = bdx * ady;
    const clift = cdx * cdx + cdy * cdy;

    const det =
        alift * (bdxcdy - cdxbdy) +
        blift * (cdxady - adxcdy) +
        clift * (adxbdy - bdxady);

    const permanent =
        (Math.abs(bdxcdy) + Math.abs(cdxbdy)) * alift +
        (Math.abs(cdxady) + Math.abs(adxcdy)) * blift +
        (Math.abs(adxbdy) + Math.abs(bdxady)) * clift;

    const errbound = iccerrboundA * permanent;

    if (det > errbound || -det > errbound) {
        return det;
    }
    return incircleadapt(ax, ay, bx, by, cx, cy, dx, dy, permanent);
}

function incirclefast(ax, ay, bx, by, cx, cy, dx, dy) {
    const adx = ax - dx;
    const ady = ay - dy;
    const bdx = bx - dx;
    const bdy = by - dy;
    const cdx = cx - dx;
    const cdy = cy - dy;

    const abdet = adx * bdy - bdx * ady;
    const bcdet = bdx * cdy - cdx * bdy;
    const cadet = cdx * ady - adx * cdy;
    const alift = adx * adx + ady * ady;
    const blift = bdx * bdx + bdy * bdy;
    const clift = cdx * cdx + cdy * cdy;

    return alift * bcdet + blift * cadet + clift * abdet;
}

;// CONCATENATED MODULE: ./node_modules/robust-predicates/esm/insphere.js


const isperrboundA = (16 + 224 * util_epsilon) * util_epsilon;
const isperrboundB = (5 + 72 * util_epsilon) * util_epsilon;
const isperrboundC = (71 + 1408 * util_epsilon) * util_epsilon * util_epsilon;

const insphere_ab = vec(4);
const insphere_bc = vec(4);
const cd = vec(4);
const de = vec(4);
const ea = vec(4);
const ac = vec(4);
const bd = vec(4);
const ce = vec(4);
const da = vec(4);
const eb = vec(4);

const abc = vec(24);
const bcd = vec(24);
const cde = vec(24);
const dea = vec(24);
const eab = vec(24);
const abd = vec(24);
const bce = vec(24);
const cda = vec(24);
const deb = vec(24);
const eac = vec(24);

const adet = vec(1152);
const bdet = vec(1152);
const cdet = vec(1152);
const ddet = vec(1152);
const edet = vec(1152);
const abdet = vec(2304);
const cddet = vec(2304);
const cdedet = vec(3456);
const deter = vec(5760);

const insphere_8 = vec(8);
const insphere_8b = vec(8);
const _8c = vec(8);
const insphere_16 = vec(16);
const _24 = vec(24);
const insphere_48 = vec(48);
const _48b = vec(48);
const _96 = vec(96);
const _192 = vec(192);
const _384x = vec(384);
const _384y = vec(384);
const _384z = vec(384);
const _768 = vec(768);

function sum_three_scale(a, b, c, az, bz, cz, out) {
    return sum_three(
        scale(4, a, az, insphere_8), insphere_8,
        scale(4, b, bz, insphere_8b), insphere_8b,
        scale(4, c, cz, _8c), _8c, insphere_16, out);
}

function liftexact(alen, a, blen, b, clen, c, dlen, d, x, y, z, out) {
    const len = sum(
        sum(alen, a, blen, b, insphere_48), insphere_48,
        negate(sum(clen, c, dlen, d, _48b), _48b), _48b, _96);

    return sum_three(
        scale(scale(len, _96, x, _192), _192, x, _384x), _384x,
        scale(scale(len, _96, y, _192), _192, y, _384y), _384y,
        scale(scale(len, _96, z, _192), _192, z, _384z), _384z, _768, out);
}

function insphereexact(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, ex, ey, ez) {
    let bvirt, c, ahi, alo, bhi, blo, _i, _j, _0, s1, s0, t1, t0, u3;

    s1 = ax * by;
    c = splitter * ax;
    ahi = c - (c - ax);
    alo = ax - ahi;
    c = splitter * by;
    bhi = c - (c - by);
    blo = by - bhi;
    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);
    t1 = bx * ay;
    c = splitter * bx;
    ahi = c - (c - bx);
    alo = bx - ahi;
    c = splitter * ay;
    bhi = c - (c - ay);
    blo = ay - bhi;
    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);
    _i = s0 - t0;
    bvirt = s0 - _i;
    insphere_ab[0] = s0 - (_i + bvirt) + (bvirt - t0);
    _j = s1 + _i;
    bvirt = _j - s1;
    _0 = s1 - (_j - bvirt) + (_i - bvirt);
    _i = _0 - t1;
    bvirt = _0 - _i;
    insphere_ab[1] = _0 - (_i + bvirt) + (bvirt - t1);
    u3 = _j + _i;
    bvirt = u3 - _j;
    insphere_ab[2] = _j - (u3 - bvirt) + (_i - bvirt);
    insphere_ab[3] = u3;
    s1 = bx * cy;
    c = splitter * bx;
    ahi = c - (c - bx);
    alo = bx - ahi;
    c = splitter * cy;
    bhi = c - (c - cy);
    blo = cy - bhi;
    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);
    t1 = cx * by;
    c = splitter * cx;
    ahi = c - (c - cx);
    alo = cx - ahi;
    c = splitter * by;
    bhi = c - (c - by);
    blo = by - bhi;
    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);
    _i = s0 - t0;
    bvirt = s0 - _i;
    insphere_bc[0] = s0 - (_i + bvirt) + (bvirt - t0);
    _j = s1 + _i;
    bvirt = _j - s1;
    _0 = s1 - (_j - bvirt) + (_i - bvirt);
    _i = _0 - t1;
    bvirt = _0 - _i;
    insphere_bc[1] = _0 - (_i + bvirt) + (bvirt - t1);
    u3 = _j + _i;
    bvirt = u3 - _j;
    insphere_bc[2] = _j - (u3 - bvirt) + (_i - bvirt);
    insphere_bc[3] = u3;
    s1 = cx * dy;
    c = splitter * cx;
    ahi = c - (c - cx);
    alo = cx - ahi;
    c = splitter * dy;
    bhi = c - (c - dy);
    blo = dy - bhi;
    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);
    t1 = dx * cy;
    c = splitter * dx;
    ahi = c - (c - dx);
    alo = dx - ahi;
    c = splitter * cy;
    bhi = c - (c - cy);
    blo = cy - bhi;
    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);
    _i = s0 - t0;
    bvirt = s0 - _i;
    cd[0] = s0 - (_i + bvirt) + (bvirt - t0);
    _j = s1 + _i;
    bvirt = _j - s1;
    _0 = s1 - (_j - bvirt) + (_i - bvirt);
    _i = _0 - t1;
    bvirt = _0 - _i;
    cd[1] = _0 - (_i + bvirt) + (bvirt - t1);
    u3 = _j + _i;
    bvirt = u3 - _j;
    cd[2] = _j - (u3 - bvirt) + (_i - bvirt);
    cd[3] = u3;
    s1 = dx * ey;
    c = splitter * dx;
    ahi = c - (c - dx);
    alo = dx - ahi;
    c = splitter * ey;
    bhi = c - (c - ey);
    blo = ey - bhi;
    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);
    t1 = ex * dy;
    c = splitter * ex;
    ahi = c - (c - ex);
    alo = ex - ahi;
    c = splitter * dy;
    bhi = c - (c - dy);
    blo = dy - bhi;
    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);
    _i = s0 - t0;
    bvirt = s0 - _i;
    de[0] = s0 - (_i + bvirt) + (bvirt - t0);
    _j = s1 + _i;
    bvirt = _j - s1;
    _0 = s1 - (_j - bvirt) + (_i - bvirt);
    _i = _0 - t1;
    bvirt = _0 - _i;
    de[1] = _0 - (_i + bvirt) + (bvirt - t1);
    u3 = _j + _i;
    bvirt = u3 - _j;
    de[2] = _j - (u3 - bvirt) + (_i - bvirt);
    de[3] = u3;
    s1 = ex * ay;
    c = splitter * ex;
    ahi = c - (c - ex);
    alo = ex - ahi;
    c = splitter * ay;
    bhi = c - (c - ay);
    blo = ay - bhi;
    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);
    t1 = ax * ey;
    c = splitter * ax;
    ahi = c - (c - ax);
    alo = ax - ahi;
    c = splitter * ey;
    bhi = c - (c - ey);
    blo = ey - bhi;
    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);
    _i = s0 - t0;
    bvirt = s0 - _i;
    ea[0] = s0 - (_i + bvirt) + (bvirt - t0);
    _j = s1 + _i;
    bvirt = _j - s1;
    _0 = s1 - (_j - bvirt) + (_i - bvirt);
    _i = _0 - t1;
    bvirt = _0 - _i;
    ea[1] = _0 - (_i + bvirt) + (bvirt - t1);
    u3 = _j + _i;
    bvirt = u3 - _j;
    ea[2] = _j - (u3 - bvirt) + (_i - bvirt);
    ea[3] = u3;
    s1 = ax * cy;
    c = splitter * ax;
    ahi = c - (c - ax);
    alo = ax - ahi;
    c = splitter * cy;
    bhi = c - (c - cy);
    blo = cy - bhi;
    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);
    t1 = cx * ay;
    c = splitter * cx;
    ahi = c - (c - cx);
    alo = cx - ahi;
    c = splitter * ay;
    bhi = c - (c - ay);
    blo = ay - bhi;
    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);
    _i = s0 - t0;
    bvirt = s0 - _i;
    ac[0] = s0 - (_i + bvirt) + (bvirt - t0);
    _j = s1 + _i;
    bvirt = _j - s1;
    _0 = s1 - (_j - bvirt) + (_i - bvirt);
    _i = _0 - t1;
    bvirt = _0 - _i;
    ac[1] = _0 - (_i + bvirt) + (bvirt - t1);
    u3 = _j + _i;
    bvirt = u3 - _j;
    ac[2] = _j - (u3 - bvirt) + (_i - bvirt);
    ac[3] = u3;
    s1 = bx * dy;
    c = splitter * bx;
    ahi = c - (c - bx);
    alo = bx - ahi;
    c = splitter * dy;
    bhi = c - (c - dy);
    blo = dy - bhi;
    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);
    t1 = dx * by;
    c = splitter * dx;
    ahi = c - (c - dx);
    alo = dx - ahi;
    c = splitter * by;
    bhi = c - (c - by);
    blo = by - bhi;
    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);
    _i = s0 - t0;
    bvirt = s0 - _i;
    bd[0] = s0 - (_i + bvirt) + (bvirt - t0);
    _j = s1 + _i;
    bvirt = _j - s1;
    _0 = s1 - (_j - bvirt) + (_i - bvirt);
    _i = _0 - t1;
    bvirt = _0 - _i;
    bd[1] = _0 - (_i + bvirt) + (bvirt - t1);
    u3 = _j + _i;
    bvirt = u3 - _j;
    bd[2] = _j - (u3 - bvirt) + (_i - bvirt);
    bd[3] = u3;
    s1 = cx * ey;
    c = splitter * cx;
    ahi = c - (c - cx);
    alo = cx - ahi;
    c = splitter * ey;
    bhi = c - (c - ey);
    blo = ey - bhi;
    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);
    t1 = ex * cy;
    c = splitter * ex;
    ahi = c - (c - ex);
    alo = ex - ahi;
    c = splitter * cy;
    bhi = c - (c - cy);
    blo = cy - bhi;
    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);
    _i = s0 - t0;
    bvirt = s0 - _i;
    ce[0] = s0 - (_i + bvirt) + (bvirt - t0);
    _j = s1 + _i;
    bvirt = _j - s1;
    _0 = s1 - (_j - bvirt) + (_i - bvirt);
    _i = _0 - t1;
    bvirt = _0 - _i;
    ce[1] = _0 - (_i + bvirt) + (bvirt - t1);
    u3 = _j + _i;
    bvirt = u3 - _j;
    ce[2] = _j - (u3 - bvirt) + (_i - bvirt);
    ce[3] = u3;
    s1 = dx * ay;
    c = splitter * dx;
    ahi = c - (c - dx);
    alo = dx - ahi;
    c = splitter * ay;
    bhi = c - (c - ay);
    blo = ay - bhi;
    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);
    t1 = ax * dy;
    c = splitter * ax;
    ahi = c - (c - ax);
    alo = ax - ahi;
    c = splitter * dy;
    bhi = c - (c - dy);
    blo = dy - bhi;
    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);
    _i = s0 - t0;
    bvirt = s0 - _i;
    da[0] = s0 - (_i + bvirt) + (bvirt - t0);
    _j = s1 + _i;
    bvirt = _j - s1;
    _0 = s1 - (_j - bvirt) + (_i - bvirt);
    _i = _0 - t1;
    bvirt = _0 - _i;
    da[1] = _0 - (_i + bvirt) + (bvirt - t1);
    u3 = _j + _i;
    bvirt = u3 - _j;
    da[2] = _j - (u3 - bvirt) + (_i - bvirt);
    da[3] = u3;
    s1 = ex * by;
    c = splitter * ex;
    ahi = c - (c - ex);
    alo = ex - ahi;
    c = splitter * by;
    bhi = c - (c - by);
    blo = by - bhi;
    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);
    t1 = bx * ey;
    c = splitter * bx;
    ahi = c - (c - bx);
    alo = bx - ahi;
    c = splitter * ey;
    bhi = c - (c - ey);
    blo = ey - bhi;
    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);
    _i = s0 - t0;
    bvirt = s0 - _i;
    eb[0] = s0 - (_i + bvirt) + (bvirt - t0);
    _j = s1 + _i;
    bvirt = _j - s1;
    _0 = s1 - (_j - bvirt) + (_i - bvirt);
    _i = _0 - t1;
    bvirt = _0 - _i;
    eb[1] = _0 - (_i + bvirt) + (bvirt - t1);
    u3 = _j + _i;
    bvirt = u3 - _j;
    eb[2] = _j - (u3 - bvirt) + (_i - bvirt);
    eb[3] = u3;

    const abclen = sum_three_scale(insphere_ab, insphere_bc, ac, cz, az, -bz, abc);
    const bcdlen = sum_three_scale(insphere_bc, cd, bd, dz, bz, -cz, bcd);
    const cdelen = sum_three_scale(cd, de, ce, ez, cz, -dz, cde);
    const dealen = sum_three_scale(de, ea, da, az, dz, -ez, dea);
    const eablen = sum_three_scale(ea, insphere_ab, eb, bz, ez, -az, eab);
    const abdlen = sum_three_scale(insphere_ab, bd, da, dz, az, bz, abd);
    const bcelen = sum_three_scale(insphere_bc, ce, eb, ez, bz, cz, bce);
    const cdalen = sum_three_scale(cd, da, ac, az, cz, dz, cda);
    const deblen = sum_three_scale(de, eb, bd, bz, dz, ez, deb);
    const eaclen = sum_three_scale(ea, ac, ce, cz, ez, az, eac);

    const deterlen = sum_three(
        liftexact(cdelen, cde, bcelen, bce, deblen, deb, bcdlen, bcd, ax, ay, az, adet), adet,
        liftexact(dealen, dea, cdalen, cda, eaclen, eac, cdelen, cde, bx, by, bz, bdet), bdet,
        sum_three(
            liftexact(eablen, eab, deblen, deb, abdlen, abd, dealen, dea, cx, cy, cz, cdet), cdet,
            liftexact(abclen, abc, eaclen, eac, bcelen, bce, eablen, eab, dx, dy, dz, ddet), ddet,
            liftexact(bcdlen, bcd, abdlen, abd, cdalen, cda, abclen, abc, ex, ey, ez, edet), edet, cddet, cdedet), cdedet, abdet, deter);

    return deter[deterlen - 1];
}

const xdet = vec(96);
const ydet = vec(96);
const zdet = vec(96);
const insphere_fin = vec(1152);

function liftadapt(a, b, c, az, bz, cz, x, y, z, out) {
    const len = sum_three_scale(a, b, c, az, bz, cz, _24);
    return sum_three(
        scale(scale(len, _24, x, insphere_48), insphere_48, x, xdet), xdet,
        scale(scale(len, _24, y, insphere_48), insphere_48, y, ydet), ydet,
        scale(scale(len, _24, z, insphere_48), insphere_48, z, zdet), zdet, _192, out);
}

function insphereadapt(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, ex, ey, ez, permanent) {
    let ab3, bc3, cd3, da3, ac3, bd3;

    let aextail, bextail, cextail, dextail;
    let aeytail, beytail, ceytail, deytail;
    let aeztail, beztail, ceztail, deztail;

    let bvirt, c, ahi, alo, bhi, blo, _i, _j, _0, s1, s0, t1, t0;

    const aex = ax - ex;
    const bex = bx - ex;
    const cex = cx - ex;
    const dex = dx - ex;
    const aey = ay - ey;
    const bey = by - ey;
    const cey = cy - ey;
    const dey = dy - ey;
    const aez = az - ez;
    const bez = bz - ez;
    const cez = cz - ez;
    const dez = dz - ez;

    s1 = aex * bey;
    c = splitter * aex;
    ahi = c - (c - aex);
    alo = aex - ahi;
    c = splitter * bey;
    bhi = c - (c - bey);
    blo = bey - bhi;
    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);
    t1 = bex * aey;
    c = splitter * bex;
    ahi = c - (c - bex);
    alo = bex - ahi;
    c = splitter * aey;
    bhi = c - (c - aey);
    blo = aey - bhi;
    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);
    _i = s0 - t0;
    bvirt = s0 - _i;
    insphere_ab[0] = s0 - (_i + bvirt) + (bvirt - t0);
    _j = s1 + _i;
    bvirt = _j - s1;
    _0 = s1 - (_j - bvirt) + (_i - bvirt);
    _i = _0 - t1;
    bvirt = _0 - _i;
    insphere_ab[1] = _0 - (_i + bvirt) + (bvirt - t1);
    ab3 = _j + _i;
    bvirt = ab3 - _j;
    insphere_ab[2] = _j - (ab3 - bvirt) + (_i - bvirt);
    insphere_ab[3] = ab3;
    s1 = bex * cey;
    c = splitter * bex;
    ahi = c - (c - bex);
    alo = bex - ahi;
    c = splitter * cey;
    bhi = c - (c - cey);
    blo = cey - bhi;
    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);
    t1 = cex * bey;
    c = splitter * cex;
    ahi = c - (c - cex);
    alo = cex - ahi;
    c = splitter * bey;
    bhi = c - (c - bey);
    blo = bey - bhi;
    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);
    _i = s0 - t0;
    bvirt = s0 - _i;
    insphere_bc[0] = s0 - (_i + bvirt) + (bvirt - t0);
    _j = s1 + _i;
    bvirt = _j - s1;
    _0 = s1 - (_j - bvirt) + (_i - bvirt);
    _i = _0 - t1;
    bvirt = _0 - _i;
    insphere_bc[1] = _0 - (_i + bvirt) + (bvirt - t1);
    bc3 = _j + _i;
    bvirt = bc3 - _j;
    insphere_bc[2] = _j - (bc3 - bvirt) + (_i - bvirt);
    insphere_bc[3] = bc3;
    s1 = cex * dey;
    c = splitter * cex;
    ahi = c - (c - cex);
    alo = cex - ahi;
    c = splitter * dey;
    bhi = c - (c - dey);
    blo = dey - bhi;
    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);
    t1 = dex * cey;
    c = splitter * dex;
    ahi = c - (c - dex);
    alo = dex - ahi;
    c = splitter * cey;
    bhi = c - (c - cey);
    blo = cey - bhi;
    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);
    _i = s0 - t0;
    bvirt = s0 - _i;
    cd[0] = s0 - (_i + bvirt) + (bvirt - t0);
    _j = s1 + _i;
    bvirt = _j - s1;
    _0 = s1 - (_j - bvirt) + (_i - bvirt);
    _i = _0 - t1;
    bvirt = _0 - _i;
    cd[1] = _0 - (_i + bvirt) + (bvirt - t1);
    cd3 = _j + _i;
    bvirt = cd3 - _j;
    cd[2] = _j - (cd3 - bvirt) + (_i - bvirt);
    cd[3] = cd3;
    s1 = dex * aey;
    c = splitter * dex;
    ahi = c - (c - dex);
    alo = dex - ahi;
    c = splitter * aey;
    bhi = c - (c - aey);
    blo = aey - bhi;
    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);
    t1 = aex * dey;
    c = splitter * aex;
    ahi = c - (c - aex);
    alo = aex - ahi;
    c = splitter * dey;
    bhi = c - (c - dey);
    blo = dey - bhi;
    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);
    _i = s0 - t0;
    bvirt = s0 - _i;
    da[0] = s0 - (_i + bvirt) + (bvirt - t0);
    _j = s1 + _i;
    bvirt = _j - s1;
    _0 = s1 - (_j - bvirt) + (_i - bvirt);
    _i = _0 - t1;
    bvirt = _0 - _i;
    da[1] = _0 - (_i + bvirt) + (bvirt - t1);
    da3 = _j + _i;
    bvirt = da3 - _j;
    da[2] = _j - (da3 - bvirt) + (_i - bvirt);
    da[3] = da3;
    s1 = aex * cey;
    c = splitter * aex;
    ahi = c - (c - aex);
    alo = aex - ahi;
    c = splitter * cey;
    bhi = c - (c - cey);
    blo = cey - bhi;
    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);
    t1 = cex * aey;
    c = splitter * cex;
    ahi = c - (c - cex);
    alo = cex - ahi;
    c = splitter * aey;
    bhi = c - (c - aey);
    blo = aey - bhi;
    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);
    _i = s0 - t0;
    bvirt = s0 - _i;
    ac[0] = s0 - (_i + bvirt) + (bvirt - t0);
    _j = s1 + _i;
    bvirt = _j - s1;
    _0 = s1 - (_j - bvirt) + (_i - bvirt);
    _i = _0 - t1;
    bvirt = _0 - _i;
    ac[1] = _0 - (_i + bvirt) + (bvirt - t1);
    ac3 = _j + _i;
    bvirt = ac3 - _j;
    ac[2] = _j - (ac3 - bvirt) + (_i - bvirt);
    ac[3] = ac3;
    s1 = bex * dey;
    c = splitter * bex;
    ahi = c - (c - bex);
    alo = bex - ahi;
    c = splitter * dey;
    bhi = c - (c - dey);
    blo = dey - bhi;
    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);
    t1 = dex * bey;
    c = splitter * dex;
    ahi = c - (c - dex);
    alo = dex - ahi;
    c = splitter * bey;
    bhi = c - (c - bey);
    blo = bey - bhi;
    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);
    _i = s0 - t0;
    bvirt = s0 - _i;
    bd[0] = s0 - (_i + bvirt) + (bvirt - t0);
    _j = s1 + _i;
    bvirt = _j - s1;
    _0 = s1 - (_j - bvirt) + (_i - bvirt);
    _i = _0 - t1;
    bvirt = _0 - _i;
    bd[1] = _0 - (_i + bvirt) + (bvirt - t1);
    bd3 = _j + _i;
    bvirt = bd3 - _j;
    bd[2] = _j - (bd3 - bvirt) + (_i - bvirt);
    bd[3] = bd3;

    const finlen = sum(
        sum(
            negate(liftadapt(insphere_bc, cd, bd, dez, bez, -cez, aex, aey, aez, adet), adet), adet,
            liftadapt(cd, da, ac, aez, cez, dez, bex, bey, bez, bdet), bdet, abdet), abdet,
        sum(
            negate(liftadapt(da, insphere_ab, bd, bez, dez, aez, cex, cey, cez, cdet), cdet), cdet,
            liftadapt(insphere_ab, insphere_bc, ac, cez, aez, -bez, dex, dey, dez, ddet), ddet, cddet), cddet, insphere_fin);

    let det = estimate(finlen, insphere_fin);
    let errbound = isperrboundB * permanent;
    if (det >= errbound || -det >= errbound) {
        return det;
    }

    bvirt = ax - aex;
    aextail = ax - (aex + bvirt) + (bvirt - ex);
    bvirt = ay - aey;
    aeytail = ay - (aey + bvirt) + (bvirt - ey);
    bvirt = az - aez;
    aeztail = az - (aez + bvirt) + (bvirt - ez);
    bvirt = bx - bex;
    bextail = bx - (bex + bvirt) + (bvirt - ex);
    bvirt = by - bey;
    beytail = by - (bey + bvirt) + (bvirt - ey);
    bvirt = bz - bez;
    beztail = bz - (bez + bvirt) + (bvirt - ez);
    bvirt = cx - cex;
    cextail = cx - (cex + bvirt) + (bvirt - ex);
    bvirt = cy - cey;
    ceytail = cy - (cey + bvirt) + (bvirt - ey);
    bvirt = cz - cez;
    ceztail = cz - (cez + bvirt) + (bvirt - ez);
    bvirt = dx - dex;
    dextail = dx - (dex + bvirt) + (bvirt - ex);
    bvirt = dy - dey;
    deytail = dy - (dey + bvirt) + (bvirt - ey);
    bvirt = dz - dez;
    deztail = dz - (dez + bvirt) + (bvirt - ez);
    if (aextail === 0 && aeytail === 0 && aeztail === 0 &&
        bextail === 0 && beytail === 0 && beztail === 0 &&
        cextail === 0 && ceytail === 0 && ceztail === 0 &&
        dextail === 0 && deytail === 0 && deztail === 0) {
        return det;
    }

    errbound = isperrboundC * permanent + resulterrbound * Math.abs(det);

    const abeps = (aex * beytail + bey * aextail) - (aey * bextail + bex * aeytail);
    const bceps = (bex * ceytail + cey * bextail) - (bey * cextail + cex * beytail);
    const cdeps = (cex * deytail + dey * cextail) - (cey * dextail + dex * ceytail);
    const daeps = (dex * aeytail + aey * dextail) - (dey * aextail + aex * deytail);
    const aceps = (aex * ceytail + cey * aextail) - (aey * cextail + cex * aeytail);
    const bdeps = (bex * deytail + dey * bextail) - (bey * dextail + dex * beytail);
    det +=
        (((bex * bex + bey * bey + bez * bez) * ((cez * daeps + dez * aceps + aez * cdeps) +
        (ceztail * da3 + deztail * ac3 + aeztail * cd3)) + (dex * dex + dey * dey + dez * dez) *
        ((aez * bceps - bez * aceps + cez * abeps) + (aeztail * bc3 - beztail * ac3 + ceztail * ab3))) -
        ((aex * aex + aey * aey + aez * aez) * ((bez * cdeps - cez * bdeps + dez * bceps) +
        (beztail * cd3 - ceztail * bd3 + deztail * bc3)) + (cex * cex + cey * cey + cez * cez) *
        ((dez * abeps + aez * bdeps + bez * daeps) + (deztail * ab3 + aeztail * bd3 + beztail * da3)))) +
        2 * (((bex * bextail + bey * beytail + bez * beztail) * (cez * da3 + dez * ac3 + aez * cd3) +
        (dex * dextail + dey * deytail + dez * deztail) * (aez * bc3 - bez * ac3 + cez * ab3)) -
        ((aex * aextail + aey * aeytail + aez * aeztail) * (bez * cd3 - cez * bd3 + dez * bc3) +
        (cex * cextail + cey * ceytail + cez * ceztail) * (dez * ab3 + aez * bd3 + bez * da3)));

    if (det >= errbound || -det >= errbound) {
        return det;
    }

    return insphereexact(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, ex, ey, ez);
}

function insphere(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, ex, ey, ez) {
    const aex = ax - ex;
    const bex = bx - ex;
    const cex = cx - ex;
    const dex = dx - ex;
    const aey = ay - ey;
    const bey = by - ey;
    const cey = cy - ey;
    const dey = dy - ey;
    const aez = az - ez;
    const bez = bz - ez;
    const cez = cz - ez;
    const dez = dz - ez;

    const aexbey = aex * bey;
    const bexaey = bex * aey;
    const ab = aexbey - bexaey;
    const bexcey = bex * cey;
    const cexbey = cex * bey;
    const bc = bexcey - cexbey;
    const cexdey = cex * dey;
    const dexcey = dex * cey;
    const cd = cexdey - dexcey;
    const dexaey = dex * aey;
    const aexdey = aex * dey;
    const da = dexaey - aexdey;
    const aexcey = aex * cey;
    const cexaey = cex * aey;
    const ac = aexcey - cexaey;
    const bexdey = bex * dey;
    const dexbey = dex * bey;
    const bd = bexdey - dexbey;

    const abc = aez * bc - bez * ac + cez * ab;
    const bcd = bez * cd - cez * bd + dez * bc;
    const cda = cez * da + dez * ac + aez * cd;
    const dab = dez * ab + aez * bd + bez * da;

    const alift = aex * aex + aey * aey + aez * aez;
    const blift = bex * bex + bey * bey + bez * bez;
    const clift = cex * cex + cey * cey + cez * cez;
    const dlift = dex * dex + dey * dey + dez * dez;

    const det = (clift * dab - dlift * abc) + (alift * bcd - blift * cda);

    const aezplus = Math.abs(aez);
    const bezplus = Math.abs(bez);
    const cezplus = Math.abs(cez);
    const dezplus = Math.abs(dez);
    const aexbeyplus = Math.abs(aexbey);
    const bexaeyplus = Math.abs(bexaey);
    const bexceyplus = Math.abs(bexcey);
    const cexbeyplus = Math.abs(cexbey);
    const cexdeyplus = Math.abs(cexdey);
    const dexceyplus = Math.abs(dexcey);
    const dexaeyplus = Math.abs(dexaey);
    const aexdeyplus = Math.abs(aexdey);
    const aexceyplus = Math.abs(aexcey);
    const cexaeyplus = Math.abs(cexaey);
    const bexdeyplus = Math.abs(bexdey);
    const dexbeyplus = Math.abs(dexbey);
    const permanent =
        ((cexdeyplus + dexceyplus) * bezplus + (dexbeyplus + bexdeyplus) * cezplus + (bexceyplus + cexbeyplus) * dezplus) * alift +
        ((dexaeyplus + aexdeyplus) * cezplus + (aexceyplus + cexaeyplus) * dezplus + (cexdeyplus + dexceyplus) * aezplus) * blift +
        ((aexbeyplus + bexaeyplus) * dezplus + (bexdeyplus + dexbeyplus) * aezplus + (dexaeyplus + aexdeyplus) * bezplus) * clift +
        ((bexceyplus + cexbeyplus) * aezplus + (cexaeyplus + aexceyplus) * bezplus + (aexbeyplus + bexaeyplus) * cezplus) * dlift;

    const errbound = isperrboundA * permanent;
    if (det > errbound || -det > errbound) {
        return det;
    }
    return -insphereadapt(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, ex, ey, ez, permanent);
}

function inspherefast(pax, pay, paz, pbx, pby, pbz, pcx, pcy, pcz, pdx, pdy, pdz, pex, pey, pez) {
    const aex = pax - pex;
    const bex = pbx - pex;
    const cex = pcx - pex;
    const dex = pdx - pex;
    const aey = pay - pey;
    const bey = pby - pey;
    const cey = pcy - pey;
    const dey = pdy - pey;
    const aez = paz - pez;
    const bez = pbz - pez;
    const cez = pcz - pez;
    const dez = pdz - pez;

    const ab = aex * bey - bex * aey;
    const bc = bex * cey - cex * bey;
    const cd = cex * dey - dex * cey;
    const da = dex * aey - aex * dey;
    const ac = aex * cey - cex * aey;
    const bd = bex * dey - dex * bey;

    const abc = aez * bc - bez * ac + cez * ab;
    const bcd = bez * cd - cez * bd + dez * bc;
    const cda = cez * da + dez * ac + aez * cd;
    const dab = dez * ab + aez * bd + bez * da;

    const alift = aex * aex + aey * aey + aez * aez;
    const blift = bex * bex + bey * bey + bez * bez;
    const clift = cex * cex + cey * cey + cez * cez;
    const dlift = dex * dex + dey * dey + dez * dez;

    return (clift * dab - dlift * abc) + (alift * bcd - blift * cda);
}

;// CONCATENATED MODULE: ./node_modules/robust-predicates/index.js






;// CONCATENATED MODULE: ./node_modules/delaunator/index.js

const EPSILON = Math.pow(2, -52);
const EDGE_STACK = new Uint32Array(512);



class Delaunator {

    static from(points, getX = defaultGetX, getY = defaultGetY) {
        const n = points.length;
        const coords = new Float64Array(n * 2);

        for (let i = 0; i < n; i++) {
            const p = points[i];
            coords[2 * i] = getX(p);
            coords[2 * i + 1] = getY(p);
        }

        return new Delaunator(coords);
    }

    constructor(coords) {
        const n = coords.length >> 1;
        if (n > 0 && typeof coords[0] !== 'number') throw new Error('Expected coords to contain numbers.');

        this.coords = coords;

        // arrays that will store the triangulation graph
        const maxTriangles = Math.max(2 * n - 5, 0);
        this._triangles = new Uint32Array(maxTriangles * 3);
        this._halfedges = new Int32Array(maxTriangles * 3);

        // temporary arrays for tracking the edges of the advancing convex hull
        this._hashSize = Math.ceil(Math.sqrt(n));
        this._hullPrev = new Uint32Array(n); // edge to prev edge
        this._hullNext = new Uint32Array(n); // edge to next edge
        this._hullTri = new Uint32Array(n); // edge to adjacent triangle
        this._hullHash = new Int32Array(this._hashSize).fill(-1); // angular edge hash

        // temporary arrays for sorting points
        this._ids = new Uint32Array(n);
        this._dists = new Float64Array(n);

        this.update();
    }

    update() {
        const {coords, _hullPrev: hullPrev, _hullNext: hullNext, _hullTri: hullTri, _hullHash: hullHash} =  this;
        const n = coords.length >> 1;

        // populate an array of point indices; calculate input data bbox
        let minX = Infinity;
        let minY = Infinity;
        let maxX = -Infinity;
        let maxY = -Infinity;

        for (let i = 0; i < n; i++) {
            const x = coords[2 * i];
            const y = coords[2 * i + 1];
            if (x < minX) minX = x;
            if (y < minY) minY = y;
            if (x > maxX) maxX = x;
            if (y > maxY) maxY = y;
            this._ids[i] = i;
        }
        const cx = (minX + maxX) / 2;
        const cy = (minY + maxY) / 2;

        let minDist = Infinity;
        let i0, i1, i2;

        // pick a seed point close to the center
        for (let i = 0; i < n; i++) {
            const d = dist(cx, cy, coords[2 * i], coords[2 * i + 1]);
            if (d < minDist) {
                i0 = i;
                minDist = d;
            }
        }
        const i0x = coords[2 * i0];
        const i0y = coords[2 * i0 + 1];

        minDist = Infinity;

        // find the point closest to the seed
        for (let i = 0; i < n; i++) {
            if (i === i0) continue;
            const d = dist(i0x, i0y, coords[2 * i], coords[2 * i + 1]);
            if (d < minDist && d > 0) {
                i1 = i;
                minDist = d;
            }
        }
        let i1x = coords[2 * i1];
        let i1y = coords[2 * i1 + 1];

        let minRadius = Infinity;

        // find the third point which forms the smallest circumcircle with the first two
        for (let i = 0; i < n; i++) {
            if (i === i0 || i === i1) continue;
            const r = circumradius(i0x, i0y, i1x, i1y, coords[2 * i], coords[2 * i + 1]);
            if (r < minRadius) {
                i2 = i;
                minRadius = r;
            }
        }
        let i2x = coords[2 * i2];
        let i2y = coords[2 * i2 + 1];

        if (minRadius === Infinity) {
            // order collinear points by dx (or dy if all x are identical)
            // and return the list as a hull
            for (let i = 0; i < n; i++) {
                this._dists[i] = (coords[2 * i] - coords[0]) || (coords[2 * i + 1] - coords[1]);
            }
            quicksort(this._ids, this._dists, 0, n - 1);
            const hull = new Uint32Array(n);
            let j = 0;
            for (let i = 0, d0 = -Infinity; i < n; i++) {
                const id = this._ids[i];
                if (this._dists[id] > d0) {
                    hull[j++] = id;
                    d0 = this._dists[id];
                }
            }
            this.hull = hull.subarray(0, j);
            this.triangles = new Uint32Array(0);
            this.halfedges = new Uint32Array(0);
            return;
        }

        // swap the order of the seed points for counter-clockwise orientation
        if (orient2d(i0x, i0y, i1x, i1y, i2x, i2y) < 0) {
            const i = i1;
            const x = i1x;
            const y = i1y;
            i1 = i2;
            i1x = i2x;
            i1y = i2y;
            i2 = i;
            i2x = x;
            i2y = y;
        }

        const center = circumcenter(i0x, i0y, i1x, i1y, i2x, i2y);
        this._cx = center.x;
        this._cy = center.y;

        for (let i = 0; i < n; i++) {
            this._dists[i] = dist(coords[2 * i], coords[2 * i + 1], center.x, center.y);
        }

        // sort the points by distance from the seed triangle circumcenter
        quicksort(this._ids, this._dists, 0, n - 1);

        // set up the seed triangle as the starting hull
        this._hullStart = i0;
        let hullSize = 3;

        hullNext[i0] = hullPrev[i2] = i1;
        hullNext[i1] = hullPrev[i0] = i2;
        hullNext[i2] = hullPrev[i1] = i0;

        hullTri[i0] = 0;
        hullTri[i1] = 1;
        hullTri[i2] = 2;

        hullHash.fill(-1);
        hullHash[this._hashKey(i0x, i0y)] = i0;
        hullHash[this._hashKey(i1x, i1y)] = i1;
        hullHash[this._hashKey(i2x, i2y)] = i2;

        this.trianglesLen = 0;
        this._addTriangle(i0, i1, i2, -1, -1, -1);

        for (let k = 0, xp, yp; k < this._ids.length; k++) {
            const i = this._ids[k];
            const x = coords[2 * i];
            const y = coords[2 * i + 1];

            // skip near-duplicate points
            if (k > 0 && Math.abs(x - xp) <= EPSILON && Math.abs(y - yp) <= EPSILON) continue;
            xp = x;
            yp = y;

            // skip seed triangle points
            if (i === i0 || i === i1 || i === i2) continue;

            // find a visible edge on the convex hull using edge hash
            let start = 0;
            for (let j = 0, key = this._hashKey(x, y); j < this._hashSize; j++) {
                start = hullHash[(key + j) % this._hashSize];
                if (start !== -1 && start !== hullNext[start]) break;
            }

            start = hullPrev[start];
            let e = start, q;
            while (q = hullNext[e], orient2d(x, y, coords[2 * e], coords[2 * e + 1], coords[2 * q], coords[2 * q + 1]) >= 0) {
                e = q;
                if (e === start) {
                    e = -1;
                    break;
                }
            }
            if (e === -1) continue; // likely a near-duplicate point; skip it

            // add the first triangle from the point
            let t = this._addTriangle(e, i, hullNext[e], -1, -1, hullTri[e]);

            // recursively flip triangles from the point until they satisfy the Delaunay condition
            hullTri[i] = this._legalize(t + 2);
            hullTri[e] = t; // keep track of boundary triangles on the hull
            hullSize++;

            // walk forward through the hull, adding more triangles and flipping recursively
            let n = hullNext[e];
            while (q = hullNext[n], orient2d(x, y, coords[2 * n], coords[2 * n + 1], coords[2 * q], coords[2 * q + 1]) < 0) {
                t = this._addTriangle(n, i, q, hullTri[i], -1, hullTri[n]);
                hullTri[i] = this._legalize(t + 2);
                hullNext[n] = n; // mark as removed
                hullSize--;
                n = q;
            }

            // walk backward from the other side, adding more triangles and flipping
            if (e === start) {
                while (q = hullPrev[e], orient2d(x, y, coords[2 * q], coords[2 * q + 1], coords[2 * e], coords[2 * e + 1]) < 0) {
                    t = this._addTriangle(q, i, e, -1, hullTri[e], hullTri[q]);
                    this._legalize(t + 2);
                    hullTri[q] = t;
                    hullNext[e] = e; // mark as removed
                    hullSize--;
                    e = q;
                }
            }

            // update the hull indices
            this._hullStart = hullPrev[i] = e;
            hullNext[e] = hullPrev[n] = i;
            hullNext[i] = n;

            // save the two new edges in the hash table
            hullHash[this._hashKey(x, y)] = i;
            hullHash[this._hashKey(coords[2 * e], coords[2 * e + 1])] = e;
        }

        this.hull = new Uint32Array(hullSize);
        for (let i = 0, e = this._hullStart; i < hullSize; i++) {
            this.hull[i] = e;
            e = hullNext[e];
        }

        // trim typed triangle mesh arrays
        this.triangles = this._triangles.subarray(0, this.trianglesLen);
        this.halfedges = this._halfedges.subarray(0, this.trianglesLen);
    }

    _hashKey(x, y) {
        return Math.floor(pseudoAngle(x - this._cx, y - this._cy) * this._hashSize) % this._hashSize;
    }

    _legalize(a) {
        const {_triangles: triangles, _halfedges: halfedges, coords} = this;

        let i = 0;
        let ar = 0;

        // recursion eliminated with a fixed-size stack
        while (true) {
            const b = halfedges[a];

            /* if the pair of triangles doesn't satisfy the Delaunay condition
             * (p1 is inside the circumcircle of [p0, pl, pr]), flip them,
             * then do the same check/flip recursively for the new pair of triangles
             *
             *           pl                    pl
             *          /||\                  /  \
             *       al/ || \bl            al/    \a
             *        /  ||  \              /      \
             *       /  a||b  \    flip    /___ar___\
             *     p0\   ||   /p1   =>   p0\---bl---/p1
             *        \  ||  /              \      /
             *       ar\ || /br             b\    /br
             *          \||/                  \  /
             *           pr                    pr
             */
            const a0 = a - a % 3;
            ar = a0 + (a + 2) % 3;

            if (b === -1) { // convex hull edge
                if (i === 0) break;
                a = EDGE_STACK[--i];
                continue;
            }

            const b0 = b - b % 3;
            const al = a0 + (a + 1) % 3;
            const bl = b0 + (b + 2) % 3;

            const p0 = triangles[ar];
            const pr = triangles[a];
            const pl = triangles[al];
            const p1 = triangles[bl];

            const illegal = inCircle(
                coords[2 * p0], coords[2 * p0 + 1],
                coords[2 * pr], coords[2 * pr + 1],
                coords[2 * pl], coords[2 * pl + 1],
                coords[2 * p1], coords[2 * p1 + 1]);

            if (illegal) {
                triangles[a] = p1;
                triangles[b] = p0;

                const hbl = halfedges[bl];

                // edge swapped on the other side of the hull (rare); fix the halfedge reference
                if (hbl === -1) {
                    let e = this._hullStart;
                    do {
                        if (this._hullTri[e] === bl) {
                            this._hullTri[e] = a;
                            break;
                        }
                        e = this._hullPrev[e];
                    } while (e !== this._hullStart);
                }
                this._link(a, hbl);
                this._link(b, halfedges[ar]);
                this._link(ar, bl);

                const br = b0 + (b + 1) % 3;

                // don't worry about hitting the cap: it can only happen on extremely degenerate input
                if (i < EDGE_STACK.length) {
                    EDGE_STACK[i++] = br;
                }
            } else {
                if (i === 0) break;
                a = EDGE_STACK[--i];
            }
        }

        return ar;
    }

    _link(a, b) {
        this._halfedges[a] = b;
        if (b !== -1) this._halfedges[b] = a;
    }

    // add a new triangle given vertex indices and adjacent half-edge ids
    _addTriangle(i0, i1, i2, a, b, c) {
        const t = this.trianglesLen;

        this._triangles[t] = i0;
        this._triangles[t + 1] = i1;
        this._triangles[t + 2] = i2;

        this._link(t, a);
        this._link(t + 1, b);
        this._link(t + 2, c);

        this.trianglesLen += 3;

        return t;
    }
}

// monotonically increases with real angle, but doesn't need expensive trigonometry
function pseudoAngle(dx, dy) {
    const p = dx / (Math.abs(dx) + Math.abs(dy));
    return (dy > 0 ? 3 - p : 1 + p) / 4; // [0..1]
}

function dist(ax, ay, bx, by) {
    const dx = ax - bx;
    const dy = ay - by;
    return dx * dx + dy * dy;
}

function inCircle(ax, ay, bx, by, cx, cy, px, py) {
    const dx = ax - px;
    const dy = ay - py;
    const ex = bx - px;
    const ey = by - py;
    const fx = cx - px;
    const fy = cy - py;

    const ap = dx * dx + dy * dy;
    const bp = ex * ex + ey * ey;
    const cp = fx * fx + fy * fy;

    return dx * (ey * cp - bp * fy) -
           dy * (ex * cp - bp * fx) +
           ap * (ex * fy - ey * fx) < 0;
}

function circumradius(ax, ay, bx, by, cx, cy) {
    const dx = bx - ax;
    const dy = by - ay;
    const ex = cx - ax;
    const ey = cy - ay;

    const bl = dx * dx + dy * dy;
    const cl = ex * ex + ey * ey;
    const d = 0.5 / (dx * ey - dy * ex);

    const x = (ey * bl - dy * cl) * d;
    const y = (dx * cl - ex * bl) * d;

    return x * x + y * y;
}

function circumcenter(ax, ay, bx, by, cx, cy) {
    const dx = bx - ax;
    const dy = by - ay;
    const ex = cx - ax;
    const ey = cy - ay;

    const bl = dx * dx + dy * dy;
    const cl = ex * ex + ey * ey;
    const d = 0.5 / (dx * ey - dy * ex);

    const x = ax + (ey * bl - dy * cl) * d;
    const y = ay + (dx * cl - ex * bl) * d;

    return {x, y};
}

function quicksort(ids, dists, left, right) {
    if (right - left <= 20) {
        for (let i = left + 1; i <= right; i++) {
            const temp = ids[i];
            const tempDist = dists[temp];
            let j = i - 1;
            while (j >= left && dists[ids[j]] > tempDist) ids[j + 1] = ids[j--];
            ids[j + 1] = temp;
        }
    } else {
        const median = (left + right) >> 1;
        let i = left + 1;
        let j = right;
        delaunator_swap(ids, median, i);
        if (dists[ids[left]] > dists[ids[right]]) delaunator_swap(ids, left, right);
        if (dists[ids[i]] > dists[ids[right]]) delaunator_swap(ids, i, right);
        if (dists[ids[left]] > dists[ids[i]]) delaunator_swap(ids, left, i);

        const temp = ids[i];
        const tempDist = dists[temp];
        while (true) {
            do i++; while (dists[ids[i]] < tempDist);
            do j--; while (dists[ids[j]] > tempDist);
            if (j < i) break;
            delaunator_swap(ids, i, j);
        }
        ids[left + 1] = ids[j];
        ids[j] = temp;

        if (right - i + 1 >= j - left) {
            quicksort(ids, dists, i, right);
            quicksort(ids, dists, left, j - 1);
        } else {
            quicksort(ids, dists, left, j - 1);
            quicksort(ids, dists, i, right);
        }
    }
}

function delaunator_swap(arr, i, j) {
    const tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp;
}

function defaultGetX(p) {
    return p[0];
}
function defaultGetY(p) {
    return p[1];
}

;// CONCATENATED MODULE: ./node_modules/d3-delaunay/src/path.js
const src_path_epsilon = 1e-6;

class path_Path {
  constructor() {
    this._x0 = this._y0 = // start of current subpath
    this._x1 = this._y1 = null; // end of current subpath
    this._ = "";
  }
  moveTo(x, y) {
    this._ += `M${this._x0 = this._x1 = +x},${this._y0 = this._y1 = +y}`;
  }
  closePath() {
    if (this._x1 !== null) {
      this._x1 = this._x0, this._y1 = this._y0;
      this._ += "Z";
    }
  }
  lineTo(x, y) {
    this._ += `L${this._x1 = +x},${this._y1 = +y}`;
  }
  arc(x, y, r) {
    x = +x, y = +y, r = +r;
    const x0 = x + r;
    const y0 = y;
    if (r < 0) throw new Error("negative radius");
    if (this._x1 === null) this._ += `M${x0},${y0}`;
    else if (Math.abs(this._x1 - x0) > src_path_epsilon || Math.abs(this._y1 - y0) > src_path_epsilon) this._ += "L" + x0 + "," + y0;
    if (!r) return;
    this._ += `A${r},${r},0,1,1,${x - r},${y}A${r},${r},0,1,1,${this._x1 = x0},${this._y1 = y0}`;
  }
  rect(x, y, w, h) {
    this._ += `M${this._x0 = this._x1 = +x},${this._y0 = this._y1 = +y}h${+w}v${+h}h${-w}Z`;
  }
  value() {
    return this._ || null;
  }
}

;// CONCATENATED MODULE: ./node_modules/d3-delaunay/src/polygon.js
class Polygon {
  constructor() {
    this._ = [];
  }
  moveTo(x, y) {
    this._.push([x, y]);
  }
  closePath() {
    this._.push(this._[0].slice());
  }
  lineTo(x, y) {
    this._.push([x, y]);
  }
  value() {
    return this._.length ? this._ : null;
  }
}

;// CONCATENATED MODULE: ./node_modules/d3-delaunay/src/voronoi.js



class Voronoi {
  constructor(delaunay, [xmin, ymin, xmax, ymax] = [0, 0, 960, 500]) {
    if (!((xmax = +xmax) >= (xmin = +xmin)) || !((ymax = +ymax) >= (ymin = +ymin))) throw new Error("invalid bounds");
    this.delaunay = delaunay;
    this._circumcenters = new Float64Array(delaunay.points.length * 2);
    this.vectors = new Float64Array(delaunay.points.length * 2);
    this.xmax = xmax, this.xmin = xmin;
    this.ymax = ymax, this.ymin = ymin;
    this._init();
  }
  update() {
    this.delaunay.update();
    this._init();
    return this;
  }
  _init() {
    const {delaunay: {points, hull, triangles}, vectors} = this;

    // Compute circumcenters.
    const circumcenters = this.circumcenters = this._circumcenters.subarray(0, triangles.length / 3 * 2);
    for (let i = 0, j = 0, n = triangles.length, x, y; i < n; i += 3, j += 2) {
      const t1 = triangles[i] * 2;
      const t2 = triangles[i + 1] * 2;
      const t3 = triangles[i + 2] * 2;
      const x1 = points[t1];
      const y1 = points[t1 + 1];
      const x2 = points[t2];
      const y2 = points[t2 + 1];
      const x3 = points[t3];
      const y3 = points[t3 + 1];

      const dx = x2 - x1;
      const dy = y2 - y1;
      const ex = x3 - x1;
      const ey = y3 - y1;
      const ab = (dx * ey - dy * ex) * 2;

      if (Math.abs(ab) < 1e-9) {
        // degenerate case (collinear diagram)
        // almost equal points (degenerate triangle)
        // the circumcenter is at the infinity, in a
        // direction that is:
        // 1. orthogonal to the halfedge.
        let a = 1e9;
        // 2. points away from the center; since the list of triangles starts
        // in the center, the first point of the first triangle
        // will be our reference
        const r = triangles[0] * 2;
        a *= Math.sign((points[r] - x1) * ey - (points[r + 1] - y1) * ex);
        x = (x1 + x3) / 2 - a * ey;
        y = (y1 + y3) / 2 + a * ex;
      } else {
        const d = 1 / ab;
        const bl = dx * dx + dy * dy;
        const cl = ex * ex + ey * ey;
        x = x1 + (ey * bl - dy * cl) * d;
        y = y1 + (dx * cl - ex * bl) * d;
      }
      circumcenters[j] = x;
      circumcenters[j + 1] = y;
    }

    // Compute exterior cell rays.
    let h = hull[hull.length - 1];
    let p0, p1 = h * 4;
    let x0, x1 = points[2 * h];
    let y0, y1 = points[2 * h + 1];
    vectors.fill(0);
    for (let i = 0; i < hull.length; ++i) {
      h = hull[i];
      p0 = p1, x0 = x1, y0 = y1;
      p1 = h * 4, x1 = points[2 * h], y1 = points[2 * h + 1];
      vectors[p0 + 2] = vectors[p1] = y0 - y1;
      vectors[p0 + 3] = vectors[p1 + 1] = x1 - x0;
    }
  }
  render(context) {
    const buffer = context == null ? context = new path_Path : undefined;
    const {delaunay: {halfedges, inedges, hull}, circumcenters, vectors} = this;
    if (hull.length <= 1) return null;
    for (let i = 0, n = halfedges.length; i < n; ++i) {
      const j = halfedges[i];
      if (j < i) continue;
      const ti = Math.floor(i / 3) * 2;
      const tj = Math.floor(j / 3) * 2;
      const xi = circumcenters[ti];
      const yi = circumcenters[ti + 1];
      const xj = circumcenters[tj];
      const yj = circumcenters[tj + 1];
      this._renderSegment(xi, yi, xj, yj, context);
    }
    let h0, h1 = hull[hull.length - 1];
    for (let i = 0; i < hull.length; ++i) {
      h0 = h1, h1 = hull[i];
      const t = Math.floor(inedges[h1] / 3) * 2;
      const x = circumcenters[t];
      const y = circumcenters[t + 1];
      const v = h0 * 4;
      const p = this._project(x, y, vectors[v + 2], vectors[v + 3]);
      if (p) this._renderSegment(x, y, p[0], p[1], context);
    }
    return buffer && buffer.value();
  }
  renderBounds(context) {
    const buffer = context == null ? context = new path_Path : undefined;
    context.rect(this.xmin, this.ymin, this.xmax - this.xmin, this.ymax - this.ymin);
    return buffer && buffer.value();
  }
  renderCell(i, context) {
    const buffer = context == null ? context = new path_Path : undefined;
    const points = this._clip(i);
    if (points === null || !points.length) return;
    context.moveTo(points[0], points[1]);
    let n = points.length;
    while (points[0] === points[n-2] && points[1] === points[n-1] && n > 1) n -= 2;
    for (let i = 2; i < n; i += 2) {
      if (points[i] !== points[i-2] || points[i+1] !== points[i-1])
        context.lineTo(points[i], points[i + 1]);
    }
    context.closePath();
    return buffer && buffer.value();
  }
  *cellPolygons() {
    const {delaunay: {points}} = this;
    for (let i = 0, n = points.length / 2; i < n; ++i) {
      const cell = this.cellPolygon(i);
      if (cell) cell.index = i, yield cell;
    }
  }
  cellPolygon(i) {
    const polygon = new Polygon;
    this.renderCell(i, polygon);
    return polygon.value();
  }
  _renderSegment(x0, y0, x1, y1, context) {
    let S;
    const c0 = this._regioncode(x0, y0);
    const c1 = this._regioncode(x1, y1);
    if (c0 === 0 && c1 === 0) {
      context.moveTo(x0, y0);
      context.lineTo(x1, y1);
    } else if (S = this._clipSegment(x0, y0, x1, y1, c0, c1)) {
      context.moveTo(S[0], S[1]);
      context.lineTo(S[2], S[3]);
    }
  }
  contains(i, x, y) {
    if ((x = +x, x !== x) || (y = +y, y !== y)) return false;
    return this.delaunay._step(i, x, y) === i;
  }
  *neighbors(i) {
    const ci = this._clip(i);
    if (ci) for (const j of this.delaunay.neighbors(i)) {
      const cj = this._clip(j);
      // find the common edge
      if (cj) loop: for (let ai = 0, li = ci.length; ai < li; ai += 2) {
        for (let aj = 0, lj = cj.length; aj < lj; aj += 2) {
          if (ci[ai] == cj[aj]
          && ci[ai + 1] == cj[aj + 1]
          && ci[(ai + 2) % li] == cj[(aj + lj - 2) % lj]
          && ci[(ai + 3) % li] == cj[(aj + lj - 1) % lj]
          ) {
            yield j;
            break loop;
          }
        }
      }
    }
  }
  _cell(i) {
    const {circumcenters, delaunay: {inedges, halfedges, triangles}} = this;
    const e0 = inedges[i];
    if (e0 === -1) return null; // coincident point
    const points = [];
    let e = e0;
    do {
      const t = Math.floor(e / 3);
      points.push(circumcenters[t * 2], circumcenters[t * 2 + 1]);
      e = e % 3 === 2 ? e - 2 : e + 1;
      if (triangles[e] !== i) break; // bad triangulation
      e = halfedges[e];
    } while (e !== e0 && e !== -1);
    return points;
  }
  _clip(i) {
    // degenerate case (1 valid point: return the box)
    if (i === 0 && this.delaunay.hull.length === 1) {
      return [this.xmax, this.ymin, this.xmax, this.ymax, this.xmin, this.ymax, this.xmin, this.ymin];
    }
    const points = this._cell(i);
    if (points === null) return null;
    const {vectors: V} = this;
    const v = i * 4;
    return V[v] || V[v + 1]
        ? this._clipInfinite(i, points, V[v], V[v + 1], V[v + 2], V[v + 3])
        : this._clipFinite(i, points);
  }
  _clipFinite(i, points) {
    const n = points.length;
    let P = null;
    let x0, y0, x1 = points[n - 2], y1 = points[n - 1];
    let c0, c1 = this._regioncode(x1, y1);
    let e0, e1 = 0;
    for (let j = 0; j < n; j += 2) {
      x0 = x1, y0 = y1, x1 = points[j], y1 = points[j + 1];
      c0 = c1, c1 = this._regioncode(x1, y1);
      if (c0 === 0 && c1 === 0) {
        e0 = e1, e1 = 0;
        if (P) P.push(x1, y1);
        else P = [x1, y1];
      } else {
        let S, sx0, sy0, sx1, sy1;
        if (c0 === 0) {
          if ((S = this._clipSegment(x0, y0, x1, y1, c0, c1)) === null) continue;
          [sx0, sy0, sx1, sy1] = S;
        } else {
          if ((S = this._clipSegment(x1, y1, x0, y0, c1, c0)) === null) continue;
          [sx1, sy1, sx0, sy0] = S;
          e0 = e1, e1 = this._edgecode(sx0, sy0);
          if (e0 && e1) this._edge(i, e0, e1, P, P.length);
          if (P) P.push(sx0, sy0);
          else P = [sx0, sy0];
        }
        e0 = e1, e1 = this._edgecode(sx1, sy1);
        if (e0 && e1) this._edge(i, e0, e1, P, P.length);
        if (P) P.push(sx1, sy1);
        else P = [sx1, sy1];
      }
    }
    if (P) {
      e0 = e1, e1 = this._edgecode(P[0], P[1]);
      if (e0 && e1) this._edge(i, e0, e1, P, P.length);
    } else if (this.contains(i, (this.xmin + this.xmax) / 2, (this.ymin + this.ymax) / 2)) {
      return [this.xmax, this.ymin, this.xmax, this.ymax, this.xmin, this.ymax, this.xmin, this.ymin];
    }
    return P;
  }
  _clipSegment(x0, y0, x1, y1, c0, c1) {
    while (true) {
      if (c0 === 0 && c1 === 0) return [x0, y0, x1, y1];
      if (c0 & c1) return null;
      let x, y, c = c0 || c1;
      if (c & 0b1000) x = x0 + (x1 - x0) * (this.ymax - y0) / (y1 - y0), y = this.ymax;
      else if (c & 0b0100) x = x0 + (x1 - x0) * (this.ymin - y0) / (y1 - y0), y = this.ymin;
      else if (c & 0b0010) y = y0 + (y1 - y0) * (this.xmax - x0) / (x1 - x0), x = this.xmax;
      else y = y0 + (y1 - y0) * (this.xmin - x0) / (x1 - x0), x = this.xmin;
      if (c0) x0 = x, y0 = y, c0 = this._regioncode(x0, y0);
      else x1 = x, y1 = y, c1 = this._regioncode(x1, y1);
    }
  }
  _clipInfinite(i, points, vx0, vy0, vxn, vyn) {
    let P = Array.from(points), p;
    if (p = this._project(P[0], P[1], vx0, vy0)) P.unshift(p[0], p[1]);
    if (p = this._project(P[P.length - 2], P[P.length - 1], vxn, vyn)) P.push(p[0], p[1]);
    if (P = this._clipFinite(i, P)) {
      for (let j = 0, n = P.length, c0, c1 = this._edgecode(P[n - 2], P[n - 1]); j < n; j += 2) {
        c0 = c1, c1 = this._edgecode(P[j], P[j + 1]);
        if (c0 && c1) j = this._edge(i, c0, c1, P, j), n = P.length;
      }
    } else if (this.contains(i, (this.xmin + this.xmax) / 2, (this.ymin + this.ymax) / 2)) {
      P = [this.xmin, this.ymin, this.xmax, this.ymin, this.xmax, this.ymax, this.xmin, this.ymax];
    }
    return P;
  }
  _edge(i, e0, e1, P, j) {
    while (e0 !== e1) {
      let x, y;
      switch (e0) {
        case 0b0101: e0 = 0b0100; continue; // top-left
        case 0b0100: e0 = 0b0110, x = this.xmax, y = this.ymin; break; // top
        case 0b0110: e0 = 0b0010; continue; // top-right
        case 0b0010: e0 = 0b1010, x = this.xmax, y = this.ymax; break; // right
        case 0b1010: e0 = 0b1000; continue; // bottom-right
        case 0b1000: e0 = 0b1001, x = this.xmin, y = this.ymax; break; // bottom
        case 0b1001: e0 = 0b0001; continue; // bottom-left
        case 0b0001: e0 = 0b0101, x = this.xmin, y = this.ymin; break; // left
      }
      // Note: this implicitly checks for out of bounds: if P[j] or P[j+1] are
      // undefined, the conditional statement will be executed.
      if ((P[j] !== x || P[j + 1] !== y) && this.contains(i, x, y)) {
        P.splice(j, 0, x, y), j += 2;
      }
    }
    if (P.length > 4) {
      for (let i = 0; i < P.length; i+= 2) {
        const j = (i + 2) % P.length, k = (i + 4) % P.length;
        if (P[i] === P[j] && P[j] === P[k]
        || P[i + 1] === P[j + 1] && P[j + 1] === P[k + 1])
          P.splice(j, 2), i -= 2;
      }
    }
    return j;
  }
  _project(x0, y0, vx, vy) {
    let t = Infinity, c, x, y;
    if (vy < 0) { // top
      if (y0 <= this.ymin) return null;
      if ((c = (this.ymin - y0) / vy) < t) y = this.ymin, x = x0 + (t = c) * vx;
    } else if (vy > 0) { // bottom
      if (y0 >= this.ymax) return null;
      if ((c = (this.ymax - y0) / vy) < t) y = this.ymax, x = x0 + (t = c) * vx;
    }
    if (vx > 0) { // right
      if (x0 >= this.xmax) return null;
      if ((c = (this.xmax - x0) / vx) < t) x = this.xmax, y = y0 + (t = c) * vy;
    } else if (vx < 0) { // left
      if (x0 <= this.xmin) return null;
      if ((c = (this.xmin - x0) / vx) < t) x = this.xmin, y = y0 + (t = c) * vy;
    }
    return [x, y];
  }
  _edgecode(x, y) {
    return (x === this.xmin ? 0b0001
        : x === this.xmax ? 0b0010 : 0b0000)
        | (y === this.ymin ? 0b0100
        : y === this.ymax ? 0b1000 : 0b0000);
  }
  _regioncode(x, y) {
    return (x < this.xmin ? 0b0001
        : x > this.xmax ? 0b0010 : 0b0000)
        | (y < this.ymin ? 0b0100
        : y > this.ymax ? 0b1000 : 0b0000);
  }
}

;// CONCATENATED MODULE: ./node_modules/d3-delaunay/src/delaunay.js





const delaunay_tau = 2 * Math.PI, pow = Math.pow;

function pointX(p) {
  return p[0];
}

function pointY(p) {
  return p[1];
}

// A triangulation is collinear if all its triangles have a non-null area
function delaunay_collinear(d) {
  const {triangles, coords} = d;
  for (let i = 0; i < triangles.length; i += 3) {
    const a = 2 * triangles[i],
          b = 2 * triangles[i + 1],
          c = 2 * triangles[i + 2],
          cross = (coords[c] - coords[a]) * (coords[b + 1] - coords[a + 1])
                - (coords[b] - coords[a]) * (coords[c + 1] - coords[a + 1]);
    if (cross > 1e-10) return false;
  }
  return true;
}

function jitter(x, y, r) {
  return [x + Math.sin(x + y) * r, y + Math.cos(x - y) * r];
}

class Delaunay {
  static from(points, fx = pointX, fy = pointY, that) {
    return new Delaunay("length" in points
        ? flatArray(points, fx, fy, that)
        : Float64Array.from(flatIterable(points, fx, fy, that)));
  }
  constructor(points) {
    this._delaunator = new Delaunator(points);
    this.inedges = new Int32Array(points.length / 2);
    this._hullIndex = new Int32Array(points.length / 2);
    this.points = this._delaunator.coords;
    this._init();
  }
  update() {
    this._delaunator.update();
    this._init();
    return this;
  }
  _init() {
    const d = this._delaunator, points = this.points;

    // check for collinear
    if (d.hull && d.hull.length > 2 && delaunay_collinear(d)) {
      this.collinear = Int32Array.from({length: points.length/2}, (_,i) => i)
        .sort((i, j) => points[2 * i] - points[2 * j] || points[2 * i + 1] - points[2 * j + 1]); // for exact neighbors
      const e = this.collinear[0], f = this.collinear[this.collinear.length - 1],
        bounds = [ points[2 * e], points[2 * e + 1], points[2 * f], points[2 * f + 1] ],
        r = 1e-8 * Math.hypot(bounds[3] - bounds[1], bounds[2] - bounds[0]);
      for (let i = 0, n = points.length / 2; i < n; ++i) {
        const p = jitter(points[2 * i], points[2 * i + 1], r);
        points[2 * i] = p[0];
        points[2 * i + 1] = p[1];
      }
      this._delaunator = new Delaunator(points);
    } else {
      delete this.collinear;
    }

    const halfedges = this.halfedges = this._delaunator.halfedges;
    const hull = this.hull = this._delaunator.hull;
    const triangles = this.triangles = this._delaunator.triangles;
    const inedges = this.inedges.fill(-1);
    const hullIndex = this._hullIndex.fill(-1);

    // Compute an index from each point to an (arbitrary) incoming halfedge
    // Used to give the first neighbor of each point; for this reason,
    // on the hull we give priority to exterior halfedges
    for (let e = 0, n = halfedges.length; e < n; ++e) {
      const p = triangles[e % 3 === 2 ? e - 2 : e + 1];
      if (halfedges[e] === -1 || inedges[p] === -1) inedges[p] = e;
    }
    for (let i = 0, n = hull.length; i < n; ++i) {
      hullIndex[hull[i]] = i;
    }

    // degenerate case: 1 or 2 (distinct) points
    if (hull.length <= 2 && hull.length > 0) {
      this.triangles = new Int32Array(3).fill(-1);
      this.halfedges = new Int32Array(3).fill(-1);
      this.triangles[0] = hull[0];
      inedges[hull[0]] = 1;
      if (hull.length === 2) {
        inedges[hull[1]] = 0;
        this.triangles[1] = hull[1];
        this.triangles[2] = hull[1];
      }
    }
  }
  voronoi(bounds) {
    return new Voronoi(this, bounds);
  }
  *neighbors(i) {
    const {inedges, hull, _hullIndex, halfedges, triangles, collinear} = this;

    // degenerate case with several collinear points
    if (collinear) {
      const l = collinear.indexOf(i);
      if (l > 0) yield collinear[l - 1];
      if (l < collinear.length - 1) yield collinear[l + 1];
      return;
    }

    const e0 = inedges[i];
    if (e0 === -1) return; // coincident point
    let e = e0, p0 = -1;
    do {
      yield p0 = triangles[e];
      e = e % 3 === 2 ? e - 2 : e + 1;
      if (triangles[e] !== i) return; // bad triangulation
      e = halfedges[e];
      if (e === -1) {
        const p = hull[(_hullIndex[i] + 1) % hull.length];
        if (p !== p0) yield p;
        return;
      }
    } while (e !== e0);
  }
  find(x, y, i = 0) {
    if ((x = +x, x !== x) || (y = +y, y !== y)) return -1;
    const i0 = i;
    let c;
    while ((c = this._step(i, x, y)) >= 0 && c !== i && c !== i0) i = c;
    return c;
  }
  _step(i, x, y) {
    const {inedges, hull, _hullIndex, halfedges, triangles, points} = this;
    if (inedges[i] === -1 || !points.length) return (i + 1) % (points.length >> 1);
    let c = i;
    let dc = pow(x - points[i * 2], 2) + pow(y - points[i * 2 + 1], 2);
    const e0 = inedges[i];
    let e = e0;
    do {
      let t = triangles[e];
      const dt = pow(x - points[t * 2], 2) + pow(y - points[t * 2 + 1], 2);
      if (dt < dc) dc = dt, c = t;
      e = e % 3 === 2 ? e - 2 : e + 1;
      if (triangles[e] !== i) break; // bad triangulation
      e = halfedges[e];
      if (e === -1) {
        e = hull[(_hullIndex[i] + 1) % hull.length];
        if (e !== t) {
          if (pow(x - points[e * 2], 2) + pow(y - points[e * 2 + 1], 2) < dc) return e;
        }
        break;
      }
    } while (e !== e0);
    return c;
  }
  render(context) {
    const buffer = context == null ? context = new path_Path : undefined;
    const {points, halfedges, triangles} = this;
    for (let i = 0, n = halfedges.length; i < n; ++i) {
      const j = halfedges[i];
      if (j < i) continue;
      const ti = triangles[i] * 2;
      const tj = triangles[j] * 2;
      context.moveTo(points[ti], points[ti + 1]);
      context.lineTo(points[tj], points[tj + 1]);
    }
    this.renderHull(context);
    return buffer && buffer.value();
  }
  renderPoints(context, r) {
    if (r === undefined && (!context || typeof context.moveTo !== "function")) r = context, context = null;
    r = r == undefined ? 2 : +r;
    const buffer = context == null ? context = new path_Path : undefined;
    const {points} = this;
    for (let i = 0, n = points.length; i < n; i += 2) {
      const x = points[i], y = points[i + 1];
      context.moveTo(x + r, y);
      context.arc(x, y, r, 0, delaunay_tau);
    }
    return buffer && buffer.value();
  }
  renderHull(context) {
    const buffer = context == null ? context = new path_Path : undefined;
    const {hull, points} = this;
    const h = hull[0] * 2, n = hull.length;
    context.moveTo(points[h], points[h + 1]);
    for (let i = 1; i < n; ++i) {
      const h = 2 * hull[i];
      context.lineTo(points[h], points[h + 1]);
    }
    context.closePath();
    return buffer && buffer.value();
  }
  hullPolygon() {
    const polygon = new Polygon;
    this.renderHull(polygon);
    return polygon.value();
  }
  renderTriangle(i, context) {
    const buffer = context == null ? context = new path_Path : undefined;
    const {points, triangles} = this;
    const t0 = triangles[i *= 3] * 2;
    const t1 = triangles[i + 1] * 2;
    const t2 = triangles[i + 2] * 2;
    context.moveTo(points[t0], points[t0 + 1]);
    context.lineTo(points[t1], points[t1 + 1]);
    context.lineTo(points[t2], points[t2 + 1]);
    context.closePath();
    return buffer && buffer.value();
  }
  *trianglePolygons() {
    const {triangles} = this;
    for (let i = 0, n = triangles.length / 3; i < n; ++i) {
      yield this.trianglePolygon(i);
    }
  }
  trianglePolygon(i) {
    const polygon = new Polygon;
    this.renderTriangle(i, polygon);
    return polygon.value();
  }
}

function flatArray(points, fx, fy, that) {
  const n = points.length;
  const array = new Float64Array(n * 2);
  for (let i = 0; i < n; ++i) {
    const p = points[i];
    array[i * 2] = fx.call(that, p, i, points);
    array[i * 2 + 1] = fy.call(that, p, i, points);
  }
  return array;
}

function* flatIterable(points, fx, fy, that) {
  let i = 0;
  for (const p of points) {
    yield fx.call(that, p, i, points);
    yield fy.call(that, p, i, points);
    ++i;
  }
}

;// CONCATENATED MODULE: ./node_modules/d3-delaunay/src/index.js



;// CONCATENATED MODULE: ./node_modules/d3-dispatch/src/index.js


;// CONCATENATED MODULE: ./node_modules/d3-drag/src/constant.js
/* harmony default export */ const d3_drag_src_constant = (x => () => x);

;// CONCATENATED MODULE: ./node_modules/d3-drag/src/event.js
function DragEvent(type, {
  sourceEvent,
  subject,
  target,
  identifier,
  active,
  x, y, dx, dy,
  dispatch
}) {
  Object.defineProperties(this, {
    type: {value: type, enumerable: true, configurable: true},
    sourceEvent: {value: sourceEvent, enumerable: true, configurable: true},
    subject: {value: subject, enumerable: true, configurable: true},
    target: {value: target, enumerable: true, configurable: true},
    identifier: {value: identifier, enumerable: true, configurable: true},
    active: {value: active, enumerable: true, configurable: true},
    x: {value: x, enumerable: true, configurable: true},
    y: {value: y, enumerable: true, configurable: true},
    dx: {value: dx, enumerable: true, configurable: true},
    dy: {value: dy, enumerable: true, configurable: true},
    _: {value: dispatch}
  });
}

DragEvent.prototype.on = function() {
  var value = this._.on.apply(this._, arguments);
  return value === this._ ? this : value;
};

;// CONCATENATED MODULE: ./node_modules/d3-drag/src/drag.js







// Ignore right-click, since that should open the context menu.
function drag_defaultFilter(event) {
  return !event.ctrlKey && !event.button;
}

function defaultContainer() {
  return this.parentNode;
}

function defaultSubject(event, d) {
  return d == null ? {x: event.x, y: event.y} : d;
}

function drag_defaultTouchable() {
  return navigator.maxTouchPoints || ("ontouchstart" in this);
}

/* harmony default export */ function drag() {
  var filter = drag_defaultFilter,
      container = defaultContainer,
      subject = defaultSubject,
      touchable = drag_defaultTouchable,
      gestures = {},
      listeners = src_dispatch("start", "drag", "end"),
      active = 0,
      mousedownx,
      mousedowny,
      mousemoving,
      touchending,
      clickDistance2 = 0;

  function drag(selection) {
    selection
        .on("mousedown.drag", mousedowned)
      .filter(touchable)
        .on("touchstart.drag", touchstarted)
        .on("touchmove.drag", touchmoved, nonpassive)
        .on("touchend.drag touchcancel.drag", touchended)
        .style("touch-action", "none")
        .style("-webkit-tap-highlight-color", "rgba(0,0,0,0)");
  }

  function mousedowned(event, d) {
    if (touchending || !filter.call(this, event, d)) return;
    var gesture = beforestart(this, container.call(this, event, d), event, d, "mouse");
    if (!gesture) return;
    src_select(event.view)
      .on("mousemove.drag", mousemoved, nonpassivecapture)
      .on("mouseup.drag", mouseupped, nonpassivecapture);
    nodrag(event.view);
    nopropagation(event);
    mousemoving = false;
    mousedownx = event.clientX;
    mousedowny = event.clientY;
    gesture("start", event);
  }

  function mousemoved(event) {
    noevent(event);
    if (!mousemoving) {
      var dx = event.clientX - mousedownx, dy = event.clientY - mousedowny;
      mousemoving = dx * dx + dy * dy > clickDistance2;
    }
    gestures.mouse("drag", event);
  }

  function mouseupped(event) {
    src_select(event.view).on("mousemove.drag mouseup.drag", null);
    yesdrag(event.view, mousemoving);
    noevent(event);
    gestures.mouse("end", event);
  }

  function touchstarted(event, d) {
    if (!filter.call(this, event, d)) return;
    var touches = event.changedTouches,
        c = container.call(this, event, d),
        n = touches.length, i, gesture;

    for (i = 0; i < n; ++i) {
      if (gesture = beforestart(this, c, event, d, touches[i].identifier, touches[i])) {
        nopropagation(event);
        gesture("start", event, touches[i]);
      }
    }
  }

  function touchmoved(event) {
    var touches = event.changedTouches,
        n = touches.length, i, gesture;

    for (i = 0; i < n; ++i) {
      if (gesture = gestures[touches[i].identifier]) {
        noevent(event);
        gesture("drag", event, touches[i]);
      }
    }
  }

  function touchended(event) {
    var touches = event.changedTouches,
        n = touches.length, i, gesture;

    if (touchending) clearTimeout(touchending);
    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!
    for (i = 0; i < n; ++i) {
      if (gesture = gestures[touches[i].identifier]) {
        nopropagation(event);
        gesture("end", event, touches[i]);
      }
    }
  }

  function beforestart(that, container, event, d, identifier, touch) {
    var dispatch = listeners.copy(),
        p = pointer(touch || event, container), dx, dy,
        s;

    if ((s = subject.call(that, new DragEvent("beforestart", {
        sourceEvent: event,
        target: drag,
        identifier,
        active,
        x: p[0],
        y: p[1],
        dx: 0,
        dy: 0,
        dispatch
      }), d)) == null) return;

    dx = s.x - p[0] || 0;
    dy = s.y - p[1] || 0;

    return function gesture(type, event, touch) {
      var p0 = p, n;
      switch (type) {
        case "start": gestures[identifier] = gesture, n = active++; break;
        case "end": delete gestures[identifier], --active; // falls through
        case "drag": p = pointer(touch || event, container), n = active; break;
      }
      dispatch.call(
        type,
        that,
        new DragEvent(type, {
          sourceEvent: event,
          subject: s,
          target: drag,
          identifier,
          active: n,
          x: p[0] + dx,
          y: p[1] + dy,
          dx: p[0] - p0[0],
          dy: p[1] - p0[1],
          dispatch
        }),
        d
      );
    };
  }

  drag.filter = function(_) {
    return arguments.length ? (filter = typeof _ === "function" ? _ : d3_drag_src_constant(!!_), drag) : filter;
  };

  drag.container = function(_) {
    return arguments.length ? (container = typeof _ === "function" ? _ : d3_drag_src_constant(_), drag) : container;
  };

  drag.subject = function(_) {
    return arguments.length ? (subject = typeof _ === "function" ? _ : d3_drag_src_constant(_), drag) : subject;
  };

  drag.touchable = function(_) {
    return arguments.length ? (touchable = typeof _ === "function" ? _ : d3_drag_src_constant(!!_), drag) : touchable;
  };

  drag.on = function() {
    var value = listeners.on.apply(listeners, arguments);
    return value === listeners ? drag : value;
  };

  drag.clickDistance = function(_) {
    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);
  };

  return drag;
}

;// CONCATENATED MODULE: ./node_modules/d3-drag/src/index.js



;// CONCATENATED MODULE: ./node_modules/d3-dsv/src/dsv.js
var EOL = {},
    EOF = {},
    QUOTE = 34,
    NEWLINE = 10,
    RETURN = 13;

function objectConverter(columns) {
  return new Function("d", "return {" + columns.map(function(name, i) {
    return JSON.stringify(name) + ": d[" + i + "] || \"\"";
  }).join(",") + "}");
}

function customConverter(columns, f) {
  var object = objectConverter(columns);
  return function(row, i) {
    return f(object(row), i, columns);
  };
}

// Compute unique columns in order of discovery.
function inferColumns(rows) {
  var columnSet = Object.create(null),
      columns = [];

  rows.forEach(function(row) {
    for (var column in row) {
      if (!(column in columnSet)) {
        columns.push(columnSet[column] = column);
      }
    }
  });

  return columns;
}

function pad(value, width) {
  var s = value + "", length = s.length;
  return length < width ? new Array(width - length + 1).join(0) + s : s;
}

function formatYear(year) {
  return year < 0 ? "-" + pad(-year, 6)
    : year > 9999 ? "+" + pad(year, 6)
    : pad(year, 4);
}

function formatDate(date) {
  var hours = date.getUTCHours(),
      minutes = date.getUTCMinutes(),
      seconds = date.getUTCSeconds(),
      milliseconds = date.getUTCMilliseconds();
  return isNaN(date) ? "Invalid Date"
      : formatYear(date.getUTCFullYear(), 4) + "-" + pad(date.getUTCMonth() + 1, 2) + "-" + pad(date.getUTCDate(), 2)
      + (milliseconds ? "T" + pad(hours, 2) + ":" + pad(minutes, 2) + ":" + pad(seconds, 2) + "." + pad(milliseconds, 3) + "Z"
      : seconds ? "T" + pad(hours, 2) + ":" + pad(minutes, 2) + ":" + pad(seconds, 2) + "Z"
      : minutes || hours ? "T" + pad(hours, 2) + ":" + pad(minutes, 2) + "Z"
      : "");
}

/* harmony default export */ function dsv(delimiter) {
  var reFormat = new RegExp("[\"" + delimiter + "\n\r]"),
      DELIMITER = delimiter.charCodeAt(0);

  function parse(text, f) {
    var convert, columns, rows = parseRows(text, function(row, i) {
      if (convert) return convert(row, i - 1);
      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);
    });
    rows.columns = columns || [];
    return rows;
  }

  function parseRows(text, f) {
    var rows = [], // output rows
        N = text.length,
        I = 0, // current character index
        n = 0, // current line number
        t, // current token
        eof = N <= 0, // current token followed by EOF?
        eol = false; // current token followed by EOL?

    // Strip the trailing newline.
    if (text.charCodeAt(N - 1) === NEWLINE) --N;
    if (text.charCodeAt(N - 1) === RETURN) --N;

    function token() {
      if (eof) return EOF;
      if (eol) return eol = false, EOL;

      // Unescape quotes.
      var i, j = I, c;
      if (text.charCodeAt(j) === QUOTE) {
        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE);
        if ((i = I) >= N) eof = true;
        else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;
        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }
        return text.slice(j + 1, i - 1).replace(/""/g, "\"");
      }

      // Find next delimiter or newline.
      while (I < N) {
        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;
        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }
        else if (c !== DELIMITER) continue;
        return text.slice(j, i);
      }

      // Return last token before EOF.
      return eof = true, text.slice(j, N);
    }

    while ((t = token()) !== EOF) {
      var row = [];
      while (t !== EOL && t !== EOF) row.push(t), t = token();
      if (f && (row = f(row, n++)) == null) continue;
      rows.push(row);
    }

    return rows;
  }

  function preformatBody(rows, columns) {
    return rows.map(function(row) {
      return columns.map(function(column) {
        return formatValue(row[column]);
      }).join(delimiter);
    });
  }

  function format(rows, columns) {
    if (columns == null) columns = inferColumns(rows);
    return [columns.map(formatValue).join(delimiter)].concat(preformatBody(rows, columns)).join("\n");
  }

  function formatBody(rows, columns) {
    if (columns == null) columns = inferColumns(rows);
    return preformatBody(rows, columns).join("\n");
  }

  function formatRows(rows) {
    return rows.map(formatRow).join("\n");
  }

  function formatRow(row) {
    return row.map(formatValue).join(delimiter);
  }

  function formatValue(value) {
    return value == null ? ""
        : value instanceof Date ? formatDate(value)
        : reFormat.test(value += "") ? "\"" + value.replace(/"/g, "\"\"") + "\""
        : value;
  }

  return {
    parse: parse,
    parseRows: parseRows,
    format: format,
    formatBody: formatBody,
    formatRows: formatRows,
    formatRow: formatRow,
    formatValue: formatValue
  };
}

;// CONCATENATED MODULE: ./node_modules/d3-dsv/src/csv.js


var csv = dsv(",");

var csvParse = csv.parse;
var csvParseRows = csv.parseRows;
var csvFormat = csv.format;
var csvFormatBody = csv.formatBody;
var csvFormatRows = csv.formatRows;
var csvFormatRow = csv.formatRow;
var csvFormatValue = csv.formatValue;

;// CONCATENATED MODULE: ./node_modules/d3-dsv/src/tsv.js


var tsv = dsv("\t");

var tsvParse = tsv.parse;
var tsvParseRows = tsv.parseRows;
var tsvFormat = tsv.format;
var tsvFormatBody = tsv.formatBody;
var tsvFormatRows = tsv.formatRows;
var tsvFormatRow = tsv.formatRow;
var tsvFormatValue = tsv.formatValue;

;// CONCATENATED MODULE: ./node_modules/d3-dsv/src/autoType.js
function autoType(object) {
  for (var key in object) {
    var value = object[key].trim(), number, m;
    if (!value) value = null;
    else if (value === "true") value = true;
    else if (value === "false") value = false;
    else if (value === "NaN") value = NaN;
    else if (!isNaN(number = +value)) value = number;
    else if (m = value.match(/^([-+]\d{2})?\d{4}(-\d{2}(-\d{2})?)?(T\d{2}:\d{2}(:\d{2}(\.\d{3})?)?(Z|[-+]\d{2}:\d{2})?)?$/)) {
      if (fixtz && !!m[4] && !m[7]) value = value.replace(/-/g, "/").replace(/T/, " ");
      value = new Date(value);
    }
    else continue;
    object[key] = value;
  }
  return object;
}

// https://github.com/d3/d3-dsv/issues/45
const fixtz = new Date("2019-01-01T00:00").getHours() || new Date("2019-07-01T00:00").getHours();
;// CONCATENATED MODULE: ./node_modules/d3-dsv/src/index.js





;// CONCATENATED MODULE: ./node_modules/d3-ease/src/linear.js
const linear_linear = t => +t;

;// CONCATENATED MODULE: ./node_modules/d3-ease/src/quad.js
function quadIn(t) {
  return t * t;
}

function quadOut(t) {
  return t * (2 - t);
}

function quadInOut(t) {
  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;
}

;// CONCATENATED MODULE: ./node_modules/d3-ease/src/poly.js
var exponent = 3;

var polyIn = (function custom(e) {
  e = +e;

  function polyIn(t) {
    return Math.pow(t, e);
  }

  polyIn.exponent = custom;

  return polyIn;
})(exponent);

var polyOut = (function custom(e) {
  e = +e;

  function polyOut(t) {
    return 1 - Math.pow(1 - t, e);
  }

  polyOut.exponent = custom;

  return polyOut;
})(exponent);

var polyInOut = (function custom(e) {
  e = +e;

  function polyInOut(t) {
    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;
  }

  polyInOut.exponent = custom;

  return polyInOut;
})(exponent);

;// CONCATENATED MODULE: ./node_modules/d3-ease/src/sin.js
var sin_pi = Math.PI,
    sin_halfPi = sin_pi / 2;

function sinIn(t) {
  return (+t === 1) ? 1 : 1 - Math.cos(t * sin_halfPi);
}

function sinOut(t) {
  return Math.sin(t * sin_halfPi);
}

function sinInOut(t) {
  return (1 - Math.cos(sin_pi * t)) / 2;
}

;// CONCATENATED MODULE: ./node_modules/d3-ease/src/math.js
// tpmt is two power minus ten times t scaled to [0,1]
function tpmt(x) {
  return (Math.pow(2, -10 * x) - 0.0009765625) * 1.0009775171065494;
}

;// CONCATENATED MODULE: ./node_modules/d3-ease/src/exp.js


function expIn(t) {
  return tpmt(1 - +t);
}

function expOut(t) {
  return 1 - tpmt(t);
}

function expInOut(t) {
  return ((t *= 2) <= 1 ? tpmt(1 - t) : 2 - tpmt(t - 1)) / 2;
}

;// CONCATENATED MODULE: ./node_modules/d3-ease/src/circle.js
function circleIn(t) {
  return 1 - Math.sqrt(1 - t * t);
}

function circleOut(t) {
  return Math.sqrt(1 - --t * t);
}

function circleInOut(t) {
  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;
}

;// CONCATENATED MODULE: ./node_modules/d3-ease/src/bounce.js
var b1 = 4 / 11,
    b2 = 6 / 11,
    b3 = 8 / 11,
    b4 = 3 / 4,
    b5 = 9 / 11,
    b6 = 10 / 11,
    b7 = 15 / 16,
    b8 = 21 / 22,
    b9 = 63 / 64,
    b0 = 1 / b1 / b1;

function bounceIn(t) {
  return 1 - bounceOut(1 - t);
}

function bounceOut(t) {
  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;
}

function bounceInOut(t) {
  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;
}

;// CONCATENATED MODULE: ./node_modules/d3-ease/src/back.js
var overshoot = 1.70158;

var backIn = (function custom(s) {
  s = +s;

  function backIn(t) {
    return (t = +t) * t * (s * (t - 1) + t);
  }

  backIn.overshoot = custom;

  return backIn;
})(overshoot);

var backOut = (function custom(s) {
  s = +s;

  function backOut(t) {
    return --t * t * ((t + 1) * s + t) + 1;
  }

  backOut.overshoot = custom;

  return backOut;
})(overshoot);

var backInOut = (function custom(s) {
  s = +s;

  function backInOut(t) {
    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;
  }

  backInOut.overshoot = custom;

  return backInOut;
})(overshoot);

;// CONCATENATED MODULE: ./node_modules/d3-ease/src/elastic.js


var elastic_tau = 2 * Math.PI,
    amplitude = 1,
    period = 0.3;

var elasticIn = (function custom(a, p) {
  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= elastic_tau);

  function elasticIn(t) {
    return a * tpmt(-(--t)) * Math.sin((s - t) / p);
  }

  elasticIn.amplitude = function(a) { return custom(a, p * elastic_tau); };
  elasticIn.period = function(p) { return custom(a, p); };

  return elasticIn;
})(amplitude, period);

var elasticOut = (function custom(a, p) {
  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= elastic_tau);

  function elasticOut(t) {
    return 1 - a * tpmt(t = +t) * Math.sin((t + s) / p);
  }

  elasticOut.amplitude = function(a) { return custom(a, p * elastic_tau); };
  elasticOut.period = function(p) { return custom(a, p); };

  return elasticOut;
})(amplitude, period);

var elasticInOut = (function custom(a, p) {
  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= elastic_tau);

  function elasticInOut(t) {
    return ((t = t * 2 - 1) < 0
        ? a * tpmt(-t) * Math.sin((s - t) / p)
        : 2 - a * tpmt(t) * Math.sin((s + t) / p)) / 2;
  }

  elasticInOut.amplitude = function(a) { return custom(a, p * elastic_tau); };
  elasticInOut.period = function(p) { return custom(a, p); };

  return elasticInOut;
})(amplitude, period);

;// CONCATENATED MODULE: ./node_modules/d3-ease/src/index.js




















;// CONCATENATED MODULE: ./node_modules/d3-fetch/src/blob.js
function responseBlob(response) {
  if (!response.ok) throw new Error(response.status + " " + response.statusText);
  return response.blob();
}

/* harmony default export */ function blob(input, init) {
  return fetch(input, init).then(responseBlob);
}

;// CONCATENATED MODULE: ./node_modules/d3-fetch/src/buffer.js
function responseArrayBuffer(response) {
  if (!response.ok) throw new Error(response.status + " " + response.statusText);
  return response.arrayBuffer();
}

/* harmony default export */ function buffer(input, init) {
  return fetch(input, init).then(responseArrayBuffer);
}

;// CONCATENATED MODULE: ./node_modules/d3-fetch/src/text.js
function responseText(response) {
  if (!response.ok) throw new Error(response.status + " " + response.statusText);
  return response.text();
}

/* harmony default export */ function src_text(input, init) {
  return fetch(input, init).then(responseText);
}

;// CONCATENATED MODULE: ./node_modules/d3-fetch/src/dsv.js



function dsvParse(parse) {
  return function(input, init, row) {
    if (arguments.length === 2 && typeof init === "function") row = init, init = undefined;
    return src_text(input, init).then(function(response) {
      return parse(response, row);
    });
  };
}

function dsv_dsv(delimiter, input, init, row) {
  if (arguments.length === 3 && typeof init === "function") row = init, init = undefined;
  var format = dsv(delimiter);
  return src_text(input, init).then(function(response) {
    return format.parse(response, row);
  });
}

var dsv_csv = dsvParse(csvParse);
var dsv_tsv = dsvParse(tsvParse);

;// CONCATENATED MODULE: ./node_modules/d3-fetch/src/image.js
/* harmony default export */ function src_image(input, init) {
  return new Promise(function(resolve, reject) {
    var image = new Image;
    for (var key in init) image[key] = init[key];
    image.onerror = reject;
    image.onload = function() { resolve(image); };
    image.src = input;
  });
}

;// CONCATENATED MODULE: ./node_modules/d3-fetch/src/json.js
function responseJson(response) {
  if (!response.ok) throw new Error(response.status + " " + response.statusText);
  if (response.status === 204 || response.status === 205) return;
  return response.json();
}

/* harmony default export */ function json(input, init) {
  return fetch(input, init).then(responseJson);
}

;// CONCATENATED MODULE: ./node_modules/d3-fetch/src/xml.js


function parser(type) {
  return (input, init) => src_text(input, init)
    .then(text => (new DOMParser).parseFromString(text, type));
}

/* harmony default export */ const xml = (parser("application/xml"));

var xml_html = parser("text/html");

var svg = parser("image/svg+xml");

;// CONCATENATED MODULE: ./node_modules/d3-fetch/src/index.js








;// CONCATENATED MODULE: ./node_modules/d3-force/src/center.js
/* harmony default export */ function src_center(x, y) {
  var nodes, strength = 1;

  if (x == null) x = 0;
  if (y == null) y = 0;

  function force() {
    var i,
        n = nodes.length,
        node,
        sx = 0,
        sy = 0;

    for (i = 0; i < n; ++i) {
      node = nodes[i], sx += node.x, sy += node.y;
    }

    for (sx = (sx / n - x) * strength, sy = (sy / n - y) * strength, i = 0; i < n; ++i) {
      node = nodes[i], node.x -= sx, node.y -= sy;
    }
  }

  force.initialize = function(_) {
    nodes = _;
  };

  force.x = function(_) {
    return arguments.length ? (x = +_, force) : x;
  };

  force.y = function(_) {
    return arguments.length ? (y = +_, force) : y;
  };

  force.strength = function(_) {
    return arguments.length ? (strength = +_, force) : strength;
  };

  return force;
}

;// CONCATENATED MODULE: ./node_modules/d3-quadtree/src/add.js
/* harmony default export */ function add(d) {
  const x = +this._x.call(null, d),
      y = +this._y.call(null, d);
  return add_add(this.cover(x, y), x, y, d);
}

function add_add(tree, x, y, d) {
  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points

  var parent,
      node = tree._root,
      leaf = {data: d},
      x0 = tree._x0,
      y0 = tree._y0,
      x1 = tree._x1,
      y1 = tree._y1,
      xm,
      ym,
      xp,
      yp,
      right,
      bottom,
      i,
      j;

  // If the tree is empty, initialize the root as a leaf.
  if (!node) return tree._root = leaf, tree;

  // Find the existing leaf for the new point, or add it.
  while (node.length) {
    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;
    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;
    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;
  }

  // Is the new point is exactly coincident with the existing point?
  xp = +tree._x.call(null, node.data);
  yp = +tree._y.call(null, node.data);
  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;

  // Otherwise, split the leaf node until the old and new point are separated.
  do {
    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);
    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;
    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;
  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));
  return parent[j] = node, parent[i] = leaf, tree;
}

function addAll(data) {
  var d, i, n = data.length,
      x,
      y,
      xz = new Array(n),
      yz = new Array(n),
      x0 = Infinity,
      y0 = Infinity,
      x1 = -Infinity,
      y1 = -Infinity;

  // Compute the points and their extent.
  for (i = 0; i < n; ++i) {
    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;
    xz[i] = x;
    yz[i] = y;
    if (x < x0) x0 = x;
    if (x > x1) x1 = x;
    if (y < y0) y0 = y;
    if (y > y1) y1 = y;
  }

  // If there were no (valid) points, abort.
  if (x0 > x1 || y0 > y1) return this;

  // Expand the tree to cover the new points.
  this.cover(x0, y0).cover(x1, y1);

  // Add the new points.
  for (i = 0; i < n; ++i) {
    add_add(this, xz[i], yz[i], data[i]);
  }

  return this;
}

;// CONCATENATED MODULE: ./node_modules/d3-quadtree/src/cover.js
/* harmony default export */ function cover(x, y) {
  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points

  var x0 = this._x0,
      y0 = this._y0,
      x1 = this._x1,
      y1 = this._y1;

  // If the quadtree has no extent, initialize them.
  // Integer extent are necessary so that if we later double the extent,
  // the existing quadrant boundaries don’t change due to floating point error!
  if (isNaN(x0)) {
    x1 = (x0 = Math.floor(x)) + 1;
    y1 = (y0 = Math.floor(y)) + 1;
  }

  // Otherwise, double repeatedly to cover.
  else {
    var z = x1 - x0 || 1,
        node = this._root,
        parent,
        i;

    while (x0 > x || x >= x1 || y0 > y || y >= y1) {
      i = (y < y0) << 1 | (x < x0);
      parent = new Array(4), parent[i] = node, node = parent, z *= 2;
      switch (i) {
        case 0: x1 = x0 + z, y1 = y0 + z; break;
        case 1: x0 = x1 - z, y1 = y0 + z; break;
        case 2: x1 = x0 + z, y0 = y1 - z; break;
        case 3: x0 = x1 - z, y0 = y1 - z; break;
      }
    }

    if (this._root && this._root.length) this._root = node;
  }

  this._x0 = x0;
  this._y0 = y0;
  this._x1 = x1;
  this._y1 = y1;
  return this;
}

;// CONCATENATED MODULE: ./node_modules/d3-quadtree/src/data.js
/* harmony default export */ function src_data() {
  var data = [];
  this.visit(function(node) {
    if (!node.length) do data.push(node.data); while (node = node.next)
  });
  return data;
}

;// CONCATENATED MODULE: ./node_modules/d3-quadtree/src/extent.js
/* harmony default export */ function src_extent(_) {
  return arguments.length
      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])
      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];
}

;// CONCATENATED MODULE: ./node_modules/d3-quadtree/src/quad.js
/* harmony default export */ function quad(node, x0, y0, x1, y1) {
  this.node = node;
  this.x0 = x0;
  this.y0 = y0;
  this.x1 = x1;
  this.y1 = y1;
}

;// CONCATENATED MODULE: ./node_modules/d3-quadtree/src/find.js


/* harmony default export */ function src_find(x, y, radius) {
  var data,
      x0 = this._x0,
      y0 = this._y0,
      x1,
      y1,
      x2,
      y2,
      x3 = this._x1,
      y3 = this._y1,
      quads = [],
      node = this._root,
      q,
      i;

  if (node) quads.push(new quad(node, x0, y0, x3, y3));
  if (radius == null) radius = Infinity;
  else {
    x0 = x - radius, y0 = y - radius;
    x3 = x + radius, y3 = y + radius;
    radius *= radius;
  }

  while (q = quads.pop()) {

    // Stop searching if this quadrant can’t contain a closer node.
    if (!(node = q.node)
        || (x1 = q.x0) > x3
        || (y1 = q.y0) > y3
        || (x2 = q.x1) < x0
        || (y2 = q.y1) < y0) continue;

    // Bisect the current quadrant.
    if (node.length) {
      var xm = (x1 + x2) / 2,
          ym = (y1 + y2) / 2;

      quads.push(
        new quad(node[3], xm, ym, x2, y2),
        new quad(node[2], x1, ym, xm, y2),
        new quad(node[1], xm, y1, x2, ym),
        new quad(node[0], x1, y1, xm, ym)
      );

      // Visit the closest quadrant first.
      if (i = (y >= ym) << 1 | (x >= xm)) {
        q = quads[quads.length - 1];
        quads[quads.length - 1] = quads[quads.length - 1 - i];
        quads[quads.length - 1 - i] = q;
      }
    }

    // Visit this point. (Visiting coincident points isn’t necessary!)
    else {
      var dx = x - +this._x.call(null, node.data),
          dy = y - +this._y.call(null, node.data),
          d2 = dx * dx + dy * dy;
      if (d2 < radius) {
        var d = Math.sqrt(radius = d2);
        x0 = x - d, y0 = y - d;
        x3 = x + d, y3 = y + d;
        data = node.data;
      }
    }
  }

  return data;
}

;// CONCATENATED MODULE: ./node_modules/d3-quadtree/src/remove.js
/* harmony default export */ function src_remove(d) {
  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points

  var parent,
      node = this._root,
      retainer,
      previous,
      next,
      x0 = this._x0,
      y0 = this._y0,
      x1 = this._x1,
      y1 = this._y1,
      x,
      y,
      xm,
      ym,
      right,
      bottom,
      i,
      j;

  // If the tree is empty, initialize the root as a leaf.
  if (!node) return this;

  // Find the leaf node for the point.
  // While descending, also retain the deepest parent with a non-removed sibling.
  if (node.length) while (true) {
    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;
    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;
    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;
    if (!node.length) break;
    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;
  }

  // Find the point to remove.
  while (node.data !== d) if (!(previous = node, node = node.next)) return this;
  if (next = node.next) delete node.next;

  // If there are multiple coincident points, remove just the point.
  if (previous) return (next ? previous.next = next : delete previous.next), this;

  // If this is the root point, remove it.
  if (!parent) return this._root = next, this;

  // Remove this leaf.
  next ? parent[i] = next : delete parent[i];

  // If the parent now contains exactly one leaf, collapse superfluous parents.
  if ((node = parent[0] || parent[1] || parent[2] || parent[3])
      && node === (parent[3] || parent[2] || parent[1] || parent[0])
      && !node.length) {
    if (retainer) retainer[j] = node;
    else this._root = node;
  }

  return this;
}

function removeAll(data) {
  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);
  return this;
}

;// CONCATENATED MODULE: ./node_modules/d3-quadtree/src/root.js
/* harmony default export */ function src_root() {
  return this._root;
}

;// CONCATENATED MODULE: ./node_modules/d3-quadtree/src/size.js
/* harmony default export */ function src_size() {
  var size = 0;
  this.visit(function(node) {
    if (!node.length) do ++size; while (node = node.next)
  });
  return size;
}

;// CONCATENATED MODULE: ./node_modules/d3-quadtree/src/visit.js


/* harmony default export */ function visit(callback) {
  var quads = [], q, node = this._root, child, x0, y0, x1, y1;
  if (node) quads.push(new quad(node, this._x0, this._y0, this._x1, this._y1));
  while (q = quads.pop()) {
    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {
      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;
      if (child = node[3]) quads.push(new quad(child, xm, ym, x1, y1));
      if (child = node[2]) quads.push(new quad(child, x0, ym, xm, y1));
      if (child = node[1]) quads.push(new quad(child, xm, y0, x1, ym));
      if (child = node[0]) quads.push(new quad(child, x0, y0, xm, ym));
    }
  }
  return this;
}

;// CONCATENATED MODULE: ./node_modules/d3-quadtree/src/visitAfter.js


/* harmony default export */ function visitAfter(callback) {
  var quads = [], next = [], q;
  if (this._root) quads.push(new quad(this._root, this._x0, this._y0, this._x1, this._y1));
  while (q = quads.pop()) {
    var node = q.node;
    if (node.length) {
      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;
      if (child = node[0]) quads.push(new quad(child, x0, y0, xm, ym));
      if (child = node[1]) quads.push(new quad(child, xm, y0, x1, ym));
      if (child = node[2]) quads.push(new quad(child, x0, ym, xm, y1));
      if (child = node[3]) quads.push(new quad(child, xm, ym, x1, y1));
    }
    next.push(q);
  }
  while (q = next.pop()) {
    callback(q.node, q.x0, q.y0, q.x1, q.y1);
  }
  return this;
}

;// CONCATENATED MODULE: ./node_modules/d3-quadtree/src/x.js
function x_defaultX(d) {
  return d[0];
}

/* harmony default export */ function x(_) {
  return arguments.length ? (this._x = _, this) : this._x;
}

;// CONCATENATED MODULE: ./node_modules/d3-quadtree/src/y.js
function y_defaultY(d) {
  return d[1];
}

/* harmony default export */ function y(_) {
  return arguments.length ? (this._y = _, this) : this._y;
}

;// CONCATENATED MODULE: ./node_modules/d3-quadtree/src/quadtree.js













function quadtree(nodes, x, y) {
  var tree = new Quadtree(x == null ? x_defaultX : x, y == null ? y_defaultY : y, NaN, NaN, NaN, NaN);
  return nodes == null ? tree : tree.addAll(nodes);
}

function Quadtree(x, y, x0, y0, x1, y1) {
  this._x = x;
  this._y = y;
  this._x0 = x0;
  this._y0 = y0;
  this._x1 = x1;
  this._y1 = y1;
  this._root = undefined;
}

function leaf_copy(leaf) {
  var copy = {data: leaf.data}, next = copy;
  while (leaf = leaf.next) next = next.next = {data: leaf.data};
  return copy;
}

var treeProto = quadtree.prototype = Quadtree.prototype;

treeProto.copy = function() {
  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),
      node = this._root,
      nodes,
      child;

  if (!node) return copy;

  if (!node.length) return copy._root = leaf_copy(node), copy;

  nodes = [{source: node, target: copy._root = new Array(4)}];
  while (node = nodes.pop()) {
    for (var i = 0; i < 4; ++i) {
      if (child = node.source[i]) {
        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});
        else node.target[i] = leaf_copy(child);
      }
    }
  }

  return copy;
};

treeProto.add = add;
treeProto.addAll = addAll;
treeProto.cover = cover;
treeProto.data = src_data;
treeProto.extent = src_extent;
treeProto.find = src_find;
treeProto.remove = src_remove;
treeProto.removeAll = removeAll;
treeProto.root = src_root;
treeProto.size = src_size;
treeProto.visit = visit;
treeProto.visitAfter = visitAfter;
treeProto.x = x;
treeProto.y = y;

;// CONCATENATED MODULE: ./node_modules/d3-force/src/constant.js
/* harmony default export */ function d3_force_src_constant(x) {
  return function() {
    return x;
  };
}

;// CONCATENATED MODULE: ./node_modules/d3-force/src/jiggle.js
/* harmony default export */ function jiggle(random) {
  return (random() - 0.5) * 1e-6;
}

;// CONCATENATED MODULE: ./node_modules/d3-force/src/collide.js




function collide_x(d) {
  return d.x + d.vx;
}

function collide_y(d) {
  return d.y + d.vy;
}

/* harmony default export */ function collide(radius) {
  var nodes,
      radii,
      random,
      strength = 1,
      iterations = 1;

  if (typeof radius !== "function") radius = d3_force_src_constant(radius == null ? 1 : +radius);

  function force() {
    var i, n = nodes.length,
        tree,
        node,
        xi,
        yi,
        ri,
        ri2;

    for (var k = 0; k < iterations; ++k) {
      tree = quadtree(nodes, collide_x, collide_y).visitAfter(prepare);
      for (i = 0; i < n; ++i) {
        node = nodes[i];
        ri = radii[node.index], ri2 = ri * ri;
        xi = node.x + node.vx;
        yi = node.y + node.vy;
        tree.visit(apply);
      }
    }

    function apply(quad, x0, y0, x1, y1) {
      var data = quad.data, rj = quad.r, r = ri + rj;
      if (data) {
        if (data.index > node.index) {
          var x = xi - data.x - data.vx,
              y = yi - data.y - data.vy,
              l = x * x + y * y;
          if (l < r * r) {
            if (x === 0) x = jiggle(random), l += x * x;
            if (y === 0) y = jiggle(random), l += y * y;
            l = (r - (l = Math.sqrt(l))) / l * strength;
            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));
            node.vy += (y *= l) * r;
            data.vx -= x * (r = 1 - r);
            data.vy -= y * r;
          }
        }
        return;
      }
      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;
    }
  }

  function prepare(quad) {
    if (quad.data) return quad.r = radii[quad.data.index];
    for (var i = quad.r = 0; i < 4; ++i) {
      if (quad[i] && quad[i].r > quad.r) {
        quad.r = quad[i].r;
      }
    }
  }

  function initialize() {
    if (!nodes) return;
    var i, n = nodes.length, node;
    radii = new Array(n);
    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);
  }

  force.initialize = function(_nodes, _random) {
    nodes = _nodes;
    random = _random;
    initialize();
  };

  force.iterations = function(_) {
    return arguments.length ? (iterations = +_, force) : iterations;
  };

  force.strength = function(_) {
    return arguments.length ? (strength = +_, force) : strength;
  };

  force.radius = function(_) {
    return arguments.length ? (radius = typeof _ === "function" ? _ : d3_force_src_constant(+_), initialize(), force) : radius;
  };

  return force;
}

;// CONCATENATED MODULE: ./node_modules/d3-force/src/link.js



function link_index(d) {
  return d.index;
}

function link_find(nodeById, nodeId) {
  var node = nodeById.get(nodeId);
  if (!node) throw new Error("node not found: " + nodeId);
  return node;
}

/* harmony default export */ function src_link(links) {
  var id = link_index,
      strength = defaultStrength,
      strengths,
      distance = d3_force_src_constant(30),
      distances,
      nodes,
      count,
      bias,
      random,
      iterations = 1;

  if (links == null) links = [];

  function defaultStrength(link) {
    return 1 / Math.min(count[link.source.index], count[link.target.index]);
  }

  function force(alpha) {
    for (var k = 0, n = links.length; k < iterations; ++k) {
      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {
        link = links[i], source = link.source, target = link.target;
        x = target.x + target.vx - source.x - source.vx || jiggle(random);
        y = target.y + target.vy - source.y - source.vy || jiggle(random);
        l = Math.sqrt(x * x + y * y);
        l = (l - distances[i]) / l * alpha * strengths[i];
        x *= l, y *= l;
        target.vx -= x * (b = bias[i]);
        target.vy -= y * b;
        source.vx += x * (b = 1 - b);
        source.vy += y * b;
      }
    }
  }

  function initialize() {
    if (!nodes) return;

    var i,
        n = nodes.length,
        m = links.length,
        nodeById = new Map(nodes.map((d, i) => [id(d, i, nodes), d])),
        link;

    for (i = 0, count = new Array(n); i < m; ++i) {
      link = links[i], link.index = i;
      if (typeof link.source !== "object") link.source = link_find(nodeById, link.source);
      if (typeof link.target !== "object") link.target = link_find(nodeById, link.target);
      count[link.source.index] = (count[link.source.index] || 0) + 1;
      count[link.target.index] = (count[link.target.index] || 0) + 1;
    }

    for (i = 0, bias = new Array(m); i < m; ++i) {
      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);
    }

    strengths = new Array(m), initializeStrength();
    distances = new Array(m), initializeDistance();
  }

  function initializeStrength() {
    if (!nodes) return;

    for (var i = 0, n = links.length; i < n; ++i) {
      strengths[i] = +strength(links[i], i, links);
    }
  }

  function initializeDistance() {
    if (!nodes) return;

    for (var i = 0, n = links.length; i < n; ++i) {
      distances[i] = +distance(links[i], i, links);
    }
  }

  force.initialize = function(_nodes, _random) {
    nodes = _nodes;
    random = _random;
    initialize();
  };

  force.links = function(_) {
    return arguments.length ? (links = _, initialize(), force) : links;
  };

  force.id = function(_) {
    return arguments.length ? (id = _, force) : id;
  };

  force.iterations = function(_) {
    return arguments.length ? (iterations = +_, force) : iterations;
  };

  force.strength = function(_) {
    return arguments.length ? (strength = typeof _ === "function" ? _ : d3_force_src_constant(+_), initializeStrength(), force) : strength;
  };

  force.distance = function(_) {
    return arguments.length ? (distance = typeof _ === "function" ? _ : d3_force_src_constant(+_), initializeDistance(), force) : distance;
  };

  return force;
}

;// CONCATENATED MODULE: ./node_modules/d3-force/src/lcg.js
// https://en.wikipedia.org/wiki/Linear_congruential_generator#Parameters_in_common_use
const a = 1664525;
const c = 1013904223;
const m = 4294967296; // 2^32

/* harmony default export */ function lcg() {
  let s = 1;
  return () => (s = (a * s + c) % m) / m;
}

;// CONCATENATED MODULE: ./node_modules/d3-force/src/simulation.js




function simulation_x(d) {
  return d.x;
}

function simulation_y(d) {
  return d.y;
}

var initialRadius = 10,
    initialAngle = Math.PI * (3 - Math.sqrt(5));

/* harmony default export */ function simulation(nodes) {
  var simulation,
      alpha = 1,
      alphaMin = 0.001,
      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),
      alphaTarget = 0,
      velocityDecay = 0.6,
      forces = new Map(),
      stepper = timer(step),
      event = src_dispatch("tick", "end"),
      random = lcg();

  if (nodes == null) nodes = [];

  function step() {
    tick();
    event.call("tick", simulation);
    if (alpha < alphaMin) {
      stepper.stop();
      event.call("end", simulation);
    }
  }

  function tick(iterations) {
    var i, n = nodes.length, node;

    if (iterations === undefined) iterations = 1;

    for (var k = 0; k < iterations; ++k) {
      alpha += (alphaTarget - alpha) * alphaDecay;

      forces.forEach(function(force) {
        force(alpha);
      });

      for (i = 0; i < n; ++i) {
        node = nodes[i];
        if (node.fx == null) node.x += node.vx *= velocityDecay;
        else node.x = node.fx, node.vx = 0;
        if (node.fy == null) node.y += node.vy *= velocityDecay;
        else node.y = node.fy, node.vy = 0;
      }
    }

    return simulation;
  }

  function initializeNodes() {
    for (var i = 0, n = nodes.length, node; i < n; ++i) {
      node = nodes[i], node.index = i;
      if (node.fx != null) node.x = node.fx;
      if (node.fy != null) node.y = node.fy;
      if (isNaN(node.x) || isNaN(node.y)) {
        var radius = initialRadius * Math.sqrt(0.5 + i), angle = i * initialAngle;
        node.x = radius * Math.cos(angle);
        node.y = radius * Math.sin(angle);
      }
      if (isNaN(node.vx) || isNaN(node.vy)) {
        node.vx = node.vy = 0;
      }
    }
  }

  function initializeForce(force) {
    if (force.initialize) force.initialize(nodes, random);
    return force;
  }

  initializeNodes();

  return simulation = {
    tick: tick,

    restart: function() {
      return stepper.restart(step), simulation;
    },

    stop: function() {
      return stepper.stop(), simulation;
    },

    nodes: function(_) {
      return arguments.length ? (nodes = _, initializeNodes(), forces.forEach(initializeForce), simulation) : nodes;
    },

    alpha: function(_) {
      return arguments.length ? (alpha = +_, simulation) : alpha;
    },

    alphaMin: function(_) {
      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;
    },

    alphaDecay: function(_) {
      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;
    },

    alphaTarget: function(_) {
      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;
    },

    velocityDecay: function(_) {
      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;
    },

    randomSource: function(_) {
      return arguments.length ? (random = _, forces.forEach(initializeForce), simulation) : random;
    },

    force: function(name, _) {
      return arguments.length > 1 ? ((_ == null ? forces.delete(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);
    },

    find: function(x, y, radius) {
      var i = 0,
          n = nodes.length,
          dx,
          dy,
          d2,
          node,
          closest;

      if (radius == null) radius = Infinity;
      else radius *= radius;

      for (i = 0; i < n; ++i) {
        node = nodes[i];
        dx = x - node.x;
        dy = y - node.y;
        d2 = dx * dx + dy * dy;
        if (d2 < radius) closest = node, radius = d2;
      }

      return closest;
    },

    on: function(name, _) {
      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);
    }
  };
}

;// CONCATENATED MODULE: ./node_modules/d3-force/src/manyBody.js





/* harmony default export */ function manyBody() {
  var nodes,
      node,
      random,
      alpha,
      strength = d3_force_src_constant(-30),
      strengths,
      distanceMin2 = 1,
      distanceMax2 = Infinity,
      theta2 = 0.81;

  function force(_) {
    var i, n = nodes.length, tree = quadtree(nodes, simulation_x, simulation_y).visitAfter(accumulate);
    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);
  }

  function initialize() {
    if (!nodes) return;
    var i, n = nodes.length, node;
    strengths = new Array(n);
    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);
  }

  function accumulate(quad) {
    var strength = 0, q, c, weight = 0, x, y, i;

    // For internal nodes, accumulate forces from child quadrants.
    if (quad.length) {
      for (x = y = i = 0; i < 4; ++i) {
        if ((q = quad[i]) && (c = Math.abs(q.value))) {
          strength += q.value, weight += c, x += c * q.x, y += c * q.y;
        }
      }
      quad.x = x / weight;
      quad.y = y / weight;
    }

    // For leaf nodes, accumulate forces from coincident quadrants.
    else {
      q = quad;
      q.x = q.data.x;
      q.y = q.data.y;
      do strength += strengths[q.data.index];
      while (q = q.next);
    }

    quad.value = strength;
  }

  function apply(quad, x1, _, x2) {
    if (!quad.value) return true;

    var x = quad.x - node.x,
        y = quad.y - node.y,
        w = x2 - x1,
        l = x * x + y * y;

    // Apply the Barnes-Hut approximation if possible.
    // Limit forces for very close nodes; randomize direction if coincident.
    if (w * w / theta2 < l) {
      if (l < distanceMax2) {
        if (x === 0) x = jiggle(random), l += x * x;
        if (y === 0) y = jiggle(random), l += y * y;
        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);
        node.vx += x * quad.value * alpha / l;
        node.vy += y * quad.value * alpha / l;
      }
      return true;
    }

    // Otherwise, process points directly.
    else if (quad.length || l >= distanceMax2) return;

    // Limit forces for very close nodes; randomize direction if coincident.
    if (quad.data !== node || quad.next) {
      if (x === 0) x = jiggle(random), l += x * x;
      if (y === 0) y = jiggle(random), l += y * y;
      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);
    }

    do if (quad.data !== node) {
      w = strengths[quad.data.index] * alpha / l;
      node.vx += x * w;
      node.vy += y * w;
    } while (quad = quad.next);
  }

  force.initialize = function(_nodes, _random) {
    nodes = _nodes;
    random = _random;
    initialize();
  };

  force.strength = function(_) {
    return arguments.length ? (strength = typeof _ === "function" ? _ : d3_force_src_constant(+_), initialize(), force) : strength;
  };

  force.distanceMin = function(_) {
    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);
  };

  force.distanceMax = function(_) {
    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);
  };

  force.theta = function(_) {
    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);
  };

  return force;
}

;// CONCATENATED MODULE: ./node_modules/d3-force/src/radial.js


/* harmony default export */ function radial(radius, x, y) {
  var nodes,
      strength = d3_force_src_constant(0.1),
      strengths,
      radiuses;

  if (typeof radius !== "function") radius = d3_force_src_constant(+radius);
  if (x == null) x = 0;
  if (y == null) y = 0;

  function force(alpha) {
    for (var i = 0, n = nodes.length; i < n; ++i) {
      var node = nodes[i],
          dx = node.x - x || 1e-6,
          dy = node.y - y || 1e-6,
          r = Math.sqrt(dx * dx + dy * dy),
          k = (radiuses[i] - r) * strengths[i] * alpha / r;
      node.vx += dx * k;
      node.vy += dy * k;
    }
  }

  function initialize() {
    if (!nodes) return;
    var i, n = nodes.length;
    strengths = new Array(n);
    radiuses = new Array(n);
    for (i = 0; i < n; ++i) {
      radiuses[i] = +radius(nodes[i], i, nodes);
      strengths[i] = isNaN(radiuses[i]) ? 0 : +strength(nodes[i], i, nodes);
    }
  }

  force.initialize = function(_) {
    nodes = _, initialize();
  };

  force.strength = function(_) {
    return arguments.length ? (strength = typeof _ === "function" ? _ : d3_force_src_constant(+_), initialize(), force) : strength;
  };

  force.radius = function(_) {
    return arguments.length ? (radius = typeof _ === "function" ? _ : d3_force_src_constant(+_), initialize(), force) : radius;
  };

  force.x = function(_) {
    return arguments.length ? (x = +_, force) : x;
  };

  force.y = function(_) {
    return arguments.length ? (y = +_, force) : y;
  };

  return force;
}

;// CONCATENATED MODULE: ./node_modules/d3-force/src/x.js


/* harmony default export */ function src_x(x) {
  var strength = d3_force_src_constant(0.1),
      nodes,
      strengths,
      xz;

  if (typeof x !== "function") x = d3_force_src_constant(x == null ? 0 : +x);

  function force(alpha) {
    for (var i = 0, n = nodes.length, node; i < n; ++i) {
      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;
    }
  }

  function initialize() {
    if (!nodes) return;
    var i, n = nodes.length;
    strengths = new Array(n);
    xz = new Array(n);
    for (i = 0; i < n; ++i) {
      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);
    }
  }

  force.initialize = function(_) {
    nodes = _;
    initialize();
  };

  force.strength = function(_) {
    return arguments.length ? (strength = typeof _ === "function" ? _ : d3_force_src_constant(+_), initialize(), force) : strength;
  };

  force.x = function(_) {
    return arguments.length ? (x = typeof _ === "function" ? _ : d3_force_src_constant(+_), initialize(), force) : x;
  };

  return force;
}

;// CONCATENATED MODULE: ./node_modules/d3-force/src/y.js


/* harmony default export */ function src_y(y) {
  var strength = d3_force_src_constant(0.1),
      nodes,
      strengths,
      yz;

  if (typeof y !== "function") y = d3_force_src_constant(y == null ? 0 : +y);

  function force(alpha) {
    for (var i = 0, n = nodes.length, node; i < n; ++i) {
      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;
    }
  }

  function initialize() {
    if (!nodes) return;
    var i, n = nodes.length;
    strengths = new Array(n);
    yz = new Array(n);
    for (i = 0; i < n; ++i) {
      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);
    }
  }

  force.initialize = function(_) {
    nodes = _;
    initialize();
  };

  force.strength = function(_) {
    return arguments.length ? (strength = typeof _ === "function" ? _ : d3_force_src_constant(+_), initialize(), force) : strength;
  };

  force.y = function(_) {
    return arguments.length ? (y = typeof _ === "function" ? _ : d3_force_src_constant(+_), initialize(), force) : y;
  };

  return force;
}

;// CONCATENATED MODULE: ./node_modules/d3-force/src/index.js









;// CONCATENATED MODULE: ./node_modules/d3-format/src/formatDecimal.js
/* harmony default export */ function formatDecimal(x) {
  return Math.abs(x = Math.round(x)) >= 1e21
      ? x.toLocaleString("en").replace(/,/g, "")
      : x.toString(10);
}

// Computes the decimal coefficient and exponent of the specified number x with
// significant digits p, where x is positive and p is in [1, 21] or undefined.
// For example, formatDecimalParts(1.23) returns ["123", 0].
function formatDecimalParts(x, p) {
  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf("e")) < 0) return null; // NaN, ±Infinity
  var i, coefficient = x.slice(0, i);

  // The string returned by toExponential either has the form \d\.\d+e[-+]\d+
  // (e.g., 1.2e+3) or the form \de[-+]\d+ (e.g., 1e+3).
  return [
    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,
    +x.slice(i + 1)
  ];
}

;// CONCATENATED MODULE: ./node_modules/d3-format/src/exponent.js


/* harmony default export */ function src_exponent(x) {
  return x = formatDecimalParts(Math.abs(x)), x ? x[1] : NaN;
}

;// CONCATENATED MODULE: ./node_modules/d3-format/src/formatGroup.js
/* harmony default export */ function formatGroup(grouping, thousands) {
  return function(value, width) {
    var i = value.length,
        t = [],
        j = 0,
        g = grouping[0],
        length = 0;

    while (i > 0 && g > 0) {
      if (length + g + 1 > width) g = Math.max(1, width - length);
      t.push(value.substring(i -= g, i + g));
      if ((length += g + 1) > width) break;
      g = grouping[j = (j + 1) % grouping.length];
    }

    return t.reverse().join(thousands);
  };
}

;// CONCATENATED MODULE: ./node_modules/d3-format/src/formatNumerals.js
/* harmony default export */ function formatNumerals(numerals) {
  return function(value) {
    return value.replace(/[0-9]/g, function(i) {
      return numerals[+i];
    });
  };
}

;// CONCATENATED MODULE: ./node_modules/d3-format/src/formatSpecifier.js
// [[fill]align][sign][symbol][0][width][,][.precision][~][type]
var re = /^(?:(.)?([<>=^]))?([+\-( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?(~)?([a-z%])?$/i;

function formatSpecifier(specifier) {
  if (!(match = re.exec(specifier))) throw new Error("invalid format: " + specifier);
  var match;
  return new FormatSpecifier({
    fill: match[1],
    align: match[2],
    sign: match[3],
    symbol: match[4],
    zero: match[5],
    width: match[6],
    comma: match[7],
    precision: match[8] && match[8].slice(1),
    trim: match[9],
    type: match[10]
  });
}

formatSpecifier.prototype = FormatSpecifier.prototype; // instanceof

function FormatSpecifier(specifier) {
  this.fill = specifier.fill === undefined ? " " : specifier.fill + "";
  this.align = specifier.align === undefined ? ">" : specifier.align + "";
  this.sign = specifier.sign === undefined ? "-" : specifier.sign + "";
  this.symbol = specifier.symbol === undefined ? "" : specifier.symbol + "";
  this.zero = !!specifier.zero;
  this.width = specifier.width === undefined ? undefined : +specifier.width;
  this.comma = !!specifier.comma;
  this.precision = specifier.precision === undefined ? undefined : +specifier.precision;
  this.trim = !!specifier.trim;
  this.type = specifier.type === undefined ? "" : specifier.type + "";
}

FormatSpecifier.prototype.toString = function() {
  return this.fill
      + this.align
      + this.sign
      + this.symbol
      + (this.zero ? "0" : "")
      + (this.width === undefined ? "" : Math.max(1, this.width | 0))
      + (this.comma ? "," : "")
      + (this.precision === undefined ? "" : "." + Math.max(0, this.precision | 0))
      + (this.trim ? "~" : "")
      + this.type;
};

;// CONCATENATED MODULE: ./node_modules/d3-format/src/formatTrim.js
// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.
/* harmony default export */ function formatTrim(s) {
  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {
    switch (s[i]) {
      case ".": i0 = i1 = i; break;
      case "0": if (i0 === 0) i0 = i; i1 = i; break;
      default: if (!+s[i]) break out; if (i0 > 0) i0 = 0; break;
    }
  }
  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;
}

;// CONCATENATED MODULE: ./node_modules/d3-format/src/formatPrefixAuto.js


var prefixExponent;

/* harmony default export */ function formatPrefixAuto(x, p) {
  var d = formatDecimalParts(x, p);
  if (!d) return x + "";
  var coefficient = d[0],
      exponent = d[1],
      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,
      n = coefficient.length;
  return i === n ? coefficient
      : i > n ? coefficient + new Array(i - n + 1).join("0")
      : i > 0 ? coefficient.slice(0, i) + "." + coefficient.slice(i)
      : "0." + new Array(1 - i).join("0") + formatDecimalParts(x, Math.max(0, p + i - 1))[0]; // less than 1y!
}

;// CONCATENATED MODULE: ./node_modules/d3-format/src/formatRounded.js


/* harmony default export */ function formatRounded(x, p) {
  var d = formatDecimalParts(x, p);
  if (!d) return x + "";
  var coefficient = d[0],
      exponent = d[1];
  return exponent < 0 ? "0." + new Array(-exponent).join("0") + coefficient
      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + "." + coefficient.slice(exponent + 1)
      : coefficient + new Array(exponent - coefficient.length + 2).join("0");
}

;// CONCATENATED MODULE: ./node_modules/d3-format/src/formatTypes.js




/* harmony default export */ const formatTypes = ({
  "%": (x, p) => (x * 100).toFixed(p),
  "b": (x) => Math.round(x).toString(2),
  "c": (x) => x + "",
  "d": formatDecimal,
  "e": (x, p) => x.toExponential(p),
  "f": (x, p) => x.toFixed(p),
  "g": (x, p) => x.toPrecision(p),
  "o": (x) => Math.round(x).toString(8),
  "p": (x, p) => formatRounded(x * 100, p),
  "r": formatRounded,
  "s": formatPrefixAuto,
  "X": (x) => Math.round(x).toString(16).toUpperCase(),
  "x": (x) => Math.round(x).toString(16)
});

;// CONCATENATED MODULE: ./node_modules/d3-format/src/identity.js
/* harmony default export */ function d3_format_src_identity(x) {
  return x;
}

;// CONCATENATED MODULE: ./node_modules/d3-format/src/locale.js









var locale_map = Array.prototype.map,
    prefixes = ["y","z","a","f","p","n","µ","m","","k","M","G","T","P","E","Z","Y"];

/* harmony default export */ function locale(locale) {
  var group = locale.grouping === undefined || locale.thousands === undefined ? d3_format_src_identity : formatGroup(locale_map.call(locale.grouping, Number), locale.thousands + ""),
      currencyPrefix = locale.currency === undefined ? "" : locale.currency[0] + "",
      currencySuffix = locale.currency === undefined ? "" : locale.currency[1] + "",
      decimal = locale.decimal === undefined ? "." : locale.decimal + "",
      numerals = locale.numerals === undefined ? d3_format_src_identity : formatNumerals(locale_map.call(locale.numerals, String)),
      percent = locale.percent === undefined ? "%" : locale.percent + "",
      minus = locale.minus === undefined ? "−" : locale.minus + "",
      nan = locale.nan === undefined ? "NaN" : locale.nan + "";

  function newFormat(specifier) {
    specifier = formatSpecifier(specifier);

    var fill = specifier.fill,
        align = specifier.align,
        sign = specifier.sign,
        symbol = specifier.symbol,
        zero = specifier.zero,
        width = specifier.width,
        comma = specifier.comma,
        precision = specifier.precision,
        trim = specifier.trim,
        type = specifier.type;

    // The "n" type is an alias for ",g".
    if (type === "n") comma = true, type = "g";

    // The "" type, and any invalid type, is an alias for ".12~g".
    else if (!formatTypes[type]) precision === undefined && (precision = 12), trim = true, type = "g";

    // If zero fill is specified, padding goes after sign and before digits.
    if (zero || (fill === "0" && align === "=")) zero = true, fill = "0", align = "=";

    // Compute the prefix and suffix.
    // For SI-prefix, the suffix is lazily computed.
    var prefix = symbol === "$" ? currencyPrefix : symbol === "#" && /[boxX]/.test(type) ? "0" + type.toLowerCase() : "",
        suffix = symbol === "$" ? currencySuffix : /[%p]/.test(type) ? percent : "";

    // What format function should we use?
    // Is this an integer type?
    // Can this type generate exponential notation?
    var formatType = formatTypes[type],
        maybeSuffix = /[defgprs%]/.test(type);

    // Set the default precision if not specified,
    // or clamp the specified precision to the supported range.
    // For significant precision, it must be in [1, 21].
    // For fixed precision, it must be in [0, 20].
    precision = precision === undefined ? 6
        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))
        : Math.max(0, Math.min(20, precision));

    function format(value) {
      var valuePrefix = prefix,
          valueSuffix = suffix,
          i, n, c;

      if (type === "c") {
        valueSuffix = formatType(value) + valueSuffix;
        value = "";
      } else {
        value = +value;

        // Determine the sign. -0 is not less than 0, but 1 / -0 is!
        var valueNegative = value < 0 || 1 / value < 0;

        // Perform the initial formatting.
        value = isNaN(value) ? nan : formatType(Math.abs(value), precision);

        // Trim insignificant zeros.
        if (trim) value = formatTrim(value);

        // If a negative value rounds to zero after formatting, and no explicit positive sign is requested, hide the sign.
        if (valueNegative && +value === 0 && sign !== "+") valueNegative = false;

        // Compute the prefix and suffix.
        valuePrefix = (valueNegative ? (sign === "(" ? sign : minus) : sign === "-" || sign === "(" ? "" : sign) + valuePrefix;
        valueSuffix = (type === "s" ? prefixes[8 + prefixExponent / 3] : "") + valueSuffix + (valueNegative && sign === "(" ? ")" : "");

        // Break the formatted value into the integer “value” part that can be
        // grouped, and fractional or exponential “suffix” part that is not.
        if (maybeSuffix) {
          i = -1, n = value.length;
          while (++i < n) {
            if (c = value.charCodeAt(i), 48 > c || c > 57) {
              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;
              value = value.slice(0, i);
              break;
            }
          }
        }
      }

      // If the fill character is not "0", grouping is applied before padding.
      if (comma && !zero) value = group(value, Infinity);

      // Compute the padding.
      var length = valuePrefix.length + value.length + valueSuffix.length,
          padding = length < width ? new Array(width - length + 1).join(fill) : "";

      // If the fill character is "0", grouping is applied after padding.
      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = "";

      // Reconstruct the final output based on the desired alignment.
      switch (align) {
        case "<": value = valuePrefix + value + valueSuffix + padding; break;
        case "=": value = valuePrefix + padding + value + valueSuffix; break;
        case "^": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;
        default: value = padding + valuePrefix + value + valueSuffix; break;
      }

      return numerals(value);
    }

    format.toString = function() {
      return specifier + "";
    };

    return format;
  }

  function formatPrefix(specifier, value) {
    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = "f", specifier)),
        e = Math.max(-8, Math.min(8, Math.floor(src_exponent(value) / 3))) * 3,
        k = Math.pow(10, -e),
        prefix = prefixes[8 + e / 3];
    return function(value) {
      return f(k * value) + prefix;
    };
  }

  return {
    format: newFormat,
    formatPrefix: formatPrefix
  };
}

;// CONCATENATED MODULE: ./node_modules/d3-format/src/defaultLocale.js


var defaultLocale_locale;
var format;
var formatPrefix;

defaultLocale({
  thousands: ",",
  grouping: [3],
  currency: ["$", ""]
});

function defaultLocale(definition) {
  defaultLocale_locale = locale(definition);
  format = defaultLocale_locale.format;
  formatPrefix = defaultLocale_locale.formatPrefix;
  return defaultLocale_locale;
}

;// CONCATENATED MODULE: ./node_modules/d3-format/src/precisionFixed.js


/* harmony default export */ function precisionFixed(step) {
  return Math.max(0, -src_exponent(Math.abs(step)));
}

;// CONCATENATED MODULE: ./node_modules/d3-format/src/precisionPrefix.js


/* harmony default export */ function precisionPrefix(step, value) {
  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(src_exponent(value) / 3))) * 3 - src_exponent(Math.abs(step)));
}

;// CONCATENATED MODULE: ./node_modules/d3-format/src/precisionRound.js


/* harmony default export */ function precisionRound(step, max) {
  step = Math.abs(step), max = Math.abs(max) - step;
  return Math.max(0, src_exponent(max) - src_exponent(step)) + 1;
}

;// CONCATENATED MODULE: ./node_modules/d3-format/src/index.js







;// CONCATENATED MODULE: ./node_modules/d3-geo/src/math.js
var src_math_epsilon = 1e-6;
var epsilon2 = 1e-12;
var math_pi = Math.PI;
var math_halfPi = math_pi / 2;
var quarterPi = math_pi / 4;
var math_tau = math_pi * 2;

var src_math_degrees = 180 / math_pi;
var math_radians = math_pi / 180;

var src_math_abs = Math.abs;
var atan = Math.atan;
var atan2 = Math.atan2;
var math_cos = Math.cos;
var ceil = Math.ceil;
var exp = Math.exp;
var floor = Math.floor;
var hypot = Math.hypot;
var log = Math.log;
var math_pow = Math.pow;
var math_sin = Math.sin;
var sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };
var sqrt = Math.sqrt;
var tan = Math.tan;

function acos(x) {
  return x > 1 ? 0 : x < -1 ? math_pi : Math.acos(x);
}

function asin(x) {
  return x > 1 ? math_halfPi : x < -1 ? -math_halfPi : Math.asin(x);
}

function haversin(x) {
  return (x = math_sin(x / 2)) * x;
}

;// CONCATENATED MODULE: ./node_modules/d3-geo/src/noop.js
function noop_noop() {}

;// CONCATENATED MODULE: ./node_modules/d3-geo/src/stream.js
function streamGeometry(geometry, stream) {
  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {
    streamGeometryType[geometry.type](geometry, stream);
  }
}

var streamObjectType = {
  Feature: function(object, stream) {
    streamGeometry(object.geometry, stream);
  },
  FeatureCollection: function(object, stream) {
    var features = object.features, i = -1, n = features.length;
    while (++i < n) streamGeometry(features[i].geometry, stream);
  }
};

var streamGeometryType = {
  Sphere: function(object, stream) {
    stream.sphere();
  },
  Point: function(object, stream) {
    object = object.coordinates;
    stream.point(object[0], object[1], object[2]);
  },
  MultiPoint: function(object, stream) {
    var coordinates = object.coordinates, i = -1, n = coordinates.length;
    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);
  },
  LineString: function(object, stream) {
    streamLine(object.coordinates, stream, 0);
  },
  MultiLineString: function(object, stream) {
    var coordinates = object.coordinates, i = -1, n = coordinates.length;
    while (++i < n) streamLine(coordinates[i], stream, 0);
  },
  Polygon: function(object, stream) {
    streamPolygon(object.coordinates, stream);
  },
  MultiPolygon: function(object, stream) {
    var coordinates = object.coordinates, i = -1, n = coordinates.length;
    while (++i < n) streamPolygon(coordinates[i], stream);
  },
  GeometryCollection: function(object, stream) {
    var geometries = object.geometries, i = -1, n = geometries.length;
    while (++i < n) streamGeometry(geometries[i], stream);
  }
};

function streamLine(coordinates, stream, closed) {
  var i = -1, n = coordinates.length - closed, coordinate;
  stream.lineStart();
  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);
  stream.lineEnd();
}

function streamPolygon(coordinates, stream) {
  var i = -1, n = coordinates.length;
  stream.polygonStart();
  while (++i < n) streamLine(coordinates[i], stream, 1);
  stream.polygonEnd();
}

/* harmony default export */ function stream(object, stream) {
  if (object && streamObjectType.hasOwnProperty(object.type)) {
    streamObjectType[object.type](object, stream);
  } else {
    streamGeometry(object, stream);
  }
}

;// CONCATENATED MODULE: ./node_modules/d3-geo/src/area.js





var areaRingSum = new Adder();

// hello?

var areaSum = new Adder(),
    lambda00,
    phi00,
    lambda0,
    cosPhi0,
    sinPhi0;

var areaStream = {
  point: noop_noop,
  lineStart: noop_noop,
  lineEnd: noop_noop,
  polygonStart: function() {
    areaRingSum = new Adder();
    areaStream.lineStart = areaRingStart;
    areaStream.lineEnd = areaRingEnd;
  },
  polygonEnd: function() {
    var areaRing = +areaRingSum;
    areaSum.add(areaRing < 0 ? math_tau + areaRing : areaRing);
    this.lineStart = this.lineEnd = this.point = noop_noop;
  },
  sphere: function() {
    areaSum.add(math_tau);
  }
};

function areaRingStart() {
  areaStream.point = areaPointFirst;
}

function areaRingEnd() {
  areaPoint(lambda00, phi00);
}

function areaPointFirst(lambda, phi) {
  areaStream.point = areaPoint;
  lambda00 = lambda, phi00 = phi;
  lambda *= math_radians, phi *= math_radians;
  lambda0 = lambda, cosPhi0 = math_cos(phi = phi / 2 + quarterPi), sinPhi0 = math_sin(phi);
}

function areaPoint(lambda, phi) {
  lambda *= math_radians, phi *= math_radians;
  phi = phi / 2 + quarterPi; // half the angular distance from south pole

  // Spherical excess E for a spherical triangle with vertices: south pole,
  // previous point, current point.  Uses a formula derived from Cagnoli’s
  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).
  var dLambda = lambda - lambda0,
      sdLambda = dLambda >= 0 ? 1 : -1,
      adLambda = sdLambda * dLambda,
      cosPhi = math_cos(phi),
      sinPhi = math_sin(phi),
      k = sinPhi0 * sinPhi,
      u = cosPhi0 * cosPhi + k * math_cos(adLambda),
      v = k * sdLambda * math_sin(adLambda);
  areaRingSum.add(atan2(v, u));

  // Advance the previous points.
  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;
}

/* harmony default export */ function d3_geo_src_area(object) {
  areaSum = new Adder();
  stream(object, areaStream);
  return areaSum * 2;
}

;// CONCATENATED MODULE: ./node_modules/d3-geo/src/cartesian.js


function spherical(cartesian) {
  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];
}

function cartesian(spherical) {
  var lambda = spherical[0], phi = spherical[1], cosPhi = math_cos(phi);
  return [cosPhi * math_cos(lambda), cosPhi * math_sin(lambda), math_sin(phi)];
}

function cartesianDot(a, b) {
  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];
}

function cartesianCross(a, b) {
  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];
}

// TODO return a
function cartesianAddInPlace(a, b) {
  a[0] += b[0], a[1] += b[1], a[2] += b[2];
}

function cartesianScale(vector, k) {
  return [vector[0] * k, vector[1] * k, vector[2] * k];
}

// TODO return d
function cartesianNormalizeInPlace(d) {
  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);
  d[0] /= l, d[1] /= l, d[2] /= l;
}

;// CONCATENATED MODULE: ./node_modules/d3-geo/src/bounds.js






var bounds_lambda0, phi0, lambda1, phi1, // bounds
    lambda2, // previous lambda-coordinate
    bounds_lambda00, bounds_phi00, // first point
    p0, // previous 3D point
    deltaSum,
    ranges,
    bounds_range;

var boundsStream = {
  point: boundsPoint,
  lineStart: boundsLineStart,
  lineEnd: boundsLineEnd,
  polygonStart: function() {
    boundsStream.point = boundsRingPoint;
    boundsStream.lineStart = boundsRingStart;
    boundsStream.lineEnd = boundsRingEnd;
    deltaSum = new Adder();
    areaStream.polygonStart();
  },
  polygonEnd: function() {
    areaStream.polygonEnd();
    boundsStream.point = boundsPoint;
    boundsStream.lineStart = boundsLineStart;
    boundsStream.lineEnd = boundsLineEnd;
    if (areaRingSum < 0) bounds_lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);
    else if (deltaSum > src_math_epsilon) phi1 = 90;
    else if (deltaSum < -src_math_epsilon) phi0 = -90;
    bounds_range[0] = bounds_lambda0, bounds_range[1] = lambda1;
  },
  sphere: function() {
    bounds_lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);
  }
};

function boundsPoint(lambda, phi) {
  ranges.push(bounds_range = [bounds_lambda0 = lambda, lambda1 = lambda]);
  if (phi < phi0) phi0 = phi;
  if (phi > phi1) phi1 = phi;
}

function linePoint(lambda, phi) {
  var p = cartesian([lambda * math_radians, phi * math_radians]);
  if (p0) {
    var normal = cartesianCross(p0, p),
        equatorial = [normal[1], -normal[0], 0],
        inflection = cartesianCross(equatorial, normal);
    cartesianNormalizeInPlace(inflection);
    inflection = spherical(inflection);
    var delta = lambda - lambda2,
        sign = delta > 0 ? 1 : -1,
        lambdai = inflection[0] * src_math_degrees * sign,
        phii,
        antimeridian = src_math_abs(delta) > 180;
    if (antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {
      phii = inflection[1] * src_math_degrees;
      if (phii > phi1) phi1 = phii;
    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {
      phii = -inflection[1] * src_math_degrees;
      if (phii < phi0) phi0 = phii;
    } else {
      if (phi < phi0) phi0 = phi;
      if (phi > phi1) phi1 = phi;
    }
    if (antimeridian) {
      if (lambda < lambda2) {
        if (angle(bounds_lambda0, lambda) > angle(bounds_lambda0, lambda1)) lambda1 = lambda;
      } else {
        if (angle(lambda, lambda1) > angle(bounds_lambda0, lambda1)) bounds_lambda0 = lambda;
      }
    } else {
      if (lambda1 >= bounds_lambda0) {
        if (lambda < bounds_lambda0) bounds_lambda0 = lambda;
        if (lambda > lambda1) lambda1 = lambda;
      } else {
        if (lambda > lambda2) {
          if (angle(bounds_lambda0, lambda) > angle(bounds_lambda0, lambda1)) lambda1 = lambda;
        } else {
          if (angle(lambda, lambda1) > angle(bounds_lambda0, lambda1)) bounds_lambda0 = lambda;
        }
      }
    }
  } else {
    ranges.push(bounds_range = [bounds_lambda0 = lambda, lambda1 = lambda]);
  }
  if (phi < phi0) phi0 = phi;
  if (phi > phi1) phi1 = phi;
  p0 = p, lambda2 = lambda;
}

function boundsLineStart() {
  boundsStream.point = linePoint;
}

function boundsLineEnd() {
  bounds_range[0] = bounds_lambda0, bounds_range[1] = lambda1;
  boundsStream.point = boundsPoint;
  p0 = null;
}

function boundsRingPoint(lambda, phi) {
  if (p0) {
    var delta = lambda - lambda2;
    deltaSum.add(src_math_abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);
  } else {
    bounds_lambda00 = lambda, bounds_phi00 = phi;
  }
  areaStream.point(lambda, phi);
  linePoint(lambda, phi);
}

function boundsRingStart() {
  areaStream.lineStart();
}

function boundsRingEnd() {
  boundsRingPoint(bounds_lambda00, bounds_phi00);
  areaStream.lineEnd();
  if (src_math_abs(deltaSum) > src_math_epsilon) bounds_lambda0 = -(lambda1 = 180);
  bounds_range[0] = bounds_lambda0, bounds_range[1] = lambda1;
  p0 = null;
}

// Finds the left-right distance between two longitudes.
// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want
// the distance between ±180° to be 360°.
function angle(lambda0, lambda1) {
  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;
}

function rangeCompare(a, b) {
  return a[0] - b[0];
}

function rangeContains(range, x) {
  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;
}

/* harmony default export */ function bounds(feature) {
  var i, n, a, b, merged, deltaMax, delta;

  phi1 = lambda1 = -(bounds_lambda0 = phi0 = Infinity);
  ranges = [];
  stream(feature, boundsStream);

  // First, sort ranges by their minimum longitudes.
  if (n = ranges.length) {
    ranges.sort(rangeCompare);

    // Then, merge any ranges that overlap.
    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {
      b = ranges[i];
      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {
        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];
        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];
      } else {
        merged.push(a = b);
      }
    }

    // Finally, find the largest gap between the merged ranges.
    // The final bounding box will be the inverse of this gap.
    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {
      b = merged[i];
      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, bounds_lambda0 = b[0], lambda1 = a[1];
    }
  }

  ranges = bounds_range = null;

  return bounds_lambda0 === Infinity || phi0 === Infinity
      ? [[NaN, NaN], [NaN, NaN]]
      : [[bounds_lambda0, phi0], [lambda1, phi1]];
}

;// CONCATENATED MODULE: ./node_modules/d3-geo/src/centroid.js





var W0, W1,
    X0, Y0, Z0,
    X1, Y1, Z1,
    X2, Y2, Z2,
    centroid_lambda00, centroid_phi00, // first point
    x0, y0, z0; // previous point

var centroidStream = {
  sphere: noop_noop,
  point: centroidPoint,
  lineStart: centroidLineStart,
  lineEnd: centroidLineEnd,
  polygonStart: function() {
    centroidStream.lineStart = centroidRingStart;
    centroidStream.lineEnd = centroidRingEnd;
  },
  polygonEnd: function() {
    centroidStream.lineStart = centroidLineStart;
    centroidStream.lineEnd = centroidLineEnd;
  }
};

// Arithmetic mean of Cartesian vectors.
function centroidPoint(lambda, phi) {
  lambda *= math_radians, phi *= math_radians;
  var cosPhi = math_cos(phi);
  centroidPointCartesian(cosPhi * math_cos(lambda), cosPhi * math_sin(lambda), math_sin(phi));
}

function centroidPointCartesian(x, y, z) {
  ++W0;
  X0 += (x - X0) / W0;
  Y0 += (y - Y0) / W0;
  Z0 += (z - Z0) / W0;
}

function centroidLineStart() {
  centroidStream.point = centroidLinePointFirst;
}

function centroidLinePointFirst(lambda, phi) {
  lambda *= math_radians, phi *= math_radians;
  var cosPhi = math_cos(phi);
  x0 = cosPhi * math_cos(lambda);
  y0 = cosPhi * math_sin(lambda);
  z0 = math_sin(phi);
  centroidStream.point = centroidLinePoint;
  centroidPointCartesian(x0, y0, z0);
}

function centroidLinePoint(lambda, phi) {
  lambda *= math_radians, phi *= math_radians;
  var cosPhi = math_cos(phi),
      x = cosPhi * math_cos(lambda),
      y = cosPhi * math_sin(lambda),
      z = math_sin(phi),
      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);
  W1 += w;
  X1 += w * (x0 + (x0 = x));
  Y1 += w * (y0 + (y0 = y));
  Z1 += w * (z0 + (z0 = z));
  centroidPointCartesian(x0, y0, z0);
}

function centroidLineEnd() {
  centroidStream.point = centroidPoint;
}

// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,
// J. Applied Mechanics 42, 239 (1975).
function centroidRingStart() {
  centroidStream.point = centroidRingPointFirst;
}

function centroidRingEnd() {
  centroidRingPoint(centroid_lambda00, centroid_phi00);
  centroidStream.point = centroidPoint;
}

function centroidRingPointFirst(lambda, phi) {
  centroid_lambda00 = lambda, centroid_phi00 = phi;
  lambda *= math_radians, phi *= math_radians;
  centroidStream.point = centroidRingPoint;
  var cosPhi = math_cos(phi);
  x0 = cosPhi * math_cos(lambda);
  y0 = cosPhi * math_sin(lambda);
  z0 = math_sin(phi);
  centroidPointCartesian(x0, y0, z0);
}

function centroidRingPoint(lambda, phi) {
  lambda *= math_radians, phi *= math_radians;
  var cosPhi = math_cos(phi),
      x = cosPhi * math_cos(lambda),
      y = cosPhi * math_sin(lambda),
      z = math_sin(phi),
      cx = y0 * z - z0 * y,
      cy = z0 * x - x0 * z,
      cz = x0 * y - y0 * x,
      m = hypot(cx, cy, cz),
      w = asin(m), // line weight = angle
      v = m && -w / m; // area weight multiplier
  X2.add(v * cx);
  Y2.add(v * cy);
  Z2.add(v * cz);
  W1 += w;
  X1 += w * (x0 + (x0 = x));
  Y1 += w * (y0 + (y0 = y));
  Z1 += w * (z0 + (z0 = z));
  centroidPointCartesian(x0, y0, z0);
}

/* harmony default export */ function centroid(object) {
  W0 = W1 =
  X0 = Y0 = Z0 =
  X1 = Y1 = Z1 = 0;
  X2 = new Adder();
  Y2 = new Adder();
  Z2 = new Adder();
  stream(object, centroidStream);

  var x = +X2,
      y = +Y2,
      z = +Z2,
      m = hypot(x, y, z);

  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.
  if (m < epsilon2) {
    x = X1, y = Y1, z = Z1;
    // If the feature has zero length, fall back to arithmetic mean of point vectors.
    if (W1 < src_math_epsilon) x = X0, y = Y0, z = Z0;
    m = hypot(x, y, z);
    // If the feature still has an undefined ccentroid, then return.
    if (m < epsilon2) return [NaN, NaN];
  }

  return [atan2(y, x) * src_math_degrees, asin(z / m) * src_math_degrees];
}

;// CONCATENATED MODULE: ./node_modules/d3-geo/src/constant.js
/* harmony default export */ function d3_geo_src_constant(x) {
  return function() {
    return x;
  };
}

;// CONCATENATED MODULE: ./node_modules/d3-geo/src/compose.js
/* harmony default export */ function compose(a, b) {

  function compose(x, y) {
    return x = a(x, y), b(x[0], x[1]);
  }

  if (a.invert && b.invert) compose.invert = function(x, y) {
    return x = b.invert(x, y), x && a.invert(x[0], x[1]);
  };

  return compose;
}

;// CONCATENATED MODULE: ./node_modules/d3-geo/src/rotation.js



function rotationIdentity(lambda, phi) {
  return [src_math_abs(lambda) > math_pi ? lambda + Math.round(-lambda / math_tau) * math_tau : lambda, phi];
}

rotationIdentity.invert = rotationIdentity;

function rotateRadians(deltaLambda, deltaPhi, deltaGamma) {
  return (deltaLambda %= math_tau) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))
    : rotationLambda(deltaLambda))
    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)
    : rotationIdentity);
}

function forwardRotationLambda(deltaLambda) {
  return function(lambda, phi) {
    return lambda += deltaLambda, [lambda > math_pi ? lambda - math_tau : lambda < -math_pi ? lambda + math_tau : lambda, phi];
  };
}

function rotationLambda(deltaLambda) {
  var rotation = forwardRotationLambda(deltaLambda);
  rotation.invert = forwardRotationLambda(-deltaLambda);
  return rotation;
}

function rotationPhiGamma(deltaPhi, deltaGamma) {
  var cosDeltaPhi = math_cos(deltaPhi),
      sinDeltaPhi = math_sin(deltaPhi),
      cosDeltaGamma = math_cos(deltaGamma),
      sinDeltaGamma = math_sin(deltaGamma);

  function rotation(lambda, phi) {
    var cosPhi = math_cos(phi),
        x = math_cos(lambda) * cosPhi,
        y = math_sin(lambda) * cosPhi,
        z = math_sin(phi),
        k = z * cosDeltaPhi + x * sinDeltaPhi;
    return [
      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),
      asin(k * cosDeltaGamma + y * sinDeltaGamma)
    ];
  }

  rotation.invert = function(lambda, phi) {
    var cosPhi = math_cos(phi),
        x = math_cos(lambda) * cosPhi,
        y = math_sin(lambda) * cosPhi,
        z = math_sin(phi),
        k = z * cosDeltaGamma - y * sinDeltaGamma;
    return [
      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),
      asin(k * cosDeltaPhi - x * sinDeltaPhi)
    ];
  };

  return rotation;
}

/* harmony default export */ function rotation(rotate) {
  rotate = rotateRadians(rotate[0] * math_radians, rotate[1] * math_radians, rotate.length > 2 ? rotate[2] * math_radians : 0);

  function forward(coordinates) {
    coordinates = rotate(coordinates[0] * math_radians, coordinates[1] * math_radians);
    return coordinates[0] *= src_math_degrees, coordinates[1] *= src_math_degrees, coordinates;
  }

  forward.invert = function(coordinates) {
    coordinates = rotate.invert(coordinates[0] * math_radians, coordinates[1] * math_radians);
    return coordinates[0] *= src_math_degrees, coordinates[1] *= src_math_degrees, coordinates;
  };

  return forward;
}

;// CONCATENATED MODULE: ./node_modules/d3-geo/src/circle.js





// Generates a circle centered at [0°, 0°], with a given radius and precision.
function circleStream(stream, radius, delta, direction, t0, t1) {
  if (!delta) return;
  var cosRadius = math_cos(radius),
      sinRadius = math_sin(radius),
      step = direction * delta;
  if (t0 == null) {
    t0 = radius + direction * math_tau;
    t1 = radius - step / 2;
  } else {
    t0 = circleRadius(cosRadius, t0);
    t1 = circleRadius(cosRadius, t1);
    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * math_tau;
  }
  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {
    point = spherical([cosRadius, -sinRadius * math_cos(t), -sinRadius * math_sin(t)]);
    stream.point(point[0], point[1]);
  }
}

// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].
function circleRadius(cosRadius, point) {
  point = cartesian(point), point[0] -= cosRadius;
  cartesianNormalizeInPlace(point);
  var radius = acos(-point[1]);
  return ((-point[2] < 0 ? -radius : radius) + math_tau - src_math_epsilon) % math_tau;
}

/* harmony default export */ function circle() {
  var center = d3_geo_src_constant([0, 0]),
      radius = d3_geo_src_constant(90),
      precision = d3_geo_src_constant(6),
      ring,
      rotate,
      stream = {point: point};

  function point(x, y) {
    ring.push(x = rotate(x, y));
    x[0] *= src_math_degrees, x[1] *= src_math_degrees;
  }

  function circle() {
    var c = center.apply(this, arguments),
        r = radius.apply(this, arguments) * math_radians,
        p = precision.apply(this, arguments) * math_radians;
    ring = [];
    rotate = rotateRadians(-c[0] * math_radians, -c[1] * math_radians, 0).invert;
    circleStream(stream, r, p, 1);
    c = {type: "Polygon", coordinates: [ring]};
    ring = rotate = null;
    return c;
  }

  circle.center = function(_) {
    return arguments.length ? (center = typeof _ === "function" ? _ : d3_geo_src_constant([+_[0], +_[1]]), circle) : center;
  };

  circle.radius = function(_) {
    return arguments.length ? (radius = typeof _ === "function" ? _ : d3_geo_src_constant(+_), circle) : radius;
  };

  circle.precision = function(_) {
    return arguments.length ? (precision = typeof _ === "function" ? _ : d3_geo_src_constant(+_), circle) : precision;
  };

  return circle;
}

;// CONCATENATED MODULE: ./node_modules/d3-geo/src/clip/buffer.js


/* harmony default export */ function clip_buffer() {
  var lines = [],
      line;
  return {
    point: function(x, y, m) {
      line.push([x, y, m]);
    },
    lineStart: function() {
      lines.push(line = []);
    },
    lineEnd: noop_noop,
    rejoin: function() {
      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));
    },
    result: function() {
      var result = lines;
      lines = [];
      line = null;
      return result;
    }
  };
}

;// CONCATENATED MODULE: ./node_modules/d3-geo/src/pointEqual.js


/* harmony default export */ function pointEqual(a, b) {
  return src_math_abs(a[0] - b[0]) < src_math_epsilon && src_math_abs(a[1] - b[1]) < src_math_epsilon;
}

;// CONCATENATED MODULE: ./node_modules/d3-geo/src/clip/rejoin.js



function Intersection(point, points, other, entry) {
  this.x = point;
  this.z = points;
  this.o = other; // another intersection
  this.e = entry; // is an entry?
  this.v = false; // visited
  this.n = this.p = null; // next & previous
}

// A generalized polygon clipping algorithm: given a polygon that has been cut
// into its visible line segments, and rejoins the segments by interpolating
// along the clip edge.
/* harmony default export */ function rejoin(segments, compareIntersection, startInside, interpolate, stream) {
  var subject = [],
      clip = [],
      i,
      n;

  segments.forEach(function(segment) {
    if ((n = segment.length - 1) <= 0) return;
    var n, p0 = segment[0], p1 = segment[n], x;

    if (pointEqual(p0, p1)) {
      if (!p0[2] && !p1[2]) {
        stream.lineStart();
        for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);
        stream.lineEnd();
        return;
      }
      // handle degenerate cases by moving the point
      p1[0] += 2 * src_math_epsilon;
    }

    subject.push(x = new Intersection(p0, segment, null, true));
    clip.push(x.o = new Intersection(p0, null, x, false));
    subject.push(x = new Intersection(p1, segment, null, false));
    clip.push(x.o = new Intersection(p1, null, x, true));
  });

  if (!subject.length) return;

  clip.sort(compareIntersection);
  rejoin_link(subject);
  rejoin_link(clip);

  for (i = 0, n = clip.length; i < n; ++i) {
    clip[i].e = startInside = !startInside;
  }

  var start = subject[0],
      points,
      point;

  while (1) {
    // Find first unvisited intersection.
    var current = start,
        isSubject = true;
    while (current.v) if ((current = current.n) === start) return;
    points = current.z;
    stream.lineStart();
    do {
      current.v = current.o.v = true;
      if (current.e) {
        if (isSubject) {
          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);
        } else {
          interpolate(current.x, current.n.x, 1, stream);
        }
        current = current.n;
      } else {
        if (isSubject) {
          points = current.p.z;
          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);
        } else {
          interpolate(current.x, current.p.x, -1, stream);
        }
        current = current.p;
      }
      current = current.o;
      points = current.z;
      isSubject = !isSubject;
    } while (!current.v);
    stream.lineEnd();
  }
}

function rejoin_link(array) {
  if (!(n = array.length)) return;
  var n,
      i = 0,
      a = array[0],
      b;
  while (++i < n) {
    a.n = b = array[i];
    b.p = a;
    a = b;
  }
  a.n = b = array[0];
  b.p = a;
}

;// CONCATENATED MODULE: ./node_modules/d3-geo/src/polygonContains.js




function longitude(point) {
  return src_math_abs(point[0]) <= math_pi ? point[0] : sign(point[0]) * ((src_math_abs(point[0]) + math_pi) % math_tau - math_pi);
}

/* harmony default export */ function polygonContains(polygon, point) {
  var lambda = longitude(point),
      phi = point[1],
      sinPhi = math_sin(phi),
      normal = [math_sin(lambda), -math_cos(lambda), 0],
      angle = 0,
      winding = 0;

  var sum = new Adder();

  if (sinPhi === 1) phi = math_halfPi + src_math_epsilon;
  else if (sinPhi === -1) phi = -math_halfPi - src_math_epsilon;

  for (var i = 0, n = polygon.length; i < n; ++i) {
    if (!(m = (ring = polygon[i]).length)) continue;
    var ring,
        m,
        point0 = ring[m - 1],
        lambda0 = longitude(point0),
        phi0 = point0[1] / 2 + quarterPi,
        sinPhi0 = math_sin(phi0),
        cosPhi0 = math_cos(phi0);

    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {
      var point1 = ring[j],
          lambda1 = longitude(point1),
          phi1 = point1[1] / 2 + quarterPi,
          sinPhi1 = math_sin(phi1),
          cosPhi1 = math_cos(phi1),
          delta = lambda1 - lambda0,
          sign = delta >= 0 ? 1 : -1,
          absDelta = sign * delta,
          antimeridian = absDelta > math_pi,
          k = sinPhi0 * sinPhi1;

      sum.add(atan2(k * sign * math_sin(absDelta), cosPhi0 * cosPhi1 + k * math_cos(absDelta)));
      angle += antimeridian ? delta + sign * math_tau : delta;

      // Are the longitudes either side of the point’s meridian (lambda),
      // and are the latitudes smaller than the parallel (phi)?
      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {
        var arc = cartesianCross(cartesian(point0), cartesian(point1));
        cartesianNormalizeInPlace(arc);
        var intersection = cartesianCross(normal, arc);
        cartesianNormalizeInPlace(intersection);
        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);
        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {
          winding += antimeridian ^ delta >= 0 ? 1 : -1;
        }
      }
    }
  }

  // First, determine whether the South pole is inside or outside:
  //
  // It is inside if:
  // * the polygon winds around it in a clockwise direction.
  // * the polygon does not (cumulatively) wind around it, but has a negative
  //   (counter-clockwise) area.
  //
  // Second, count the (signed) number of times a segment crosses a lambda
  // from the point to the South pole.  If it is zero, then the point is the
  // same side as the South pole.

  return (angle < -src_math_epsilon || angle < src_math_epsilon && sum < -epsilon2) ^ (winding & 1);
}

;// CONCATENATED MODULE: ./node_modules/d3-geo/src/clip/index.js






/* harmony default export */ function clip(pointVisible, clipLine, interpolate, start) {
  return function(sink) {
    var line = clipLine(sink),
        ringBuffer = clip_buffer(),
        ringSink = clipLine(ringBuffer),
        polygonStarted = false,
        polygon,
        segments,
        ring;

    var clip = {
      point: point,
      lineStart: lineStart,
      lineEnd: lineEnd,
      polygonStart: function() {
        clip.point = pointRing;
        clip.lineStart = ringStart;
        clip.lineEnd = ringEnd;
        segments = [];
        polygon = [];
      },
      polygonEnd: function() {
        clip.point = point;
        clip.lineStart = lineStart;
        clip.lineEnd = lineEnd;
        segments = merge(segments);
        var startInside = polygonContains(polygon, start);
        if (segments.length) {
          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;
          rejoin(segments, compareIntersection, startInside, interpolate, sink);
        } else if (startInside) {
          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;
          sink.lineStart();
          interpolate(null, null, 1, sink);
          sink.lineEnd();
        }
        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;
        segments = polygon = null;
      },
      sphere: function() {
        sink.polygonStart();
        sink.lineStart();
        interpolate(null, null, 1, sink);
        sink.lineEnd();
        sink.polygonEnd();
      }
    };

    function point(lambda, phi) {
      if (pointVisible(lambda, phi)) sink.point(lambda, phi);
    }

    function pointLine(lambda, phi) {
      line.point(lambda, phi);
    }

    function lineStart() {
      clip.point = pointLine;
      line.lineStart();
    }

    function lineEnd() {
      clip.point = point;
      line.lineEnd();
    }

    function pointRing(lambda, phi) {
      ring.push([lambda, phi]);
      ringSink.point(lambda, phi);
    }

    function ringStart() {
      ringSink.lineStart();
      ring = [];
    }

    function ringEnd() {
      pointRing(ring[0][0], ring[0][1]);
      ringSink.lineEnd();

      var clean = ringSink.clean(),
          ringSegments = ringBuffer.result(),
          i, n = ringSegments.length, m,
          segment,
          point;

      ring.pop();
      polygon.push(ring);
      ring = null;

      if (!n) return;

      // No intersections.
      if (clean & 1) {
        segment = ringSegments[0];
        if ((m = segment.length - 1) > 0) {
          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;
          sink.lineStart();
          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);
          sink.lineEnd();
        }
        return;
      }

      // Rejoin connected segments.
      // TODO reuse ringBuffer.rejoin()?
      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));

      segments.push(ringSegments.filter(validSegment));
    }

    return clip;
  };
}

function validSegment(segment) {
  return segment.length > 1;
}

// Intersections are sorted along the clip edge. For both antimeridian cutting
// and circle clipping, the same comparison is used.
function compareIntersection(a, b) {
  return ((a = a.x)[0] < 0 ? a[1] - math_halfPi - src_math_epsilon : math_halfPi - a[1])
       - ((b = b.x)[0] < 0 ? b[1] - math_halfPi - src_math_epsilon : math_halfPi - b[1]);
}

;// CONCATENATED MODULE: ./node_modules/d3-geo/src/clip/antimeridian.js



/* harmony default export */ const antimeridian = (clip(
  function() { return true; },
  clipAntimeridianLine,
  clipAntimeridianInterpolate,
  [-math_pi, -math_halfPi]
));

// Takes a line and cuts into visible segments. Return values: 0 - there were
// intersections or the line was empty; 1 - no intersections; 2 - there were
// intersections, and the first and last segments should be rejoined.
function clipAntimeridianLine(stream) {
  var lambda0 = NaN,
      phi0 = NaN,
      sign0 = NaN,
      clean; // no intersections

  return {
    lineStart: function() {
      stream.lineStart();
      clean = 1;
    },
    point: function(lambda1, phi1) {
      var sign1 = lambda1 > 0 ? math_pi : -math_pi,
          delta = src_math_abs(lambda1 - lambda0);
      if (src_math_abs(delta - math_pi) < src_math_epsilon) { // line crosses a pole
        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? math_halfPi : -math_halfPi);
        stream.point(sign0, phi0);
        stream.lineEnd();
        stream.lineStart();
        stream.point(sign1, phi0);
        stream.point(lambda1, phi0);
        clean = 0;
      } else if (sign0 !== sign1 && delta >= math_pi) { // line crosses antimeridian
        if (src_math_abs(lambda0 - sign0) < src_math_epsilon) lambda0 -= sign0 * src_math_epsilon; // handle degeneracies
        if (src_math_abs(lambda1 - sign1) < src_math_epsilon) lambda1 -= sign1 * src_math_epsilon;
        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);
        stream.point(sign0, phi0);
        stream.lineEnd();
        stream.lineStart();
        stream.point(sign1, phi0);
        clean = 0;
      }
      stream.point(lambda0 = lambda1, phi0 = phi1);
      sign0 = sign1;
    },
    lineEnd: function() {
      stream.lineEnd();
      lambda0 = phi0 = NaN;
    },
    clean: function() {
      return 2 - clean; // if intersections, rejoin first and last segments
    }
  };
}

function clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {
  var cosPhi0,
      cosPhi1,
      sinLambda0Lambda1 = math_sin(lambda0 - lambda1);
  return src_math_abs(sinLambda0Lambda1) > src_math_epsilon
      ? atan((math_sin(phi0) * (cosPhi1 = math_cos(phi1)) * math_sin(lambda1)
          - math_sin(phi1) * (cosPhi0 = math_cos(phi0)) * math_sin(lambda0))
          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))
      : (phi0 + phi1) / 2;
}

function clipAntimeridianInterpolate(from, to, direction, stream) {
  var phi;
  if (from == null) {
    phi = direction * math_halfPi;
    stream.point(-math_pi, phi);
    stream.point(0, phi);
    stream.point(math_pi, phi);
    stream.point(math_pi, 0);
    stream.point(math_pi, -phi);
    stream.point(0, -phi);
    stream.point(-math_pi, -phi);
    stream.point(-math_pi, 0);
    stream.point(-math_pi, phi);
  } else if (src_math_abs(from[0] - to[0]) > src_math_epsilon) {
    var lambda = from[0] < to[0] ? math_pi : -math_pi;
    phi = direction * lambda / 2;
    stream.point(-lambda, phi);
    stream.point(0, phi);
    stream.point(lambda, phi);
  } else {
    stream.point(to[0], to[1]);
  }
}

;// CONCATENATED MODULE: ./node_modules/d3-geo/src/clip/circle.js






/* harmony default export */ function clip_circle(radius) {
  var cr = math_cos(radius),
      delta = 6 * math_radians,
      smallRadius = cr > 0,
      notHemisphere = src_math_abs(cr) > src_math_epsilon; // TODO optimise for this common case

  function interpolate(from, to, direction, stream) {
    circleStream(stream, radius, delta, direction, from, to);
  }

  function visible(lambda, phi) {
    return math_cos(lambda) * math_cos(phi) > cr;
  }

  // Takes a line and cuts into visible segments. Return values used for polygon
  // clipping: 0 - there were intersections or the line was empty; 1 - no
  // intersections 2 - there were intersections, and the first and last segments
  // should be rejoined.
  function clipLine(stream) {
    var point0, // previous point
        c0, // code for previous point
        v0, // visibility of previous point
        v00, // visibility of first point
        clean; // no intersections
    return {
      lineStart: function() {
        v00 = v0 = false;
        clean = 1;
      },
      point: function(lambda, phi) {
        var point1 = [lambda, phi],
            point2,
            v = visible(lambda, phi),
            c = smallRadius
              ? v ? 0 : code(lambda, phi)
              : v ? code(lambda + (lambda < 0 ? math_pi : -math_pi), phi) : 0;
        if (!point0 && (v00 = v0 = v)) stream.lineStart();
        if (v !== v0) {
          point2 = intersect(point0, point1);
          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2))
            point1[2] = 1;
        }
        if (v !== v0) {
          clean = 0;
          if (v) {
            // outside going in
            stream.lineStart();
            point2 = intersect(point1, point0);
            stream.point(point2[0], point2[1]);
          } else {
            // inside going out
            point2 = intersect(point0, point1);
            stream.point(point2[0], point2[1], 2);
            stream.lineEnd();
          }
          point0 = point2;
        } else if (notHemisphere && point0 && smallRadius ^ v) {
          var t;
          // If the codes for two points are different, or are both zero,
          // and there this segment intersects with the small circle.
          if (!(c & c0) && (t = intersect(point1, point0, true))) {
            clean = 0;
            if (smallRadius) {
              stream.lineStart();
              stream.point(t[0][0], t[0][1]);
              stream.point(t[1][0], t[1][1]);
              stream.lineEnd();
            } else {
              stream.point(t[1][0], t[1][1]);
              stream.lineEnd();
              stream.lineStart();
              stream.point(t[0][0], t[0][1], 3);
            }
          }
        }
        if (v && (!point0 || !pointEqual(point0, point1))) {
          stream.point(point1[0], point1[1]);
        }
        point0 = point1, v0 = v, c0 = c;
      },
      lineEnd: function() {
        if (v0) stream.lineEnd();
        point0 = null;
      },
      // Rejoin first and last segments if there were intersections and the first
      // and last points were visible.
      clean: function() {
        return clean | ((v00 && v0) << 1);
      }
    };
  }

  // Intersects the great circle between a and b with the clip circle.
  function intersect(a, b, two) {
    var pa = cartesian(a),
        pb = cartesian(b);

    // We have two planes, n1.p = d1 and n2.p = d2.
    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).
    var n1 = [1, 0, 0], // normal
        n2 = cartesianCross(pa, pb),
        n2n2 = cartesianDot(n2, n2),
        n1n2 = n2[0], // cartesianDot(n1, n2),
        determinant = n2n2 - n1n2 * n1n2;

    // Two polar points.
    if (!determinant) return !two && a;

    var c1 =  cr * n2n2 / determinant,
        c2 = -cr * n1n2 / determinant,
        n1xn2 = cartesianCross(n1, n2),
        A = cartesianScale(n1, c1),
        B = cartesianScale(n2, c2);
    cartesianAddInPlace(A, B);

    // Solve |p(t)|^2 = 1.
    var u = n1xn2,
        w = cartesianDot(A, u),
        uu = cartesianDot(u, u),
        t2 = w * w - uu * (cartesianDot(A, A) - 1);

    if (t2 < 0) return;

    var t = sqrt(t2),
        q = cartesianScale(u, (-w - t) / uu);
    cartesianAddInPlace(q, A);
    q = spherical(q);

    if (!two) return q;

    // Two intersection points.
    var lambda0 = a[0],
        lambda1 = b[0],
        phi0 = a[1],
        phi1 = b[1],
        z;

    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;

    var delta = lambda1 - lambda0,
        polar = src_math_abs(delta - math_pi) < src_math_epsilon,
        meridian = polar || delta < src_math_epsilon;

    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;

    // Check that the first point is between a and b.
    if (meridian
        ? polar
          ? phi0 + phi1 > 0 ^ q[1] < (src_math_abs(q[0] - lambda0) < src_math_epsilon ? phi0 : phi1)
          : phi0 <= q[1] && q[1] <= phi1
        : delta > math_pi ^ (lambda0 <= q[0] && q[0] <= lambda1)) {
      var q1 = cartesianScale(u, (-w + t) / uu);
      cartesianAddInPlace(q1, A);
      return [q, spherical(q1)];
    }
  }

  // Generates a 4-bit vector representing the location of a point relative to
  // the small circle's bounding box.
  function code(lambda, phi) {
    var r = smallRadius ? radius : math_pi - radius,
        code = 0;
    if (lambda < -r) code |= 1; // left
    else if (lambda > r) code |= 2; // right
    if (phi < -r) code |= 4; // below
    else if (phi > r) code |= 8; // above
    return code;
  }

  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-math_pi, radius - math_pi]);
}

;// CONCATENATED MODULE: ./node_modules/d3-geo/src/clip/line.js
/* harmony default export */ function line(a, b, x0, y0, x1, y1) {
  var ax = a[0],
      ay = a[1],
      bx = b[0],
      by = b[1],
      t0 = 0,
      t1 = 1,
      dx = bx - ax,
      dy = by - ay,
      r;

  r = x0 - ax;
  if (!dx && r > 0) return;
  r /= dx;
  if (dx < 0) {
    if (r < t0) return;
    if (r < t1) t1 = r;
  } else if (dx > 0) {
    if (r > t1) return;
    if (r > t0) t0 = r;
  }

  r = x1 - ax;
  if (!dx && r < 0) return;
  r /= dx;
  if (dx < 0) {
    if (r > t1) return;
    if (r > t0) t0 = r;
  } else if (dx > 0) {
    if (r < t0) return;
    if (r < t1) t1 = r;
  }

  r = y0 - ay;
  if (!dy && r > 0) return;
  r /= dy;
  if (dy < 0) {
    if (r < t0) return;
    if (r < t1) t1 = r;
  } else if (dy > 0) {
    if (r > t1) return;
    if (r > t0) t0 = r;
  }

  r = y1 - ay;
  if (!dy && r < 0) return;
  r /= dy;
  if (dy < 0) {
    if (r > t1) return;
    if (r > t0) t0 = r;
  } else if (dy > 0) {
    if (r < t0) return;
    if (r < t1) t1 = r;
  }

  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;
  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;
  return true;
}

;// CONCATENATED MODULE: ./node_modules/d3-geo/src/clip/rectangle.js






var clipMax = 1e9, clipMin = -clipMax;

// TODO Use d3-polygon’s polygonContains here for the ring check?
// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?

function clipRectangle(x0, y0, x1, y1) {

  function visible(x, y) {
    return x0 <= x && x <= x1 && y0 <= y && y <= y1;
  }

  function interpolate(from, to, direction, stream) {
    var a = 0, a1 = 0;
    if (from == null
        || (a = corner(from, direction)) !== (a1 = corner(to, direction))
        || comparePoint(from, to) < 0 ^ direction > 0) {
      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);
      while ((a = (a + direction + 4) % 4) !== a1);
    } else {
      stream.point(to[0], to[1]);
    }
  }

  function corner(p, direction) {
    return src_math_abs(p[0] - x0) < src_math_epsilon ? direction > 0 ? 0 : 3
        : src_math_abs(p[0] - x1) < src_math_epsilon ? direction > 0 ? 2 : 1
        : src_math_abs(p[1] - y0) < src_math_epsilon ? direction > 0 ? 1 : 0
        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon
  }

  function compareIntersection(a, b) {
    return comparePoint(a.x, b.x);
  }

  function comparePoint(a, b) {
    var ca = corner(a, 1),
        cb = corner(b, 1);
    return ca !== cb ? ca - cb
        : ca === 0 ? b[1] - a[1]
        : ca === 1 ? a[0] - b[0]
        : ca === 2 ? a[1] - b[1]
        : b[0] - a[0];
  }

  return function(stream) {
    var activeStream = stream,
        bufferStream = clip_buffer(),
        segments,
        polygon,
        ring,
        x__, y__, v__, // first point
        x_, y_, v_, // previous point
        first,
        clean;

    var clipStream = {
      point: point,
      lineStart: lineStart,
      lineEnd: lineEnd,
      polygonStart: polygonStart,
      polygonEnd: polygonEnd
    };

    function point(x, y) {
      if (visible(x, y)) activeStream.point(x, y);
    }

    function polygonInside() {
      var winding = 0;

      for (var i = 0, n = polygon.length; i < n; ++i) {
        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {
          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];
          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }
          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }
        }
      }

      return winding;
    }

    // Buffer geometry within a polygon and then clip it en masse.
    function polygonStart() {
      activeStream = bufferStream, segments = [], polygon = [], clean = true;
    }

    function polygonEnd() {
      var startInside = polygonInside(),
          cleanInside = clean && startInside,
          visible = (segments = merge(segments)).length;
      if (cleanInside || visible) {
        stream.polygonStart();
        if (cleanInside) {
          stream.lineStart();
          interpolate(null, null, 1, stream);
          stream.lineEnd();
        }
        if (visible) {
          rejoin(segments, compareIntersection, startInside, interpolate, stream);
        }
        stream.polygonEnd();
      }
      activeStream = stream, segments = polygon = ring = null;
    }

    function lineStart() {
      clipStream.point = linePoint;
      if (polygon) polygon.push(ring = []);
      first = true;
      v_ = false;
      x_ = y_ = NaN;
    }

    // TODO rather than special-case polygons, simply handle them separately.
    // Ideally, coincident intersection points should be jittered to avoid
    // clipping issues.
    function lineEnd() {
      if (segments) {
        linePoint(x__, y__);
        if (v__ && v_) bufferStream.rejoin();
        segments.push(bufferStream.result());
      }
      clipStream.point = point;
      if (v_) activeStream.lineEnd();
    }

    function linePoint(x, y) {
      var v = visible(x, y);
      if (polygon) ring.push([x, y]);
      if (first) {
        x__ = x, y__ = y, v__ = v;
        first = false;
        if (v) {
          activeStream.lineStart();
          activeStream.point(x, y);
        }
      } else {
        if (v && v_) activeStream.point(x, y);
        else {
          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],
              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];
          if (line(a, b, x0, y0, x1, y1)) {
            if (!v_) {
              activeStream.lineStart();
              activeStream.point(a[0], a[1]);
            }
            activeStream.point(b[0], b[1]);
            if (!v) activeStream.lineEnd();
            clean = false;
          } else if (v) {
            activeStream.lineStart();
            activeStream.point(x, y);
            clean = false;
          }
        }
      }
      x_ = x, y_ = y, v_ = v;
    }

    return clipStream;
  };
}

;// CONCATENATED MODULE: ./node_modules/d3-geo/src/clip/extent.js


/* harmony default export */ function clip_extent() {
  var x0 = 0,
      y0 = 0,
      x1 = 960,
      y1 = 500,
      cache,
      cacheStream,
      clip;

  return clip = {
    stream: function(stream) {
      return cache && cacheStream === stream ? cache : cache = clipRectangle(x0, y0, x1, y1)(cacheStream = stream);
    },
    extent: function(_) {
      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];
    }
  };
}

;// CONCATENATED MODULE: ./node_modules/d3-geo/src/length.js





var lengthSum,
    length_lambda0,
    length_sinPhi0,
    length_cosPhi0;

var lengthStream = {
  sphere: noop_noop,
  point: noop_noop,
  lineStart: lengthLineStart,
  lineEnd: noop_noop,
  polygonStart: noop_noop,
  polygonEnd: noop_noop
};

function lengthLineStart() {
  lengthStream.point = lengthPointFirst;
  lengthStream.lineEnd = lengthLineEnd;
}

function lengthLineEnd() {
  lengthStream.point = lengthStream.lineEnd = noop_noop;
}

function lengthPointFirst(lambda, phi) {
  lambda *= math_radians, phi *= math_radians;
  length_lambda0 = lambda, length_sinPhi0 = math_sin(phi), length_cosPhi0 = math_cos(phi);
  lengthStream.point = lengthPoint;
}

function lengthPoint(lambda, phi) {
  lambda *= math_radians, phi *= math_radians;
  var sinPhi = math_sin(phi),
      cosPhi = math_cos(phi),
      delta = src_math_abs(lambda - length_lambda0),
      cosDelta = math_cos(delta),
      sinDelta = math_sin(delta),
      x = cosPhi * sinDelta,
      y = length_cosPhi0 * sinPhi - length_sinPhi0 * cosPhi * cosDelta,
      z = length_sinPhi0 * sinPhi + length_cosPhi0 * cosPhi * cosDelta;
  lengthSum.add(atan2(sqrt(x * x + y * y), z));
  length_lambda0 = lambda, length_sinPhi0 = sinPhi, length_cosPhi0 = cosPhi;
}

/* harmony default export */ function src_length(object) {
  lengthSum = new Adder();
  stream(object, lengthStream);
  return +lengthSum;
}

;// CONCATENATED MODULE: ./node_modules/d3-geo/src/distance.js


var coordinates = [null, null],
    distance_object = {type: "LineString", coordinates: coordinates};

/* harmony default export */ function distance(a, b) {
  coordinates[0] = a;
  coordinates[1] = b;
  return src_length(distance_object);
}

;// CONCATENATED MODULE: ./node_modules/d3-geo/src/contains.js




var containsObjectType = {
  Feature: function(object, point) {
    return containsGeometry(object.geometry, point);
  },
  FeatureCollection: function(object, point) {
    var features = object.features, i = -1, n = features.length;
    while (++i < n) if (containsGeometry(features[i].geometry, point)) return true;
    return false;
  }
};

var containsGeometryType = {
  Sphere: function() {
    return true;
  },
  Point: function(object, point) {
    return containsPoint(object.coordinates, point);
  },
  MultiPoint: function(object, point) {
    var coordinates = object.coordinates, i = -1, n = coordinates.length;
    while (++i < n) if (containsPoint(coordinates[i], point)) return true;
    return false;
  },
  LineString: function(object, point) {
    return containsLine(object.coordinates, point);
  },
  MultiLineString: function(object, point) {
    var coordinates = object.coordinates, i = -1, n = coordinates.length;
    while (++i < n) if (containsLine(coordinates[i], point)) return true;
    return false;
  },
  Polygon: function(object, point) {
    return containsPolygon(object.coordinates, point);
  },
  MultiPolygon: function(object, point) {
    var coordinates = object.coordinates, i = -1, n = coordinates.length;
    while (++i < n) if (containsPolygon(coordinates[i], point)) return true;
    return false;
  },
  GeometryCollection: function(object, point) {
    var geometries = object.geometries, i = -1, n = geometries.length;
    while (++i < n) if (containsGeometry(geometries[i], point)) return true;
    return false;
  }
};

function containsGeometry(geometry, point) {
  return geometry && containsGeometryType.hasOwnProperty(geometry.type)
      ? containsGeometryType[geometry.type](geometry, point)
      : false;
}

function containsPoint(coordinates, point) {
  return distance(coordinates, point) === 0;
}

function containsLine(coordinates, point) {
  var ao, bo, ab;
  for (var i = 0, n = coordinates.length; i < n; i++) {
    bo = distance(coordinates[i], point);
    if (bo === 0) return true;
    if (i > 0) {
      ab = distance(coordinates[i], coordinates[i - 1]);
      if (
        ab > 0 &&
        ao <= ab &&
        bo <= ab &&
        (ao + bo - ab) * (1 - Math.pow((ao - bo) / ab, 2)) < epsilon2 * ab
      )
        return true;
    }
    ao = bo;
  }
  return false;
}

function containsPolygon(coordinates, point) {
  return !!polygonContains(coordinates.map(ringRadians), pointRadians(point));
}

function ringRadians(ring) {
  return ring = ring.map(pointRadians), ring.pop(), ring;
}

function pointRadians(point) {
  return [point[0] * math_radians, point[1] * math_radians];
}

/* harmony default export */ function src_contains(object, point) {
  return (object && containsObjectType.hasOwnProperty(object.type)
      ? containsObjectType[object.type]
      : containsGeometry)(object, point);
}

;// CONCATENATED MODULE: ./node_modules/d3-geo/src/graticule.js



function graticuleX(y0, y1, dy) {
  var y = range(y0, y1 - src_math_epsilon, dy).concat(y1);
  return function(x) { return y.map(function(y) { return [x, y]; }); };
}

function graticuleY(x0, x1, dx) {
  var x = range(x0, x1 - src_math_epsilon, dx).concat(x1);
  return function(y) { return x.map(function(x) { return [x, y]; }); };
}

function graticule() {
  var x1, x0, X1, X0,
      y1, y0, Y1, Y0,
      dx = 10, dy = dx, DX = 90, DY = 360,
      x, y, X, Y,
      precision = 2.5;

  function graticule() {
    return {type: "MultiLineString", coordinates: lines()};
  }

  function lines() {
    return range(ceil(X0 / DX) * DX, X1, DX).map(X)
        .concat(range(ceil(Y0 / DY) * DY, Y1, DY).map(Y))
        .concat(range(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return src_math_abs(x % DX) > src_math_epsilon; }).map(x))
        .concat(range(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return src_math_abs(y % DY) > src_math_epsilon; }).map(y));
  }

  graticule.lines = function() {
    return lines().map(function(coordinates) { return {type: "LineString", coordinates: coordinates}; });
  };

  graticule.outline = function() {
    return {
      type: "Polygon",
      coordinates: [
        X(X0).concat(
        Y(Y1).slice(1),
        X(X1).reverse().slice(1),
        Y(Y0).reverse().slice(1))
      ]
    };
  };

  graticule.extent = function(_) {
    if (!arguments.length) return graticule.extentMinor();
    return graticule.extentMajor(_).extentMinor(_);
  };

  graticule.extentMajor = function(_) {
    if (!arguments.length) return [[X0, Y0], [X1, Y1]];
    X0 = +_[0][0], X1 = +_[1][0];
    Y0 = +_[0][1], Y1 = +_[1][1];
    if (X0 > X1) _ = X0, X0 = X1, X1 = _;
    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;
    return graticule.precision(precision);
  };

  graticule.extentMinor = function(_) {
    if (!arguments.length) return [[x0, y0], [x1, y1]];
    x0 = +_[0][0], x1 = +_[1][0];
    y0 = +_[0][1], y1 = +_[1][1];
    if (x0 > x1) _ = x0, x0 = x1, x1 = _;
    if (y0 > y1) _ = y0, y0 = y1, y1 = _;
    return graticule.precision(precision);
  };

  graticule.step = function(_) {
    if (!arguments.length) return graticule.stepMinor();
    return graticule.stepMajor(_).stepMinor(_);
  };

  graticule.stepMajor = function(_) {
    if (!arguments.length) return [DX, DY];
    DX = +_[0], DY = +_[1];
    return graticule;
  };

  graticule.stepMinor = function(_) {
    if (!arguments.length) return [dx, dy];
    dx = +_[0], dy = +_[1];
    return graticule;
  };

  graticule.precision = function(_) {
    if (!arguments.length) return precision;
    precision = +_;
    x = graticuleX(y0, y1, 90);
    y = graticuleY(x0, x1, precision);
    X = graticuleX(Y0, Y1, 90);
    Y = graticuleY(X0, X1, precision);
    return graticule;
  };

  return graticule
      .extentMajor([[-180, -90 + src_math_epsilon], [180, 90 - src_math_epsilon]])
      .extentMinor([[-180, -80 - src_math_epsilon], [180, 80 + src_math_epsilon]]);
}

function graticule10() {
  return graticule()();
}

;// CONCATENATED MODULE: ./node_modules/d3-geo/src/interpolate.js


/* harmony default export */ function src_interpolate(a, b) {
  var x0 = a[0] * math_radians,
      y0 = a[1] * math_radians,
      x1 = b[0] * math_radians,
      y1 = b[1] * math_radians,
      cy0 = math_cos(y0),
      sy0 = math_sin(y0),
      cy1 = math_cos(y1),
      sy1 = math_sin(y1),
      kx0 = cy0 * math_cos(x0),
      ky0 = cy0 * math_sin(x0),
      kx1 = cy1 * math_cos(x1),
      ky1 = cy1 * math_sin(x1),
      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),
      k = math_sin(d);

  var interpolate = d ? function(t) {
    var B = math_sin(t *= d) / k,
        A = math_sin(d - t) / k,
        x = A * kx0 + B * kx1,
        y = A * ky0 + B * ky1,
        z = A * sy0 + B * sy1;
    return [
      atan2(y, x) * src_math_degrees,
      atan2(z, sqrt(x * x + y * y)) * src_math_degrees
    ];
  } : function() {
    return [x0 * src_math_degrees, y0 * src_math_degrees];
  };

  interpolate.distance = d;

  return interpolate;
}

;// CONCATENATED MODULE: ./node_modules/d3-geo/src/identity.js
/* harmony default export */ const d3_geo_src_identity = (x => x);

;// CONCATENATED MODULE: ./node_modules/d3-geo/src/path/area.js




var area_areaSum = new Adder(),
    area_areaRingSum = new Adder(),
    x00,
    y00,
    area_x0,
    area_y0;

var area_areaStream = {
  point: noop_noop,
  lineStart: noop_noop,
  lineEnd: noop_noop,
  polygonStart: function() {
    area_areaStream.lineStart = area_areaRingStart;
    area_areaStream.lineEnd = area_areaRingEnd;
  },
  polygonEnd: function() {
    area_areaStream.lineStart = area_areaStream.lineEnd = area_areaStream.point = noop_noop;
    area_areaSum.add(src_math_abs(area_areaRingSum));
    area_areaRingSum = new Adder();
  },
  result: function() {
    var area = area_areaSum / 2;
    area_areaSum = new Adder();
    return area;
  }
};

function area_areaRingStart() {
  area_areaStream.point = area_areaPointFirst;
}

function area_areaPointFirst(x, y) {
  area_areaStream.point = area_areaPoint;
  x00 = area_x0 = x, y00 = area_y0 = y;
}

function area_areaPoint(x, y) {
  area_areaRingSum.add(area_y0 * x - area_x0 * y);
  area_x0 = x, area_y0 = y;
}

function area_areaRingEnd() {
  area_areaPoint(x00, y00);
}

/* harmony default export */ const path_area = (area_areaStream);

;// CONCATENATED MODULE: ./node_modules/d3-geo/src/path/bounds.js


var bounds_x0 = Infinity,
    bounds_y0 = bounds_x0,
    x1 = -bounds_x0,
    y1 = x1;

var bounds_boundsStream = {
  point: bounds_boundsPoint,
  lineStart: noop_noop,
  lineEnd: noop_noop,
  polygonStart: noop_noop,
  polygonEnd: noop_noop,
  result: function() {
    var bounds = [[bounds_x0, bounds_y0], [x1, y1]];
    x1 = y1 = -(bounds_y0 = bounds_x0 = Infinity);
    return bounds;
  }
};

function bounds_boundsPoint(x, y) {
  if (x < bounds_x0) bounds_x0 = x;
  if (x > x1) x1 = x;
  if (y < bounds_y0) bounds_y0 = y;
  if (y > y1) y1 = y;
}

/* harmony default export */ const path_bounds = (bounds_boundsStream);

;// CONCATENATED MODULE: ./node_modules/d3-geo/src/path/centroid.js


// TODO Enforce positive area for exterior, negative area for interior?

var centroid_X0 = 0,
    centroid_Y0 = 0,
    centroid_Z0 = 0,
    centroid_X1 = 0,
    centroid_Y1 = 0,
    centroid_Z1 = 0,
    centroid_X2 = 0,
    centroid_Y2 = 0,
    centroid_Z2 = 0,
    centroid_x00,
    centroid_y00,
    centroid_x0,
    centroid_y0;

var centroid_centroidStream = {
  point: centroid_centroidPoint,
  lineStart: centroid_centroidLineStart,
  lineEnd: centroid_centroidLineEnd,
  polygonStart: function() {
    centroid_centroidStream.lineStart = centroid_centroidRingStart;
    centroid_centroidStream.lineEnd = centroid_centroidRingEnd;
  },
  polygonEnd: function() {
    centroid_centroidStream.point = centroid_centroidPoint;
    centroid_centroidStream.lineStart = centroid_centroidLineStart;
    centroid_centroidStream.lineEnd = centroid_centroidLineEnd;
  },
  result: function() {
    var centroid = centroid_Z2 ? [centroid_X2 / centroid_Z2, centroid_Y2 / centroid_Z2]
        : centroid_Z1 ? [centroid_X1 / centroid_Z1, centroid_Y1 / centroid_Z1]
        : centroid_Z0 ? [centroid_X0 / centroid_Z0, centroid_Y0 / centroid_Z0]
        : [NaN, NaN];
    centroid_X0 = centroid_Y0 = centroid_Z0 =
    centroid_X1 = centroid_Y1 = centroid_Z1 =
    centroid_X2 = centroid_Y2 = centroid_Z2 = 0;
    return centroid;
  }
};

function centroid_centroidPoint(x, y) {
  centroid_X0 += x;
  centroid_Y0 += y;
  ++centroid_Z0;
}

function centroid_centroidLineStart() {
  centroid_centroidStream.point = centroidPointFirstLine;
}

function centroidPointFirstLine(x, y) {
  centroid_centroidStream.point = centroidPointLine;
  centroid_centroidPoint(centroid_x0 = x, centroid_y0 = y);
}

function centroidPointLine(x, y) {
  var dx = x - centroid_x0, dy = y - centroid_y0, z = sqrt(dx * dx + dy * dy);
  centroid_X1 += z * (centroid_x0 + x) / 2;
  centroid_Y1 += z * (centroid_y0 + y) / 2;
  centroid_Z1 += z;
  centroid_centroidPoint(centroid_x0 = x, centroid_y0 = y);
}

function centroid_centroidLineEnd() {
  centroid_centroidStream.point = centroid_centroidPoint;
}

function centroid_centroidRingStart() {
  centroid_centroidStream.point = centroidPointFirstRing;
}

function centroid_centroidRingEnd() {
  centroidPointRing(centroid_x00, centroid_y00);
}

function centroidPointFirstRing(x, y) {
  centroid_centroidStream.point = centroidPointRing;
  centroid_centroidPoint(centroid_x00 = centroid_x0 = x, centroid_y00 = centroid_y0 = y);
}

function centroidPointRing(x, y) {
  var dx = x - centroid_x0,
      dy = y - centroid_y0,
      z = sqrt(dx * dx + dy * dy);

  centroid_X1 += z * (centroid_x0 + x) / 2;
  centroid_Y1 += z * (centroid_y0 + y) / 2;
  centroid_Z1 += z;

  z = centroid_y0 * x - centroid_x0 * y;
  centroid_X2 += z * (centroid_x0 + x);
  centroid_Y2 += z * (centroid_y0 + y);
  centroid_Z2 += z * 3;
  centroid_centroidPoint(centroid_x0 = x, centroid_y0 = y);
}

/* harmony default export */ const path_centroid = (centroid_centroidStream);

;// CONCATENATED MODULE: ./node_modules/d3-geo/src/path/context.js



function PathContext(context) {
  this._context = context;
}

PathContext.prototype = {
  _radius: 4.5,
  pointRadius: function(_) {
    return this._radius = _, this;
  },
  polygonStart: function() {
    this._line = 0;
  },
  polygonEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._point = 0;
  },
  lineEnd: function() {
    if (this._line === 0) this._context.closePath();
    this._point = NaN;
  },
  point: function(x, y) {
    switch (this._point) {
      case 0: {
        this._context.moveTo(x, y);
        this._point = 1;
        break;
      }
      case 1: {
        this._context.lineTo(x, y);
        break;
      }
      default: {
        this._context.moveTo(x + this._radius, y);
        this._context.arc(x, y, this._radius, 0, math_tau);
        break;
      }
    }
  },
  result: noop_noop
};

;// CONCATENATED MODULE: ./node_modules/d3-geo/src/path/measure.js




var measure_lengthSum = new Adder(),
    lengthRing,
    measure_x00,
    measure_y00,
    measure_x0,
    measure_y0;

var measure_lengthStream = {
  point: noop_noop,
  lineStart: function() {
    measure_lengthStream.point = measure_lengthPointFirst;
  },
  lineEnd: function() {
    if (lengthRing) measure_lengthPoint(measure_x00, measure_y00);
    measure_lengthStream.point = noop_noop;
  },
  polygonStart: function() {
    lengthRing = true;
  },
  polygonEnd: function() {
    lengthRing = null;
  },
  result: function() {
    var length = +measure_lengthSum;
    measure_lengthSum = new Adder();
    return length;
  }
};

function measure_lengthPointFirst(x, y) {
  measure_lengthStream.point = measure_lengthPoint;
  measure_x00 = measure_x0 = x, measure_y00 = measure_y0 = y;
}

function measure_lengthPoint(x, y) {
  measure_x0 -= x, measure_y0 -= y;
  measure_lengthSum.add(sqrt(measure_x0 * measure_x0 + measure_y0 * measure_y0));
  measure_x0 = x, measure_y0 = y;
}

/* harmony default export */ const measure = (measure_lengthStream);

;// CONCATENATED MODULE: ./node_modules/d3-geo/src/path/string.js
function PathString() {
  this._string = [];
}

PathString.prototype = {
  _radius: 4.5,
  _circle: string_circle(4.5),
  pointRadius: function(_) {
    if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;
    return this;
  },
  polygonStart: function() {
    this._line = 0;
  },
  polygonEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._point = 0;
  },
  lineEnd: function() {
    if (this._line === 0) this._string.push("Z");
    this._point = NaN;
  },
  point: function(x, y) {
    switch (this._point) {
      case 0: {
        this._string.push("M", x, ",", y);
        this._point = 1;
        break;
      }
      case 1: {
        this._string.push("L", x, ",", y);
        break;
      }
      default: {
        if (this._circle == null) this._circle = string_circle(this._radius);
        this._string.push("M", x, ",", y, this._circle);
        break;
      }
    }
  },
  result: function() {
    if (this._string.length) {
      var result = this._string.join("");
      this._string = [];
      return result;
    } else {
      return null;
    }
  }
};

function string_circle(radius) {
  return "m0," + radius
      + "a" + radius + "," + radius + " 0 1,1 0," + -2 * radius
      + "a" + radius + "," + radius + " 0 1,1 0," + 2 * radius
      + "z";
}

;// CONCATENATED MODULE: ./node_modules/d3-geo/src/path/index.js









/* harmony default export */ function d3_geo_src_path(projection, context) {
  var pointRadius = 4.5,
      projectionStream,
      contextStream;

  function path(object) {
    if (object) {
      if (typeof pointRadius === "function") contextStream.pointRadius(+pointRadius.apply(this, arguments));
      stream(object, projectionStream(contextStream));
    }
    return contextStream.result();
  }

  path.area = function(object) {
    stream(object, projectionStream(path_area));
    return path_area.result();
  };

  path.measure = function(object) {
    stream(object, projectionStream(measure));
    return measure.result();
  };

  path.bounds = function(object) {
    stream(object, projectionStream(path_bounds));
    return path_bounds.result();
  };

  path.centroid = function(object) {
    stream(object, projectionStream(path_centroid));
    return path_centroid.result();
  };

  path.projection = function(_) {
    return arguments.length ? (projectionStream = _ == null ? (projection = null, d3_geo_src_identity) : (projection = _).stream, path) : projection;
  };

  path.context = function(_) {
    if (!arguments.length) return context;
    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);
    if (typeof pointRadius !== "function") contextStream.pointRadius(pointRadius);
    return path;
  };

  path.pointRadius = function(_) {
    if (!arguments.length) return pointRadius;
    pointRadius = typeof _ === "function" ? _ : (contextStream.pointRadius(+_), +_);
    return path;
  };

  return path.projection(projection).context(context);
}

;// CONCATENATED MODULE: ./node_modules/d3-geo/src/transform.js
/* harmony default export */ function transform(methods) {
  return {
    stream: transformer(methods)
  };
}

function transformer(methods) {
  return function(stream) {
    var s = new TransformStream;
    for (var key in methods) s[key] = methods[key];
    s.stream = stream;
    return s;
  };
}

function TransformStream() {}

TransformStream.prototype = {
  constructor: TransformStream,
  point: function(x, y) { this.stream.point(x, y); },
  sphere: function() { this.stream.sphere(); },
  lineStart: function() { this.stream.lineStart(); },
  lineEnd: function() { this.stream.lineEnd(); },
  polygonStart: function() { this.stream.polygonStart(); },
  polygonEnd: function() { this.stream.polygonEnd(); }
};

;// CONCATENATED MODULE: ./node_modules/d3-geo/src/projection/fit.js



function fit(projection, fitBounds, object) {
  var clip = projection.clipExtent && projection.clipExtent();
  projection.scale(150).translate([0, 0]);
  if (clip != null) projection.clipExtent(null);
  stream(object, projection.stream(path_bounds));
  fitBounds(path_bounds.result());
  if (clip != null) projection.clipExtent(clip);
  return projection;
}

function fitExtent(projection, extent, object) {
  return fit(projection, function(b) {
    var w = extent[1][0] - extent[0][0],
        h = extent[1][1] - extent[0][1],
        k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),
        x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,
        y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;
    projection.scale(150 * k).translate([x, y]);
  }, object);
}

function fitSize(projection, size, object) {
  return fitExtent(projection, [[0, 0], size], object);
}

function fitWidth(projection, width, object) {
  return fit(projection, function(b) {
    var w = +width,
        k = w / (b[1][0] - b[0][0]),
        x = (w - k * (b[1][0] + b[0][0])) / 2,
        y = -k * b[0][1];
    projection.scale(150 * k).translate([x, y]);
  }, object);
}

function fitHeight(projection, height, object) {
  return fit(projection, function(b) {
    var h = +height,
        k = h / (b[1][1] - b[0][1]),
        x = -k * b[0][0],
        y = (h - k * (b[1][1] + b[0][1])) / 2;
    projection.scale(150 * k).translate([x, y]);
  }, object);
}

;// CONCATENATED MODULE: ./node_modules/d3-geo/src/projection/resample.js




var maxDepth = 16, // maximum depth of subdivision
    cosMinDistance = math_cos(30 * math_radians); // cos(minimum angular distance)

/* harmony default export */ function resample(project, delta2) {
  return +delta2 ? resample_resample(project, delta2) : resampleNone(project);
}

function resampleNone(project) {
  return transformer({
    point: function(x, y) {
      x = project(x, y);
      this.stream.point(x[0], x[1]);
    }
  });
}

function resample_resample(project, delta2) {

  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {
    var dx = x1 - x0,
        dy = y1 - y0,
        d2 = dx * dx + dy * dy;
    if (d2 > 4 * delta2 && depth--) {
      var a = a0 + a1,
          b = b0 + b1,
          c = c0 + c1,
          m = sqrt(a * a + b * b + c * c),
          phi2 = asin(c /= m),
          lambda2 = src_math_abs(src_math_abs(c) - 1) < src_math_epsilon || src_math_abs(lambda0 - lambda1) < src_math_epsilon ? (lambda0 + lambda1) / 2 : atan2(b, a),
          p = project(lambda2, phi2),
          x2 = p[0],
          y2 = p[1],
          dx2 = x2 - x0,
          dy2 = y2 - y0,
          dz = dy * dx2 - dx * dy2;
      if (dz * dz / d2 > delta2 // perpendicular projected distance
          || src_math_abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end
          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance
        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);
        stream.point(x2, y2);
        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);
      }
    }
  }
  return function(stream) {
    var lambda00, x00, y00, a00, b00, c00, // first point
        lambda0, x0, y0, a0, b0, c0; // previous point

    var resampleStream = {
      point: point,
      lineStart: lineStart,
      lineEnd: lineEnd,
      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },
      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }
    };

    function point(x, y) {
      x = project(x, y);
      stream.point(x[0], x[1]);
    }

    function lineStart() {
      x0 = NaN;
      resampleStream.point = linePoint;
      stream.lineStart();
    }

    function linePoint(lambda, phi) {
      var c = cartesian([lambda, phi]), p = project(lambda, phi);
      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);
      stream.point(x0, y0);
    }

    function lineEnd() {
      resampleStream.point = point;
      stream.lineEnd();
    }

    function ringStart() {
      lineStart();
      resampleStream.point = ringPoint;
      resampleStream.lineEnd = ringEnd;
    }

    function ringPoint(lambda, phi) {
      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;
      resampleStream.point = linePoint;
    }

    function ringEnd() {
      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);
      resampleStream.lineEnd = lineEnd;
      lineEnd();
    }

    return resampleStream;
  };
}

;// CONCATENATED MODULE: ./node_modules/d3-geo/src/projection/index.js











var transformRadians = transformer({
  point: function(x, y) {
    this.stream.point(x * math_radians, y * math_radians);
  }
});

function transformRotate(rotate) {
  return transformer({
    point: function(x, y) {
      var r = rotate(x, y);
      return this.stream.point(r[0], r[1]);
    }
  });
}

function scaleTranslate(k, dx, dy, sx, sy) {
  function transform(x, y) {
    x *= sx; y *= sy;
    return [dx + k * x, dy - k * y];
  }
  transform.invert = function(x, y) {
    return [(x - dx) / k * sx, (dy - y) / k * sy];
  };
  return transform;
}

function scaleTranslateRotate(k, dx, dy, sx, sy, alpha) {
  if (!alpha) return scaleTranslate(k, dx, dy, sx, sy);
  var cosAlpha = math_cos(alpha),
      sinAlpha = math_sin(alpha),
      a = cosAlpha * k,
      b = sinAlpha * k,
      ai = cosAlpha / k,
      bi = sinAlpha / k,
      ci = (sinAlpha * dy - cosAlpha * dx) / k,
      fi = (sinAlpha * dx + cosAlpha * dy) / k;
  function transform(x, y) {
    x *= sx; y *= sy;
    return [a * x - b * y + dx, dy - b * x - a * y];
  }
  transform.invert = function(x, y) {
    return [sx * (ai * x - bi * y + ci), sy * (fi - bi * x - ai * y)];
  };
  return transform;
}

function projection(project) {
  return projectionMutator(function() { return project; })();
}

function projectionMutator(projectAt) {
  var project,
      k = 150, // scale
      x = 480, y = 250, // translate
      lambda = 0, phi = 0, // center
      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, // pre-rotate
      alpha = 0, // post-rotate angle
      sx = 1, // reflectX
      sy = 1, // reflectX
      theta = null, preclip = antimeridian, // pre-clip angle
      x0 = null, y0, x1, y1, postclip = d3_geo_src_identity, // post-clip extent
      delta2 = 0.5, // precision
      projectResample,
      projectTransform,
      projectRotateTransform,
      cache,
      cacheStream;

  function projection(point) {
    return projectRotateTransform(point[0] * math_radians, point[1] * math_radians);
  }

  function invert(point) {
    point = projectRotateTransform.invert(point[0], point[1]);
    return point && [point[0] * src_math_degrees, point[1] * src_math_degrees];
  }

  projection.stream = function(stream) {
    return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));
  };

  projection.preclip = function(_) {
    return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;
  };

  projection.postclip = function(_) {
    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;
  };

  projection.clipAngle = function(_) {
    return arguments.length ? (preclip = +_ ? clip_circle(theta = _ * math_radians) : (theta = null, antimeridian), reset()) : theta * src_math_degrees;
  };

  projection.clipExtent = function(_) {
    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, d3_geo_src_identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];
  };

  projection.scale = function(_) {
    return arguments.length ? (k = +_, recenter()) : k;
  };

  projection.translate = function(_) {
    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];
  };

  projection.center = function(_) {
    return arguments.length ? (lambda = _[0] % 360 * math_radians, phi = _[1] % 360 * math_radians, recenter()) : [lambda * src_math_degrees, phi * src_math_degrees];
  };

  projection.rotate = function(_) {
    return arguments.length ? (deltaLambda = _[0] % 360 * math_radians, deltaPhi = _[1] % 360 * math_radians, deltaGamma = _.length > 2 ? _[2] % 360 * math_radians : 0, recenter()) : [deltaLambda * src_math_degrees, deltaPhi * src_math_degrees, deltaGamma * src_math_degrees];
  };

  projection.angle = function(_) {
    return arguments.length ? (alpha = _ % 360 * math_radians, recenter()) : alpha * src_math_degrees;
  };

  projection.reflectX = function(_) {
    return arguments.length ? (sx = _ ? -1 : 1, recenter()) : sx < 0;
  };

  projection.reflectY = function(_) {
    return arguments.length ? (sy = _ ? -1 : 1, recenter()) : sy < 0;
  };

  projection.precision = function(_) {
    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);
  };

  projection.fitExtent = function(extent, object) {
    return fitExtent(projection, extent, object);
  };

  projection.fitSize = function(size, object) {
    return fitSize(projection, size, object);
  };

  projection.fitWidth = function(width, object) {
    return fitWidth(projection, width, object);
  };

  projection.fitHeight = function(height, object) {
    return fitHeight(projection, height, object);
  };

  function recenter() {
    var center = scaleTranslateRotate(k, 0, 0, sx, sy, alpha).apply(null, project(lambda, phi)),
        transform = scaleTranslateRotate(k, x - center[0], y - center[1], sx, sy, alpha);
    rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma);
    projectTransform = compose(project, transform);
    projectRotateTransform = compose(rotate, projectTransform);
    projectResample = resample(projectTransform, delta2);
    return reset();
  }

  function reset() {
    cache = cacheStream = null;
    return projection;
  }

  return function() {
    project = projectAt.apply(this, arguments);
    projection.invert = project.invert && invert;
    return recenter();
  };
}

;// CONCATENATED MODULE: ./node_modules/d3-geo/src/projection/conic.js



function conicProjection(projectAt) {
  var phi0 = 0,
      phi1 = math_pi / 3,
      m = projectionMutator(projectAt),
      p = m(phi0, phi1);

  p.parallels = function(_) {
    return arguments.length ? m(phi0 = _[0] * math_radians, phi1 = _[1] * math_radians) : [phi0 * src_math_degrees, phi1 * src_math_degrees];
  };

  return p;
}

;// CONCATENATED MODULE: ./node_modules/d3-geo/src/projection/cylindricalEqualArea.js


function cylindricalEqualAreaRaw(phi0) {
  var cosPhi0 = math_cos(phi0);

  function forward(lambda, phi) {
    return [lambda * cosPhi0, math_sin(phi) / cosPhi0];
  }

  forward.invert = function(x, y) {
    return [x / cosPhi0, asin(y * cosPhi0)];
  };

  return forward;
}

;// CONCATENATED MODULE: ./node_modules/d3-geo/src/projection/conicEqualArea.js




function conicEqualAreaRaw(y0, y1) {
  var sy0 = math_sin(y0), n = (sy0 + math_sin(y1)) / 2;

  // Are the parallels symmetrical around the Equator?
  if (src_math_abs(n) < src_math_epsilon) return cylindricalEqualAreaRaw(y0);

  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt(c) / n;

  function project(x, y) {
    var r = sqrt(c - 2 * n * math_sin(y)) / n;
    return [r * math_sin(x *= n), r0 - r * math_cos(x)];
  }

  project.invert = function(x, y) {
    var r0y = r0 - y,
        l = atan2(x, src_math_abs(r0y)) * sign(r0y);
    if (r0y * n < 0)
      l -= math_pi * sign(x) * sign(r0y);
    return [l / n, asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];
  };

  return project;
}

/* harmony default export */ function conicEqualArea() {
  return conicProjection(conicEqualAreaRaw)
      .scale(155.424)
      .center([0, 33.6442]);
}

;// CONCATENATED MODULE: ./node_modules/d3-geo/src/projection/albers.js


/* harmony default export */ function albers() {
  return conicEqualArea()
      .parallels([29.5, 45.5])
      .scale(1070)
      .translate([480, 250])
      .rotate([96, 0])
      .center([-0.6, 38.7]);
}

;// CONCATENATED MODULE: ./node_modules/d3-geo/src/projection/albersUsa.js





// The projections must have mutually exclusive clip regions on the sphere,
// as this will avoid emitting interleaving lines and polygons.
function multiplex(streams) {
  var n = streams.length;
  return {
    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },
    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },
    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },
    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },
    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },
    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }
  };
}

// A composite projection for the United States, configured by default for
// 960×500. The projection also works quite well at 960×600 if you change the
// scale to 1285 and adjust the translate accordingly. The set of standard
// parallels for each region comes from USGS, which is published here:
// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers
/* harmony default export */ function albersUsa() {
  var cache,
      cacheStream,
      lower48 = albers(), lower48Point,
      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338
      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007
      point, pointStream = {point: function(x, y) { point = [x, y]; }};

  function albersUsa(coordinates) {
    var x = coordinates[0], y = coordinates[1];
    return point = null,
        (lower48Point.point(x, y), point)
        || (alaskaPoint.point(x, y), point)
        || (hawaiiPoint.point(x, y), point);
  }

  albersUsa.invert = function(coordinates) {
    var k = lower48.scale(),
        t = lower48.translate(),
        x = (coordinates[0] - t[0]) / k,
        y = (coordinates[1] - t[1]) / k;
    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska
        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii
        : lower48).invert(coordinates);
  };

  albersUsa.stream = function(stream) {
    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);
  };

  albersUsa.precision = function(_) {
    if (!arguments.length) return lower48.precision();
    lower48.precision(_), alaska.precision(_), hawaii.precision(_);
    return reset();
  };

  albersUsa.scale = function(_) {
    if (!arguments.length) return lower48.scale();
    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);
    return albersUsa.translate(lower48.translate());
  };

  albersUsa.translate = function(_) {
    if (!arguments.length) return lower48.translate();
    var k = lower48.scale(), x = +_[0], y = +_[1];

    lower48Point = lower48
        .translate(_)
        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])
        .stream(pointStream);

    alaskaPoint = alaska
        .translate([x - 0.307 * k, y + 0.201 * k])
        .clipExtent([[x - 0.425 * k + src_math_epsilon, y + 0.120 * k + src_math_epsilon], [x - 0.214 * k - src_math_epsilon, y + 0.234 * k - src_math_epsilon]])
        .stream(pointStream);

    hawaiiPoint = hawaii
        .translate([x - 0.205 * k, y + 0.212 * k])
        .clipExtent([[x - 0.214 * k + src_math_epsilon, y + 0.166 * k + src_math_epsilon], [x - 0.115 * k - src_math_epsilon, y + 0.234 * k - src_math_epsilon]])
        .stream(pointStream);

    return reset();
  };

  albersUsa.fitExtent = function(extent, object) {
    return fitExtent(albersUsa, extent, object);
  };

  albersUsa.fitSize = function(size, object) {
    return fitSize(albersUsa, size, object);
  };

  albersUsa.fitWidth = function(width, object) {
    return fitWidth(albersUsa, width, object);
  };

  albersUsa.fitHeight = function(height, object) {
    return fitHeight(albersUsa, height, object);
  };

  function reset() {
    cache = cacheStream = null;
    return albersUsa;
  }

  return albersUsa.scale(1070);
}

;// CONCATENATED MODULE: ./node_modules/d3-geo/src/projection/azimuthal.js


function azimuthalRaw(scale) {
  return function(x, y) {
    var cx = math_cos(x),
        cy = math_cos(y),
        k = scale(cx * cy);
        if (k === Infinity) return [2, 0];
    return [
      k * cy * math_sin(x),
      k * math_sin(y)
    ];
  }
}

function azimuthalInvert(angle) {
  return function(x, y) {
    var z = sqrt(x * x + y * y),
        c = angle(z),
        sc = math_sin(c),
        cc = math_cos(c);
    return [
      atan2(x * sc, z * cc),
      asin(z && y * sc / z)
    ];
  }
}

;// CONCATENATED MODULE: ./node_modules/d3-geo/src/projection/azimuthalEqualArea.js




var azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {
  return sqrt(2 / (1 + cxcy));
});

azimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {
  return 2 * asin(z / 2);
});

/* harmony default export */ function azimuthalEqualArea() {
  return projection(azimuthalEqualAreaRaw)
      .scale(124.75)
      .clipAngle(180 - 1e-3);
}

;// CONCATENATED MODULE: ./node_modules/d3-geo/src/projection/azimuthalEquidistant.js




var azimuthalEquidistantRaw = azimuthalRaw(function(c) {
  return (c = acos(c)) && c / math_sin(c);
});

azimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {
  return z;
});

/* harmony default export */ function azimuthalEquidistant() {
  return projection(azimuthalEquidistantRaw)
      .scale(79.4188)
      .clipAngle(180 - 1e-3);
}

;// CONCATENATED MODULE: ./node_modules/d3-geo/src/projection/mercator.js




function mercatorRaw(lambda, phi) {
  return [lambda, log(tan((math_halfPi + phi) / 2))];
}

mercatorRaw.invert = function(x, y) {
  return [x, 2 * atan(exp(y)) - math_halfPi];
};

/* harmony default export */ function mercator() {
  return mercatorProjection(mercatorRaw)
      .scale(961 / math_tau);
}

function mercatorProjection(project) {
  var m = projection(project),
      center = m.center,
      scale = m.scale,
      translate = m.translate,
      clipExtent = m.clipExtent,
      x0 = null, y0, x1, y1; // clip extent

  m.scale = function(_) {
    return arguments.length ? (scale(_), reclip()) : scale();
  };

  m.translate = function(_) {
    return arguments.length ? (translate(_), reclip()) : translate();
  };

  m.center = function(_) {
    return arguments.length ? (center(_), reclip()) : center();
  };

  m.clipExtent = function(_) {
    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];
  };

  function reclip() {
    var k = math_pi * scale(),
        t = m(rotation(m.rotate()).invert([0, 0]));
    return clipExtent(x0 == null
        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw
        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]
        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);
  }

  return reclip();
}

;// CONCATENATED MODULE: ./node_modules/d3-geo/src/projection/conicConformal.js




function tany(y) {
  return tan((math_halfPi + y) / 2);
}

function conicConformalRaw(y0, y1) {
  var cy0 = math_cos(y0),
      n = y0 === y1 ? math_sin(y0) : log(cy0 / math_cos(y1)) / log(tany(y1) / tany(y0)),
      f = cy0 * math_pow(tany(y0), n) / n;

  if (!n) return mercatorRaw;

  function project(x, y) {
    if (f > 0) { if (y < -math_halfPi + src_math_epsilon) y = -math_halfPi + src_math_epsilon; }
    else { if (y > math_halfPi - src_math_epsilon) y = math_halfPi - src_math_epsilon; }
    var r = f / math_pow(tany(y), n);
    return [r * math_sin(n * x), f - r * math_cos(n * x)];
  }

  project.invert = function(x, y) {
    var fy = f - y, r = sign(n) * sqrt(x * x + fy * fy),
      l = atan2(x, src_math_abs(fy)) * sign(fy);
    if (fy * n < 0)
      l -= math_pi * sign(x) * sign(fy);
    return [l / n, 2 * atan(math_pow(f / r, 1 / n)) - math_halfPi];
  };

  return project;
}

/* harmony default export */ function conicConformal() {
  return conicProjection(conicConformalRaw)
      .scale(109.5)
      .parallels([30, 30]);
}

;// CONCATENATED MODULE: ./node_modules/d3-geo/src/projection/equirectangular.js


function equirectangularRaw(lambda, phi) {
  return [lambda, phi];
}

equirectangularRaw.invert = equirectangularRaw;

/* harmony default export */ function equirectangular() {
  return projection(equirectangularRaw)
      .scale(152.63);
}

;// CONCATENATED MODULE: ./node_modules/d3-geo/src/projection/conicEquidistant.js




function conicEquidistantRaw(y0, y1) {
  var cy0 = math_cos(y0),
      n = y0 === y1 ? math_sin(y0) : (cy0 - math_cos(y1)) / (y1 - y0),
      g = cy0 / n + y0;

  if (src_math_abs(n) < src_math_epsilon) return equirectangularRaw;

  function project(x, y) {
    var gy = g - y, nx = n * x;
    return [gy * math_sin(nx), g - gy * math_cos(nx)];
  }

  project.invert = function(x, y) {
    var gy = g - y,
        l = atan2(x, src_math_abs(gy)) * sign(gy);
    if (gy * n < 0)
      l -= math_pi * sign(x) * sign(gy);
    return [l / n, g - sign(n) * sqrt(x * x + gy * gy)];
  };

  return project;
}

/* harmony default export */ function conicEquidistant() {
  return conicProjection(conicEquidistantRaw)
      .scale(131.154)
      .center([0, 13.9389]);
}

;// CONCATENATED MODULE: ./node_modules/d3-geo/src/projection/equalEarth.js



var A1 = 1.340264,
    A2 = -0.081106,
    A3 = 0.000893,
    A4 = 0.003796,
    M = sqrt(3) / 2,
    iterations = 12;

function equalEarthRaw(lambda, phi) {
  var l = asin(M * math_sin(phi)), l2 = l * l, l6 = l2 * l2 * l2;
  return [
    lambda * math_cos(l) / (M * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2))),
    l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2))
  ];
}

equalEarthRaw.invert = function(x, y) {
  var l = y, l2 = l * l, l6 = l2 * l2 * l2;
  for (var i = 0, delta, fy, fpy; i < iterations; ++i) {
    fy = l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2)) - y;
    fpy = A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2);
    l -= delta = fy / fpy, l2 = l * l, l6 = l2 * l2 * l2;
    if (src_math_abs(delta) < epsilon2) break;
  }
  return [
    M * x * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2)) / math_cos(l),
    asin(math_sin(l) / M)
  ];
};

/* harmony default export */ function equalEarth() {
  return projection(equalEarthRaw)
      .scale(177.158);
}

;// CONCATENATED MODULE: ./node_modules/d3-geo/src/projection/gnomonic.js




function gnomonicRaw(x, y) {
  var cy = math_cos(y), k = math_cos(x) * cy;
  return [cy * math_sin(x) / k, math_sin(y) / k];
}

gnomonicRaw.invert = azimuthalInvert(atan);

/* harmony default export */ function gnomonic() {
  return projection(gnomonicRaw)
      .scale(144.049)
      .clipAngle(60);
}

;// CONCATENATED MODULE: ./node_modules/d3-geo/src/projection/identity.js






/* harmony default export */ function projection_identity() {
  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, // scale, translate and reflect
      alpha = 0, ca, sa, // angle
      x0 = null, y0, x1, y1, // clip extent
      kx = 1, ky = 1,
      transform = transformer({
        point: function(x, y) {
          var p = projection([x, y])
          this.stream.point(p[0], p[1]);
        }
      }),
      postclip = d3_geo_src_identity,
      cache,
      cacheStream;

  function reset() {
    kx = k * sx;
    ky = k * sy;
    cache = cacheStream = null;
    return projection;
  }

  function projection (p) {
    var x = p[0] * kx, y = p[1] * ky;
    if (alpha) {
      var t = y * ca - x * sa;
      x = x * ca + y * sa;
      y = t;
    }    
    return [x + tx, y + ty];
  }
  projection.invert = function(p) {
    var x = p[0] - tx, y = p[1] - ty;
    if (alpha) {
      var t = y * ca + x * sa;
      x = x * ca - y * sa;
      y = t;
    }
    return [x / kx, y / ky];
  };
  projection.stream = function(stream) {
    return cache && cacheStream === stream ? cache : cache = transform(postclip(cacheStream = stream));
  };
  projection.postclip = function(_) {
    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;
  };
  projection.clipExtent = function(_) {
    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, d3_geo_src_identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];
  };
  projection.scale = function(_) {
    return arguments.length ? (k = +_, reset()) : k;
  };
  projection.translate = function(_) {
    return arguments.length ? (tx = +_[0], ty = +_[1], reset()) : [tx, ty];
  }
  projection.angle = function(_) {
    return arguments.length ? (alpha = _ % 360 * math_radians, sa = math_sin(alpha), ca = math_cos(alpha), reset()) : alpha * src_math_degrees;
  };
  projection.reflectX = function(_) {
    return arguments.length ? (sx = _ ? -1 : 1, reset()) : sx < 0;
  };
  projection.reflectY = function(_) {
    return arguments.length ? (sy = _ ? -1 : 1, reset()) : sy < 0;
  };
  projection.fitExtent = function(extent, object) {
    return fitExtent(projection, extent, object);
  };
  projection.fitSize = function(size, object) {
    return fitSize(projection, size, object);
  };
  projection.fitWidth = function(width, object) {
    return fitWidth(projection, width, object);
  };
  projection.fitHeight = function(height, object) {
    return fitHeight(projection, height, object);
  };

  return projection;
}

;// CONCATENATED MODULE: ./node_modules/d3-geo/src/projection/naturalEarth1.js



function naturalEarth1Raw(lambda, phi) {
  var phi2 = phi * phi, phi4 = phi2 * phi2;
  return [
    lambda * (0.8707 - 0.131979 * phi2 + phi4 * (-0.013791 + phi4 * (0.003971 * phi2 - 0.001529 * phi4))),
    phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4)))
  ];
}

naturalEarth1Raw.invert = function(x, y) {
  var phi = y, i = 25, delta;
  do {
    var phi2 = phi * phi, phi4 = phi2 * phi2;
    phi -= delta = (phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4))) - y) /
        (1.007226 + phi2 * (0.015085 * 3 + phi4 * (-0.044475 * 7 + 0.028874 * 9 * phi2 - 0.005916 * 11 * phi4)));
  } while (src_math_abs(delta) > src_math_epsilon && --i > 0);
  return [
    x / (0.8707 + (phi2 = phi * phi) * (-0.131979 + phi2 * (-0.013791 + phi2 * phi2 * phi2 * (0.003971 - 0.001529 * phi2)))),
    phi
  ];
};

/* harmony default export */ function naturalEarth1() {
  return projection(naturalEarth1Raw)
      .scale(175.295);
}

;// CONCATENATED MODULE: ./node_modules/d3-geo/src/projection/orthographic.js




function orthographicRaw(x, y) {
  return [math_cos(y) * math_sin(x), math_sin(y)];
}

orthographicRaw.invert = azimuthalInvert(asin);

/* harmony default export */ function orthographic() {
  return projection(orthographicRaw)
      .scale(249.5)
      .clipAngle(90 + src_math_epsilon);
}

;// CONCATENATED MODULE: ./node_modules/d3-geo/src/projection/stereographic.js




function stereographicRaw(x, y) {
  var cy = math_cos(y), k = 1 + math_cos(x) * cy;
  return [cy * math_sin(x) / k, math_sin(y) / k];
}

stereographicRaw.invert = azimuthalInvert(function(z) {
  return 2 * atan(z);
});

/* harmony default export */ function stereographic() {
  return projection(stereographicRaw)
      .scale(250)
      .clipAngle(142);
}

;// CONCATENATED MODULE: ./node_modules/d3-geo/src/projection/transverseMercator.js



function transverseMercatorRaw(lambda, phi) {
  return [log(tan((math_halfPi + phi) / 2)), -lambda];
}

transverseMercatorRaw.invert = function(x, y) {
  return [-y, 2 * atan(exp(x)) - math_halfPi];
};

/* harmony default export */ function transverseMercator() {
  var m = mercatorProjection(transverseMercatorRaw),
      center = m.center,
      rotate = m.rotate;

  m.center = function(_) {
    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);
  };

  m.rotate = function(_) {
    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);
  };

  return rotate([0, 0, 90])
      .scale(159.155);
}

;// CONCATENATED MODULE: ./node_modules/d3-geo/src/index.js






 // DEPRECATED! Use d3.geoIdentity().clipExtent(…).




























;// CONCATENATED MODULE: ./node_modules/d3-hierarchy/src/cluster.js
function defaultSeparation(a, b) {
  return a.parent === b.parent ? 1 : 2;
}

function meanX(children) {
  return children.reduce(meanXReduce, 0) / children.length;
}

function meanXReduce(x, c) {
  return x + c.x;
}

function maxY(children) {
  return 1 + children.reduce(maxYReduce, 0);
}

function maxYReduce(y, c) {
  return Math.max(y, c.y);
}

function leafLeft(node) {
  var children;
  while (children = node.children) node = children[0];
  return node;
}

function leafRight(node) {
  var children;
  while (children = node.children) node = children[children.length - 1];
  return node;
}

/* harmony default export */ function cluster() {
  var separation = defaultSeparation,
      dx = 1,
      dy = 1,
      nodeSize = false;

  function cluster(root) {
    var previousNode,
        x = 0;

    // First walk, computing the initial x & y values.
    root.eachAfter(function(node) {
      var children = node.children;
      if (children) {
        node.x = meanX(children);
        node.y = maxY(children);
      } else {
        node.x = previousNode ? x += separation(node, previousNode) : 0;
        node.y = 0;
        previousNode = node;
      }
    });

    var left = leafLeft(root),
        right = leafRight(root),
        x0 = left.x - separation(left, right) / 2,
        x1 = right.x + separation(right, left) / 2;

    // Second walk, normalizing x & y to the desired size.
    return root.eachAfter(nodeSize ? function(node) {
      node.x = (node.x - root.x) * dx;
      node.y = (root.y - node.y) * dy;
    } : function(node) {
      node.x = (node.x - x0) / (x1 - x0) * dx;
      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;
    });
  }

  cluster.separation = function(x) {
    return arguments.length ? (separation = x, cluster) : separation;
  };

  cluster.size = function(x) {
    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);
  };

  cluster.nodeSize = function(x) {
    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);
  };

  return cluster;
}

;// CONCATENATED MODULE: ./node_modules/d3-hierarchy/src/hierarchy/count.js
function count_count(node) {
  var sum = 0,
      children = node.children,
      i = children && children.length;
  if (!i) sum = 1;
  else while (--i >= 0) sum += children[i].value;
  node.value = sum;
}

/* harmony default export */ function hierarchy_count() {
  return this.eachAfter(count_count);
}

;// CONCATENATED MODULE: ./node_modules/d3-hierarchy/src/hierarchy/each.js
/* harmony default export */ function hierarchy_each(callback, that) {
  let index = -1;
  for (const node of this) {
    callback.call(that, node, ++index, this);
  }
  return this;
}

;// CONCATENATED MODULE: ./node_modules/d3-hierarchy/src/hierarchy/eachBefore.js
/* harmony default export */ function eachBefore(callback, that) {
  var node = this, nodes = [node], children, i, index = -1;
  while (node = nodes.pop()) {
    callback.call(that, node, ++index, this);
    if (children = node.children) {
      for (i = children.length - 1; i >= 0; --i) {
        nodes.push(children[i]);
      }
    }
  }
  return this;
}

;// CONCATENATED MODULE: ./node_modules/d3-hierarchy/src/hierarchy/eachAfter.js
/* harmony default export */ function eachAfter(callback, that) {
  var node = this, nodes = [node], next = [], children, i, n, index = -1;
  while (node = nodes.pop()) {
    next.push(node);
    if (children = node.children) {
      for (i = 0, n = children.length; i < n; ++i) {
        nodes.push(children[i]);
      }
    }
  }
  while (node = next.pop()) {
    callback.call(that, node, ++index, this);
  }
  return this;
}

;// CONCATENATED MODULE: ./node_modules/d3-hierarchy/src/hierarchy/find.js
/* harmony default export */ function hierarchy_find(callback, that) {
  let index = -1;
  for (const node of this) {
    if (callback.call(that, node, ++index, this)) {
      return node;
    }
  }
}

;// CONCATENATED MODULE: ./node_modules/d3-hierarchy/src/hierarchy/sum.js
/* harmony default export */ function hierarchy_sum(value) {
  return this.eachAfter(function(node) {
    var sum = +value(node.data) || 0,
        children = node.children,
        i = children && children.length;
    while (--i >= 0) sum += children[i].value;
    node.value = sum;
  });
}

;// CONCATENATED MODULE: ./node_modules/d3-hierarchy/src/hierarchy/sort.js
/* harmony default export */ function hierarchy_sort(compare) {
  return this.eachBefore(function(node) {
    if (node.children) {
      node.children.sort(compare);
    }
  });
}

;// CONCATENATED MODULE: ./node_modules/d3-hierarchy/src/hierarchy/path.js
/* harmony default export */ function hierarchy_path(end) {
  var start = this,
      ancestor = leastCommonAncestor(start, end),
      nodes = [start];
  while (start !== ancestor) {
    start = start.parent;
    nodes.push(start);
  }
  var k = nodes.length;
  while (end !== ancestor) {
    nodes.splice(k, 0, end);
    end = end.parent;
  }
  return nodes;
}

function leastCommonAncestor(a, b) {
  if (a === b) return a;
  var aNodes = a.ancestors(),
      bNodes = b.ancestors(),
      c = null;
  a = aNodes.pop();
  b = bNodes.pop();
  while (a === b) {
    c = a;
    a = aNodes.pop();
    b = bNodes.pop();
  }
  return c;
}

;// CONCATENATED MODULE: ./node_modules/d3-hierarchy/src/hierarchy/ancestors.js
/* harmony default export */ function ancestors() {
  var node = this, nodes = [node];
  while (node = node.parent) {
    nodes.push(node);
  }
  return nodes;
}

;// CONCATENATED MODULE: ./node_modules/d3-hierarchy/src/hierarchy/descendants.js
/* harmony default export */ function descendants() {
  return Array.from(this);
}

;// CONCATENATED MODULE: ./node_modules/d3-hierarchy/src/hierarchy/leaves.js
/* harmony default export */ function leaves() {
  var leaves = [];
  this.eachBefore(function(node) {
    if (!node.children) {
      leaves.push(node);
    }
  });
  return leaves;
}

;// CONCATENATED MODULE: ./node_modules/d3-hierarchy/src/hierarchy/links.js
/* harmony default export */ function links() {
  var root = this, links = [];
  root.each(function(node) {
    if (node !== root) { // Don’t include the root’s parent, if any.
      links.push({source: node.parent, target: node});
    }
  });
  return links;
}

;// CONCATENATED MODULE: ./node_modules/d3-hierarchy/src/hierarchy/iterator.js
/* harmony default export */ function* hierarchy_iterator() {
  var node = this, current, next = [node], children, i, n;
  do {
    current = next.reverse(), next = [];
    while (node = current.pop()) {
      yield node;
      if (children = node.children) {
        for (i = 0, n = children.length; i < n; ++i) {
          next.push(children[i]);
        }
      }
    }
  } while (next.length);
}

;// CONCATENATED MODULE: ./node_modules/d3-hierarchy/src/hierarchy/index.js














function hierarchy(data, children) {
  if (data instanceof Map) {
    data = [undefined, data];
    if (children === undefined) children = mapChildren;
  } else if (children === undefined) {
    children = objectChildren;
  }

  var root = new Node(data),
      node,
      nodes = [root],
      child,
      childs,
      i,
      n;

  while (node = nodes.pop()) {
    if ((childs = children(node.data)) && (n = (childs = Array.from(childs)).length)) {
      node.children = childs;
      for (i = n - 1; i >= 0; --i) {
        nodes.push(child = childs[i] = new Node(childs[i]));
        child.parent = node;
        child.depth = node.depth + 1;
      }
    }
  }

  return root.eachBefore(computeHeight);
}

function node_copy() {
  return hierarchy(this).eachBefore(copyData);
}

function objectChildren(d) {
  return d.children;
}

function mapChildren(d) {
  return Array.isArray(d) ? d[1] : null;
}

function copyData(node) {
  if (node.data.value !== undefined) node.value = node.data.value;
  node.data = node.data.data;
}

function computeHeight(node) {
  var height = 0;
  do node.height = height;
  while ((node = node.parent) && (node.height < ++height));
}

function Node(data) {
  this.data = data;
  this.depth =
  this.height = 0;
  this.parent = null;
}

Node.prototype = hierarchy.prototype = {
  constructor: Node,
  count: hierarchy_count,
  each: hierarchy_each,
  eachAfter: eachAfter,
  eachBefore: eachBefore,
  find: hierarchy_find,
  sum: hierarchy_sum,
  sort: hierarchy_sort,
  path: hierarchy_path,
  ancestors: ancestors,
  descendants: descendants,
  leaves: leaves,
  links: links,
  copy: node_copy,
  [Symbol.iterator]: hierarchy_iterator
};

;// CONCATENATED MODULE: ./node_modules/d3-hierarchy/src/accessors.js
function optional(f) {
  return f == null ? null : required(f);
}

function required(f) {
  if (typeof f !== "function") throw new Error;
  return f;
}

;// CONCATENATED MODULE: ./node_modules/d3-hierarchy/src/constant.js
function constantZero() {
  return 0;
}

/* harmony default export */ function d3_hierarchy_src_constant(x) {
  return function() {
    return x;
  };
}

;// CONCATENATED MODULE: ./node_modules/d3-hierarchy/src/lcg.js
// https://en.wikipedia.org/wiki/Linear_congruential_generator#Parameters_in_common_use
const lcg_a = 1664525;
const lcg_c = 1013904223;
const lcg_m = 4294967296; // 2^32

/* harmony default export */ function src_lcg() {
  let s = 1;
  return () => (s = (lcg_a * s + lcg_c) % lcg_m) / lcg_m;
}

;// CONCATENATED MODULE: ./node_modules/d3-hierarchy/src/array.js
/* harmony default export */ function d3_hierarchy_src_array(x) {
  return typeof x === "object" && "length" in x
    ? x // Array, TypedArray, NodeList, array-like
    : Array.from(x); // Map, Set, iterable, string, or anything else
}

function array_shuffle(array, random) {
  let m = array.length,
      t,
      i;

  while (m) {
    i = random() * m-- | 0;
    t = array[m];
    array[m] = array[i];
    array[i] = t;
  }

  return array;
}

;// CONCATENATED MODULE: ./node_modules/d3-hierarchy/src/pack/enclose.js



/* harmony default export */ function enclose(circles) {
  return packEncloseRandom(circles, src_lcg());
}

function packEncloseRandom(circles, random) {
  var i = 0, n = (circles = array_shuffle(Array.from(circles), random)).length, B = [], p, e;

  while (i < n) {
    p = circles[i];
    if (e && enclosesWeak(e, p)) ++i;
    else e = encloseBasis(B = extendBasis(B, p)), i = 0;
  }

  return e;
}

function extendBasis(B, p) {
  var i, j;

  if (enclosesWeakAll(p, B)) return [p];

  // If we get here then B must have at least one element.
  for (i = 0; i < B.length; ++i) {
    if (enclosesNot(p, B[i])
        && enclosesWeakAll(encloseBasis2(B[i], p), B)) {
      return [B[i], p];
    }
  }

  // If we get here then B must have at least two elements.
  for (i = 0; i < B.length - 1; ++i) {
    for (j = i + 1; j < B.length; ++j) {
      if (enclosesNot(encloseBasis2(B[i], B[j]), p)
          && enclosesNot(encloseBasis2(B[i], p), B[j])
          && enclosesNot(encloseBasis2(B[j], p), B[i])
          && enclosesWeakAll(encloseBasis3(B[i], B[j], p), B)) {
        return [B[i], B[j], p];
      }
    }
  }

  // If we get here then something is very wrong.
  throw new Error;
}

function enclosesNot(a, b) {
  var dr = a.r - b.r, dx = b.x - a.x, dy = b.y - a.y;
  return dr < 0 || dr * dr < dx * dx + dy * dy;
}

function enclosesWeak(a, b) {
  var dr = a.r - b.r + Math.max(a.r, b.r, 1) * 1e-9, dx = b.x - a.x, dy = b.y - a.y;
  return dr > 0 && dr * dr > dx * dx + dy * dy;
}

function enclosesWeakAll(a, B) {
  for (var i = 0; i < B.length; ++i) {
    if (!enclosesWeak(a, B[i])) {
      return false;
    }
  }
  return true;
}

function encloseBasis(B) {
  switch (B.length) {
    case 1: return encloseBasis1(B[0]);
    case 2: return encloseBasis2(B[0], B[1]);
    case 3: return encloseBasis3(B[0], B[1], B[2]);
  }
}

function encloseBasis1(a) {
  return {
    x: a.x,
    y: a.y,
    r: a.r
  };
}

function encloseBasis2(a, b) {
  var x1 = a.x, y1 = a.y, r1 = a.r,
      x2 = b.x, y2 = b.y, r2 = b.r,
      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,
      l = Math.sqrt(x21 * x21 + y21 * y21);
  return {
    x: (x1 + x2 + x21 / l * r21) / 2,
    y: (y1 + y2 + y21 / l * r21) / 2,
    r: (l + r1 + r2) / 2
  };
}

function encloseBasis3(a, b, c) {
  var x1 = a.x, y1 = a.y, r1 = a.r,
      x2 = b.x, y2 = b.y, r2 = b.r,
      x3 = c.x, y3 = c.y, r3 = c.r,
      a2 = x1 - x2,
      a3 = x1 - x3,
      b2 = y1 - y2,
      b3 = y1 - y3,
      c2 = r2 - r1,
      c3 = r3 - r1,
      d1 = x1 * x1 + y1 * y1 - r1 * r1,
      d2 = d1 - x2 * x2 - y2 * y2 + r2 * r2,
      d3 = d1 - x3 * x3 - y3 * y3 + r3 * r3,
      ab = a3 * b2 - a2 * b3,
      xa = (b2 * d3 - b3 * d2) / (ab * 2) - x1,
      xb = (b3 * c2 - b2 * c3) / ab,
      ya = (a3 * d2 - a2 * d3) / (ab * 2) - y1,
      yb = (a2 * c3 - a3 * c2) / ab,
      A = xb * xb + yb * yb - 1,
      B = 2 * (r1 + xa * xb + ya * yb),
      C = xa * xa + ya * ya - r1 * r1,
      r = -(Math.abs(A) > 1e-6 ? (B + Math.sqrt(B * B - 4 * A * C)) / (2 * A) : C / B);
  return {
    x: x1 + xa + xb * r,
    y: y1 + ya + yb * r,
    r: r
  };
}

;// CONCATENATED MODULE: ./node_modules/d3-hierarchy/src/pack/siblings.js




function place(b, a, c) {
  var dx = b.x - a.x, x, a2,
      dy = b.y - a.y, y, b2,
      d2 = dx * dx + dy * dy;
  if (d2) {
    a2 = a.r + c.r, a2 *= a2;
    b2 = b.r + c.r, b2 *= b2;
    if (a2 > b2) {
      x = (d2 + b2 - a2) / (2 * d2);
      y = Math.sqrt(Math.max(0, b2 / d2 - x * x));
      c.x = b.x - x * dx - y * dy;
      c.y = b.y - x * dy + y * dx;
    } else {
      x = (d2 + a2 - b2) / (2 * d2);
      y = Math.sqrt(Math.max(0, a2 / d2 - x * x));
      c.x = a.x + x * dx - y * dy;
      c.y = a.y + x * dy + y * dx;
    }
  } else {
    c.x = a.x + c.r;
    c.y = a.y;
  }
}

function intersects(a, b) {
  var dr = a.r + b.r - 1e-6, dx = b.x - a.x, dy = b.y - a.y;
  return dr > 0 && dr * dr > dx * dx + dy * dy;
}

function score(node) {
  var a = node._,
      b = node.next._,
      ab = a.r + b.r,
      dx = (a.x * b.r + b.x * a.r) / ab,
      dy = (a.y * b.r + b.y * a.r) / ab;
  return dx * dx + dy * dy;
}

function siblings_Node(circle) {
  this._ = circle;
  this.next = null;
  this.previous = null;
}

function packSiblingsRandom(circles, random) {
  if (!(n = (circles = d3_hierarchy_src_array(circles)).length)) return 0;

  var a, b, c, n, aa, ca, i, j, k, sj, sk;

  // Place the first circle.
  a = circles[0], a.x = 0, a.y = 0;
  if (!(n > 1)) return a.r;

  // Place the second circle.
  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;
  if (!(n > 2)) return a.r + b.r;

  // Place the third circle.
  place(b, a, c = circles[2]);

  // Initialize the front-chain using the first three circles a, b and c.
  a = new siblings_Node(a), b = new siblings_Node(b), c = new siblings_Node(c);
  a.next = c.previous = b;
  b.next = a.previous = c;
  c.next = b.previous = a;

  // Attempt to place each remaining circle…
  pack: for (i = 3; i < n; ++i) {
    place(a._, b._, c = circles[i]), c = new siblings_Node(c);

    // Find the closest intersecting circle on the front-chain, if any.
    // “Closeness” is determined by linear distance along the front-chain.
    // “Ahead” or “behind” is likewise determined by linear distance.
    j = b.next, k = a.previous, sj = b._.r, sk = a._.r;
    do {
      if (sj <= sk) {
        if (intersects(j._, c._)) {
          b = j, a.next = b, b.previous = a, --i;
          continue pack;
        }
        sj += j._.r, j = j.next;
      } else {
        if (intersects(k._, c._)) {
          a = k, a.next = b, b.previous = a, --i;
          continue pack;
        }
        sk += k._.r, k = k.previous;
      }
    } while (j !== k.next);

    // Success! Insert the new circle c between a and b.
    c.previous = a, c.next = b, a.next = b.previous = b = c;

    // Compute the new closest circle pair to the centroid.
    aa = score(a);
    while ((c = c.next) !== b) {
      if ((ca = score(c)) < aa) {
        a = c, aa = ca;
      }
    }
    b = a.next;
  }

  // Compute the enclosing circle of the front chain.
  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = packEncloseRandom(a, random);

  // Translate the circles to put the enclosing circle around the origin.
  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;

  return c.r;
}

/* harmony default export */ function siblings(circles) {
  packSiblingsRandom(circles, src_lcg());
  return circles;
}

;// CONCATENATED MODULE: ./node_modules/d3-hierarchy/src/pack/index.js





function pack_defaultRadius(d) {
  return Math.sqrt(d.value);
}

/* harmony default export */ function pack() {
  var radius = null,
      dx = 1,
      dy = 1,
      padding = constantZero;

  function pack(root) {
    const random = src_lcg();
    root.x = dx / 2, root.y = dy / 2;
    if (radius) {
      root.eachBefore(radiusLeaf(radius))
          .eachAfter(packChildrenRandom(padding, 0.5, random))
          .eachBefore(translateChild(1));
    } else {
      root.eachBefore(radiusLeaf(pack_defaultRadius))
          .eachAfter(packChildrenRandom(constantZero, 1, random))
          .eachAfter(packChildrenRandom(padding, root.r / Math.min(dx, dy), random))
          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));
    }
    return root;
  }

  pack.radius = function(x) {
    return arguments.length ? (radius = optional(x), pack) : radius;
  };

  pack.size = function(x) {
    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];
  };

  pack.padding = function(x) {
    return arguments.length ? (padding = typeof x === "function" ? x : d3_hierarchy_src_constant(+x), pack) : padding;
  };

  return pack;
}

function radiusLeaf(radius) {
  return function(node) {
    if (!node.children) {
      node.r = Math.max(0, +radius(node) || 0);
    }
  };
}

function packChildrenRandom(padding, k, random) {
  return function(node) {
    if (children = node.children) {
      var children,
          i,
          n = children.length,
          r = padding(node) * k || 0,
          e;

      if (r) for (i = 0; i < n; ++i) children[i].r += r;
      e = packSiblingsRandom(children, random);
      if (r) for (i = 0; i < n; ++i) children[i].r -= r;
      node.r = e + r;
    }
  };
}

function translateChild(k) {
  return function(node) {
    var parent = node.parent;
    node.r *= k;
    if (parent) {
      node.x = parent.x + k * node.x;
      node.y = parent.y + k * node.y;
    }
  };
}

;// CONCATENATED MODULE: ./node_modules/d3-hierarchy/src/treemap/round.js
/* harmony default export */ function treemap_round(node) {
  node.x0 = Math.round(node.x0);
  node.y0 = Math.round(node.y0);
  node.x1 = Math.round(node.x1);
  node.y1 = Math.round(node.y1);
}

;// CONCATENATED MODULE: ./node_modules/d3-hierarchy/src/treemap/dice.js
/* harmony default export */ function dice(parent, x0, y0, x1, y1) {
  var nodes = parent.children,
      node,
      i = -1,
      n = nodes.length,
      k = parent.value && (x1 - x0) / parent.value;

  while (++i < n) {
    node = nodes[i], node.y0 = y0, node.y1 = y1;
    node.x0 = x0, node.x1 = x0 += node.value * k;
  }
}

;// CONCATENATED MODULE: ./node_modules/d3-hierarchy/src/partition.js



/* harmony default export */ function partition() {
  var dx = 1,
      dy = 1,
      padding = 0,
      round = false;

  function partition(root) {
    var n = root.height + 1;
    root.x0 =
    root.y0 = padding;
    root.x1 = dx;
    root.y1 = dy / n;
    root.eachBefore(positionNode(dy, n));
    if (round) root.eachBefore(treemap_round);
    return root;
  }

  function positionNode(dy, n) {
    return function(node) {
      if (node.children) {
        dice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);
      }
      var x0 = node.x0,
          y0 = node.y0,
          x1 = node.x1 - padding,
          y1 = node.y1 - padding;
      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;
      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;
      node.x0 = x0;
      node.y0 = y0;
      node.x1 = x1;
      node.y1 = y1;
    };
  }

  partition.round = function(x) {
    return arguments.length ? (round = !!x, partition) : round;
  };

  partition.size = function(x) {
    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];
  };

  partition.padding = function(x) {
    return arguments.length ? (padding = +x, partition) : padding;
  };

  return partition;
}

;// CONCATENATED MODULE: ./node_modules/d3-hierarchy/src/stratify.js



var preroot = {depth: -1},
    ambiguous = {},
    imputed = {};

function defaultId(d) {
  return d.id;
}

function defaultParentId(d) {
  return d.parentId;
}

/* harmony default export */ function stratify() {
  var id = defaultId,
      parentId = defaultParentId,
      path;

  function stratify(data) {
    var nodes = Array.from(data),
        currentId = id,
        currentParentId = parentId,
        n,
        d,
        i,
        root,
        parent,
        node,
        nodeId,
        nodeKey,
        nodeByKey = new Map;

    if (path != null) {
      const I = nodes.map((d, i) => normalize(path(d, i, data)));
      const P = I.map(parentof);
      const S = new Set(I).add("");
      for (const i of P) {
        if (!S.has(i)) {
          S.add(i);
          I.push(i);
          P.push(parentof(i));
          nodes.push(imputed);
        }
      }
      currentId = (_, i) => I[i];
      currentParentId = (_, i) => P[i];
    }

    for (i = 0, n = nodes.length; i < n; ++i) {
      d = nodes[i], node = nodes[i] = new Node(d);
      if ((nodeId = currentId(d, i, data)) != null && (nodeId += "")) {
        nodeKey = node.id = nodeId;
        nodeByKey.set(nodeKey, nodeByKey.has(nodeKey) ? ambiguous : node);
      }
      if ((nodeId = currentParentId(d, i, data)) != null && (nodeId += "")) {
        node.parent = nodeId;
      }
    }

    for (i = 0; i < n; ++i) {
      node = nodes[i];
      if (nodeId = node.parent) {
        parent = nodeByKey.get(nodeId);
        if (!parent) throw new Error("missing: " + nodeId);
        if (parent === ambiguous) throw new Error("ambiguous: " + nodeId);
        if (parent.children) parent.children.push(node);
        else parent.children = [node];
        node.parent = parent;
      } else {
        if (root) throw new Error("multiple roots");
        root = node;
      }
    }

    if (!root) throw new Error("no root");

    // When imputing internal nodes, only introduce roots if needed.
    // Then replace the imputed marker data with null.
    if (path != null) {
      while (root.data === imputed && root.children.length === 1) {
        root = root.children[0], --n;
      }
      for (let i = nodes.length - 1; i >= 0; --i) {
        node = nodes[i];
        if (node.data !== imputed) break;
        node.data = null;
      }
    }

    root.parent = preroot;
    root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);
    root.parent = null;
    if (n > 0) throw new Error("cycle");

    return root;
  }

  stratify.id = function(x) {
    return arguments.length ? (id = optional(x), stratify) : id;
  };

  stratify.parentId = function(x) {
    return arguments.length ? (parentId = optional(x), stratify) : parentId;
  };

  stratify.path = function(x) {
    return arguments.length ? (path = optional(x), stratify) : path;
  };

  return stratify;
}

// To normalize a path, we coerce to a string, strip the trailing slash if any
// (as long as the trailing slash is not immediately preceded by another slash),
// and add leading slash if missing.
function normalize(path) {
  path = `${path}`;
  let i = path.length;
  if (slash(path, i - 1) && !slash(path, i - 2)) path = path.slice(0, -1);
  return path[0] === "/" ? path : `/${path}`;
}

// Walk backwards to find the first slash that is not the leading slash, e.g.:
// "/foo/bar" ⇥ "/foo", "/foo" ⇥ "/", "/" ↦ "". (The root is special-cased
// because the id of the root must be a truthy value.)
function parentof(path) {
  let i = path.length;
  if (i < 2) return "";
  while (--i > 1) if (slash(path, i)) break;
  return path.slice(0, i);
}

// Slashes can be escaped; to determine whether a slash is a path delimiter, we
// count the number of preceding backslashes escaping the forward slash: an odd
// number indicates an escaped forward slash.
function slash(path, i) {
  if (path[i] === "/") {
    let k = 0;
    while (i > 0 && path[--i] === "\\") ++k;
    if ((k & 1) === 0) return true;
  }
  return false;
}

;// CONCATENATED MODULE: ./node_modules/d3-hierarchy/src/tree.js


function tree_defaultSeparation(a, b) {
  return a.parent === b.parent ? 1 : 2;
}

// function radialSeparation(a, b) {
//   return (a.parent === b.parent ? 1 : 2) / a.depth;
// }

// This function is used to traverse the left contour of a subtree (or
// subforest). It returns the successor of v on this contour. This successor is
// either given by the leftmost child of v or by the thread of v. The function
// returns null if and only if v is on the highest level of its subtree.
function nextLeft(v) {
  var children = v.children;
  return children ? children[0] : v.t;
}

// This function works analogously to nextLeft.
function nextRight(v) {
  var children = v.children;
  return children ? children[children.length - 1] : v.t;
}

// Shifts the current subtree rooted at w+. This is done by increasing
// prelim(w+) and mod(w+) by shift.
function moveSubtree(wm, wp, shift) {
  var change = shift / (wp.i - wm.i);
  wp.c -= change;
  wp.s += shift;
  wm.c += change;
  wp.z += shift;
  wp.m += shift;
}

// All other shifts, applied to the smaller subtrees between w- and w+, are
// performed by this function. To prepare the shifts, we have to adjust
// change(w+), shift(w+), and change(w-).
function executeShifts(v) {
  var shift = 0,
      change = 0,
      children = v.children,
      i = children.length,
      w;
  while (--i >= 0) {
    w = children[i];
    w.z += shift;
    w.m += shift;
    shift += w.s + (change += w.c);
  }
}

// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,
// returns the specified (default) ancestor.
function nextAncestor(vim, v, ancestor) {
  return vim.a.parent === v.parent ? vim.a : ancestor;
}

function TreeNode(node, i) {
  this._ = node;
  this.parent = null;
  this.children = null;
  this.A = null; // default ancestor
  this.a = this; // ancestor
  this.z = 0; // prelim
  this.m = 0; // mod
  this.c = 0; // change
  this.s = 0; // shift
  this.t = null; // thread
  this.i = i; // number
}

TreeNode.prototype = Object.create(Node.prototype);

function treeRoot(root) {
  var tree = new TreeNode(root, 0),
      node,
      nodes = [tree],
      child,
      children,
      i,
      n;

  while (node = nodes.pop()) {
    if (children = node._.children) {
      node.children = new Array(n = children.length);
      for (i = n - 1; i >= 0; --i) {
        nodes.push(child = node.children[i] = new TreeNode(children[i], i));
        child.parent = node;
      }
    }
  }

  (tree.parent = new TreeNode(null, 0)).children = [tree];
  return tree;
}

// Node-link tree diagram using the Reingold-Tilford "tidy" algorithm
/* harmony default export */ function tree() {
  var separation = tree_defaultSeparation,
      dx = 1,
      dy = 1,
      nodeSize = null;

  function tree(root) {
    var t = treeRoot(root);

    // Compute the layout using Buchheim et al.’s algorithm.
    t.eachAfter(firstWalk), t.parent.m = -t.z;
    t.eachBefore(secondWalk);

    // If a fixed node size is specified, scale x and y.
    if (nodeSize) root.eachBefore(sizeNode);

    // If a fixed tree size is specified, scale x and y based on the extent.
    // Compute the left-most, right-most, and depth-most nodes for extents.
    else {
      var left = root,
          right = root,
          bottom = root;
      root.eachBefore(function(node) {
        if (node.x < left.x) left = node;
        if (node.x > right.x) right = node;
        if (node.depth > bottom.depth) bottom = node;
      });
      var s = left === right ? 1 : separation(left, right) / 2,
          tx = s - left.x,
          kx = dx / (right.x + s + tx),
          ky = dy / (bottom.depth || 1);
      root.eachBefore(function(node) {
        node.x = (node.x + tx) * kx;
        node.y = node.depth * ky;
      });
    }

    return root;
  }

  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is
  // applied recursively to the children of v, as well as the function
  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the
  // node v is placed to the midpoint of its outermost children.
  function firstWalk(v) {
    var children = v.children,
        siblings = v.parent.children,
        w = v.i ? siblings[v.i - 1] : null;
    if (children) {
      executeShifts(v);
      var midpoint = (children[0].z + children[children.length - 1].z) / 2;
      if (w) {
        v.z = w.z + separation(v._, w._);
        v.m = v.z - midpoint;
      } else {
        v.z = midpoint;
      }
    } else if (w) {
      v.z = w.z + separation(v._, w._);
    }
    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);
  }

  // Computes all real x-coordinates by summing up the modifiers recursively.
  function secondWalk(v) {
    v._.x = v.z + v.parent.m;
    v.m += v.parent.m;
  }

  // The core of the algorithm. Here, a new subtree is combined with the
  // previous subtrees. Threads are used to traverse the inside and outside
  // contours of the left and right subtree up to the highest common level. The
  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the
  // superscript o means outside and i means inside, the subscript - means left
  // subtree and + means right subtree. For summing up the modifiers along the
  // contour, we use respective variables si+, si-, so-, and so+. Whenever two
  // nodes of the inside contours conflict, we compute the left one of the
  // greatest uncommon ancestors using the function ANCESTOR and call MOVE
  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.
  // Finally, we add a new thread (if necessary).
  function apportion(v, w, ancestor) {
    if (w) {
      var vip = v,
          vop = v,
          vim = w,
          vom = vip.parent.children[0],
          sip = vip.m,
          sop = vop.m,
          sim = vim.m,
          som = vom.m,
          shift;
      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {
        vom = nextLeft(vom);
        vop = nextRight(vop);
        vop.a = v;
        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);
        if (shift > 0) {
          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);
          sip += shift;
          sop += shift;
        }
        sim += vim.m;
        sip += vip.m;
        som += vom.m;
        sop += vop.m;
      }
      if (vim && !nextRight(vop)) {
        vop.t = vim;
        vop.m += sim - sop;
      }
      if (vip && !nextLeft(vom)) {
        vom.t = vip;
        vom.m += sip - som;
        ancestor = v;
      }
    }
    return ancestor;
  }

  function sizeNode(node) {
    node.x *= dx;
    node.y = node.depth * dy;
  }

  tree.separation = function(x) {
    return arguments.length ? (separation = x, tree) : separation;
  };

  tree.size = function(x) {
    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);
  };

  tree.nodeSize = function(x) {
    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);
  };

  return tree;
}

;// CONCATENATED MODULE: ./node_modules/d3-hierarchy/src/treemap/slice.js
/* harmony default export */ function treemap_slice(parent, x0, y0, x1, y1) {
  var nodes = parent.children,
      node,
      i = -1,
      n = nodes.length,
      k = parent.value && (y1 - y0) / parent.value;

  while (++i < n) {
    node = nodes[i], node.x0 = x0, node.x1 = x1;
    node.y0 = y0, node.y1 = y0 += node.value * k;
  }
}

;// CONCATENATED MODULE: ./node_modules/d3-hierarchy/src/treemap/squarify.js



var phi = (1 + Math.sqrt(5)) / 2;

function squarifyRatio(ratio, parent, x0, y0, x1, y1) {
  var rows = [],
      nodes = parent.children,
      row,
      nodeValue,
      i0 = 0,
      i1 = 0,
      n = nodes.length,
      dx, dy,
      value = parent.value,
      sumValue,
      minValue,
      maxValue,
      newRatio,
      minRatio,
      alpha,
      beta;

  while (i0 < n) {
    dx = x1 - x0, dy = y1 - y0;

    // Find the next non-empty node.
    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);
    minValue = maxValue = sumValue;
    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);
    beta = sumValue * sumValue * alpha;
    minRatio = Math.max(maxValue / beta, beta / minValue);

    // Keep adding nodes while the aspect ratio maintains or improves.
    for (; i1 < n; ++i1) {
      sumValue += nodeValue = nodes[i1].value;
      if (nodeValue < minValue) minValue = nodeValue;
      if (nodeValue > maxValue) maxValue = nodeValue;
      beta = sumValue * sumValue * alpha;
      newRatio = Math.max(maxValue / beta, beta / minValue);
      if (newRatio > minRatio) { sumValue -= nodeValue; break; }
      minRatio = newRatio;
    }

    // Position and record the row orientation.
    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});
    if (row.dice) dice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);
    else treemap_slice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);
    value -= sumValue, i0 = i1;
  }

  return rows;
}

/* harmony default export */ const squarify = ((function custom(ratio) {

  function squarify(parent, x0, y0, x1, y1) {
    squarifyRatio(ratio, parent, x0, y0, x1, y1);
  }

  squarify.ratio = function(x) {
    return custom((x = +x) > 1 ? x : 1);
  };

  return squarify;
})(phi));

;// CONCATENATED MODULE: ./node_modules/d3-hierarchy/src/treemap/index.js





/* harmony default export */ function treemap() {
  var tile = squarify,
      round = false,
      dx = 1,
      dy = 1,
      paddingStack = [0],
      paddingInner = constantZero,
      paddingTop = constantZero,
      paddingRight = constantZero,
      paddingBottom = constantZero,
      paddingLeft = constantZero;

  function treemap(root) {
    root.x0 =
    root.y0 = 0;
    root.x1 = dx;
    root.y1 = dy;
    root.eachBefore(positionNode);
    paddingStack = [0];
    if (round) root.eachBefore(treemap_round);
    return root;
  }

  function positionNode(node) {
    var p = paddingStack[node.depth],
        x0 = node.x0 + p,
        y0 = node.y0 + p,
        x1 = node.x1 - p,
        y1 = node.y1 - p;
    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;
    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;
    node.x0 = x0;
    node.y0 = y0;
    node.x1 = x1;
    node.y1 = y1;
    if (node.children) {
      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;
      x0 += paddingLeft(node) - p;
      y0 += paddingTop(node) - p;
      x1 -= paddingRight(node) - p;
      y1 -= paddingBottom(node) - p;
      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;
      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;
      tile(node, x0, y0, x1, y1);
    }
  }

  treemap.round = function(x) {
    return arguments.length ? (round = !!x, treemap) : round;
  };

  treemap.size = function(x) {
    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];
  };

  treemap.tile = function(x) {
    return arguments.length ? (tile = required(x), treemap) : tile;
  };

  treemap.padding = function(x) {
    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();
  };

  treemap.paddingInner = function(x) {
    return arguments.length ? (paddingInner = typeof x === "function" ? x : d3_hierarchy_src_constant(+x), treemap) : paddingInner;
  };

  treemap.paddingOuter = function(x) {
    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();
  };

  treemap.paddingTop = function(x) {
    return arguments.length ? (paddingTop = typeof x === "function" ? x : d3_hierarchy_src_constant(+x), treemap) : paddingTop;
  };

  treemap.paddingRight = function(x) {
    return arguments.length ? (paddingRight = typeof x === "function" ? x : d3_hierarchy_src_constant(+x), treemap) : paddingRight;
  };

  treemap.paddingBottom = function(x) {
    return arguments.length ? (paddingBottom = typeof x === "function" ? x : d3_hierarchy_src_constant(+x), treemap) : paddingBottom;
  };

  treemap.paddingLeft = function(x) {
    return arguments.length ? (paddingLeft = typeof x === "function" ? x : d3_hierarchy_src_constant(+x), treemap) : paddingLeft;
  };

  return treemap;
}

;// CONCATENATED MODULE: ./node_modules/d3-hierarchy/src/treemap/binary.js
/* harmony default export */ function binary(parent, x0, y0, x1, y1) {
  var nodes = parent.children,
      i, n = nodes.length,
      sum, sums = new Array(n + 1);

  for (sums[0] = sum = i = 0; i < n; ++i) {
    sums[i + 1] = sum += nodes[i].value;
  }

  partition(0, n, parent.value, x0, y0, x1, y1);

  function partition(i, j, value, x0, y0, x1, y1) {
    if (i >= j - 1) {
      var node = nodes[i];
      node.x0 = x0, node.y0 = y0;
      node.x1 = x1, node.y1 = y1;
      return;
    }

    var valueOffset = sums[i],
        valueTarget = (value / 2) + valueOffset,
        k = i + 1,
        hi = j - 1;

    while (k < hi) {
      var mid = k + hi >>> 1;
      if (sums[mid] < valueTarget) k = mid + 1;
      else hi = mid;
    }

    if ((valueTarget - sums[k - 1]) < (sums[k] - valueTarget) && i + 1 < k) --k;

    var valueLeft = sums[k] - valueOffset,
        valueRight = value - valueLeft;

    if ((x1 - x0) > (y1 - y0)) {
      var xk = value ? (x0 * valueRight + x1 * valueLeft) / value : x1;
      partition(i, k, valueLeft, x0, y0, xk, y1);
      partition(k, j, valueRight, xk, y0, x1, y1);
    } else {
      var yk = value ? (y0 * valueRight + y1 * valueLeft) / value : y1;
      partition(i, k, valueLeft, x0, y0, x1, yk);
      partition(k, j, valueRight, x0, yk, x1, y1);
    }
  }
}

;// CONCATENATED MODULE: ./node_modules/d3-hierarchy/src/treemap/sliceDice.js



/* harmony default export */ function sliceDice(parent, x0, y0, x1, y1) {
  (parent.depth & 1 ? treemap_slice : dice)(parent, x0, y0, x1, y1);
}

;// CONCATENATED MODULE: ./node_modules/d3-hierarchy/src/treemap/resquarify.js




/* harmony default export */ const resquarify = ((function custom(ratio) {

  function resquarify(parent, x0, y0, x1, y1) {
    if ((rows = parent._squarify) && (rows.ratio === ratio)) {
      var rows,
          row,
          nodes,
          i,
          j = -1,
          n,
          m = rows.length,
          value = parent.value;

      while (++j < m) {
        row = rows[j], nodes = row.children;
        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;
        if (row.dice) dice(row, x0, y0, x1, value ? y0 += (y1 - y0) * row.value / value : y1);
        else treemap_slice(row, x0, y0, value ? x0 += (x1 - x0) * row.value / value : x1, y1);
        value -= row.value;
      }
    } else {
      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);
      rows.ratio = ratio;
    }
  }

  resquarify.ratio = function(x) {
    return custom((x = +x) > 1 ? x : 1);
  };

  return resquarify;
})(phi));

;// CONCATENATED MODULE: ./node_modules/d3-hierarchy/src/index.js
















;// CONCATENATED MODULE: ./node_modules/d3-interpolate/src/discrete.js
/* harmony default export */ function discrete(range) {
  var n = range.length;
  return function(t) {
    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];
  };
}

;// CONCATENATED MODULE: ./node_modules/d3-interpolate/src/hue.js


/* harmony default export */ function src_hue(a, b) {
  var i = hue(+a, +b);
  return function(t) {
    var x = i(t);
    return x - 360 * Math.floor(x / 360);
  };
}

;// CONCATENATED MODULE: ./node_modules/d3-interpolate/src/round.js
/* harmony default export */ function round(a, b) {
  return a = +a, b = +b, function(t) {
    return Math.round(a * (1 - t) + b * t);
  };
}

;// CONCATENATED MODULE: ./node_modules/d3-interpolate/src/zoom.js
var zoom_epsilon2 = 1e-12;

function cosh(x) {
  return ((x = Math.exp(x)) + 1 / x) / 2;
}

function sinh(x) {
  return ((x = Math.exp(x)) - 1 / x) / 2;
}

function tanh(x) {
  return ((x = Math.exp(2 * x)) - 1) / (x + 1);
}

/* harmony default export */ const src_zoom = ((function zoomRho(rho, rho2, rho4) {

  // p0 = [ux0, uy0, w0]
  // p1 = [ux1, uy1, w1]
  function zoom(p0, p1) {
    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],
        ux1 = p1[0], uy1 = p1[1], w1 = p1[2],
        dx = ux1 - ux0,
        dy = uy1 - uy0,
        d2 = dx * dx + dy * dy,
        i,
        S;

    // Special case for u0 ≅ u1.
    if (d2 < zoom_epsilon2) {
      S = Math.log(w1 / w0) / rho;
      i = function(t) {
        return [
          ux0 + t * dx,
          uy0 + t * dy,
          w0 * Math.exp(rho * t * S)
        ];
      }
    }

    // General case.
    else {
      var d1 = Math.sqrt(d2),
          b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),
          b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),
          r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),
          r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);
      S = (r1 - r0) / rho;
      i = function(t) {
        var s = t * S,
            coshr0 = cosh(r0),
            u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));
        return [
          ux0 + u * dx,
          uy0 + u * dy,
          w0 * coshr0 / cosh(rho * s + r0)
        ];
      }
    }

    i.duration = S * 1000 * rho / Math.SQRT2;

    return i;
  }

  zoom.rho = function(_) {
    var _1 = Math.max(1e-3, +_), _2 = _1 * _1, _4 = _2 * _2;
    return zoomRho(_1, _2, _4);
  };

  return zoom;
})(Math.SQRT2, 2, 4));

;// CONCATENATED MODULE: ./node_modules/d3-interpolate/src/hsl.js



function hsl_hsl(hue) {
  return function(start, end) {
    var h = hue((start = hsl(start)).h, (end = hsl(end)).h),
        s = nogamma(start.s, end.s),
        l = nogamma(start.l, end.l),
        opacity = nogamma(start.opacity, end.opacity);
    return function(t) {
      start.h = h(t);
      start.s = s(t);
      start.l = l(t);
      start.opacity = opacity(t);
      return start + "";
    };
  }
}

/* harmony default export */ const src_hsl = (hsl_hsl(hue));
var hslLong = hsl_hsl(nogamma);

;// CONCATENATED MODULE: ./node_modules/d3-interpolate/src/lab.js



function lab_lab(start, end) {
  var l = nogamma((start = lab(start)).l, (end = lab(end)).l),
      a = nogamma(start.a, end.a),
      b = nogamma(start.b, end.b),
      opacity = nogamma(start.opacity, end.opacity);
  return function(t) {
    start.l = l(t);
    start.a = a(t);
    start.b = b(t);
    start.opacity = opacity(t);
    return start + "";
  };
}

;// CONCATENATED MODULE: ./node_modules/d3-interpolate/src/hcl.js



function hcl_hcl(hue) {
  return function(start, end) {
    var h = hue((start = hcl(start)).h, (end = hcl(end)).h),
        c = nogamma(start.c, end.c),
        l = nogamma(start.l, end.l),
        opacity = nogamma(start.opacity, end.opacity);
    return function(t) {
      start.h = h(t);
      start.c = c(t);
      start.l = l(t);
      start.opacity = opacity(t);
      return start + "";
    };
  }
}

/* harmony default export */ const src_hcl = (hcl_hcl(hue));
var hclLong = hcl_hcl(nogamma);

;// CONCATENATED MODULE: ./node_modules/d3-interpolate/src/cubehelix.js



function cubehelix(hue) {
  return (function cubehelixGamma(y) {
    y = +y;

    function cubehelix(start, end) {
      var h = hue((start = cubehelix_cubehelix(start)).h, (end = cubehelix_cubehelix(end)).h),
          s = nogamma(start.s, end.s),
          l = nogamma(start.l, end.l),
          opacity = nogamma(start.opacity, end.opacity);
      return function(t) {
        start.h = h(t);
        start.s = s(t);
        start.l = l(Math.pow(t, y));
        start.opacity = opacity(t);
        return start + "";
      };
    }

    cubehelix.gamma = cubehelixGamma;

    return cubehelix;
  })(1);
}

/* harmony default export */ const src_cubehelix = (cubehelix(hue));
var cubehelixLong = cubehelix(nogamma);

;// CONCATENATED MODULE: ./node_modules/d3-interpolate/src/piecewise.js


function piecewise(interpolate, values) {
  if (values === undefined) values = interpolate, interpolate = value;
  var i = 0, n = values.length - 1, v = values[0], I = new Array(n < 0 ? 0 : n);
  while (i < n) I[i] = interpolate(v, v = values[++i]);
  return function(t) {
    var i = Math.max(0, Math.min(n - 1, Math.floor(t *= n)));
    return I[i](t - i);
  };
}

;// CONCATENATED MODULE: ./node_modules/d3-interpolate/src/quantize.js
/* harmony default export */ function quantize(interpolator, n) {
  var samples = new Array(n);
  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));
  return samples;
}

;// CONCATENATED MODULE: ./node_modules/d3-interpolate/src/index.js






















;// CONCATENATED MODULE: ./node_modules/d3-path/src/index.js


;// CONCATENATED MODULE: ./node_modules/d3-polygon/src/area.js
/* harmony default export */ function d3_polygon_src_area(polygon) {
  var i = -1,
      n = polygon.length,
      a,
      b = polygon[n - 1],
      area = 0;

  while (++i < n) {
    a = b;
    b = polygon[i];
    area += a[1] * b[0] - a[0] * b[1];
  }

  return area / 2;
}

;// CONCATENATED MODULE: ./node_modules/d3-polygon/src/centroid.js
/* harmony default export */ function src_centroid(polygon) {
  var i = -1,
      n = polygon.length,
      x = 0,
      y = 0,
      a,
      b = polygon[n - 1],
      c,
      k = 0;

  while (++i < n) {
    a = b;
    b = polygon[i];
    k += c = a[0] * b[1] - b[0] * a[1];
    x += (a[0] + b[0]) * c;
    y += (a[1] + b[1]) * c;
  }

  return k *= 3, [x / k, y / k];
}

;// CONCATENATED MODULE: ./node_modules/d3-polygon/src/cross.js
// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of
// the 3D cross product in a quadrant I Cartesian coordinate system (+x is
// right, +y is up). Returns a positive value if ABC is counter-clockwise,
// negative if clockwise, and zero if the points are collinear.
/* harmony default export */ function src_cross(a, b, c) {
  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);
}

;// CONCATENATED MODULE: ./node_modules/d3-polygon/src/hull.js


function lexicographicOrder(a, b) {
  return a[0] - b[0] || a[1] - b[1];
}

// Computes the upper convex hull per the monotone chain algorithm.
// Assumes points.length >= 3, is sorted by x, unique in y.
// Returns an array of indices into points in left-to-right order.
function computeUpperHullIndexes(points) {
  const n = points.length,
      indexes = [0, 1];
  let size = 2, i;

  for (i = 2; i < n; ++i) {
    while (size > 1 && src_cross(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;
    indexes[size++] = i;
  }

  return indexes.slice(0, size); // remove popped points
}

/* harmony default export */ function hull(points) {
  if ((n = points.length) < 3) return null;

  var i,
      n,
      sortedPoints = new Array(n),
      flippedPoints = new Array(n);

  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];
  sortedPoints.sort(lexicographicOrder);
  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];

  var upperIndexes = computeUpperHullIndexes(sortedPoints),
      lowerIndexes = computeUpperHullIndexes(flippedPoints);

  // Construct the hull polygon, removing possible duplicate endpoints.
  var skipLeft = lowerIndexes[0] === upperIndexes[0],
      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],
      hull = [];

  // Add upper hull in right-to-l order.
  // Then add lower hull in left-to-right order.
  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);
  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);

  return hull;
}

;// CONCATENATED MODULE: ./node_modules/d3-polygon/src/contains.js
/* harmony default export */ function d3_polygon_src_contains(polygon, point) {
  var n = polygon.length,
      p = polygon[n - 1],
      x = point[0], y = point[1],
      x0 = p[0], y0 = p[1],
      x1, y1,
      inside = false;

  for (var i = 0; i < n; ++i) {
    p = polygon[i], x1 = p[0], y1 = p[1];
    if (((y1 > y) !== (y0 > y)) && (x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)) inside = !inside;
    x0 = x1, y0 = y1;
  }

  return inside;
}

;// CONCATENATED MODULE: ./node_modules/d3-polygon/src/length.js
/* harmony default export */ function d3_polygon_src_length(polygon) {
  var i = -1,
      n = polygon.length,
      b = polygon[n - 1],
      xa,
      ya,
      xb = b[0],
      yb = b[1],
      perimeter = 0;

  while (++i < n) {
    xa = xb;
    ya = yb;
    b = polygon[i];
    xb = b[0];
    yb = b[1];
    xa -= xb;
    ya -= yb;
    perimeter += Math.hypot(xa, ya);
  }

  return perimeter;
}

;// CONCATENATED MODULE: ./node_modules/d3-polygon/src/index.js






;// CONCATENATED MODULE: ./node_modules/d3-quadtree/src/index.js


;// CONCATENATED MODULE: ./node_modules/d3-random/src/defaultSource.js
/* harmony default export */ const src_defaultSource = (Math.random);

;// CONCATENATED MODULE: ./node_modules/d3-random/src/uniform.js


/* harmony default export */ const uniform = ((function sourceRandomUniform(source) {
  function randomUniform(min, max) {
    min = min == null ? 0 : +min;
    max = max == null ? 1 : +max;
    if (arguments.length === 1) max = min, min = 0;
    else max -= min;
    return function() {
      return source() * max + min;
    };
  }

  randomUniform.source = sourceRandomUniform;

  return randomUniform;
})(src_defaultSource));

;// CONCATENATED MODULE: ./node_modules/d3-random/src/int.js


/* harmony default export */ const src_int = ((function sourceRandomInt(source) {
  function randomInt(min, max) {
    if (arguments.length < 2) max = min, min = 0;
    min = Math.floor(min);
    max = Math.floor(max) - min;
    return function() {
      return Math.floor(source() * max + min);
    };
  }

  randomInt.source = sourceRandomInt;

  return randomInt;
})(src_defaultSource));

;// CONCATENATED MODULE: ./node_modules/d3-random/src/normal.js


/* harmony default export */ const normal = ((function sourceRandomNormal(source) {
  function randomNormal(mu, sigma) {
    var x, r;
    mu = mu == null ? 0 : +mu;
    sigma = sigma == null ? 1 : +sigma;
    return function() {
      var y;

      // If available, use the second previously-generated uniform random.
      if (x != null) y = x, x = null;

      // Otherwise, generate a new x and y.
      else do {
        x = source() * 2 - 1;
        y = source() * 2 - 1;
        r = x * x + y * y;
      } while (!r || r > 1);

      return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);
    };
  }

  randomNormal.source = sourceRandomNormal;

  return randomNormal;
})(src_defaultSource));

;// CONCATENATED MODULE: ./node_modules/d3-random/src/logNormal.js



/* harmony default export */ const logNormal = ((function sourceRandomLogNormal(source) {
  var N = normal.source(source);

  function randomLogNormal() {
    var randomNormal = N.apply(this, arguments);
    return function() {
      return Math.exp(randomNormal());
    };
  }

  randomLogNormal.source = sourceRandomLogNormal;

  return randomLogNormal;
})(src_defaultSource));

;// CONCATENATED MODULE: ./node_modules/d3-random/src/irwinHall.js


/* harmony default export */ const irwinHall = ((function sourceRandomIrwinHall(source) {
  function randomIrwinHall(n) {
    if ((n = +n) <= 0) return () => 0;
    return function() {
      for (var sum = 0, i = n; i > 1; --i) sum += source();
      return sum + i * source();
    };
  }

  randomIrwinHall.source = sourceRandomIrwinHall;

  return randomIrwinHall;
})(src_defaultSource));

;// CONCATENATED MODULE: ./node_modules/d3-random/src/bates.js



/* harmony default export */ const bates = ((function sourceRandomBates(source) {
  var I = irwinHall.source(source);

  function randomBates(n) {
    // use limiting distribution at n === 0
    if ((n = +n) === 0) return source;
    var randomIrwinHall = I(n);
    return function() {
      return randomIrwinHall() / n;
    };
  }

  randomBates.source = sourceRandomBates;

  return randomBates;
})(src_defaultSource));

;// CONCATENATED MODULE: ./node_modules/d3-random/src/exponential.js


/* harmony default export */ const src_exponential = ((function sourceRandomExponential(source) {
  function randomExponential(lambda) {
    return function() {
      return -Math.log1p(-source()) / lambda;
    };
  }

  randomExponential.source = sourceRandomExponential;

  return randomExponential;
})(src_defaultSource));

;// CONCATENATED MODULE: ./node_modules/d3-random/src/pareto.js


/* harmony default export */ const pareto = ((function sourceRandomPareto(source) {
  function randomPareto(alpha) {
    if ((alpha = +alpha) < 0) throw new RangeError("invalid alpha");
    alpha = 1 / -alpha;
    return function() {
      return Math.pow(1 - source(), alpha);
    };
  }

  randomPareto.source = sourceRandomPareto;

  return randomPareto;
})(src_defaultSource));

;// CONCATENATED MODULE: ./node_modules/d3-random/src/bernoulli.js


/* harmony default export */ const bernoulli = ((function sourceRandomBernoulli(source) {
  function randomBernoulli(p) {
    if ((p = +p) < 0 || p > 1) throw new RangeError("invalid p");
    return function() {
      return Math.floor(source() + p);
    };
  }

  randomBernoulli.source = sourceRandomBernoulli;

  return randomBernoulli;
})(src_defaultSource));

;// CONCATENATED MODULE: ./node_modules/d3-random/src/geometric.js


/* harmony default export */ const geometric = ((function sourceRandomGeometric(source) {
  function randomGeometric(p) {
    if ((p = +p) < 0 || p > 1) throw new RangeError("invalid p");
    if (p === 0) return () => Infinity;
    if (p === 1) return () => 1;
    p = Math.log1p(-p);
    return function() {
      return 1 + Math.floor(Math.log1p(-source()) / p);
    };
  }

  randomGeometric.source = sourceRandomGeometric;

  return randomGeometric;
})(src_defaultSource));

;// CONCATENATED MODULE: ./node_modules/d3-random/src/gamma.js



/* harmony default export */ const src_gamma = ((function sourceRandomGamma(source) {
  var randomNormal = normal.source(source)();

  function randomGamma(k, theta) {
    if ((k = +k) < 0) throw new RangeError("invalid k");
    // degenerate distribution if k === 0
    if (k === 0) return () => 0;
    theta = theta == null ? 1 : +theta;
    // exponential distribution if k === 1
    if (k === 1) return () => -Math.log1p(-source()) * theta;

    var d = (k < 1 ? k + 1 : k) - 1 / 3,
        c = 1 / (3 * Math.sqrt(d)),
        multiplier = k < 1 ? () => Math.pow(source(), 1 / k) : () => 1;
    return function() {
      do {
        do {
          var x = randomNormal(),
              v = 1 + c * x;
        } while (v <= 0);
        v *= v * v;
        var u = 1 - source();
      } while (u >= 1 - 0.0331 * x * x * x * x && Math.log(u) >= 0.5 * x * x + d * (1 - v + Math.log(v)));
      return d * v * multiplier() * theta;
    };
  }

  randomGamma.source = sourceRandomGamma;

  return randomGamma;
})(src_defaultSource));

;// CONCATENATED MODULE: ./node_modules/d3-random/src/beta.js



/* harmony default export */ const beta = ((function sourceRandomBeta(source) {
  var G = src_gamma.source(source);

  function randomBeta(alpha, beta) {
    var X = G(alpha),
        Y = G(beta);
    return function() {
      var x = X();
      return x === 0 ? 0 : x / (x + Y());
    };
  }

  randomBeta.source = sourceRandomBeta;

  return randomBeta;
})(src_defaultSource));

;// CONCATENATED MODULE: ./node_modules/d3-random/src/binomial.js




/* harmony default export */ const binomial = ((function sourceRandomBinomial(source) {
  var G = geometric.source(source),
      B = beta.source(source);

  function randomBinomial(n, p) {
    n = +n;
    if ((p = +p) >= 1) return () => n;
    if (p <= 0) return () => 0;
    return function() {
      var acc = 0, nn = n, pp = p;
      while (nn * pp > 16 && nn * (1 - pp) > 16) {
        var i = Math.floor((nn + 1) * pp),
            y = B(i, nn - i + 1)();
        if (y <= pp) {
          acc += i;
          nn -= i;
          pp = (pp - y) / (1 - y);
        } else {
          nn = i - 1;
          pp /= y;
        }
      }
      var sign = pp < 0.5,
          pFinal = sign ? pp : 1 - pp,
          g = G(pFinal);
      for (var s = g(), k = 0; s <= nn; ++k) s += g();
      return acc + (sign ? k : nn - k);
    };
  }

  randomBinomial.source = sourceRandomBinomial;

  return randomBinomial;
})(src_defaultSource));

;// CONCATENATED MODULE: ./node_modules/d3-random/src/weibull.js


/* harmony default export */ const weibull = ((function sourceRandomWeibull(source) {
  function randomWeibull(k, a, b) {
    var outerFunc;
    if ((k = +k) === 0) {
      outerFunc = x => -Math.log(x);
    } else {
      k = 1 / k;
      outerFunc = x => Math.pow(x, k);
    }
    a = a == null ? 0 : +a;
    b = b == null ? 1 : +b;
    return function() {
      return a + b * outerFunc(-Math.log1p(-source()));
    };
  }

  randomWeibull.source = sourceRandomWeibull;

  return randomWeibull;
})(src_defaultSource));

;// CONCATENATED MODULE: ./node_modules/d3-random/src/cauchy.js


/* harmony default export */ const cauchy = ((function sourceRandomCauchy(source) {
  function randomCauchy(a, b) {
    a = a == null ? 0 : +a;
    b = b == null ? 1 : +b;
    return function() {
      return a + b * Math.tan(Math.PI * source());
    };
  }

  randomCauchy.source = sourceRandomCauchy;

  return randomCauchy;
})(src_defaultSource));

;// CONCATENATED MODULE: ./node_modules/d3-random/src/logistic.js


/* harmony default export */ const logistic = ((function sourceRandomLogistic(source) {
  function randomLogistic(a, b) {
    a = a == null ? 0 : +a;
    b = b == null ? 1 : +b;
    return function() {
      var u = source();
      return a + b * Math.log(u / (1 - u));
    };
  }

  randomLogistic.source = sourceRandomLogistic;

  return randomLogistic;
})(src_defaultSource));

;// CONCATENATED MODULE: ./node_modules/d3-random/src/poisson.js




/* harmony default export */ const poisson = ((function sourceRandomPoisson(source) {
  var G = src_gamma.source(source),
      B = binomial.source(source);

  function randomPoisson(lambda) {
    return function() {
      var acc = 0, l = lambda;
      while (l > 16) {
        var n = Math.floor(0.875 * l),
            t = G(n)();
        if (t > l) return acc + B(n - 1, l / t)();
        acc += n;
        l -= t;
      }
      for (var s = -Math.log1p(-source()), k = 0; s <= l; ++k) s -= Math.log1p(-source());
      return acc + k;
    };
  }

  randomPoisson.source = sourceRandomPoisson;

  return randomPoisson;
})(src_defaultSource));

;// CONCATENATED MODULE: ./node_modules/d3-random/src/lcg.js
// https://en.wikipedia.org/wiki/Linear_congruential_generator#Parameters_in_common_use
const mul = 0x19660D;
const inc = 0x3C6EF35F;
const eps = 1 / 0x100000000;

function lcg_lcg(seed = Math.random()) {
  let state = (0 <= seed && seed < 1 ? seed / eps : Math.abs(seed)) | 0;
  return () => (state = mul * state + inc | 0, eps * (state >>> 0));
}

;// CONCATENATED MODULE: ./node_modules/d3-random/src/index.js



















;// CONCATENATED MODULE: ./node_modules/d3-scale/src/init.js
function initRange(domain, range) {
  switch (arguments.length) {
    case 0: break;
    case 1: this.range(domain); break;
    default: this.range(range).domain(domain); break;
  }
  return this;
}

function initInterpolator(domain, interpolator) {
  switch (arguments.length) {
    case 0: break;
    case 1: {
      if (typeof domain === "function") this.interpolator(domain);
      else this.range(domain);
      break;
    }
    default: {
      this.domain(domain);
      if (typeof interpolator === "function") this.interpolator(interpolator);
      else this.range(interpolator);
      break;
    }
  }
  return this;
}

;// CONCATENATED MODULE: ./node_modules/d3-scale/src/ordinal.js



const implicit = Symbol("implicit");

function ordinal() {
  var index = new InternMap(),
      domain = [],
      range = [],
      unknown = implicit;

  function scale(d) {
    let i = index.get(d);
    if (i === undefined) {
      if (unknown !== implicit) return unknown;
      index.set(d, i = domain.push(d) - 1);
    }
    return range[i % range.length];
  }

  scale.domain = function(_) {
    if (!arguments.length) return domain.slice();
    domain = [], index = new InternMap();
    for (const value of _) {
      if (index.has(value)) continue;
      index.set(value, domain.push(value) - 1);
    }
    return scale;
  };

  scale.range = function(_) {
    return arguments.length ? (range = Array.from(_), scale) : range.slice();
  };

  scale.unknown = function(_) {
    return arguments.length ? (unknown = _, scale) : unknown;
  };

  scale.copy = function() {
    return ordinal(domain, range).unknown(unknown);
  };

  initRange.apply(scale, arguments);

  return scale;
}

;// CONCATENATED MODULE: ./node_modules/d3-scale/src/band.js




function band() {
  var scale = ordinal().unknown(undefined),
      domain = scale.domain,
      ordinalRange = scale.range,
      r0 = 0,
      r1 = 1,
      step,
      bandwidth,
      round = false,
      paddingInner = 0,
      paddingOuter = 0,
      align = 0.5;

  delete scale.unknown;

  function rescale() {
    var n = domain().length,
        reverse = r1 < r0,
        start = reverse ? r1 : r0,
        stop = reverse ? r0 : r1;
    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);
    if (round) step = Math.floor(step);
    start += (stop - start - step * (n - paddingInner)) * align;
    bandwidth = step * (1 - paddingInner);
    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);
    var values = range(n).map(function(i) { return start + step * i; });
    return ordinalRange(reverse ? values.reverse() : values);
  }

  scale.domain = function(_) {
    return arguments.length ? (domain(_), rescale()) : domain();
  };

  scale.range = function(_) {
    return arguments.length ? ([r0, r1] = _, r0 = +r0, r1 = +r1, rescale()) : [r0, r1];
  };

  scale.rangeRound = function(_) {
    return [r0, r1] = _, r0 = +r0, r1 = +r1, round = true, rescale();
  };

  scale.bandwidth = function() {
    return bandwidth;
  };

  scale.step = function() {
    return step;
  };

  scale.round = function(_) {
    return arguments.length ? (round = !!_, rescale()) : round;
  };

  scale.padding = function(_) {
    return arguments.length ? (paddingInner = Math.min(1, paddingOuter = +_), rescale()) : paddingInner;
  };

  scale.paddingInner = function(_) {
    return arguments.length ? (paddingInner = Math.min(1, _), rescale()) : paddingInner;
  };

  scale.paddingOuter = function(_) {
    return arguments.length ? (paddingOuter = +_, rescale()) : paddingOuter;
  };

  scale.align = function(_) {
    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;
  };

  scale.copy = function() {
    return band(domain(), [r0, r1])
        .round(round)
        .paddingInner(paddingInner)
        .paddingOuter(paddingOuter)
        .align(align);
  };

  return initRange.apply(rescale(), arguments);
}

function pointish(scale) {
  var copy = scale.copy;

  scale.padding = scale.paddingOuter;
  delete scale.paddingInner;
  delete scale.paddingOuter;

  scale.copy = function() {
    return pointish(copy());
  };

  return scale;
}

function point() {
  return pointish(band.apply(null, arguments).paddingInner(1));
}

;// CONCATENATED MODULE: ./node_modules/d3-scale/src/constant.js
function constants(x) {
  return function() {
    return x;
  };
}

;// CONCATENATED MODULE: ./node_modules/d3-scale/src/number.js
function number_number(x) {
  return +x;
}

;// CONCATENATED MODULE: ./node_modules/d3-scale/src/continuous.js





var unit = [0, 1];

function continuous_identity(x) {
  return x;
}

function continuous_normalize(a, b) {
  return (b -= (a = +a))
      ? function(x) { return (x - a) / b; }
      : constants(isNaN(b) ? NaN : 0.5);
}

function clamper(a, b) {
  var t;
  if (a > b) t = a, a = b, b = t;
  return function(x) { return Math.max(a, Math.min(b, x)); };
}

// normalize(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].
// interpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding range value x in [a,b].
function bimap(domain, range, interpolate) {
  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];
  if (d1 < d0) d0 = continuous_normalize(d1, d0), r0 = interpolate(r1, r0);
  else d0 = continuous_normalize(d0, d1), r0 = interpolate(r0, r1);
  return function(x) { return r0(d0(x)); };
}

function polymap(domain, range, interpolate) {
  var j = Math.min(domain.length, range.length) - 1,
      d = new Array(j),
      r = new Array(j),
      i = -1;

  // Reverse descending domains.
  if (domain[j] < domain[0]) {
    domain = domain.slice().reverse();
    range = range.slice().reverse();
  }

  while (++i < j) {
    d[i] = continuous_normalize(domain[i], domain[i + 1]);
    r[i] = interpolate(range[i], range[i + 1]);
  }

  return function(x) {
    var i = bisect(domain, x, 1, j) - 1;
    return r[i](d[i](x));
  };
}

function copy(source, target) {
  return target
      .domain(source.domain())
      .range(source.range())
      .interpolate(source.interpolate())
      .clamp(source.clamp())
      .unknown(source.unknown());
}

function continuous_transformer() {
  var domain = unit,
      range = unit,
      interpolate = value,
      transform,
      untransform,
      unknown,
      clamp = continuous_identity,
      piecewise,
      output,
      input;

  function rescale() {
    var n = Math.min(domain.length, range.length);
    if (clamp !== continuous_identity) clamp = clamper(domain[0], domain[n - 1]);
    piecewise = n > 2 ? polymap : bimap;
    output = input = null;
    return scale;
  }

  function scale(x) {
    return x == null || isNaN(x = +x) ? unknown : (output || (output = piecewise(domain.map(transform), range, interpolate)))(transform(clamp(x)));
  }

  scale.invert = function(y) {
    return clamp(untransform((input || (input = piecewise(range, domain.map(transform), src_number)))(y)));
  };

  scale.domain = function(_) {
    return arguments.length ? (domain = Array.from(_, number_number), rescale()) : domain.slice();
  };

  scale.range = function(_) {
    return arguments.length ? (range = Array.from(_), rescale()) : range.slice();
  };

  scale.rangeRound = function(_) {
    return range = Array.from(_), interpolate = round, rescale();
  };

  scale.clamp = function(_) {
    return arguments.length ? (clamp = _ ? true : continuous_identity, rescale()) : clamp !== continuous_identity;
  };

  scale.interpolate = function(_) {
    return arguments.length ? (interpolate = _, rescale()) : interpolate;
  };

  scale.unknown = function(_) {
    return arguments.length ? (unknown = _, scale) : unknown;
  };

  return function(t, u) {
    transform = t, untransform = u;
    return rescale();
  };
}

function continuous() {
  return continuous_transformer()(continuous_identity, continuous_identity);
}

;// CONCATENATED MODULE: ./node_modules/d3-scale/src/tickFormat.js



function tickFormat(start, stop, count, specifier) {
  var step = tickStep(start, stop, count),
      precision;
  specifier = formatSpecifier(specifier == null ? ",f" : specifier);
  switch (specifier.type) {
    case "s": {
      var value = Math.max(Math.abs(start), Math.abs(stop));
      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;
      return formatPrefix(specifier, value);
    }
    case "":
    case "e":
    case "g":
    case "p":
    case "r": {
      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === "e");
      break;
    }
    case "f":
    case "%": {
      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === "%") * 2;
      break;
    }
  }
  return format(specifier);
}

;// CONCATENATED MODULE: ./node_modules/d3-scale/src/linear.js





function linearish(scale) {
  var domain = scale.domain;

  scale.ticks = function(count) {
    var d = domain();
    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);
  };

  scale.tickFormat = function(count, specifier) {
    var d = domain();
    return tickFormat(d[0], d[d.length - 1], count == null ? 10 : count, specifier);
  };

  scale.nice = function(count) {
    if (count == null) count = 10;

    var d = domain();
    var i0 = 0;
    var i1 = d.length - 1;
    var start = d[i0];
    var stop = d[i1];
    var prestep;
    var step;
    var maxIter = 10;

    if (stop < start) {
      step = start, start = stop, stop = step;
      step = i0, i0 = i1, i1 = step;
    }
    
    while (maxIter-- > 0) {
      step = tickIncrement(start, stop, count);
      if (step === prestep) {
        d[i0] = start
        d[i1] = stop
        return domain(d);
      } else if (step > 0) {
        start = Math.floor(start / step) * step;
        stop = Math.ceil(stop / step) * step;
      } else if (step < 0) {
        start = Math.ceil(start * step) / step;
        stop = Math.floor(stop * step) / step;
      } else {
        break;
      }
      prestep = step;
    }

    return scale;
  };

  return scale;
}

function src_linear_linear() {
  var scale = continuous();

  scale.copy = function() {
    return copy(scale, src_linear_linear());
  };

  initRange.apply(scale, arguments);

  return linearish(scale);
}

;// CONCATENATED MODULE: ./node_modules/d3-scale/src/identity.js



function identity_identity(domain) {
  var unknown;

  function scale(x) {
    return x == null || isNaN(x = +x) ? unknown : x;
  }

  scale.invert = scale;

  scale.domain = scale.range = function(_) {
    return arguments.length ? (domain = Array.from(_, number_number), scale) : domain.slice();
  };

  scale.unknown = function(_) {
    return arguments.length ? (unknown = _, scale) : unknown;
  };

  scale.copy = function() {
    return identity_identity(domain).unknown(unknown);
  };

  domain = arguments.length ? Array.from(domain, number_number) : [0, 1];

  return linearish(scale);
}

;// CONCATENATED MODULE: ./node_modules/d3-scale/src/nice.js
function nice_nice(domain, interval) {
  domain = domain.slice();

  var i0 = 0,
      i1 = domain.length - 1,
      x0 = domain[i0],
      x1 = domain[i1],
      t;

  if (x1 < x0) {
    t = i0, i0 = i1, i1 = t;
    t = x0, x0 = x1, x1 = t;
  }

  domain[i0] = interval.floor(x0);
  domain[i1] = interval.ceil(x1);
  return domain;
}

;// CONCATENATED MODULE: ./node_modules/d3-scale/src/log.js






function transformLog(x) {
  return Math.log(x);
}

function transformExp(x) {
  return Math.exp(x);
}

function transformLogn(x) {
  return -Math.log(-x);
}

function transformExpn(x) {
  return -Math.exp(-x);
}

function pow10(x) {
  return isFinite(x) ? +("1e" + x) : x < 0 ? 0 : x;
}

function powp(base) {
  return base === 10 ? pow10
      : base === Math.E ? Math.exp
      : x => Math.pow(base, x);
}

function logp(base) {
  return base === Math.E ? Math.log
      : base === 10 && Math.log10
      || base === 2 && Math.log2
      || (base = Math.log(base), x => Math.log(x) / base);
}

function reflect(f) {
  return (x, k) => -f(-x, k);
}

function loggish(transform) {
  const scale = transform(transformLog, transformExp);
  const domain = scale.domain;
  let base = 10;
  let logs;
  let pows;

  function rescale() {
    logs = logp(base), pows = powp(base);
    if (domain()[0] < 0) {
      logs = reflect(logs), pows = reflect(pows);
      transform(transformLogn, transformExpn);
    } else {
      transform(transformLog, transformExp);
    }
    return scale;
  }

  scale.base = function(_) {
    return arguments.length ? (base = +_, rescale()) : base;
  };

  scale.domain = function(_) {
    return arguments.length ? (domain(_), rescale()) : domain();
  };

  scale.ticks = count => {
    const d = domain();
    let u = d[0];
    let v = d[d.length - 1];
    const r = v < u;

    if (r) ([u, v] = [v, u]);

    let i = logs(u);
    let j = logs(v);
    let k;
    let t;
    const n = count == null ? 10 : +count;
    let z = [];

    if (!(base % 1) && j - i < n) {
      i = Math.floor(i), j = Math.ceil(j);
      if (u > 0) for (; i <= j; ++i) {
        for (k = 1; k < base; ++k) {
          t = i < 0 ? k / pows(-i) : k * pows(i);
          if (t < u) continue;
          if (t > v) break;
          z.push(t);
        }
      } else for (; i <= j; ++i) {
        for (k = base - 1; k >= 1; --k) {
          t = i > 0 ? k / pows(-i) : k * pows(i);
          if (t < u) continue;
          if (t > v) break;
          z.push(t);
        }
      }
      if (z.length * 2 < n) z = ticks(u, v, n);
    } else {
      z = ticks(i, j, Math.min(j - i, n)).map(pows);
    }
    return r ? z.reverse() : z;
  };

  scale.tickFormat = (count, specifier) => {
    if (count == null) count = 10;
    if (specifier == null) specifier = base === 10 ? "s" : ",";
    if (typeof specifier !== "function") {
      if (!(base % 1) && (specifier = formatSpecifier(specifier)).precision == null) specifier.trim = true;
      specifier = format(specifier);
    }
    if (count === Infinity) return specifier;
    const k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?
    return d => {
      let i = d / pows(Math.round(logs(d)));
      if (i * base < base - 0.5) i *= base;
      return i <= k ? specifier(d) : "";
    };
  };

  scale.nice = () => {
    return domain(nice_nice(domain(), {
      floor: x => pows(Math.floor(logs(x))),
      ceil: x => pows(Math.ceil(logs(x)))
    }));
  };

  return scale;
}

function log_log() {
  const scale = loggish(continuous_transformer()).domain([1, 10]);
  scale.copy = () => copy(scale, log_log()).base(scale.base());
  initRange.apply(scale, arguments);
  return scale;
}

;// CONCATENATED MODULE: ./node_modules/d3-scale/src/symlog.js




function transformSymlog(c) {
  return function(x) {
    return Math.sign(x) * Math.log1p(Math.abs(x / c));
  };
}

function transformSymexp(c) {
  return function(x) {
    return Math.sign(x) * Math.expm1(Math.abs(x)) * c;
  };
}

function symlogish(transform) {
  var c = 1, scale = transform(transformSymlog(c), transformSymexp(c));

  scale.constant = function(_) {
    return arguments.length ? transform(transformSymlog(c = +_), transformSymexp(c)) : c;
  };

  return linearish(scale);
}

function symlog() {
  var scale = symlogish(continuous_transformer());

  scale.copy = function() {
    return copy(scale, symlog()).constant(scale.constant());
  };

  return initRange.apply(scale, arguments);
}

;// CONCATENATED MODULE: ./node_modules/d3-scale/src/pow.js




function transformPow(exponent) {
  return function(x) {
    return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);
  };
}

function transformSqrt(x) {
  return x < 0 ? -Math.sqrt(-x) : Math.sqrt(x);
}

function transformSquare(x) {
  return x < 0 ? -x * x : x * x;
}

function powish(transform) {
  var scale = transform(continuous_identity, continuous_identity),
      exponent = 1;

  function rescale() {
    return exponent === 1 ? transform(continuous_identity, continuous_identity)
        : exponent === 0.5 ? transform(transformSqrt, transformSquare)
        : transform(transformPow(exponent), transformPow(1 / exponent));
  }

  scale.exponent = function(_) {
    return arguments.length ? (exponent = +_, rescale()) : exponent;
  };

  return linearish(scale);
}

function pow_pow() {
  var scale = powish(continuous_transformer());

  scale.copy = function() {
    return copy(scale, pow_pow()).exponent(scale.exponent());
  };

  initRange.apply(scale, arguments);

  return scale;
}

function pow_sqrt() {
  return pow_pow.apply(null, arguments).exponent(0.5);
}

;// CONCATENATED MODULE: ./node_modules/d3-scale/src/radial.js





function square(x) {
  return Math.sign(x) * x * x;
}

function unsquare(x) {
  return Math.sign(x) * Math.sqrt(Math.abs(x));
}

function radial_radial() {
  var squared = continuous(),
      range = [0, 1],
      round = false,
      unknown;

  function scale(x) {
    var y = unsquare(squared(x));
    return isNaN(y) ? unknown : round ? Math.round(y) : y;
  }

  scale.invert = function(y) {
    return squared.invert(square(y));
  };

  scale.domain = function(_) {
    return arguments.length ? (squared.domain(_), scale) : squared.domain();
  };

  scale.range = function(_) {
    return arguments.length ? (squared.range((range = Array.from(_, number_number)).map(square)), scale) : range.slice();
  };

  scale.rangeRound = function(_) {
    return scale.range(_).round(true);
  };

  scale.round = function(_) {
    return arguments.length ? (round = !!_, scale) : round;
  };

  scale.clamp = function(_) {
    return arguments.length ? (squared.clamp(_), scale) : squared.clamp();
  };

  scale.unknown = function(_) {
    return arguments.length ? (unknown = _, scale) : unknown;
  };

  scale.copy = function() {
    return radial_radial(squared.domain(), range)
        .round(round)
        .clamp(squared.clamp())
        .unknown(unknown);
  };

  initRange.apply(scale, arguments);

  return linearish(scale);
}

;// CONCATENATED MODULE: ./node_modules/d3-scale/src/quantile.js



function quantile_quantile() {
  var domain = [],
      range = [],
      thresholds = [],
      unknown;

  function rescale() {
    var i = 0, n = Math.max(1, range.length);
    thresholds = new Array(n - 1);
    while (++i < n) thresholds[i - 1] = quantileSorted(domain, i / n);
    return scale;
  }

  function scale(x) {
    return x == null || isNaN(x = +x) ? unknown : range[bisect(thresholds, x)];
  }

  scale.invertExtent = function(y) {
    var i = range.indexOf(y);
    return i < 0 ? [NaN, NaN] : [
      i > 0 ? thresholds[i - 1] : domain[0],
      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]
    ];
  };

  scale.domain = function(_) {
    if (!arguments.length) return domain.slice();
    domain = [];
    for (let d of _) if (d != null && !isNaN(d = +d)) domain.push(d);
    domain.sort(ascending);
    return rescale();
  };

  scale.range = function(_) {
    return arguments.length ? (range = Array.from(_), rescale()) : range.slice();
  };

  scale.unknown = function(_) {
    return arguments.length ? (unknown = _, scale) : unknown;
  };

  scale.quantiles = function() {
    return thresholds.slice();
  };

  scale.copy = function() {
    return quantile_quantile()
        .domain(domain)
        .range(range)
        .unknown(unknown);
  };

  return initRange.apply(scale, arguments);
}

;// CONCATENATED MODULE: ./node_modules/d3-scale/src/quantize.js




function quantize_quantize() {
  var x0 = 0,
      x1 = 1,
      n = 1,
      domain = [0.5],
      range = [0, 1],
      unknown;

  function scale(x) {
    return x != null && x <= x ? range[bisect(domain, x, 0, n)] : unknown;
  }

  function rescale() {
    var i = -1;
    domain = new Array(n);
    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);
    return scale;
  }

  scale.domain = function(_) {
    return arguments.length ? ([x0, x1] = _, x0 = +x0, x1 = +x1, rescale()) : [x0, x1];
  };

  scale.range = function(_) {
    return arguments.length ? (n = (range = Array.from(_)).length - 1, rescale()) : range.slice();
  };

  scale.invertExtent = function(y) {
    var i = range.indexOf(y);
    return i < 0 ? [NaN, NaN]
        : i < 1 ? [x0, domain[0]]
        : i >= n ? [domain[n - 1], x1]
        : [domain[i - 1], domain[i]];
  };

  scale.unknown = function(_) {
    return arguments.length ? (unknown = _, scale) : scale;
  };

  scale.thresholds = function() {
    return domain.slice();
  };

  scale.copy = function() {
    return quantize_quantize()
        .domain([x0, x1])
        .range(range)
        .unknown(unknown);
  };

  return initRange.apply(linearish(scale), arguments);
}

;// CONCATENATED MODULE: ./node_modules/d3-scale/src/threshold.js



function threshold() {
  var domain = [0.5],
      range = [0, 1],
      unknown,
      n = 1;

  function scale(x) {
    return x != null && x <= x ? range[bisect(domain, x, 0, n)] : unknown;
  }

  scale.domain = function(_) {
    return arguments.length ? (domain = Array.from(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();
  };

  scale.range = function(_) {
    return arguments.length ? (range = Array.from(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();
  };

  scale.invertExtent = function(y) {
    var i = range.indexOf(y);
    return [domain[i - 1], domain[i]];
  };

  scale.unknown = function(_) {
    return arguments.length ? (unknown = _, scale) : unknown;
  };

  scale.copy = function() {
    return threshold()
        .domain(domain)
        .range(range)
        .unknown(unknown);
  };

  return initRange.apply(scale, arguments);
}

;// CONCATENATED MODULE: ./node_modules/d3-time/src/duration.js
const durationSecond = 1000;
const durationMinute = durationSecond * 60;
const durationHour = durationMinute * 60;
const durationDay = durationHour * 24;
const durationWeek = durationDay * 7;
const durationMonth = durationDay * 30;
const durationYear = durationDay * 365;

;// CONCATENATED MODULE: ./node_modules/d3-time/src/interval.js
var interval_t0 = new Date,
    interval_t1 = new Date;

function newInterval(floori, offseti, count, field) {

  function interval(date) {
    return floori(date = arguments.length === 0 ? new Date : new Date(+date)), date;
  }

  interval.floor = function(date) {
    return floori(date = new Date(+date)), date;
  };

  interval.ceil = function(date) {
    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;
  };

  interval.round = function(date) {
    var d0 = interval(date),
        d1 = interval.ceil(date);
    return date - d0 < d1 - date ? d0 : d1;
  };

  interval.offset = function(date, step) {
    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;
  };

  interval.range = function(start, stop, step) {
    var range = [], previous;
    start = interval.ceil(start);
    step = step == null ? 1 : Math.floor(step);
    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date
    do range.push(previous = new Date(+start)), offseti(start, step), floori(start);
    while (previous < start && start < stop);
    return range;
  };

  interval.filter = function(test) {
    return newInterval(function(date) {
      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);
    }, function(date, step) {
      if (date >= date) {
        if (step < 0) while (++step <= 0) {
          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty
        } else while (--step >= 0) {
          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty
        }
      }
    });
  };

  if (count) {
    interval.count = function(start, end) {
      interval_t0.setTime(+start), interval_t1.setTime(+end);
      floori(interval_t0), floori(interval_t1);
      return Math.floor(count(interval_t0, interval_t1));
    };

    interval.every = function(step) {
      step = Math.floor(step);
      return !isFinite(step) || !(step > 0) ? null
          : !(step > 1) ? interval
          : interval.filter(field
              ? function(d) { return field(d) % step === 0; }
              : function(d) { return interval.count(0, d) % step === 0; });
    };
  }

  return interval;
}

;// CONCATENATED MODULE: ./node_modules/d3-time/src/millisecond.js


var millisecond = newInterval(function() {
  // noop
}, function(date, step) {
  date.setTime(+date + step);
}, function(start, end) {
  return end - start;
});

// An optimized implementation for this simple case.
millisecond.every = function(k) {
  k = Math.floor(k);
  if (!isFinite(k) || !(k > 0)) return null;
  if (!(k > 1)) return millisecond;
  return newInterval(function(date) {
    date.setTime(Math.floor(date / k) * k);
  }, function(date, step) {
    date.setTime(+date + step * k);
  }, function(start, end) {
    return (end - start) / k;
  });
};

/* harmony default export */ const src_millisecond = (millisecond);
var milliseconds = millisecond.range;

;// CONCATENATED MODULE: ./node_modules/d3-time/src/second.js



var second = newInterval(function(date) {
  date.setTime(date - date.getMilliseconds());
}, function(date, step) {
  date.setTime(+date + step * durationSecond);
}, function(start, end) {
  return (end - start) / durationSecond;
}, function(date) {
  return date.getUTCSeconds();
});

/* harmony default export */ const src_second = (second);
var seconds = second.range;

;// CONCATENATED MODULE: ./node_modules/d3-time/src/minute.js



var minute = newInterval(function(date) {
  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond);
}, function(date, step) {
  date.setTime(+date + step * durationMinute);
}, function(start, end) {
  return (end - start) / durationMinute;
}, function(date) {
  return date.getMinutes();
});

/* harmony default export */ const src_minute = (minute);
var minutes = minute.range;

;// CONCATENATED MODULE: ./node_modules/d3-time/src/hour.js



var hour = newInterval(function(date) {
  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond - date.getMinutes() * durationMinute);
}, function(date, step) {
  date.setTime(+date + step * durationHour);
}, function(start, end) {
  return (end - start) / durationHour;
}, function(date) {
  return date.getHours();
});

/* harmony default export */ const src_hour = (hour);
var hours = hour.range;

;// CONCATENATED MODULE: ./node_modules/d3-time/src/day.js



var day = newInterval(
  date => date.setHours(0, 0, 0, 0),
  (date, step) => date.setDate(date.getDate() + step),
  (start, end) => (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay,
  date => date.getDate() - 1
);

/* harmony default export */ const src_day = (day);
var days = day.range;

;// CONCATENATED MODULE: ./node_modules/d3-time/src/week.js



function weekday(i) {
  return newInterval(function(date) {
    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);
    date.setHours(0, 0, 0, 0);
  }, function(date, step) {
    date.setDate(date.getDate() + step * 7);
  }, function(start, end) {
    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;
  });
}

var sunday = weekday(0);
var monday = weekday(1);
var tuesday = weekday(2);
var wednesday = weekday(3);
var thursday = weekday(4);
var friday = weekday(5);
var saturday = weekday(6);

var sundays = sunday.range;
var mondays = monday.range;
var tuesdays = tuesday.range;
var wednesdays = wednesday.range;
var thursdays = thursday.range;
var fridays = friday.range;
var saturdays = saturday.range;

;// CONCATENATED MODULE: ./node_modules/d3-time/src/month.js


var month = newInterval(function(date) {
  date.setDate(1);
  date.setHours(0, 0, 0, 0);
}, function(date, step) {
  date.setMonth(date.getMonth() + step);
}, function(start, end) {
  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;
}, function(date) {
  return date.getMonth();
});

/* harmony default export */ const src_month = (month);
var months = month.range;

;// CONCATENATED MODULE: ./node_modules/d3-time/src/year.js


var year = newInterval(function(date) {
  date.setMonth(0, 1);
  date.setHours(0, 0, 0, 0);
}, function(date, step) {
  date.setFullYear(date.getFullYear() + step);
}, function(start, end) {
  return end.getFullYear() - start.getFullYear();
}, function(date) {
  return date.getFullYear();
});

// An optimized implementation for this simple case.
year.every = function(k) {
  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {
    date.setFullYear(Math.floor(date.getFullYear() / k) * k);
    date.setMonth(0, 1);
    date.setHours(0, 0, 0, 0);
  }, function(date, step) {
    date.setFullYear(date.getFullYear() + step * k);
  });
};

/* harmony default export */ const src_year = (year);
var years = year.range;

;// CONCATENATED MODULE: ./node_modules/d3-time/src/utcMinute.js



var utcMinute = newInterval(function(date) {
  date.setUTCSeconds(0, 0);
}, function(date, step) {
  date.setTime(+date + step * durationMinute);
}, function(start, end) {
  return (end - start) / durationMinute;
}, function(date) {
  return date.getUTCMinutes();
});

/* harmony default export */ const src_utcMinute = (utcMinute);
var utcMinutes = utcMinute.range;

;// CONCATENATED MODULE: ./node_modules/d3-time/src/utcHour.js



var utcHour = newInterval(function(date) {
  date.setUTCMinutes(0, 0, 0);
}, function(date, step) {
  date.setTime(+date + step * durationHour);
}, function(start, end) {
  return (end - start) / durationHour;
}, function(date) {
  return date.getUTCHours();
});

/* harmony default export */ const src_utcHour = (utcHour);
var utcHours = utcHour.range;

;// CONCATENATED MODULE: ./node_modules/d3-time/src/utcDay.js



var utcDay = newInterval(function(date) {
  date.setUTCHours(0, 0, 0, 0);
}, function(date, step) {
  date.setUTCDate(date.getUTCDate() + step);
}, function(start, end) {
  return (end - start) / durationDay;
}, function(date) {
  return date.getUTCDate() - 1;
});

/* harmony default export */ const src_utcDay = (utcDay);
var utcDays = utcDay.range;

;// CONCATENATED MODULE: ./node_modules/d3-time/src/utcWeek.js



function utcWeekday(i) {
  return newInterval(function(date) {
    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);
    date.setUTCHours(0, 0, 0, 0);
  }, function(date, step) {
    date.setUTCDate(date.getUTCDate() + step * 7);
  }, function(start, end) {
    return (end - start) / durationWeek;
  });
}

var utcSunday = utcWeekday(0);
var utcMonday = utcWeekday(1);
var utcTuesday = utcWeekday(2);
var utcWednesday = utcWeekday(3);
var utcThursday = utcWeekday(4);
var utcFriday = utcWeekday(5);
var utcSaturday = utcWeekday(6);

var utcSundays = utcSunday.range;
var utcMondays = utcMonday.range;
var utcTuesdays = utcTuesday.range;
var utcWednesdays = utcWednesday.range;
var utcThursdays = utcThursday.range;
var utcFridays = utcFriday.range;
var utcSaturdays = utcSaturday.range;

;// CONCATENATED MODULE: ./node_modules/d3-time/src/utcMonth.js


var utcMonth = newInterval(function(date) {
  date.setUTCDate(1);
  date.setUTCHours(0, 0, 0, 0);
}, function(date, step) {
  date.setUTCMonth(date.getUTCMonth() + step);
}, function(start, end) {
  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;
}, function(date) {
  return date.getUTCMonth();
});

/* harmony default export */ const src_utcMonth = (utcMonth);
var utcMonths = utcMonth.range;

;// CONCATENATED MODULE: ./node_modules/d3-time/src/utcYear.js


var utcYear = newInterval(function(date) {
  date.setUTCMonth(0, 1);
  date.setUTCHours(0, 0, 0, 0);
}, function(date, step) {
  date.setUTCFullYear(date.getUTCFullYear() + step);
}, function(start, end) {
  return end.getUTCFullYear() - start.getUTCFullYear();
}, function(date) {
  return date.getUTCFullYear();
});

// An optimized implementation for this simple case.
utcYear.every = function(k) {
  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {
    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);
    date.setUTCMonth(0, 1);
    date.setUTCHours(0, 0, 0, 0);
  }, function(date, step) {
    date.setUTCFullYear(date.getUTCFullYear() + step * k);
  });
};

/* harmony default export */ const src_utcYear = (utcYear);
var utcYears = utcYear.range;

;// CONCATENATED MODULE: ./node_modules/d3-time/src/ticks.js

















function ticker(year, month, week, day, hour, minute) {

  const tickIntervals = [
    [src_second,  1,      durationSecond],
    [src_second,  5,  5 * durationSecond],
    [src_second, 15, 15 * durationSecond],
    [src_second, 30, 30 * durationSecond],
    [minute,  1,      durationMinute],
    [minute,  5,  5 * durationMinute],
    [minute, 15, 15 * durationMinute],
    [minute, 30, 30 * durationMinute],
    [  hour,  1,      durationHour  ],
    [  hour,  3,  3 * durationHour  ],
    [  hour,  6,  6 * durationHour  ],
    [  hour, 12, 12 * durationHour  ],
    [   day,  1,      durationDay   ],
    [   day,  2,  2 * durationDay   ],
    [  week,  1,      durationWeek  ],
    [ month,  1,      durationMonth ],
    [ month,  3,  3 * durationMonth ],
    [  year,  1,      durationYear  ]
  ];

  function ticks(start, stop, count) {
    const reverse = stop < start;
    if (reverse) [start, stop] = [stop, start];
    const interval = count && typeof count.range === "function" ? count : tickInterval(start, stop, count);
    const ticks = interval ? interval.range(start, +stop + 1) : []; // inclusive stop
    return reverse ? ticks.reverse() : ticks;
  }

  function tickInterval(start, stop, count) {
    const target = Math.abs(stop - start) / count;
    const i = bisector(([,, step]) => step).right(tickIntervals, target);
    if (i === tickIntervals.length) return year.every(tickStep(start / durationYear, stop / durationYear, count));
    if (i === 0) return src_millisecond.every(Math.max(tickStep(start, stop, count), 1));
    const [t, step] = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];
    return t.every(step);
  }

  return [ticks, tickInterval];
}

const [utcTicks, utcTickInterval] = ticker(src_utcYear, src_utcMonth, utcSunday, src_utcDay, src_utcHour, src_utcMinute);
const [timeTicks, timeTickInterval] = ticker(src_year, src_month, sunday, src_day, src_hour, src_minute);



;// CONCATENATED MODULE: ./node_modules/d3-time-format/src/locale.js


function localDate(d) {
  if (0 <= d.y && d.y < 100) {
    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);
    date.setFullYear(d.y);
    return date;
  }
  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);
}

function utcDate(d) {
  if (0 <= d.y && d.y < 100) {
    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));
    date.setUTCFullYear(d.y);
    return date;
  }
  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));
}

function newDate(y, m, d) {
  return {y: y, m: m, d: d, H: 0, M: 0, S: 0, L: 0};
}

function formatLocale(locale) {
  var locale_dateTime = locale.dateTime,
      locale_date = locale.date,
      locale_time = locale.time,
      locale_periods = locale.periods,
      locale_weekdays = locale.days,
      locale_shortWeekdays = locale.shortDays,
      locale_months = locale.months,
      locale_shortMonths = locale.shortMonths;

  var periodRe = formatRe(locale_periods),
      periodLookup = formatLookup(locale_periods),
      weekdayRe = formatRe(locale_weekdays),
      weekdayLookup = formatLookup(locale_weekdays),
      shortWeekdayRe = formatRe(locale_shortWeekdays),
      shortWeekdayLookup = formatLookup(locale_shortWeekdays),
      monthRe = formatRe(locale_months),
      monthLookup = formatLookup(locale_months),
      shortMonthRe = formatRe(locale_shortMonths),
      shortMonthLookup = formatLookup(locale_shortMonths);

  var formats = {
    "a": formatShortWeekday,
    "A": formatWeekday,
    "b": formatShortMonth,
    "B": formatMonth,
    "c": null,
    "d": formatDayOfMonth,
    "e": formatDayOfMonth,
    "f": formatMicroseconds,
    "g": formatYearISO,
    "G": formatFullYearISO,
    "H": formatHour24,
    "I": formatHour12,
    "j": formatDayOfYear,
    "L": formatMilliseconds,
    "m": formatMonthNumber,
    "M": formatMinutes,
    "p": formatPeriod,
    "q": formatQuarter,
    "Q": formatUnixTimestamp,
    "s": formatUnixTimestampSeconds,
    "S": formatSeconds,
    "u": formatWeekdayNumberMonday,
    "U": formatWeekNumberSunday,
    "V": formatWeekNumberISO,
    "w": formatWeekdayNumberSunday,
    "W": formatWeekNumberMonday,
    "x": null,
    "X": null,
    "y": locale_formatYear,
    "Y": formatFullYear,
    "Z": formatZone,
    "%": formatLiteralPercent
  };

  var utcFormats = {
    "a": formatUTCShortWeekday,
    "A": formatUTCWeekday,
    "b": formatUTCShortMonth,
    "B": formatUTCMonth,
    "c": null,
    "d": formatUTCDayOfMonth,
    "e": formatUTCDayOfMonth,
    "f": formatUTCMicroseconds,
    "g": formatUTCYearISO,
    "G": formatUTCFullYearISO,
    "H": formatUTCHour24,
    "I": formatUTCHour12,
    "j": formatUTCDayOfYear,
    "L": formatUTCMilliseconds,
    "m": formatUTCMonthNumber,
    "M": formatUTCMinutes,
    "p": formatUTCPeriod,
    "q": formatUTCQuarter,
    "Q": formatUnixTimestamp,
    "s": formatUnixTimestampSeconds,
    "S": formatUTCSeconds,
    "u": formatUTCWeekdayNumberMonday,
    "U": formatUTCWeekNumberSunday,
    "V": formatUTCWeekNumberISO,
    "w": formatUTCWeekdayNumberSunday,
    "W": formatUTCWeekNumberMonday,
    "x": null,
    "X": null,
    "y": formatUTCYear,
    "Y": formatUTCFullYear,
    "Z": formatUTCZone,
    "%": formatLiteralPercent
  };

  var parses = {
    "a": parseShortWeekday,
    "A": parseWeekday,
    "b": parseShortMonth,
    "B": parseMonth,
    "c": parseLocaleDateTime,
    "d": parseDayOfMonth,
    "e": parseDayOfMonth,
    "f": parseMicroseconds,
    "g": parseYear,
    "G": parseFullYear,
    "H": parseHour24,
    "I": parseHour24,
    "j": parseDayOfYear,
    "L": parseMilliseconds,
    "m": parseMonthNumber,
    "M": parseMinutes,
    "p": parsePeriod,
    "q": parseQuarter,
    "Q": parseUnixTimestamp,
    "s": parseUnixTimestampSeconds,
    "S": parseSeconds,
    "u": parseWeekdayNumberMonday,
    "U": parseWeekNumberSunday,
    "V": parseWeekNumberISO,
    "w": parseWeekdayNumberSunday,
    "W": parseWeekNumberMonday,
    "x": parseLocaleDate,
    "X": parseLocaleTime,
    "y": parseYear,
    "Y": parseFullYear,
    "Z": parseZone,
    "%": parseLiteralPercent
  };

  // These recursive directive definitions must be deferred.
  formats.x = newFormat(locale_date, formats);
  formats.X = newFormat(locale_time, formats);
  formats.c = newFormat(locale_dateTime, formats);
  utcFormats.x = newFormat(locale_date, utcFormats);
  utcFormats.X = newFormat(locale_time, utcFormats);
  utcFormats.c = newFormat(locale_dateTime, utcFormats);

  function newFormat(specifier, formats) {
    return function(date) {
      var string = [],
          i = -1,
          j = 0,
          n = specifier.length,
          c,
          pad,
          format;

      if (!(date instanceof Date)) date = new Date(+date);

      while (++i < n) {
        if (specifier.charCodeAt(i) === 37) {
          string.push(specifier.slice(j, i));
          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);
          else pad = c === "e" ? " " : "0";
          if (format = formats[c]) c = format(date, pad);
          string.push(c);
          j = i + 1;
        }
      }

      string.push(specifier.slice(j, i));
      return string.join("");
    };
  }

  function newParse(specifier, Z) {
    return function(string) {
      var d = newDate(1900, undefined, 1),
          i = parseSpecifier(d, specifier, string += "", 0),
          week, day;
      if (i != string.length) return null;

      // If a UNIX timestamp is specified, return it.
      if ("Q" in d) return new Date(d.Q);
      if ("s" in d) return new Date(d.s * 1000 + ("L" in d ? d.L : 0));

      // If this is utcParse, never use the local timezone.
      if (Z && !("Z" in d)) d.Z = 0;

      // The am-pm flag is 0 for AM, and 1 for PM.
      if ("p" in d) d.H = d.H % 12 + d.p * 12;

      // If the month was not specified, inherit from the quarter.
      if (d.m === undefined) d.m = "q" in d ? d.q : 0;

      // Convert day-of-week and week-of-year to day-of-year.
      if ("V" in d) {
        if (d.V < 1 || d.V > 53) return null;
        if (!("w" in d)) d.w = 1;
        if ("Z" in d) {
          week = utcDate(newDate(d.y, 0, 1)), day = week.getUTCDay();
          week = day > 4 || day === 0 ? utcMonday.ceil(week) : utcMonday(week);
          week = src_utcDay.offset(week, (d.V - 1) * 7);
          d.y = week.getUTCFullYear();
          d.m = week.getUTCMonth();
          d.d = week.getUTCDate() + (d.w + 6) % 7;
        } else {
          week = localDate(newDate(d.y, 0, 1)), day = week.getDay();
          week = day > 4 || day === 0 ? monday.ceil(week) : monday(week);
          week = src_day.offset(week, (d.V - 1) * 7);
          d.y = week.getFullYear();
          d.m = week.getMonth();
          d.d = week.getDate() + (d.w + 6) % 7;
        }
      } else if ("W" in d || "U" in d) {
        if (!("w" in d)) d.w = "u" in d ? d.u % 7 : "W" in d ? 1 : 0;
        day = "Z" in d ? utcDate(newDate(d.y, 0, 1)).getUTCDay() : localDate(newDate(d.y, 0, 1)).getDay();
        d.m = 0;
        d.d = "W" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;
      }

      // If a time zone is specified, all fields are interpreted as UTC and then
      // offset according to the specified time zone.
      if ("Z" in d) {
        d.H += d.Z / 100 | 0;
        d.M += d.Z % 100;
        return utcDate(d);
      }

      // Otherwise, all fields are in local time.
      return localDate(d);
    };
  }

  function parseSpecifier(d, specifier, string, j) {
    var i = 0,
        n = specifier.length,
        m = string.length,
        c,
        parse;

    while (i < n) {
      if (j >= m) return -1;
      c = specifier.charCodeAt(i++);
      if (c === 37) {
        c = specifier.charAt(i++);
        parse = parses[c in pads ? specifier.charAt(i++) : c];
        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;
      } else if (c != string.charCodeAt(j++)) {
        return -1;
      }
    }

    return j;
  }

  function parsePeriod(d, string, i) {
    var n = periodRe.exec(string.slice(i));
    return n ? (d.p = periodLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
  }

  function parseShortWeekday(d, string, i) {
    var n = shortWeekdayRe.exec(string.slice(i));
    return n ? (d.w = shortWeekdayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
  }

  function parseWeekday(d, string, i) {
    var n = weekdayRe.exec(string.slice(i));
    return n ? (d.w = weekdayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
  }

  function parseShortMonth(d, string, i) {
    var n = shortMonthRe.exec(string.slice(i));
    return n ? (d.m = shortMonthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
  }

  function parseMonth(d, string, i) {
    var n = monthRe.exec(string.slice(i));
    return n ? (d.m = monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
  }

  function parseLocaleDateTime(d, string, i) {
    return parseSpecifier(d, locale_dateTime, string, i);
  }

  function parseLocaleDate(d, string, i) {
    return parseSpecifier(d, locale_date, string, i);
  }

  function parseLocaleTime(d, string, i) {
    return parseSpecifier(d, locale_time, string, i);
  }

  function formatShortWeekday(d) {
    return locale_shortWeekdays[d.getDay()];
  }

  function formatWeekday(d) {
    return locale_weekdays[d.getDay()];
  }

  function formatShortMonth(d) {
    return locale_shortMonths[d.getMonth()];
  }

  function formatMonth(d) {
    return locale_months[d.getMonth()];
  }

  function formatPeriod(d) {
    return locale_periods[+(d.getHours() >= 12)];
  }

  function formatQuarter(d) {
    return 1 + ~~(d.getMonth() / 3);
  }

  function formatUTCShortWeekday(d) {
    return locale_shortWeekdays[d.getUTCDay()];
  }

  function formatUTCWeekday(d) {
    return locale_weekdays[d.getUTCDay()];
  }

  function formatUTCShortMonth(d) {
    return locale_shortMonths[d.getUTCMonth()];
  }

  function formatUTCMonth(d) {
    return locale_months[d.getUTCMonth()];
  }

  function formatUTCPeriod(d) {
    return locale_periods[+(d.getUTCHours() >= 12)];
  }

  function formatUTCQuarter(d) {
    return 1 + ~~(d.getUTCMonth() / 3);
  }

  return {
    format: function(specifier) {
      var f = newFormat(specifier += "", formats);
      f.toString = function() { return specifier; };
      return f;
    },
    parse: function(specifier) {
      var p = newParse(specifier += "", false);
      p.toString = function() { return specifier; };
      return p;
    },
    utcFormat: function(specifier) {
      var f = newFormat(specifier += "", utcFormats);
      f.toString = function() { return specifier; };
      return f;
    },
    utcParse: function(specifier) {
      var p = newParse(specifier += "", true);
      p.toString = function() { return specifier; };
      return p;
    }
  };
}

var pads = {"-": "", "_": " ", "0": "0"},
    numberRe = /^\s*\d+/, // note: ignores next directive
    percentRe = /^%/,
    requoteRe = /[\\^$*+?|[\]().{}]/g;

function locale_pad(value, fill, width) {
  var sign = value < 0 ? "-" : "",
      string = (sign ? -value : value) + "",
      length = string.length;
  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);
}

function requote(s) {
  return s.replace(requoteRe, "\\$&");
}

function formatRe(names) {
  return new RegExp("^(?:" + names.map(requote).join("|") + ")", "i");
}

function formatLookup(names) {
  return new Map(names.map((name, i) => [name.toLowerCase(), i]));
}

function parseWeekdayNumberSunday(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 1));
  return n ? (d.w = +n[0], i + n[0].length) : -1;
}

function parseWeekdayNumberMonday(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 1));
  return n ? (d.u = +n[0], i + n[0].length) : -1;
}

function parseWeekNumberSunday(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.U = +n[0], i + n[0].length) : -1;
}

function parseWeekNumberISO(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.V = +n[0], i + n[0].length) : -1;
}

function parseWeekNumberMonday(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.W = +n[0], i + n[0].length) : -1;
}

function parseFullYear(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 4));
  return n ? (d.y = +n[0], i + n[0].length) : -1;
}

function parseYear(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;
}

function parseZone(d, string, i) {
  var n = /^(Z)|([+-]\d\d)(?::?(\d\d))?/.exec(string.slice(i, i + 6));
  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || "00")), i + n[0].length) : -1;
}

function parseQuarter(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 1));
  return n ? (d.q = n[0] * 3 - 3, i + n[0].length) : -1;
}

function parseMonthNumber(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;
}

function parseDayOfMonth(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.d = +n[0], i + n[0].length) : -1;
}

function parseDayOfYear(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 3));
  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;
}

function parseHour24(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.H = +n[0], i + n[0].length) : -1;
}

function parseMinutes(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.M = +n[0], i + n[0].length) : -1;
}

function parseSeconds(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.S = +n[0], i + n[0].length) : -1;
}

function parseMilliseconds(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 3));
  return n ? (d.L = +n[0], i + n[0].length) : -1;
}

function parseMicroseconds(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 6));
  return n ? (d.L = Math.floor(n[0] / 1000), i + n[0].length) : -1;
}

function parseLiteralPercent(d, string, i) {
  var n = percentRe.exec(string.slice(i, i + 1));
  return n ? i + n[0].length : -1;
}

function parseUnixTimestamp(d, string, i) {
  var n = numberRe.exec(string.slice(i));
  return n ? (d.Q = +n[0], i + n[0].length) : -1;
}

function parseUnixTimestampSeconds(d, string, i) {
  var n = numberRe.exec(string.slice(i));
  return n ? (d.s = +n[0], i + n[0].length) : -1;
}

function formatDayOfMonth(d, p) {
  return locale_pad(d.getDate(), p, 2);
}

function formatHour24(d, p) {
  return locale_pad(d.getHours(), p, 2);
}

function formatHour12(d, p) {
  return locale_pad(d.getHours() % 12 || 12, p, 2);
}

function formatDayOfYear(d, p) {
  return locale_pad(1 + src_day.count(src_year(d), d), p, 3);
}

function formatMilliseconds(d, p) {
  return locale_pad(d.getMilliseconds(), p, 3);
}

function formatMicroseconds(d, p) {
  return formatMilliseconds(d, p) + "000";
}

function formatMonthNumber(d, p) {
  return locale_pad(d.getMonth() + 1, p, 2);
}

function formatMinutes(d, p) {
  return locale_pad(d.getMinutes(), p, 2);
}

function formatSeconds(d, p) {
  return locale_pad(d.getSeconds(), p, 2);
}

function formatWeekdayNumberMonday(d) {
  var day = d.getDay();
  return day === 0 ? 7 : day;
}

function formatWeekNumberSunday(d, p) {
  return locale_pad(sunday.count(src_year(d) - 1, d), p, 2);
}

function dISO(d) {
  var day = d.getDay();
  return (day >= 4 || day === 0) ? thursday(d) : thursday.ceil(d);
}

function formatWeekNumberISO(d, p) {
  d = dISO(d);
  return locale_pad(thursday.count(src_year(d), d) + (src_year(d).getDay() === 4), p, 2);
}

function formatWeekdayNumberSunday(d) {
  return d.getDay();
}

function formatWeekNumberMonday(d, p) {
  return locale_pad(monday.count(src_year(d) - 1, d), p, 2);
}

function locale_formatYear(d, p) {
  return locale_pad(d.getFullYear() % 100, p, 2);
}

function formatYearISO(d, p) {
  d = dISO(d);
  return locale_pad(d.getFullYear() % 100, p, 2);
}

function formatFullYear(d, p) {
  return locale_pad(d.getFullYear() % 10000, p, 4);
}

function formatFullYearISO(d, p) {
  var day = d.getDay();
  d = (day >= 4 || day === 0) ? thursday(d) : thursday.ceil(d);
  return locale_pad(d.getFullYear() % 10000, p, 4);
}

function formatZone(d) {
  var z = d.getTimezoneOffset();
  return (z > 0 ? "-" : (z *= -1, "+"))
      + locale_pad(z / 60 | 0, "0", 2)
      + locale_pad(z % 60, "0", 2);
}

function formatUTCDayOfMonth(d, p) {
  return locale_pad(d.getUTCDate(), p, 2);
}

function formatUTCHour24(d, p) {
  return locale_pad(d.getUTCHours(), p, 2);
}

function formatUTCHour12(d, p) {
  return locale_pad(d.getUTCHours() % 12 || 12, p, 2);
}

function formatUTCDayOfYear(d, p) {
  return locale_pad(1 + src_utcDay.count(src_utcYear(d), d), p, 3);
}

function formatUTCMilliseconds(d, p) {
  return locale_pad(d.getUTCMilliseconds(), p, 3);
}

function formatUTCMicroseconds(d, p) {
  return formatUTCMilliseconds(d, p) + "000";
}

function formatUTCMonthNumber(d, p) {
  return locale_pad(d.getUTCMonth() + 1, p, 2);
}

function formatUTCMinutes(d, p) {
  return locale_pad(d.getUTCMinutes(), p, 2);
}

function formatUTCSeconds(d, p) {
  return locale_pad(d.getUTCSeconds(), p, 2);
}

function formatUTCWeekdayNumberMonday(d) {
  var dow = d.getUTCDay();
  return dow === 0 ? 7 : dow;
}

function formatUTCWeekNumberSunday(d, p) {
  return locale_pad(utcSunday.count(src_utcYear(d) - 1, d), p, 2);
}

function UTCdISO(d) {
  var day = d.getUTCDay();
  return (day >= 4 || day === 0) ? utcThursday(d) : utcThursday.ceil(d);
}

function formatUTCWeekNumberISO(d, p) {
  d = UTCdISO(d);
  return locale_pad(utcThursday.count(src_utcYear(d), d) + (src_utcYear(d).getUTCDay() === 4), p, 2);
}

function formatUTCWeekdayNumberSunday(d) {
  return d.getUTCDay();
}

function formatUTCWeekNumberMonday(d, p) {
  return locale_pad(utcMonday.count(src_utcYear(d) - 1, d), p, 2);
}

function formatUTCYear(d, p) {
  return locale_pad(d.getUTCFullYear() % 100, p, 2);
}

function formatUTCYearISO(d, p) {
  d = UTCdISO(d);
  return locale_pad(d.getUTCFullYear() % 100, p, 2);
}

function formatUTCFullYear(d, p) {
  return locale_pad(d.getUTCFullYear() % 10000, p, 4);
}

function formatUTCFullYearISO(d, p) {
  var day = d.getUTCDay();
  d = (day >= 4 || day === 0) ? utcThursday(d) : utcThursday.ceil(d);
  return locale_pad(d.getUTCFullYear() % 10000, p, 4);
}

function formatUTCZone() {
  return "+0000";
}

function formatLiteralPercent() {
  return "%";
}

function formatUnixTimestamp(d) {
  return +d;
}

function formatUnixTimestampSeconds(d) {
  return Math.floor(+d / 1000);
}

;// CONCATENATED MODULE: ./node_modules/d3-time-format/src/defaultLocale.js


var src_defaultLocale_locale;
var timeFormat;
var timeParse;
var utcFormat;
var utcParse;

defaultLocale_defaultLocale({
  dateTime: "%x, %X",
  date: "%-m/%-d/%Y",
  time: "%-I:%M:%S %p",
  periods: ["AM", "PM"],
  days: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
  shortDays: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
  months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
  shortMonths: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"]
});

function defaultLocale_defaultLocale(definition) {
  src_defaultLocale_locale = formatLocale(definition);
  timeFormat = src_defaultLocale_locale.format;
  timeParse = src_defaultLocale_locale.parse;
  utcFormat = src_defaultLocale_locale.utcFormat;
  utcParse = src_defaultLocale_locale.utcParse;
  return src_defaultLocale_locale;
}

;// CONCATENATED MODULE: ./node_modules/d3-scale/src/time.js






function time_date(t) {
  return new Date(t);
}

function time_number(t) {
  return t instanceof Date ? +t : +new Date(+t);
}

function calendar(ticks, tickInterval, year, month, week, day, hour, minute, second, format) {
  var scale = continuous(),
      invert = scale.invert,
      domain = scale.domain;

  var formatMillisecond = format(".%L"),
      formatSecond = format(":%S"),
      formatMinute = format("%I:%M"),
      formatHour = format("%I %p"),
      formatDay = format("%a %d"),
      formatWeek = format("%b %d"),
      formatMonth = format("%B"),
      formatYear = format("%Y");

  function tickFormat(date) {
    return (second(date) < date ? formatMillisecond
        : minute(date) < date ? formatSecond
        : hour(date) < date ? formatMinute
        : day(date) < date ? formatHour
        : month(date) < date ? (week(date) < date ? formatDay : formatWeek)
        : year(date) < date ? formatMonth
        : formatYear)(date);
  }

  scale.invert = function(y) {
    return new Date(invert(y));
  };

  scale.domain = function(_) {
    return arguments.length ? domain(Array.from(_, time_number)) : domain().map(time_date);
  };

  scale.ticks = function(interval) {
    var d = domain();
    return ticks(d[0], d[d.length - 1], interval == null ? 10 : interval);
  };

  scale.tickFormat = function(count, specifier) {
    return specifier == null ? tickFormat : format(specifier);
  };

  scale.nice = function(interval) {
    var d = domain();
    if (!interval || typeof interval.range !== "function") interval = tickInterval(d[0], d[d.length - 1], interval == null ? 10 : interval);
    return interval ? domain(nice_nice(d, interval)) : scale;
  };

  scale.copy = function() {
    return copy(scale, calendar(ticks, tickInterval, year, month, week, day, hour, minute, second, format));
  };

  return scale;
}

function time() {
  return initRange.apply(calendar(timeTicks, timeTickInterval, src_year, src_month, sunday, src_day, src_hour, src_minute, src_second, timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]), arguments);
}

;// CONCATENATED MODULE: ./node_modules/d3-scale/src/utcTime.js





function utcTime() {
  return initRange.apply(calendar(utcTicks, utcTickInterval, src_utcYear, src_utcMonth, utcSunday, src_utcDay, src_utcHour, src_utcMinute, src_second, utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]), arguments);
}

;// CONCATENATED MODULE: ./node_modules/d3-scale/src/sequential.js








function sequential_transformer() {
  var x0 = 0,
      x1 = 1,
      t0,
      t1,
      k10,
      transform,
      interpolator = continuous_identity,
      clamp = false,
      unknown;

  function scale(x) {
    return x == null || isNaN(x = +x) ? unknown : interpolator(k10 === 0 ? 0.5 : (x = (transform(x) - t0) * k10, clamp ? Math.max(0, Math.min(1, x)) : x));
  }

  scale.domain = function(_) {
    return arguments.length ? ([x0, x1] = _, t0 = transform(x0 = +x0), t1 = transform(x1 = +x1), k10 = t0 === t1 ? 0 : 1 / (t1 - t0), scale) : [x0, x1];
  };

  scale.clamp = function(_) {
    return arguments.length ? (clamp = !!_, scale) : clamp;
  };

  scale.interpolator = function(_) {
    return arguments.length ? (interpolator = _, scale) : interpolator;
  };

  function range(interpolate) {
    return function(_) {
      var r0, r1;
      return arguments.length ? ([r0, r1] = _, interpolator = interpolate(r0, r1), scale) : [interpolator(0), interpolator(1)];
    };
  }

  scale.range = range(value);

  scale.rangeRound = range(round);

  scale.unknown = function(_) {
    return arguments.length ? (unknown = _, scale) : unknown;
  };

  return function(t) {
    transform = t, t0 = t(x0), t1 = t(x1), k10 = t0 === t1 ? 0 : 1 / (t1 - t0);
    return scale;
  };
}

function sequential_copy(source, target) {
  return target
      .domain(source.domain())
      .interpolator(source.interpolator())
      .clamp(source.clamp())
      .unknown(source.unknown());
}

function sequential() {
  var scale = linearish(sequential_transformer()(continuous_identity));

  scale.copy = function() {
    return sequential_copy(scale, sequential());
  };

  return initInterpolator.apply(scale, arguments);
}

function sequentialLog() {
  var scale = loggish(sequential_transformer()).domain([1, 10]);

  scale.copy = function() {
    return sequential_copy(scale, sequentialLog()).base(scale.base());
  };

  return initInterpolator.apply(scale, arguments);
}

function sequentialSymlog() {
  var scale = symlogish(sequential_transformer());

  scale.copy = function() {
    return sequential_copy(scale, sequentialSymlog()).constant(scale.constant());
  };

  return initInterpolator.apply(scale, arguments);
}

function sequentialPow() {
  var scale = powish(sequential_transformer());

  scale.copy = function() {
    return sequential_copy(scale, sequentialPow()).exponent(scale.exponent());
  };

  return initInterpolator.apply(scale, arguments);
}

function sequentialSqrt() {
  return sequentialPow.apply(null, arguments).exponent(0.5);
}

;// CONCATENATED MODULE: ./node_modules/d3-scale/src/sequentialQuantile.js




function sequentialQuantile() {
  var domain = [],
      interpolator = continuous_identity;

  function scale(x) {
    if (x != null && !isNaN(x = +x)) return interpolator((bisect(domain, x, 1) - 1) / (domain.length - 1));
  }

  scale.domain = function(_) {
    if (!arguments.length) return domain.slice();
    domain = [];
    for (let d of _) if (d != null && !isNaN(d = +d)) domain.push(d);
    domain.sort(ascending);
    return scale;
  };

  scale.interpolator = function(_) {
    return arguments.length ? (interpolator = _, scale) : interpolator;
  };

  scale.range = function() {
    return domain.map((d, i) => interpolator(i / (domain.length - 1)));
  };

  scale.quantiles = function(n) {
    return Array.from({length: n + 1}, (_, i) => quantile(domain, i / n));
  };

  scale.copy = function() {
    return sequentialQuantile(interpolator).domain(domain);
  };

  return initInterpolator.apply(scale, arguments);
}

;// CONCATENATED MODULE: ./node_modules/d3-scale/src/diverging.js









function diverging_transformer() {
  var x0 = 0,
      x1 = 0.5,
      x2 = 1,
      s = 1,
      t0,
      t1,
      t2,
      k10,
      k21,
      interpolator = continuous_identity,
      transform,
      clamp = false,
      unknown;

  function scale(x) {
    return isNaN(x = +x) ? unknown : (x = 0.5 + ((x = +transform(x)) - t1) * (s * x < s * t1 ? k10 : k21), interpolator(clamp ? Math.max(0, Math.min(1, x)) : x));
  }

  scale.domain = function(_) {
    return arguments.length ? ([x0, x1, x2] = _, t0 = transform(x0 = +x0), t1 = transform(x1 = +x1), t2 = transform(x2 = +x2), k10 = t0 === t1 ? 0 : 0.5 / (t1 - t0), k21 = t1 === t2 ? 0 : 0.5 / (t2 - t1), s = t1 < t0 ? -1 : 1, scale) : [x0, x1, x2];
  };

  scale.clamp = function(_) {
    return arguments.length ? (clamp = !!_, scale) : clamp;
  };

  scale.interpolator = function(_) {
    return arguments.length ? (interpolator = _, scale) : interpolator;
  };

  function range(interpolate) {
    return function(_) {
      var r0, r1, r2;
      return arguments.length ? ([r0, r1, r2] = _, interpolator = piecewise(interpolate, [r0, r1, r2]), scale) : [interpolator(0), interpolator(0.5), interpolator(1)];
    };
  }

  scale.range = range(value);

  scale.rangeRound = range(round);

  scale.unknown = function(_) {
    return arguments.length ? (unknown = _, scale) : unknown;
  };

  return function(t) {
    transform = t, t0 = t(x0), t1 = t(x1), t2 = t(x2), k10 = t0 === t1 ? 0 : 0.5 / (t1 - t0), k21 = t1 === t2 ? 0 : 0.5 / (t2 - t1), s = t1 < t0 ? -1 : 1;
    return scale;
  };
}

function diverging() {
  var scale = linearish(diverging_transformer()(continuous_identity));

  scale.copy = function() {
    return sequential_copy(scale, diverging());
  };

  return initInterpolator.apply(scale, arguments);
}

function divergingLog() {
  var scale = loggish(diverging_transformer()).domain([0.1, 1, 10]);

  scale.copy = function() {
    return sequential_copy(scale, divergingLog()).base(scale.base());
  };

  return initInterpolator.apply(scale, arguments);
}

function divergingSymlog() {
  var scale = symlogish(diverging_transformer());

  scale.copy = function() {
    return sequential_copy(scale, divergingSymlog()).constant(scale.constant());
  };

  return initInterpolator.apply(scale, arguments);
}

function divergingPow() {
  var scale = powish(diverging_transformer());

  scale.copy = function() {
    return sequential_copy(scale, divergingPow()).exponent(scale.exponent());
  };

  return initInterpolator.apply(scale, arguments);
}

function divergingSqrt() {
  return divergingPow.apply(null, arguments).exponent(0.5);
}

;// CONCATENATED MODULE: ./node_modules/d3-scale/src/index.js


































;// CONCATENATED MODULE: ./node_modules/d3-scale-chromatic/src/colors.js
/* harmony default export */ function colors(specifier) {
  var n = specifier.length / 6 | 0, colors = new Array(n), i = 0;
  while (i < n) colors[i] = "#" + specifier.slice(i * 6, ++i * 6);
  return colors;
}

;// CONCATENATED MODULE: ./node_modules/d3-scale-chromatic/src/categorical/category10.js


/* harmony default export */ const category10 = (colors("1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf"));

;// CONCATENATED MODULE: ./node_modules/d3-scale-chromatic/src/categorical/Accent.js


/* harmony default export */ const Accent = (colors("7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666"));

;// CONCATENATED MODULE: ./node_modules/d3-scale-chromatic/src/categorical/Dark2.js


/* harmony default export */ const Dark2 = (colors("1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666"));

;// CONCATENATED MODULE: ./node_modules/d3-scale-chromatic/src/categorical/Paired.js


/* harmony default export */ const Paired = (colors("a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928"));

;// CONCATENATED MODULE: ./node_modules/d3-scale-chromatic/src/categorical/Pastel1.js


/* harmony default export */ const Pastel1 = (colors("fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2"));

;// CONCATENATED MODULE: ./node_modules/d3-scale-chromatic/src/categorical/Pastel2.js


/* harmony default export */ const Pastel2 = (colors("b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc"));

;// CONCATENATED MODULE: ./node_modules/d3-scale-chromatic/src/categorical/Set1.js


/* harmony default export */ const Set1 = (colors("e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999"));

;// CONCATENATED MODULE: ./node_modules/d3-scale-chromatic/src/categorical/Set2.js


/* harmony default export */ const Set2 = (colors("66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3"));

;// CONCATENATED MODULE: ./node_modules/d3-scale-chromatic/src/categorical/Set3.js


/* harmony default export */ const Set3 = (colors("8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f"));

;// CONCATENATED MODULE: ./node_modules/d3-scale-chromatic/src/categorical/Tableau10.js


/* harmony default export */ const Tableau10 = (colors("4e79a7f28e2ce1575976b7b259a14fedc949af7aa1ff9da79c755fbab0ab"));

;// CONCATENATED MODULE: ./node_modules/d3-scale-chromatic/src/ramp.js


/* harmony default export */ const ramp = (scheme => rgbBasis(scheme[scheme.length - 1]));

;// CONCATENATED MODULE: ./node_modules/d3-scale-chromatic/src/diverging/BrBG.js



var scheme = new Array(3).concat(
  "d8b365f5f5f55ab4ac",
  "a6611adfc27d80cdc1018571",
  "a6611adfc27df5f5f580cdc1018571",
  "8c510ad8b365f6e8c3c7eae55ab4ac01665e",
  "8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e",
  "8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e",
  "8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e",
  "5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30",
  "5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30"
).map(colors);

/* harmony default export */ const BrBG = (ramp(scheme));

;// CONCATENATED MODULE: ./node_modules/d3-scale-chromatic/src/diverging/PRGn.js



var PRGn_scheme = new Array(3).concat(
  "af8dc3f7f7f77fbf7b",
  "7b3294c2a5cfa6dba0008837",
  "7b3294c2a5cff7f7f7a6dba0008837",
  "762a83af8dc3e7d4e8d9f0d37fbf7b1b7837",
  "762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837",
  "762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837",
  "762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837",
  "40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b",
  "40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b"
).map(colors);

/* harmony default export */ const PRGn = (ramp(PRGn_scheme));

;// CONCATENATED MODULE: ./node_modules/d3-scale-chromatic/src/diverging/PiYG.js



var PiYG_scheme = new Array(3).concat(
  "e9a3c9f7f7f7a1d76a",
  "d01c8bf1b6dab8e1864dac26",
  "d01c8bf1b6daf7f7f7b8e1864dac26",
  "c51b7de9a3c9fde0efe6f5d0a1d76a4d9221",
  "c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221",
  "c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221",
  "c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221",
  "8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419",
  "8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419"
).map(colors);

/* harmony default export */ const PiYG = (ramp(PiYG_scheme));

;// CONCATENATED MODULE: ./node_modules/d3-scale-chromatic/src/diverging/PuOr.js



var PuOr_scheme = new Array(3).concat(
  "998ec3f7f7f7f1a340",
  "5e3c99b2abd2fdb863e66101",
  "5e3c99b2abd2f7f7f7fdb863e66101",
  "542788998ec3d8daebfee0b6f1a340b35806",
  "542788998ec3d8daebf7f7f7fee0b6f1a340b35806",
  "5427888073acb2abd2d8daebfee0b6fdb863e08214b35806",
  "5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806",
  "2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08",
  "2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08"
).map(colors);

/* harmony default export */ const PuOr = (ramp(PuOr_scheme));

;// CONCATENATED MODULE: ./node_modules/d3-scale-chromatic/src/diverging/RdBu.js



var RdBu_scheme = new Array(3).concat(
  "ef8a62f7f7f767a9cf",
  "ca0020f4a58292c5de0571b0",
  "ca0020f4a582f7f7f792c5de0571b0",
  "b2182bef8a62fddbc7d1e5f067a9cf2166ac",
  "b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac",
  "b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac",
  "b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac",
  "67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061",
  "67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061"
).map(colors);

/* harmony default export */ const RdBu = (ramp(RdBu_scheme));

;// CONCATENATED MODULE: ./node_modules/d3-scale-chromatic/src/diverging/RdGy.js



var RdGy_scheme = new Array(3).concat(
  "ef8a62ffffff999999",
  "ca0020f4a582bababa404040",
  "ca0020f4a582ffffffbababa404040",
  "b2182bef8a62fddbc7e0e0e09999994d4d4d",
  "b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d",
  "b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d",
  "b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d",
  "67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a",
  "67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a"
).map(colors);

/* harmony default export */ const RdGy = (ramp(RdGy_scheme));

;// CONCATENATED MODULE: ./node_modules/d3-scale-chromatic/src/diverging/RdYlBu.js



var RdYlBu_scheme = new Array(3).concat(
  "fc8d59ffffbf91bfdb",
  "d7191cfdae61abd9e92c7bb6",
  "d7191cfdae61ffffbfabd9e92c7bb6",
  "d73027fc8d59fee090e0f3f891bfdb4575b4",
  "d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4",
  "d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4",
  "d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4",
  "a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695",
  "a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695"
).map(colors);

/* harmony default export */ const RdYlBu = (ramp(RdYlBu_scheme));

;// CONCATENATED MODULE: ./node_modules/d3-scale-chromatic/src/diverging/RdYlGn.js



var RdYlGn_scheme = new Array(3).concat(
  "fc8d59ffffbf91cf60",
  "d7191cfdae61a6d96a1a9641",
  "d7191cfdae61ffffbfa6d96a1a9641",
  "d73027fc8d59fee08bd9ef8b91cf601a9850",
  "d73027fc8d59fee08bffffbfd9ef8b91cf601a9850",
  "d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850",
  "d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850",
  "a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837",
  "a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837"
).map(colors);

/* harmony default export */ const RdYlGn = (ramp(RdYlGn_scheme));

;// CONCATENATED MODULE: ./node_modules/d3-scale-chromatic/src/diverging/Spectral.js



var Spectral_scheme = new Array(3).concat(
  "fc8d59ffffbf99d594",
  "d7191cfdae61abdda42b83ba",
  "d7191cfdae61ffffbfabdda42b83ba",
  "d53e4ffc8d59fee08be6f59899d5943288bd",
  "d53e4ffc8d59fee08bffffbfe6f59899d5943288bd",
  "d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd",
  "d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd",
  "9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2",
  "9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2"
).map(colors);

/* harmony default export */ const Spectral = (ramp(Spectral_scheme));

;// CONCATENATED MODULE: ./node_modules/d3-scale-chromatic/src/sequential-multi/BuGn.js



var BuGn_scheme = new Array(3).concat(
  "e5f5f999d8c92ca25f",
  "edf8fbb2e2e266c2a4238b45",
  "edf8fbb2e2e266c2a42ca25f006d2c",
  "edf8fbccece699d8c966c2a42ca25f006d2c",
  "edf8fbccece699d8c966c2a441ae76238b45005824",
  "f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824",
  "f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b"
).map(colors);

/* harmony default export */ const BuGn = (ramp(BuGn_scheme));

;// CONCATENATED MODULE: ./node_modules/d3-scale-chromatic/src/sequential-multi/BuPu.js



var BuPu_scheme = new Array(3).concat(
  "e0ecf49ebcda8856a7",
  "edf8fbb3cde38c96c688419d",
  "edf8fbb3cde38c96c68856a7810f7c",
  "edf8fbbfd3e69ebcda8c96c68856a7810f7c",
  "edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b",
  "f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b",
  "f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b"
).map(colors);

/* harmony default export */ const BuPu = (ramp(BuPu_scheme));

;// CONCATENATED MODULE: ./node_modules/d3-scale-chromatic/src/sequential-multi/GnBu.js



var GnBu_scheme = new Array(3).concat(
  "e0f3dba8ddb543a2ca",
  "f0f9e8bae4bc7bccc42b8cbe",
  "f0f9e8bae4bc7bccc443a2ca0868ac",
  "f0f9e8ccebc5a8ddb57bccc443a2ca0868ac",
  "f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e",
  "f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e",
  "f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081"
).map(colors);

/* harmony default export */ const GnBu = (ramp(GnBu_scheme));

;// CONCATENATED MODULE: ./node_modules/d3-scale-chromatic/src/sequential-multi/OrRd.js



var OrRd_scheme = new Array(3).concat(
  "fee8c8fdbb84e34a33",
  "fef0d9fdcc8afc8d59d7301f",
  "fef0d9fdcc8afc8d59e34a33b30000",
  "fef0d9fdd49efdbb84fc8d59e34a33b30000",
  "fef0d9fdd49efdbb84fc8d59ef6548d7301f990000",
  "fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000",
  "fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000"
).map(colors);

/* harmony default export */ const OrRd = (ramp(OrRd_scheme));

;// CONCATENATED MODULE: ./node_modules/d3-scale-chromatic/src/sequential-multi/PuBuGn.js



var PuBuGn_scheme = new Array(3).concat(
  "ece2f0a6bddb1c9099",
  "f6eff7bdc9e167a9cf02818a",
  "f6eff7bdc9e167a9cf1c9099016c59",
  "f6eff7d0d1e6a6bddb67a9cf1c9099016c59",
  "f6eff7d0d1e6a6bddb67a9cf3690c002818a016450",
  "fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450",
  "fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636"
).map(colors);

/* harmony default export */ const PuBuGn = (ramp(PuBuGn_scheme));

;// CONCATENATED MODULE: ./node_modules/d3-scale-chromatic/src/sequential-multi/PuBu.js



var PuBu_scheme = new Array(3).concat(
  "ece7f2a6bddb2b8cbe",
  "f1eef6bdc9e174a9cf0570b0",
  "f1eef6bdc9e174a9cf2b8cbe045a8d",
  "f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d",
  "f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b",
  "fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b",
  "fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858"
).map(colors);

/* harmony default export */ const PuBu = (ramp(PuBu_scheme));

;// CONCATENATED MODULE: ./node_modules/d3-scale-chromatic/src/sequential-multi/PuRd.js



var PuRd_scheme = new Array(3).concat(
  "e7e1efc994c7dd1c77",
  "f1eef6d7b5d8df65b0ce1256",
  "f1eef6d7b5d8df65b0dd1c77980043",
  "f1eef6d4b9dac994c7df65b0dd1c77980043",
  "f1eef6d4b9dac994c7df65b0e7298ace125691003f",
  "f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f",
  "f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f"
).map(colors);

/* harmony default export */ const PuRd = (ramp(PuRd_scheme));

;// CONCATENATED MODULE: ./node_modules/d3-scale-chromatic/src/sequential-multi/RdPu.js



var RdPu_scheme = new Array(3).concat(
  "fde0ddfa9fb5c51b8a",
  "feebe2fbb4b9f768a1ae017e",
  "feebe2fbb4b9f768a1c51b8a7a0177",
  "feebe2fcc5c0fa9fb5f768a1c51b8a7a0177",
  "feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177",
  "fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177",
  "fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a"
).map(colors);

/* harmony default export */ const RdPu = (ramp(RdPu_scheme));

;// CONCATENATED MODULE: ./node_modules/d3-scale-chromatic/src/sequential-multi/YlGnBu.js



var YlGnBu_scheme = new Array(3).concat(
  "edf8b17fcdbb2c7fb8",
  "ffffcca1dab441b6c4225ea8",
  "ffffcca1dab441b6c42c7fb8253494",
  "ffffccc7e9b47fcdbb41b6c42c7fb8253494",
  "ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84",
  "ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84",
  "ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58"
).map(colors);

/* harmony default export */ const YlGnBu = (ramp(YlGnBu_scheme));

;// CONCATENATED MODULE: ./node_modules/d3-scale-chromatic/src/sequential-multi/YlGn.js



var YlGn_scheme = new Array(3).concat(
  "f7fcb9addd8e31a354",
  "ffffccc2e69978c679238443",
  "ffffccc2e69978c67931a354006837",
  "ffffccd9f0a3addd8e78c67931a354006837",
  "ffffccd9f0a3addd8e78c67941ab5d238443005a32",
  "ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32",
  "ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529"
).map(colors);

/* harmony default export */ const YlGn = (ramp(YlGn_scheme));

;// CONCATENATED MODULE: ./node_modules/d3-scale-chromatic/src/sequential-multi/YlOrBr.js



var YlOrBr_scheme = new Array(3).concat(
  "fff7bcfec44fd95f0e",
  "ffffd4fed98efe9929cc4c02",
  "ffffd4fed98efe9929d95f0e993404",
  "ffffd4fee391fec44ffe9929d95f0e993404",
  "ffffd4fee391fec44ffe9929ec7014cc4c028c2d04",
  "ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04",
  "ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506"
).map(colors);

/* harmony default export */ const YlOrBr = (ramp(YlOrBr_scheme));

;// CONCATENATED MODULE: ./node_modules/d3-scale-chromatic/src/sequential-multi/YlOrRd.js



var YlOrRd_scheme = new Array(3).concat(
  "ffeda0feb24cf03b20",
  "ffffb2fecc5cfd8d3ce31a1c",
  "ffffb2fecc5cfd8d3cf03b20bd0026",
  "ffffb2fed976feb24cfd8d3cf03b20bd0026",
  "ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026",
  "ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026",
  "ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026"
).map(colors);

/* harmony default export */ const YlOrRd = (ramp(YlOrRd_scheme));

;// CONCATENATED MODULE: ./node_modules/d3-scale-chromatic/src/sequential-single/Blues.js



var Blues_scheme = new Array(3).concat(
  "deebf79ecae13182bd",
  "eff3ffbdd7e76baed62171b5",
  "eff3ffbdd7e76baed63182bd08519c",
  "eff3ffc6dbef9ecae16baed63182bd08519c",
  "eff3ffc6dbef9ecae16baed64292c62171b5084594",
  "f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594",
  "f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b"
).map(colors);

/* harmony default export */ const Blues = (ramp(Blues_scheme));

;// CONCATENATED MODULE: ./node_modules/d3-scale-chromatic/src/sequential-single/Greens.js



var Greens_scheme = new Array(3).concat(
  "e5f5e0a1d99b31a354",
  "edf8e9bae4b374c476238b45",
  "edf8e9bae4b374c47631a354006d2c",
  "edf8e9c7e9c0a1d99b74c47631a354006d2c",
  "edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32",
  "f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32",
  "f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b"
).map(colors);

/* harmony default export */ const Greens = (ramp(Greens_scheme));

;// CONCATENATED MODULE: ./node_modules/d3-scale-chromatic/src/sequential-single/Greys.js



var Greys_scheme = new Array(3).concat(
  "f0f0f0bdbdbd636363",
  "f7f7f7cccccc969696525252",
  "f7f7f7cccccc969696636363252525",
  "f7f7f7d9d9d9bdbdbd969696636363252525",
  "f7f7f7d9d9d9bdbdbd969696737373525252252525",
  "fffffff0f0f0d9d9d9bdbdbd969696737373525252252525",
  "fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000"
).map(colors);

/* harmony default export */ const Greys = (ramp(Greys_scheme));

;// CONCATENATED MODULE: ./node_modules/d3-scale-chromatic/src/sequential-single/Purples.js



var Purples_scheme = new Array(3).concat(
  "efedf5bcbddc756bb1",
  "f2f0f7cbc9e29e9ac86a51a3",
  "f2f0f7cbc9e29e9ac8756bb154278f",
  "f2f0f7dadaebbcbddc9e9ac8756bb154278f",
  "f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486",
  "fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486",
  "fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d"
).map(colors);

/* harmony default export */ const Purples = (ramp(Purples_scheme));

;// CONCATENATED MODULE: ./node_modules/d3-scale-chromatic/src/sequential-single/Reds.js



var Reds_scheme = new Array(3).concat(
  "fee0d2fc9272de2d26",
  "fee5d9fcae91fb6a4acb181d",
  "fee5d9fcae91fb6a4ade2d26a50f15",
  "fee5d9fcbba1fc9272fb6a4ade2d26a50f15",
  "fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d",
  "fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d",
  "fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d"
).map(colors);

/* harmony default export */ const Reds = (ramp(Reds_scheme));

;// CONCATENATED MODULE: ./node_modules/d3-scale-chromatic/src/sequential-single/Oranges.js



var Oranges_scheme = new Array(3).concat(
  "fee6cefdae6be6550d",
  "feeddefdbe85fd8d3cd94701",
  "feeddefdbe85fd8d3ce6550da63603",
  "feeddefdd0a2fdae6bfd8d3ce6550da63603",
  "feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04",
  "fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04",
  "fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704"
).map(colors);

/* harmony default export */ const Oranges = (ramp(Oranges_scheme));

;// CONCATENATED MODULE: ./node_modules/d3-scale-chromatic/src/sequential-multi/cividis.js
/* harmony default export */ function cividis(t) {
  t = Math.max(0, Math.min(1, t));
  return "rgb("
      + Math.max(0, Math.min(255, Math.round(-4.54 - t * (35.34 - t * (2381.73 - t * (6402.7 - t * (7024.72 - t * 2710.57))))))) + ", "
      + Math.max(0, Math.min(255, Math.round(32.49 + t * (170.73 + t * (52.82 - t * (131.46 - t * (176.58 - t * 67.37))))))) + ", "
      + Math.max(0, Math.min(255, Math.round(81.24 + t * (442.36 - t * (2482.43 - t * (6167.24 - t * (6614.94 - t * 2475.67)))))))
      + ")";
}

;// CONCATENATED MODULE: ./node_modules/d3-scale-chromatic/src/sequential-multi/cubehelix.js



/* harmony default export */ const sequential_multi_cubehelix = (cubehelixLong(cubehelix_cubehelix(300, 0.5, 0.0), cubehelix_cubehelix(-240, 0.5, 1.0)));

;// CONCATENATED MODULE: ./node_modules/d3-scale-chromatic/src/sequential-multi/rainbow.js



var warm = cubehelixLong(cubehelix_cubehelix(-100, 0.75, 0.35), cubehelix_cubehelix(80, 1.50, 0.8));

var cool = cubehelixLong(cubehelix_cubehelix(260, 0.75, 0.35), cubehelix_cubehelix(80, 1.50, 0.8));

var rainbow_c = cubehelix_cubehelix();

/* harmony default export */ function rainbow(t) {
  if (t < 0 || t > 1) t -= Math.floor(t);
  var ts = Math.abs(t - 0.5);
  rainbow_c.h = 360 * t - 100;
  rainbow_c.s = 1.5 - 1.5 * ts;
  rainbow_c.l = 0.8 - 0.9 * ts;
  return rainbow_c + "";
}

;// CONCATENATED MODULE: ./node_modules/d3-scale-chromatic/src/sequential-multi/sinebow.js


var sinebow_c = color_rgb(),
    pi_1_3 = Math.PI / 3,
    pi_2_3 = Math.PI * 2 / 3;

/* harmony default export */ function sinebow(t) {
  var x;
  t = (0.5 - t) * Math.PI;
  sinebow_c.r = 255 * (x = Math.sin(t)) * x;
  sinebow_c.g = 255 * (x = Math.sin(t + pi_1_3)) * x;
  sinebow_c.b = 255 * (x = Math.sin(t + pi_2_3)) * x;
  return sinebow_c + "";
}

;// CONCATENATED MODULE: ./node_modules/d3-scale-chromatic/src/sequential-multi/turbo.js
/* harmony default export */ function turbo(t) {
  t = Math.max(0, Math.min(1, t));
  return "rgb("
      + Math.max(0, Math.min(255, Math.round(34.61 + t * (1172.33 - t * (10793.56 - t * (33300.12 - t * (38394.49 - t * 14825.05))))))) + ", "
      + Math.max(0, Math.min(255, Math.round(23.31 + t * (557.33 + t * (1225.33 - t * (3574.96 - t * (1073.77 + t * 707.56))))))) + ", "
      + Math.max(0, Math.min(255, Math.round(27.2 + t * (3211.1 - t * (15327.97 - t * (27814 - t * (22569.18 - t * 6838.66)))))))
      + ")";
}

;// CONCATENATED MODULE: ./node_modules/d3-scale-chromatic/src/sequential-multi/viridis.js


function viridis_ramp(range) {
  var n = range.length;
  return function(t) {
    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];
  };
}

/* harmony default export */ const viridis = (viridis_ramp(colors("44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725")));

var magma = viridis_ramp(colors("00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf"));

var inferno = viridis_ramp(colors("00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4"));

var plasma = viridis_ramp(colors("0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921"));

;// CONCATENATED MODULE: ./node_modules/d3-scale-chromatic/src/index.js












































;// CONCATENATED MODULE: ./node_modules/d3-selection/src/create.js



/* harmony default export */ function src_create(name) {
  return src_select(creator(name).call(document.documentElement));
}

;// CONCATENATED MODULE: ./node_modules/d3-selection/src/local.js
var nextId = 0;

function local_local() {
  return new Local;
}

function Local() {
  this._ = "@" + (++nextId).toString(36);
}

Local.prototype = local_local.prototype = {
  constructor: Local,
  get: function(node) {
    var id = this._;
    while (!(id in node)) if (!(node = node.parentNode)) return;
    return node[id];
  },
  set: function(node, value) {
    return node[this._] = value;
  },
  remove: function(node) {
    return this._ in node && delete node[this._];
  },
  toString: function() {
    return this._;
  }
};

;// CONCATENATED MODULE: ./node_modules/d3-selection/src/pointers.js



/* harmony default export */ function pointers(events, node) {
  if (events.target) { // i.e., instanceof Event, not TouchList or iterable
    events = sourceEvent(events);
    if (node === undefined) node = events.currentTarget;
    events = events.touches || [events];
  }
  return Array.from(events, event => pointer(event, node));
}

;// CONCATENATED MODULE: ./node_modules/d3-selection/src/selectAll.js



/* harmony default export */ function src_selectAll(selector) {
  return typeof selector === "string"
      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])
      : new Selection([array_array(selector)], root);
}

;// CONCATENATED MODULE: ./node_modules/d3-selection/src/index.js
















;// CONCATENATED MODULE: ./node_modules/d3-shape/src/constant.js
/* harmony default export */ function d3_shape_src_constant(x) {
  return function constant() {
    return x;
  };
}

;// CONCATENATED MODULE: ./node_modules/d3-shape/src/math.js
const d3_shape_src_math_abs = Math.abs;
const math_atan2 = Math.atan2;
const src_math_cos = Math.cos;
const src_math_max = Math.max;
const math_min = Math.min;
const src_math_sin = Math.sin;
const math_sqrt = Math.sqrt;

const d3_shape_src_math_epsilon = 1e-12;
const src_math_pi = Math.PI;
const src_math_halfPi = src_math_pi / 2;
const src_math_tau = 2 * src_math_pi;

function math_acos(x) {
  return x > 1 ? 0 : x < -1 ? src_math_pi : Math.acos(x);
}

function math_asin(x) {
  return x >= 1 ? src_math_halfPi : x <= -1 ? -src_math_halfPi : Math.asin(x);
}

;// CONCATENATED MODULE: ./node_modules/d3-shape/src/arc.js




function arcInnerRadius(d) {
  return d.innerRadius;
}

function arcOuterRadius(d) {
  return d.outerRadius;
}

function arcStartAngle(d) {
  return d.startAngle;
}

function arcEndAngle(d) {
  return d.endAngle;
}

function arcPadAngle(d) {
  return d && d.padAngle; // Note: optional!
}

function intersect(x0, y0, x1, y1, x2, y2, x3, y3) {
  var x10 = x1 - x0, y10 = y1 - y0,
      x32 = x3 - x2, y32 = y3 - y2,
      t = y32 * x10 - x32 * y10;
  if (t * t < d3_shape_src_math_epsilon) return;
  t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / t;
  return [x0 + t * x10, y0 + t * y10];
}

// Compute perpendicular offset line of length rc.
// http://mathworld.wolfram.com/Circle-LineIntersection.html
function cornerTangents(x0, y0, x1, y1, r1, rc, cw) {
  var x01 = x0 - x1,
      y01 = y0 - y1,
      lo = (cw ? rc : -rc) / math_sqrt(x01 * x01 + y01 * y01),
      ox = lo * y01,
      oy = -lo * x01,
      x11 = x0 + ox,
      y11 = y0 + oy,
      x10 = x1 + ox,
      y10 = y1 + oy,
      x00 = (x11 + x10) / 2,
      y00 = (y11 + y10) / 2,
      dx = x10 - x11,
      dy = y10 - y11,
      d2 = dx * dx + dy * dy,
      r = r1 - rc,
      D = x11 * y10 - x10 * y11,
      d = (dy < 0 ? -1 : 1) * math_sqrt(src_math_max(0, r * r * d2 - D * D)),
      cx0 = (D * dy - dx * d) / d2,
      cy0 = (-D * dx - dy * d) / d2,
      cx1 = (D * dy + dx * d) / d2,
      cy1 = (-D * dx + dy * d) / d2,
      dx0 = cx0 - x00,
      dy0 = cy0 - y00,
      dx1 = cx1 - x00,
      dy1 = cy1 - y00;

  // Pick the closer of the two intersection points.
  // TODO Is there a faster way to determine which intersection to use?
  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;

  return {
    cx: cx0,
    cy: cy0,
    x01: -ox,
    y01: -oy,
    x11: cx0 * (r1 / r - 1),
    y11: cy0 * (r1 / r - 1)
  };
}

/* harmony default export */ function arc() {
  var innerRadius = arcInnerRadius,
      outerRadius = arcOuterRadius,
      cornerRadius = d3_shape_src_constant(0),
      padRadius = null,
      startAngle = arcStartAngle,
      endAngle = arcEndAngle,
      padAngle = arcPadAngle,
      context = null;

  function arc() {
    var buffer,
        r,
        r0 = +innerRadius.apply(this, arguments),
        r1 = +outerRadius.apply(this, arguments),
        a0 = startAngle.apply(this, arguments) - src_math_halfPi,
        a1 = endAngle.apply(this, arguments) - src_math_halfPi,
        da = d3_shape_src_math_abs(a1 - a0),
        cw = a1 > a0;

    if (!context) context = buffer = src_path();

    // Ensure that the outer radius is always larger than the inner radius.
    if (r1 < r0) r = r1, r1 = r0, r0 = r;

    // Is it a point?
    if (!(r1 > d3_shape_src_math_epsilon)) context.moveTo(0, 0);

    // Or is it a circle or annulus?
    else if (da > src_math_tau - d3_shape_src_math_epsilon) {
      context.moveTo(r1 * src_math_cos(a0), r1 * src_math_sin(a0));
      context.arc(0, 0, r1, a0, a1, !cw);
      if (r0 > d3_shape_src_math_epsilon) {
        context.moveTo(r0 * src_math_cos(a1), r0 * src_math_sin(a1));
        context.arc(0, 0, r0, a1, a0, cw);
      }
    }

    // Or is it a circular or annular sector?
    else {
      var a01 = a0,
          a11 = a1,
          a00 = a0,
          a10 = a1,
          da0 = da,
          da1 = da,
          ap = padAngle.apply(this, arguments) / 2,
          rp = (ap > d3_shape_src_math_epsilon) && (padRadius ? +padRadius.apply(this, arguments) : math_sqrt(r0 * r0 + r1 * r1)),
          rc = math_min(d3_shape_src_math_abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),
          rc0 = rc,
          rc1 = rc,
          t0,
          t1;

      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.
      if (rp > d3_shape_src_math_epsilon) {
        var p0 = math_asin(rp / r0 * src_math_sin(ap)),
            p1 = math_asin(rp / r1 * src_math_sin(ap));
        if ((da0 -= p0 * 2) > d3_shape_src_math_epsilon) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;
        else da0 = 0, a00 = a10 = (a0 + a1) / 2;
        if ((da1 -= p1 * 2) > d3_shape_src_math_epsilon) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;
        else da1 = 0, a01 = a11 = (a0 + a1) / 2;
      }

      var x01 = r1 * src_math_cos(a01),
          y01 = r1 * src_math_sin(a01),
          x10 = r0 * src_math_cos(a10),
          y10 = r0 * src_math_sin(a10);

      // Apply rounded corners?
      if (rc > d3_shape_src_math_epsilon) {
        var x11 = r1 * src_math_cos(a11),
            y11 = r1 * src_math_sin(a11),
            x00 = r0 * src_math_cos(a00),
            y00 = r0 * src_math_sin(a00),
            oc;

        // Restrict the corner radius according to the sector angle.
        if (da < src_math_pi && (oc = intersect(x01, y01, x00, y00, x11, y11, x10, y10))) {
          var ax = x01 - oc[0],
              ay = y01 - oc[1],
              bx = x11 - oc[0],
              by = y11 - oc[1],
              kc = 1 / src_math_sin(math_acos((ax * bx + ay * by) / (math_sqrt(ax * ax + ay * ay) * math_sqrt(bx * bx + by * by))) / 2),
              lc = math_sqrt(oc[0] * oc[0] + oc[1] * oc[1]);
          rc0 = math_min(rc, (r0 - lc) / (kc - 1));
          rc1 = math_min(rc, (r1 - lc) / (kc + 1));
        }
      }

      // Is the sector collapsed to a line?
      if (!(da1 > d3_shape_src_math_epsilon)) context.moveTo(x01, y01);

      // Does the sector’s outer ring have rounded corners?
      else if (rc1 > d3_shape_src_math_epsilon) {
        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);
        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);

        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);

        // Have the corners merged?
        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, math_atan2(t0.y01, t0.x01), math_atan2(t1.y01, t1.x01), !cw);

        // Otherwise, draw the two corners and the ring.
        else {
          context.arc(t0.cx, t0.cy, rc1, math_atan2(t0.y01, t0.x01), math_atan2(t0.y11, t0.x11), !cw);
          context.arc(0, 0, r1, math_atan2(t0.cy + t0.y11, t0.cx + t0.x11), math_atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);
          context.arc(t1.cx, t1.cy, rc1, math_atan2(t1.y11, t1.x11), math_atan2(t1.y01, t1.x01), !cw);
        }
      }

      // Or is the outer ring just a circular arc?
      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);

      // Is there no inner ring, and it’s a circular sector?
      // Or perhaps it’s an annular sector collapsed due to padding?
      if (!(r0 > d3_shape_src_math_epsilon) || !(da0 > d3_shape_src_math_epsilon)) context.lineTo(x10, y10);

      // Does the sector’s inner ring (or point) have rounded corners?
      else if (rc0 > d3_shape_src_math_epsilon) {
        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);
        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);

        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);

        // Have the corners merged?
        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, math_atan2(t0.y01, t0.x01), math_atan2(t1.y01, t1.x01), !cw);

        // Otherwise, draw the two corners and the ring.
        else {
          context.arc(t0.cx, t0.cy, rc0, math_atan2(t0.y01, t0.x01), math_atan2(t0.y11, t0.x11), !cw);
          context.arc(0, 0, r0, math_atan2(t0.cy + t0.y11, t0.cx + t0.x11), math_atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);
          context.arc(t1.cx, t1.cy, rc0, math_atan2(t1.y11, t1.x11), math_atan2(t1.y01, t1.x01), !cw);
        }
      }

      // Or is the inner ring just a circular arc?
      else context.arc(0, 0, r0, a10, a00, cw);
    }

    context.closePath();

    if (buffer) return context = null, buffer + "" || null;
  }

  arc.centroid = function() {
    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,
        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - src_math_pi / 2;
    return [src_math_cos(a) * r, src_math_sin(a) * r];
  };

  arc.innerRadius = function(_) {
    return arguments.length ? (innerRadius = typeof _ === "function" ? _ : d3_shape_src_constant(+_), arc) : innerRadius;
  };

  arc.outerRadius = function(_) {
    return arguments.length ? (outerRadius = typeof _ === "function" ? _ : d3_shape_src_constant(+_), arc) : outerRadius;
  };

  arc.cornerRadius = function(_) {
    return arguments.length ? (cornerRadius = typeof _ === "function" ? _ : d3_shape_src_constant(+_), arc) : cornerRadius;
  };

  arc.padRadius = function(_) {
    return arguments.length ? (padRadius = _ == null ? null : typeof _ === "function" ? _ : d3_shape_src_constant(+_), arc) : padRadius;
  };

  arc.startAngle = function(_) {
    return arguments.length ? (startAngle = typeof _ === "function" ? _ : d3_shape_src_constant(+_), arc) : startAngle;
  };

  arc.endAngle = function(_) {
    return arguments.length ? (endAngle = typeof _ === "function" ? _ : d3_shape_src_constant(+_), arc) : endAngle;
  };

  arc.padAngle = function(_) {
    return arguments.length ? (padAngle = typeof _ === "function" ? _ : d3_shape_src_constant(+_), arc) : padAngle;
  };

  arc.context = function(_) {
    return arguments.length ? ((context = _ == null ? null : _), arc) : context;
  };

  return arc;
}

;// CONCATENATED MODULE: ./node_modules/d3-shape/src/array.js
var d3_shape_src_array_slice = Array.prototype.slice;

/* harmony default export */ function d3_shape_src_array(x) {
  return typeof x === "object" && "length" in x
    ? x // Array, TypedArray, NodeList, array-like
    : Array.from(x); // Map, Set, iterable, string, or anything else
}

;// CONCATENATED MODULE: ./node_modules/d3-shape/src/curve/linear.js
function Linear(context) {
  this._context = context;
}

Linear.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._point = 0;
  },
  lineEnd: function() {
    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function(x, y) {
    x = +x, y = +y;
    switch (this._point) {
      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;
      case 1: this._point = 2; // falls through
      default: this._context.lineTo(x, y); break;
    }
  }
};

/* harmony default export */ function curve_linear(context) {
  return new Linear(context);
}

;// CONCATENATED MODULE: ./node_modules/d3-shape/src/point.js
function point_x(p) {
  return p[0];
}

function point_y(p) {
  return p[1];
}

;// CONCATENATED MODULE: ./node_modules/d3-shape/src/line.js






/* harmony default export */ function src_line(x, y) {
  var defined = d3_shape_src_constant(true),
      context = null,
      curve = curve_linear,
      output = null;

  x = typeof x === "function" ? x : (x === undefined) ? point_x : d3_shape_src_constant(x);
  y = typeof y === "function" ? y : (y === undefined) ? point_y : d3_shape_src_constant(y);

  function line(data) {
    var i,
        n = (data = d3_shape_src_array(data)).length,
        d,
        defined0 = false,
        buffer;

    if (context == null) output = curve(buffer = src_path());

    for (i = 0; i <= n; ++i) {
      if (!(i < n && defined(d = data[i], i, data)) === defined0) {
        if (defined0 = !defined0) output.lineStart();
        else output.lineEnd();
      }
      if (defined0) output.point(+x(d, i, data), +y(d, i, data));
    }

    if (buffer) return output = null, buffer + "" || null;
  }

  line.x = function(_) {
    return arguments.length ? (x = typeof _ === "function" ? _ : d3_shape_src_constant(+_), line) : x;
  };

  line.y = function(_) {
    return arguments.length ? (y = typeof _ === "function" ? _ : d3_shape_src_constant(+_), line) : y;
  };

  line.defined = function(_) {
    return arguments.length ? (defined = typeof _ === "function" ? _ : d3_shape_src_constant(!!_), line) : defined;
  };

  line.curve = function(_) {
    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;
  };

  line.context = function(_) {
    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;
  };

  return line;
}

;// CONCATENATED MODULE: ./node_modules/d3-shape/src/area.js







/* harmony default export */ function d3_shape_src_area(x0, y0, y1) {
  var x1 = null,
      defined = d3_shape_src_constant(true),
      context = null,
      curve = curve_linear,
      output = null;

  x0 = typeof x0 === "function" ? x0 : (x0 === undefined) ? point_x : d3_shape_src_constant(+x0);
  y0 = typeof y0 === "function" ? y0 : (y0 === undefined) ? d3_shape_src_constant(0) : d3_shape_src_constant(+y0);
  y1 = typeof y1 === "function" ? y1 : (y1 === undefined) ? point_y : d3_shape_src_constant(+y1);

  function area(data) {
    var i,
        j,
        k,
        n = (data = d3_shape_src_array(data)).length,
        d,
        defined0 = false,
        buffer,
        x0z = new Array(n),
        y0z = new Array(n);

    if (context == null) output = curve(buffer = src_path());

    for (i = 0; i <= n; ++i) {
      if (!(i < n && defined(d = data[i], i, data)) === defined0) {
        if (defined0 = !defined0) {
          j = i;
          output.areaStart();
          output.lineStart();
        } else {
          output.lineEnd();
          output.lineStart();
          for (k = i - 1; k >= j; --k) {
            output.point(x0z[k], y0z[k]);
          }
          output.lineEnd();
          output.areaEnd();
        }
      }
      if (defined0) {
        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);
        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);
      }
    }

    if (buffer) return output = null, buffer + "" || null;
  }

  function arealine() {
    return src_line().defined(defined).curve(curve).context(context);
  }

  area.x = function(_) {
    return arguments.length ? (x0 = typeof _ === "function" ? _ : d3_shape_src_constant(+_), x1 = null, area) : x0;
  };

  area.x0 = function(_) {
    return arguments.length ? (x0 = typeof _ === "function" ? _ : d3_shape_src_constant(+_), area) : x0;
  };

  area.x1 = function(_) {
    return arguments.length ? (x1 = _ == null ? null : typeof _ === "function" ? _ : d3_shape_src_constant(+_), area) : x1;
  };

  area.y = function(_) {
    return arguments.length ? (y0 = typeof _ === "function" ? _ : d3_shape_src_constant(+_), y1 = null, area) : y0;
  };

  area.y0 = function(_) {
    return arguments.length ? (y0 = typeof _ === "function" ? _ : d3_shape_src_constant(+_), area) : y0;
  };

  area.y1 = function(_) {
    return arguments.length ? (y1 = _ == null ? null : typeof _ === "function" ? _ : d3_shape_src_constant(+_), area) : y1;
  };

  area.lineX0 =
  area.lineY0 = function() {
    return arealine().x(x0).y(y0);
  };

  area.lineY1 = function() {
    return arealine().x(x0).y(y1);
  };

  area.lineX1 = function() {
    return arealine().x(x1).y(y0);
  };

  area.defined = function(_) {
    return arguments.length ? (defined = typeof _ === "function" ? _ : d3_shape_src_constant(!!_), area) : defined;
  };

  area.curve = function(_) {
    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;
  };

  area.context = function(_) {
    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;
  };

  return area;
}

;// CONCATENATED MODULE: ./node_modules/d3-shape/src/descending.js
/* harmony default export */ function src_descending(a, b) {
  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;
}

;// CONCATENATED MODULE: ./node_modules/d3-shape/src/identity.js
/* harmony default export */ function d3_shape_src_identity(d) {
  return d;
}

;// CONCATENATED MODULE: ./node_modules/d3-shape/src/pie.js






/* harmony default export */ function pie() {
  var value = d3_shape_src_identity,
      sortValues = src_descending,
      sort = null,
      startAngle = d3_shape_src_constant(0),
      endAngle = d3_shape_src_constant(src_math_tau),
      padAngle = d3_shape_src_constant(0);

  function pie(data) {
    var i,
        n = (data = d3_shape_src_array(data)).length,
        j,
        k,
        sum = 0,
        index = new Array(n),
        arcs = new Array(n),
        a0 = +startAngle.apply(this, arguments),
        da = Math.min(src_math_tau, Math.max(-src_math_tau, endAngle.apply(this, arguments) - a0)),
        a1,
        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),
        pa = p * (da < 0 ? -1 : 1),
        v;

    for (i = 0; i < n; ++i) {
      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {
        sum += v;
      }
    }

    // Optionally sort the arcs by previously-computed values or by data.
    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });
    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });

    // Compute the arcs! They are stored in the original data's order.
    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {
      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {
        data: data[j],
        index: i,
        value: v,
        startAngle: a0,
        endAngle: a1,
        padAngle: p
      };
    }

    return arcs;
  }

  pie.value = function(_) {
    return arguments.length ? (value = typeof _ === "function" ? _ : d3_shape_src_constant(+_), pie) : value;
  };

  pie.sortValues = function(_) {
    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;
  };

  pie.sort = function(_) {
    return arguments.length ? (sort = _, sortValues = null, pie) : sort;
  };

  pie.startAngle = function(_) {
    return arguments.length ? (startAngle = typeof _ === "function" ? _ : d3_shape_src_constant(+_), pie) : startAngle;
  };

  pie.endAngle = function(_) {
    return arguments.length ? (endAngle = typeof _ === "function" ? _ : d3_shape_src_constant(+_), pie) : endAngle;
  };

  pie.padAngle = function(_) {
    return arguments.length ? (padAngle = typeof _ === "function" ? _ : d3_shape_src_constant(+_), pie) : padAngle;
  };

  return pie;
}

;// CONCATENATED MODULE: ./node_modules/d3-shape/src/curve/radial.js


var curveRadialLinear = curveRadial(curve_linear);

function Radial(curve) {
  this._curve = curve;
}

Radial.prototype = {
  areaStart: function() {
    this._curve.areaStart();
  },
  areaEnd: function() {
    this._curve.areaEnd();
  },
  lineStart: function() {
    this._curve.lineStart();
  },
  lineEnd: function() {
    this._curve.lineEnd();
  },
  point: function(a, r) {
    this._curve.point(r * Math.sin(a), r * -Math.cos(a));
  }
};

function curveRadial(curve) {

  function radial(context) {
    return new Radial(curve(context));
  }

  radial._curve = curve;

  return radial;
}

;// CONCATENATED MODULE: ./node_modules/d3-shape/src/lineRadial.js



function lineRadial(l) {
  var c = l.curve;

  l.angle = l.x, delete l.x;
  l.radius = l.y, delete l.y;

  l.curve = function(_) {
    return arguments.length ? c(curveRadial(_)) : c()._curve;
  };

  return l;
}

/* harmony default export */ function src_lineRadial() {
  return lineRadial(src_line().curve(curveRadialLinear));
}

;// CONCATENATED MODULE: ./node_modules/d3-shape/src/areaRadial.js




/* harmony default export */ function areaRadial() {
  var a = d3_shape_src_area().curve(curveRadialLinear),
      c = a.curve,
      x0 = a.lineX0,
      x1 = a.lineX1,
      y0 = a.lineY0,
      y1 = a.lineY1;

  a.angle = a.x, delete a.x;
  a.startAngle = a.x0, delete a.x0;
  a.endAngle = a.x1, delete a.x1;
  a.radius = a.y, delete a.y;
  a.innerRadius = a.y0, delete a.y0;
  a.outerRadius = a.y1, delete a.y1;
  a.lineStartAngle = function() { return lineRadial(x0()); }, delete a.lineX0;
  a.lineEndAngle = function() { return lineRadial(x1()); }, delete a.lineX1;
  a.lineInnerRadius = function() { return lineRadial(y0()); }, delete a.lineY0;
  a.lineOuterRadius = function() { return lineRadial(y1()); }, delete a.lineY1;

  a.curve = function(_) {
    return arguments.length ? c(curveRadial(_)) : c()._curve;
  };

  return a;
}

;// CONCATENATED MODULE: ./node_modules/d3-shape/src/pointRadial.js
/* harmony default export */ function pointRadial(x, y) {
  return [(y = +y) * Math.cos(x -= Math.PI / 2), y * Math.sin(x)];
}

;// CONCATENATED MODULE: ./node_modules/d3-shape/src/curve/bump.js


class Bump {
  constructor(context, x) {
    this._context = context;
    this._x = x;
  }
  areaStart() {
    this._line = 0;
  }
  areaEnd() {
    this._line = NaN;
  }
  lineStart() {
    this._point = 0;
  }
  lineEnd() {
    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();
    this._line = 1 - this._line;
  }
  point(x, y) {
    x = +x, y = +y;
    switch (this._point) {
      case 0: {
        this._point = 1;
        if (this._line) this._context.lineTo(x, y);
        else this._context.moveTo(x, y);
        break;
      }
      case 1: this._point = 2; // falls through
      default: {
        if (this._x) this._context.bezierCurveTo(this._x0 = (this._x0 + x) / 2, this._y0, this._x0, y, x, y);
        else this._context.bezierCurveTo(this._x0, this._y0 = (this._y0 + y) / 2, x, this._y0, x, y);
        break;
      }
    }
    this._x0 = x, this._y0 = y;
  }
}

class BumpRadial {
  constructor(context) {
    this._context = context;
  }
  lineStart() {
    this._point = 0;
  }
  lineEnd() {}
  point(x, y) {
    x = +x, y = +y;
    if (this._point++ === 0) {
      this._x0 = x, this._y0 = y;
    } else {
      const p0 = pointRadial(this._x0, this._y0);
      const p1 = pointRadial(this._x0, this._y0 = (this._y0 + y) / 2);
      const p2 = pointRadial(x, this._y0);
      const p3 = pointRadial(x, y);
      this._context.moveTo(...p0);
      this._context.bezierCurveTo(...p1, ...p2, ...p3);
    }
  }
}

function bumpX(context) {
  return new Bump(context, true);
}

function bumpY(context) {
  return new Bump(context, false);
}

function bumpRadial(context) {
  return new BumpRadial(context);
}

;// CONCATENATED MODULE: ./node_modules/d3-shape/src/link.js






function linkSource(d) {
  return d.source;
}

function linkTarget(d) {
  return d.target;
}

function link_link(curve) {
  let source = linkSource;
  let target = linkTarget;
  let x = point_x;
  let y = point_y;
  let context = null;
  let output = null;

  function link() {
    let buffer;
    const argv = d3_shape_src_array_slice.call(arguments);
    const s = source.apply(this, argv);
    const t = target.apply(this, argv);
    if (context == null) output = curve(buffer = src_path());
    output.lineStart();
    argv[0] = s, output.point(+x.apply(this, argv), +y.apply(this, argv));
    argv[0] = t, output.point(+x.apply(this, argv), +y.apply(this, argv));
    output.lineEnd();
    if (buffer) return output = null, buffer + "" || null;
  }

  link.source = function(_) {
    return arguments.length ? (source = _, link) : source;
  };

  link.target = function(_) {
    return arguments.length ? (target = _, link) : target;
  };

  link.x = function(_) {
    return arguments.length ? (x = typeof _ === "function" ? _ : d3_shape_src_constant(+_), link) : x;
  };

  link.y = function(_) {
    return arguments.length ? (y = typeof _ === "function" ? _ : d3_shape_src_constant(+_), link) : y;
  };

  link.context = function(_) {
    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), link) : context;
  };

  return link;
}

function linkHorizontal() {
  return link_link(bumpX);
}

function linkVertical() {
  return link_link(bumpY);
}

function linkRadial() {
  const l = link_link(bumpRadial);
  l.angle = l.x, delete l.x;
  l.radius = l.y, delete l.y;
  return l;
}

;// CONCATENATED MODULE: ./node_modules/d3-shape/src/symbol/asterisk.js


const sqrt3 = math_sqrt(3);

/* harmony default export */ const asterisk = ({
  draw(context, size) {
    const r = math_sqrt(size + math_min(size / 28, 0.75)) * 0.59436;
    const t = r / 2;
    const u = t * sqrt3;
    context.moveTo(0, r);
    context.lineTo(0, -r);
    context.moveTo(-u, -t);
    context.lineTo(u, t);
    context.moveTo(-u, t);
    context.lineTo(u, -t);
  }
});

;// CONCATENATED MODULE: ./node_modules/d3-shape/src/symbol/circle.js


/* harmony default export */ const symbol_circle = ({
  draw(context, size) {
    const r = math_sqrt(size / src_math_pi);
    context.moveTo(r, 0);
    context.arc(0, 0, r, 0, src_math_tau);
  }
});

;// CONCATENATED MODULE: ./node_modules/d3-shape/src/symbol/cross.js


/* harmony default export */ const symbol_cross = ({
  draw(context, size) {
    const r = math_sqrt(size / 5) / 2;
    context.moveTo(-3 * r, -r);
    context.lineTo(-r, -r);
    context.lineTo(-r, -3 * r);
    context.lineTo(r, -3 * r);
    context.lineTo(r, -r);
    context.lineTo(3 * r, -r);
    context.lineTo(3 * r, r);
    context.lineTo(r, r);
    context.lineTo(r, 3 * r);
    context.lineTo(-r, 3 * r);
    context.lineTo(-r, r);
    context.lineTo(-3 * r, r);
    context.closePath();
  }
});

;// CONCATENATED MODULE: ./node_modules/d3-shape/src/symbol/diamond.js


const tan30 = math_sqrt(1 / 3);
const tan30_2 = tan30 * 2;

/* harmony default export */ const diamond = ({
  draw(context, size) {
    const y = math_sqrt(size / tan30_2);
    const x = y * tan30;
    context.moveTo(0, -y);
    context.lineTo(x, 0);
    context.lineTo(0, y);
    context.lineTo(-x, 0);
    context.closePath();
  }
});

;// CONCATENATED MODULE: ./node_modules/d3-shape/src/symbol/diamond2.js


/* harmony default export */ const diamond2 = ({
  draw(context, size) {
    const r = math_sqrt(size) * 0.62625;
    context.moveTo(0, -r);
    context.lineTo(r, 0);
    context.lineTo(0, r);
    context.lineTo(-r, 0);
    context.closePath();
  }
});

;// CONCATENATED MODULE: ./node_modules/d3-shape/src/symbol/plus.js


/* harmony default export */ const plus = ({
  draw(context, size) {
    const r = math_sqrt(size - math_min(size / 7, 2)) * 0.87559;
    context.moveTo(-r, 0);
    context.lineTo(r, 0);
    context.moveTo(0, r);
    context.lineTo(0, -r);
  }
});

;// CONCATENATED MODULE: ./node_modules/d3-shape/src/symbol/square.js


/* harmony default export */ const symbol_square = ({
  draw(context, size) {
    const w = math_sqrt(size);
    const x = -w / 2;
    context.rect(x, x, w, w);
  }
});

;// CONCATENATED MODULE: ./node_modules/d3-shape/src/symbol/square2.js


/* harmony default export */ const square2 = ({
  draw(context, size) {
    const r = math_sqrt(size) * 0.4431;
    context.moveTo(r, r);
    context.lineTo(r, -r);
    context.lineTo(-r, -r);
    context.lineTo(-r, r);
    context.closePath();
  }
});

;// CONCATENATED MODULE: ./node_modules/d3-shape/src/symbol/star.js


const ka = 0.89081309152928522810;
const kr = src_math_sin(src_math_pi / 10) / src_math_sin(7 * src_math_pi / 10);
const kx = src_math_sin(src_math_tau / 10) * kr;
const ky = -src_math_cos(src_math_tau / 10) * kr;

/* harmony default export */ const star = ({
  draw(context, size) {
    const r = math_sqrt(size * ka);
    const x = kx * r;
    const y = ky * r;
    context.moveTo(0, -r);
    context.lineTo(x, y);
    for (let i = 1; i < 5; ++i) {
      const a = src_math_tau * i / 5;
      const c = src_math_cos(a);
      const s = src_math_sin(a);
      context.lineTo(s * r, -c * r);
      context.lineTo(c * x - s * y, s * x + c * y);
    }
    context.closePath();
  }
});

;// CONCATENATED MODULE: ./node_modules/d3-shape/src/symbol/triangle.js


const triangle_sqrt3 = math_sqrt(3);

/* harmony default export */ const triangle = ({
  draw(context, size) {
    const y = -math_sqrt(size / (triangle_sqrt3 * 3));
    context.moveTo(0, y * 2);
    context.lineTo(-triangle_sqrt3 * y, -y);
    context.lineTo(triangle_sqrt3 * y, -y);
    context.closePath();
  }
});

;// CONCATENATED MODULE: ./node_modules/d3-shape/src/symbol/triangle2.js


const triangle2_sqrt3 = math_sqrt(3);

/* harmony default export */ const triangle2 = ({
  draw(context, size) {
    const s = math_sqrt(size) * 0.6824;
    const t = s  / 2;
    const u = (s * triangle2_sqrt3) / 2; // cos(Math.PI / 6)
    context.moveTo(0, -s);
    context.lineTo(u, t);
    context.lineTo(-u, t);
    context.closePath();
  }
});

;// CONCATENATED MODULE: ./node_modules/d3-shape/src/symbol/wye.js


const wye_c = -0.5;
const s = math_sqrt(3) / 2;
const k = 1 / math_sqrt(12);
const wye_a = (k / 2 + 1) * 3;

/* harmony default export */ const wye = ({
  draw(context, size) {
    const r = math_sqrt(size / wye_a);
    const x0 = r / 2, y0 = r * k;
    const x1 = x0, y1 = r * k + r;
    const x2 = -x1, y2 = y1;
    context.moveTo(x0, y0);
    context.lineTo(x1, y1);
    context.lineTo(x2, y2);
    context.lineTo(wye_c * x0 - s * y0, s * x0 + wye_c * y0);
    context.lineTo(wye_c * x1 - s * y1, s * x1 + wye_c * y1);
    context.lineTo(wye_c * x2 - s * y2, s * x2 + wye_c * y2);
    context.lineTo(wye_c * x0 + s * y0, wye_c * y0 - s * x0);
    context.lineTo(wye_c * x1 + s * y1, wye_c * y1 - s * x1);
    context.lineTo(wye_c * x2 + s * y2, wye_c * y2 - s * x2);
    context.closePath();
  }
});

;// CONCATENATED MODULE: ./node_modules/d3-shape/src/symbol/x.js


/* harmony default export */ const symbol_x = ({
  draw(context, size) {
    const r = math_sqrt(size - math_min(size / 6, 1.7)) * 0.6189;
    context.moveTo(-r, -r);
    context.lineTo(r, r);
    context.moveTo(-r, r);
    context.lineTo(r, -r);
  }
});

;// CONCATENATED MODULE: ./node_modules/d3-shape/src/symbol.js
















// These symbols are designed to be filled.
const symbolsFill = [
  symbol_circle,
  symbol_cross,
  diamond,
  symbol_square,
  star,
  triangle,
  wye
];

// These symbols are designed to be stroked (with a width of 1.5px and round caps).
const symbolsStroke = [
  symbol_circle,
  plus,
  symbol_x,
  triangle2,
  asterisk,
  square2,
  diamond2
];

function symbol_Symbol(type, size) {
  let context = null;

  type = typeof type === "function" ? type : d3_shape_src_constant(type || symbol_circle);
  size = typeof size === "function" ? size : d3_shape_src_constant(size === undefined ? 64 : +size);

  function symbol() {
    let buffer;
    if (!context) context = buffer = src_path();
    type.apply(this, arguments).draw(context, +size.apply(this, arguments));
    if (buffer) return context = null, buffer + "" || null;
  }

  symbol.type = function(_) {
    return arguments.length ? (type = typeof _ === "function" ? _ : d3_shape_src_constant(_), symbol) : type;
  };

  symbol.size = function(_) {
    return arguments.length ? (size = typeof _ === "function" ? _ : d3_shape_src_constant(+_), symbol) : size;
  };

  symbol.context = function(_) {
    return arguments.length ? (context = _ == null ? null : _, symbol) : context;
  };

  return symbol;
}

;// CONCATENATED MODULE: ./node_modules/d3-shape/src/noop.js
/* harmony default export */ function d3_shape_src_noop() {}

;// CONCATENATED MODULE: ./node_modules/d3-shape/src/curve/basis.js
function basis_point(that, x, y) {
  that._context.bezierCurveTo(
    (2 * that._x0 + that._x1) / 3,
    (2 * that._y0 + that._y1) / 3,
    (that._x0 + 2 * that._x1) / 3,
    (that._y0 + 2 * that._y1) / 3,
    (that._x0 + 4 * that._x1 + x) / 6,
    (that._y0 + 4 * that._y1 + y) / 6
  );
}

function Basis(context) {
  this._context = context;
}

Basis.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x0 = this._x1 =
    this._y0 = this._y1 = NaN;
    this._point = 0;
  },
  lineEnd: function() {
    switch (this._point) {
      case 3: basis_point(this, this._x1, this._y1); // falls through
      case 2: this._context.lineTo(this._x1, this._y1); break;
    }
    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function(x, y) {
    x = +x, y = +y;
    switch (this._point) {
      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;
      case 1: this._point = 2; break;
      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // falls through
      default: basis_point(this, x, y); break;
    }
    this._x0 = this._x1, this._x1 = x;
    this._y0 = this._y1, this._y1 = y;
  }
};

/* harmony default export */ function curve_basis(context) {
  return new Basis(context);
}

;// CONCATENATED MODULE: ./node_modules/d3-shape/src/curve/basisClosed.js



function BasisClosed(context) {
  this._context = context;
}

BasisClosed.prototype = {
  areaStart: d3_shape_src_noop,
  areaEnd: d3_shape_src_noop,
  lineStart: function() {
    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =
    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;
    this._point = 0;
  },
  lineEnd: function() {
    switch (this._point) {
      case 1: {
        this._context.moveTo(this._x2, this._y2);
        this._context.closePath();
        break;
      }
      case 2: {
        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);
        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);
        this._context.closePath();
        break;
      }
      case 3: {
        this.point(this._x2, this._y2);
        this.point(this._x3, this._y3);
        this.point(this._x4, this._y4);
        break;
      }
    }
  },
  point: function(x, y) {
    x = +x, y = +y;
    switch (this._point) {
      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;
      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;
      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;
      default: basis_point(this, x, y); break;
    }
    this._x0 = this._x1, this._x1 = x;
    this._y0 = this._y1, this._y1 = y;
  }
};

/* harmony default export */ function curve_basisClosed(context) {
  return new BasisClosed(context);
}

;// CONCATENATED MODULE: ./node_modules/d3-shape/src/curve/basisOpen.js


function BasisOpen(context) {
  this._context = context;
}

BasisOpen.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x0 = this._x1 =
    this._y0 = this._y1 = NaN;
    this._point = 0;
  },
  lineEnd: function() {
    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function(x, y) {
    x = +x, y = +y;
    switch (this._point) {
      case 0: this._point = 1; break;
      case 1: this._point = 2; break;
      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;
      case 3: this._point = 4; // falls through
      default: basis_point(this, x, y); break;
    }
    this._x0 = this._x1, this._x1 = x;
    this._y0 = this._y1, this._y1 = y;
  }
};

/* harmony default export */ function basisOpen(context) {
  return new BasisOpen(context);
}

;// CONCATENATED MODULE: ./node_modules/d3-shape/src/curve/bundle.js


function Bundle(context, beta) {
  this._basis = new Basis(context);
  this._beta = beta;
}

Bundle.prototype = {
  lineStart: function() {
    this._x = [];
    this._y = [];
    this._basis.lineStart();
  },
  lineEnd: function() {
    var x = this._x,
        y = this._y,
        j = x.length - 1;

    if (j > 0) {
      var x0 = x[0],
          y0 = y[0],
          dx = x[j] - x0,
          dy = y[j] - y0,
          i = -1,
          t;

      while (++i <= j) {
        t = i / j;
        this._basis.point(
          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),
          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)
        );
      }
    }

    this._x = this._y = null;
    this._basis.lineEnd();
  },
  point: function(x, y) {
    this._x.push(+x);
    this._y.push(+y);
  }
};

/* harmony default export */ const bundle = ((function custom(beta) {

  function bundle(context) {
    return beta === 1 ? new Basis(context) : new Bundle(context, beta);
  }

  bundle.beta = function(beta) {
    return custom(+beta);
  };

  return bundle;
})(0.85));

;// CONCATENATED MODULE: ./node_modules/d3-shape/src/curve/cardinal.js
function cardinal_point(that, x, y) {
  that._context.bezierCurveTo(
    that._x1 + that._k * (that._x2 - that._x0),
    that._y1 + that._k * (that._y2 - that._y0),
    that._x2 + that._k * (that._x1 - x),
    that._y2 + that._k * (that._y1 - y),
    that._x2,
    that._y2
  );
}

function Cardinal(context, tension) {
  this._context = context;
  this._k = (1 - tension) / 6;
}

Cardinal.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x0 = this._x1 = this._x2 =
    this._y0 = this._y1 = this._y2 = NaN;
    this._point = 0;
  },
  lineEnd: function() {
    switch (this._point) {
      case 2: this._context.lineTo(this._x2, this._y2); break;
      case 3: cardinal_point(this, this._x1, this._y1); break;
    }
    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function(x, y) {
    x = +x, y = +y;
    switch (this._point) {
      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;
      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;
      case 2: this._point = 3; // falls through
      default: cardinal_point(this, x, y); break;
    }
    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
  }
};

/* harmony default export */ const cardinal = ((function custom(tension) {

  function cardinal(context) {
    return new Cardinal(context, tension);
  }

  cardinal.tension = function(tension) {
    return custom(+tension);
  };

  return cardinal;
})(0));

;// CONCATENATED MODULE: ./node_modules/d3-shape/src/curve/cardinalClosed.js



function CardinalClosed(context, tension) {
  this._context = context;
  this._k = (1 - tension) / 6;
}

CardinalClosed.prototype = {
  areaStart: d3_shape_src_noop,
  areaEnd: d3_shape_src_noop,
  lineStart: function() {
    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =
    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;
    this._point = 0;
  },
  lineEnd: function() {
    switch (this._point) {
      case 1: {
        this._context.moveTo(this._x3, this._y3);
        this._context.closePath();
        break;
      }
      case 2: {
        this._context.lineTo(this._x3, this._y3);
        this._context.closePath();
        break;
      }
      case 3: {
        this.point(this._x3, this._y3);
        this.point(this._x4, this._y4);
        this.point(this._x5, this._y5);
        break;
      }
    }
  },
  point: function(x, y) {
    x = +x, y = +y;
    switch (this._point) {
      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;
      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;
      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;
      default: cardinal_point(this, x, y); break;
    }
    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
  }
};

/* harmony default export */ const cardinalClosed = ((function custom(tension) {

  function cardinal(context) {
    return new CardinalClosed(context, tension);
  }

  cardinal.tension = function(tension) {
    return custom(+tension);
  };

  return cardinal;
})(0));

;// CONCATENATED MODULE: ./node_modules/d3-shape/src/curve/cardinalOpen.js


function CardinalOpen(context, tension) {
  this._context = context;
  this._k = (1 - tension) / 6;
}

CardinalOpen.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x0 = this._x1 = this._x2 =
    this._y0 = this._y1 = this._y2 = NaN;
    this._point = 0;
  },
  lineEnd: function() {
    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function(x, y) {
    x = +x, y = +y;
    switch (this._point) {
      case 0: this._point = 1; break;
      case 1: this._point = 2; break;
      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;
      case 3: this._point = 4; // falls through
      default: cardinal_point(this, x, y); break;
    }
    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
  }
};

/* harmony default export */ const cardinalOpen = ((function custom(tension) {

  function cardinal(context) {
    return new CardinalOpen(context, tension);
  }

  cardinal.tension = function(tension) {
    return custom(+tension);
  };

  return cardinal;
})(0));

;// CONCATENATED MODULE: ./node_modules/d3-shape/src/curve/catmullRom.js



function catmullRom_point(that, x, y) {
  var x1 = that._x1,
      y1 = that._y1,
      x2 = that._x2,
      y2 = that._y2;

  if (that._l01_a > d3_shape_src_math_epsilon) {
    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,
        n = 3 * that._l01_a * (that._l01_a + that._l12_a);
    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;
    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;
  }

  if (that._l23_a > d3_shape_src_math_epsilon) {
    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,
        m = 3 * that._l23_a * (that._l23_a + that._l12_a);
    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;
    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;
  }

  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);
}

function CatmullRom(context, alpha) {
  this._context = context;
  this._alpha = alpha;
}

CatmullRom.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x0 = this._x1 = this._x2 =
    this._y0 = this._y1 = this._y2 = NaN;
    this._l01_a = this._l12_a = this._l23_a =
    this._l01_2a = this._l12_2a = this._l23_2a =
    this._point = 0;
  },
  lineEnd: function() {
    switch (this._point) {
      case 2: this._context.lineTo(this._x2, this._y2); break;
      case 3: this.point(this._x2, this._y2); break;
    }
    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function(x, y) {
    x = +x, y = +y;

    if (this._point) {
      var x23 = this._x2 - x,
          y23 = this._y2 - y;
      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));
    }

    switch (this._point) {
      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;
      case 1: this._point = 2; break;
      case 2: this._point = 3; // falls through
      default: catmullRom_point(this, x, y); break;
    }

    this._l01_a = this._l12_a, this._l12_a = this._l23_a;
    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;
    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
  }
};

/* harmony default export */ const catmullRom = ((function custom(alpha) {

  function catmullRom(context) {
    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);
  }

  catmullRom.alpha = function(alpha) {
    return custom(+alpha);
  };

  return catmullRom;
})(0.5));

;// CONCATENATED MODULE: ./node_modules/d3-shape/src/curve/catmullRomClosed.js




function CatmullRomClosed(context, alpha) {
  this._context = context;
  this._alpha = alpha;
}

CatmullRomClosed.prototype = {
  areaStart: d3_shape_src_noop,
  areaEnd: d3_shape_src_noop,
  lineStart: function() {
    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =
    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;
    this._l01_a = this._l12_a = this._l23_a =
    this._l01_2a = this._l12_2a = this._l23_2a =
    this._point = 0;
  },
  lineEnd: function() {
    switch (this._point) {
      case 1: {
        this._context.moveTo(this._x3, this._y3);
        this._context.closePath();
        break;
      }
      case 2: {
        this._context.lineTo(this._x3, this._y3);
        this._context.closePath();
        break;
      }
      case 3: {
        this.point(this._x3, this._y3);
        this.point(this._x4, this._y4);
        this.point(this._x5, this._y5);
        break;
      }
    }
  },
  point: function(x, y) {
    x = +x, y = +y;

    if (this._point) {
      var x23 = this._x2 - x,
          y23 = this._y2 - y;
      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));
    }

    switch (this._point) {
      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;
      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;
      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;
      default: catmullRom_point(this, x, y); break;
    }

    this._l01_a = this._l12_a, this._l12_a = this._l23_a;
    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;
    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
  }
};

/* harmony default export */ const catmullRomClosed = ((function custom(alpha) {

  function catmullRom(context) {
    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);
  }

  catmullRom.alpha = function(alpha) {
    return custom(+alpha);
  };

  return catmullRom;
})(0.5));

;// CONCATENATED MODULE: ./node_modules/d3-shape/src/curve/catmullRomOpen.js



function CatmullRomOpen(context, alpha) {
  this._context = context;
  this._alpha = alpha;
}

CatmullRomOpen.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x0 = this._x1 = this._x2 =
    this._y0 = this._y1 = this._y2 = NaN;
    this._l01_a = this._l12_a = this._l23_a =
    this._l01_2a = this._l12_2a = this._l23_2a =
    this._point = 0;
  },
  lineEnd: function() {
    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function(x, y) {
    x = +x, y = +y;

    if (this._point) {
      var x23 = this._x2 - x,
          y23 = this._y2 - y;
      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));
    }

    switch (this._point) {
      case 0: this._point = 1; break;
      case 1: this._point = 2; break;
      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;
      case 3: this._point = 4; // falls through
      default: catmullRom_point(this, x, y); break;
    }

    this._l01_a = this._l12_a, this._l12_a = this._l23_a;
    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;
    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
  }
};

/* harmony default export */ const catmullRomOpen = ((function custom(alpha) {

  function catmullRom(context) {
    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);
  }

  catmullRom.alpha = function(alpha) {
    return custom(+alpha);
  };

  return catmullRom;
})(0.5));

;// CONCATENATED MODULE: ./node_modules/d3-shape/src/curve/linearClosed.js


function LinearClosed(context) {
  this._context = context;
}

LinearClosed.prototype = {
  areaStart: d3_shape_src_noop,
  areaEnd: d3_shape_src_noop,
  lineStart: function() {
    this._point = 0;
  },
  lineEnd: function() {
    if (this._point) this._context.closePath();
  },
  point: function(x, y) {
    x = +x, y = +y;
    if (this._point) this._context.lineTo(x, y);
    else this._point = 1, this._context.moveTo(x, y);
  }
};

/* harmony default export */ function linearClosed(context) {
  return new LinearClosed(context);
}

;// CONCATENATED MODULE: ./node_modules/d3-shape/src/curve/monotone.js
function monotone_sign(x) {
  return x < 0 ? -1 : 1;
}

// Calculate the slopes of the tangents (Hermite-type interpolation) based on
// the following paper: Steffen, M. 1990. A Simple Method for Monotonic
// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.
// NOV(II), P. 443, 1990.
function slope3(that, x2, y2) {
  var h0 = that._x1 - that._x0,
      h1 = x2 - that._x1,
      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),
      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),
      p = (s0 * h1 + s1 * h0) / (h0 + h1);
  return (monotone_sign(s0) + monotone_sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;
}

// Calculate a one-sided slope.
function slope2(that, t) {
  var h = that._x1 - that._x0;
  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;
}

// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations
// "you can express cubic Hermite interpolation in terms of cubic Bézier curves
// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1".
function monotone_point(that, t0, t1) {
  var x0 = that._x0,
      y0 = that._y0,
      x1 = that._x1,
      y1 = that._y1,
      dx = (x1 - x0) / 3;
  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);
}

function MonotoneX(context) {
  this._context = context;
}

MonotoneX.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x0 = this._x1 =
    this._y0 = this._y1 =
    this._t0 = NaN;
    this._point = 0;
  },
  lineEnd: function() {
    switch (this._point) {
      case 2: this._context.lineTo(this._x1, this._y1); break;
      case 3: monotone_point(this, this._t0, slope2(this, this._t0)); break;
    }
    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function(x, y) {
    var t1 = NaN;

    x = +x, y = +y;
    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.
    switch (this._point) {
      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;
      case 1: this._point = 2; break;
      case 2: this._point = 3; monotone_point(this, slope2(this, t1 = slope3(this, x, y)), t1); break;
      default: monotone_point(this, this._t0, t1 = slope3(this, x, y)); break;
    }

    this._x0 = this._x1, this._x1 = x;
    this._y0 = this._y1, this._y1 = y;
    this._t0 = t1;
  }
}

function MonotoneY(context) {
  this._context = new ReflectContext(context);
}

(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {
  MonotoneX.prototype.point.call(this, y, x);
};

function ReflectContext(context) {
  this._context = context;
}

ReflectContext.prototype = {
  moveTo: function(x, y) { this._context.moveTo(y, x); },
  closePath: function() { this._context.closePath(); },
  lineTo: function(x, y) { this._context.lineTo(y, x); },
  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }
};

function monotoneX(context) {
  return new MonotoneX(context);
}

function monotoneY(context) {
  return new MonotoneY(context);
}

;// CONCATENATED MODULE: ./node_modules/d3-shape/src/curve/natural.js
function Natural(context) {
  this._context = context;
}

Natural.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x = [];
    this._y = [];
  },
  lineEnd: function() {
    var x = this._x,
        y = this._y,
        n = x.length;

    if (n) {
      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);
      if (n === 2) {
        this._context.lineTo(x[1], y[1]);
      } else {
        var px = controlPoints(x),
            py = controlPoints(y);
        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {
          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);
        }
      }
    }

    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();
    this._line = 1 - this._line;
    this._x = this._y = null;
  },
  point: function(x, y) {
    this._x.push(+x);
    this._y.push(+y);
  }
};

// See https://www.particleincell.com/2012/bezier-splines/ for derivation.
function controlPoints(x) {
  var i,
      n = x.length - 1,
      m,
      a = new Array(n),
      b = new Array(n),
      r = new Array(n);
  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];
  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];
  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];
  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];
  a[n - 1] = r[n - 1] / b[n - 1];
  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];
  b[n - 1] = (x[n] + a[n - 1]) / 2;
  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];
  return [a, b];
}

/* harmony default export */ function natural(context) {
  return new Natural(context);
}

;// CONCATENATED MODULE: ./node_modules/d3-shape/src/curve/step.js
function Step(context, t) {
  this._context = context;
  this._t = t;
}

Step.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x = this._y = NaN;
    this._point = 0;
  },
  lineEnd: function() {
    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);
    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();
    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;
  },
  point: function(x, y) {
    x = +x, y = +y;
    switch (this._point) {
      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;
      case 1: this._point = 2; // falls through
      default: {
        if (this._t <= 0) {
          this._context.lineTo(this._x, y);
          this._context.lineTo(x, y);
        } else {
          var x1 = this._x * (1 - this._t) + x * this._t;
          this._context.lineTo(x1, this._y);
          this._context.lineTo(x1, y);
        }
        break;
      }
    }
    this._x = x, this._y = y;
  }
};

/* harmony default export */ function step(context) {
  return new Step(context, 0.5);
}

function stepBefore(context) {
  return new Step(context, 0);
}

function stepAfter(context) {
  return new Step(context, 1);
}

;// CONCATENATED MODULE: ./node_modules/d3-shape/src/offset/none.js
/* harmony default export */ function offset_none(series, order) {
  if (!((n = series.length) > 1)) return;
  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {
    s0 = s1, s1 = series[order[i]];
    for (j = 0; j < m; ++j) {
      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];
    }
  }
}

;// CONCATENATED MODULE: ./node_modules/d3-shape/src/order/none.js
/* harmony default export */ function order_none(series) {
  var n = series.length, o = new Array(n);
  while (--n >= 0) o[n] = n;
  return o;
}

;// CONCATENATED MODULE: ./node_modules/d3-shape/src/stack.js





function stackValue(d, key) {
  return d[key];
}

function stackSeries(key) {
  const series = [];
  series.key = key;
  return series;
}

/* harmony default export */ function stack() {
  var keys = d3_shape_src_constant([]),
      order = order_none,
      offset = offset_none,
      value = stackValue;

  function stack(data) {
    var sz = Array.from(keys.apply(this, arguments), stackSeries),
        i, n = sz.length, j = -1,
        oz;

    for (const d of data) {
      for (i = 0, ++j; i < n; ++i) {
        (sz[i][j] = [0, +value(d, sz[i].key, j, data)]).data = d;
      }
    }

    for (i = 0, oz = d3_shape_src_array(order(sz)); i < n; ++i) {
      sz[oz[i]].index = i;
    }

    offset(sz, oz);
    return sz;
  }

  stack.keys = function(_) {
    return arguments.length ? (keys = typeof _ === "function" ? _ : d3_shape_src_constant(Array.from(_)), stack) : keys;
  };

  stack.value = function(_) {
    return arguments.length ? (value = typeof _ === "function" ? _ : d3_shape_src_constant(+_), stack) : value;
  };

  stack.order = function(_) {
    return arguments.length ? (order = _ == null ? order_none : typeof _ === "function" ? _ : d3_shape_src_constant(Array.from(_)), stack) : order;
  };

  stack.offset = function(_) {
    return arguments.length ? (offset = _ == null ? offset_none : _, stack) : offset;
  };

  return stack;
}

;// CONCATENATED MODULE: ./node_modules/d3-shape/src/offset/expand.js


/* harmony default export */ function expand(series, order) {
  if (!((n = series.length) > 0)) return;
  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {
    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;
    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;
  }
  offset_none(series, order);
}

;// CONCATENATED MODULE: ./node_modules/d3-shape/src/offset/diverging.js
/* harmony default export */ function offset_diverging(series, order) {
  if (!((n = series.length) > 0)) return;
  for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {
    for (yp = yn = 0, i = 0; i < n; ++i) {
      if ((dy = (d = series[order[i]][j])[1] - d[0]) > 0) {
        d[0] = yp, d[1] = yp += dy;
      } else if (dy < 0) {
        d[1] = yn, d[0] = yn += dy;
      } else {
        d[0] = 0, d[1] = dy;
      }
    }
  }
}

;// CONCATENATED MODULE: ./node_modules/d3-shape/src/offset/silhouette.js


/* harmony default export */ function silhouette(series, order) {
  if (!((n = series.length) > 0)) return;
  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {
    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;
    s0[j][1] += s0[j][0] = -y / 2;
  }
  offset_none(series, order);
}

;// CONCATENATED MODULE: ./node_modules/d3-shape/src/offset/wiggle.js


/* harmony default export */ function wiggle(series, order) {
  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;
  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {
    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {
      var si = series[order[i]],
          sij0 = si[j][1] || 0,
          sij1 = si[j - 1][1] || 0,
          s3 = (sij0 - sij1) / 2;
      for (var k = 0; k < i; ++k) {
        var sk = series[order[k]],
            skj0 = sk[j][1] || 0,
            skj1 = sk[j - 1][1] || 0;
        s3 += skj0 - skj1;
      }
      s1 += sij0, s2 += s3 * sij0;
    }
    s0[j - 1][1] += s0[j - 1][0] = y;
    if (s1) y -= s2 / s1;
  }
  s0[j - 1][1] += s0[j - 1][0] = y;
  offset_none(series, order);
}

;// CONCATENATED MODULE: ./node_modules/d3-shape/src/order/appearance.js


/* harmony default export */ function appearance(series) {
  var peaks = series.map(peak);
  return order_none(series).sort(function(a, b) { return peaks[a] - peaks[b]; });
}

function peak(series) {
  var i = -1, j = 0, n = series.length, vi, vj = -Infinity;
  while (++i < n) if ((vi = +series[i][1]) > vj) vj = vi, j = i;
  return j;
}

;// CONCATENATED MODULE: ./node_modules/d3-shape/src/order/ascending.js


/* harmony default export */ function order_ascending(series) {
  var sums = series.map(ascending_sum);
  return order_none(series).sort(function(a, b) { return sums[a] - sums[b]; });
}

function ascending_sum(series) {
  var s = 0, i = -1, n = series.length, v;
  while (++i < n) if (v = +series[i][1]) s += v;
  return s;
}

;// CONCATENATED MODULE: ./node_modules/d3-shape/src/order/descending.js


/* harmony default export */ function order_descending(series) {
  return order_ascending(series).reverse();
}

;// CONCATENATED MODULE: ./node_modules/d3-shape/src/order/insideOut.js



/* harmony default export */ function insideOut(series) {
  var n = series.length,
      i,
      j,
      sums = series.map(ascending_sum),
      order = appearance(series),
      top = 0,
      bottom = 0,
      tops = [],
      bottoms = [];

  for (i = 0; i < n; ++i) {
    j = order[i];
    if (top < bottom) {
      top += sums[j];
      tops.push(j);
    } else {
      bottom += sums[j];
      bottoms.push(j);
    }
  }

  return bottoms.reverse().concat(tops);
}

;// CONCATENATED MODULE: ./node_modules/d3-shape/src/order/reverse.js


/* harmony default export */ function order_reverse(series) {
  return order_none(series).reverse();
}

;// CONCATENATED MODULE: ./node_modules/d3-shape/src/index.js




 // Note: radialArea is deprecated!
 // Note: radialLine is deprecated!
















































;// CONCATENATED MODULE: ./node_modules/d3-time/src/index.js
































;// CONCATENATED MODULE: ./node_modules/d3-time-format/src/isoFormat.js


var isoSpecifier = "%Y-%m-%dT%H:%M:%S.%LZ";

function formatIsoNative(date) {
  return date.toISOString();
}

var formatIso = Date.prototype.toISOString
    ? formatIsoNative
    : utcFormat(isoSpecifier);

/* harmony default export */ const isoFormat = (formatIso);

;// CONCATENATED MODULE: ./node_modules/d3-time-format/src/isoParse.js



function parseIsoNative(string) {
  var date = new Date(string);
  return isNaN(date) ? null : date;
}

var parseIso = +new Date("2000-01-01T00:00:00.000Z")
    ? parseIsoNative
    : utcParse(isoSpecifier);

/* harmony default export */ const isoParse = (parseIso);

;// CONCATENATED MODULE: ./node_modules/d3-time-format/src/index.js





;// CONCATENATED MODULE: ./node_modules/d3-timer/src/interval.js


/* harmony default export */ function src_interval(callback, delay, time) {
  var t = new Timer, total = delay;
  if (delay == null) return t.restart(callback, delay, time), t;
  t._restart = t.restart;
  t.restart = function(callback, delay, time) {
    delay = +delay, time = time == null ? now() : +time;
    t._restart(function tick(elapsed) {
      elapsed += total;
      t._restart(tick, total += delay, time);
      callback(elapsed);
    }, delay, time);
  }
  t.restart(callback, delay, time);
  return t;
}

;// CONCATENATED MODULE: ./node_modules/d3-timer/src/index.js






;// CONCATENATED MODULE: ./node_modules/d3-zoom/src/constant.js
/* harmony default export */ const d3_zoom_src_constant = (x => () => x);

;// CONCATENATED MODULE: ./node_modules/d3-zoom/src/event.js
function ZoomEvent(type, {
  sourceEvent,
  target,
  transform,
  dispatch
}) {
  Object.defineProperties(this, {
    type: {value: type, enumerable: true, configurable: true},
    sourceEvent: {value: sourceEvent, enumerable: true, configurable: true},
    target: {value: target, enumerable: true, configurable: true},
    transform: {value: transform, enumerable: true, configurable: true},
    _: {value: dispatch}
  });
}

;// CONCATENATED MODULE: ./node_modules/d3-zoom/src/transform.js
function Transform(k, x, y) {
  this.k = k;
  this.x = x;
  this.y = y;
}

Transform.prototype = {
  constructor: Transform,
  scale: function(k) {
    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);
  },
  translate: function(x, y) {
    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);
  },
  apply: function(point) {
    return [point[0] * this.k + this.x, point[1] * this.k + this.y];
  },
  applyX: function(x) {
    return x * this.k + this.x;
  },
  applyY: function(y) {
    return y * this.k + this.y;
  },
  invert: function(location) {
    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];
  },
  invertX: function(x) {
    return (x - this.x) / this.k;
  },
  invertY: function(y) {
    return (y - this.y) / this.k;
  },
  rescaleX: function(x) {
    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));
  },
  rescaleY: function(y) {
    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));
  },
  toString: function() {
    return "translate(" + this.x + "," + this.y + ") scale(" + this.k + ")";
  }
};

var transform_identity = new Transform(1, 0, 0);

transform_transform.prototype = Transform.prototype;

function transform_transform(node) {
  while (!node.__zoom) if (!(node = node.parentNode)) return transform_identity;
  return node.__zoom;
}

;// CONCATENATED MODULE: ./node_modules/d3-zoom/src/noevent.js
function src_noevent_nopropagation(event) {
  event.stopImmediatePropagation();
}

/* harmony default export */ function d3_zoom_src_noevent(event) {
  event.preventDefault();
  event.stopImmediatePropagation();
}

;// CONCATENATED MODULE: ./node_modules/d3-zoom/src/zoom.js










// Ignore right-click, since that should open the context menu.
// except for pinch-to-zoom, which is sent as a wheel+ctrlKey event
function zoom_defaultFilter(event) {
  return (!event.ctrlKey || event.type === 'wheel') && !event.button;
}

function zoom_defaultExtent() {
  var e = this;
  if (e instanceof SVGElement) {
    e = e.ownerSVGElement || e;
    if (e.hasAttribute("viewBox")) {
      e = e.viewBox.baseVal;
      return [[e.x, e.y], [e.x + e.width, e.y + e.height]];
    }
    return [[0, 0], [e.width.baseVal.value, e.height.baseVal.value]];
  }
  return [[0, 0], [e.clientWidth, e.clientHeight]];
}

function defaultTransform() {
  return this.__zoom || transform_identity;
}

function defaultWheelDelta(event) {
  return -event.deltaY * (event.deltaMode === 1 ? 0.05 : event.deltaMode ? 1 : 0.002) * (event.ctrlKey ? 10 : 1);
}

function zoom_defaultTouchable() {
  return navigator.maxTouchPoints || ("ontouchstart" in this);
}

function defaultConstrain(transform, extent, translateExtent) {
  var dx0 = transform.invertX(extent[0][0]) - translateExtent[0][0],
      dx1 = transform.invertX(extent[1][0]) - translateExtent[1][0],
      dy0 = transform.invertY(extent[0][1]) - translateExtent[0][1],
      dy1 = transform.invertY(extent[1][1]) - translateExtent[1][1];
  return transform.translate(
    dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1),
    dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1)
  );
}

/* harmony default export */ function zoom() {
  var filter = zoom_defaultFilter,
      extent = zoom_defaultExtent,
      constrain = defaultConstrain,
      wheelDelta = defaultWheelDelta,
      touchable = zoom_defaultTouchable,
      scaleExtent = [0, Infinity],
      translateExtent = [[-Infinity, -Infinity], [Infinity, Infinity]],
      duration = 250,
      interpolate = src_zoom,
      listeners = src_dispatch("start", "zoom", "end"),
      touchstarting,
      touchfirst,
      touchending,
      touchDelay = 500,
      wheelDelay = 150,
      clickDistance2 = 0,
      tapDistance = 10;

  function zoom(selection) {
    selection
        .property("__zoom", defaultTransform)
        .on("wheel.zoom", wheeled, {passive: false})
        .on("mousedown.zoom", mousedowned)
        .on("dblclick.zoom", dblclicked)
      .filter(touchable)
        .on("touchstart.zoom", touchstarted)
        .on("touchmove.zoom", touchmoved)
        .on("touchend.zoom touchcancel.zoom", touchended)
        .style("-webkit-tap-highlight-color", "rgba(0,0,0,0)");
  }

  zoom.transform = function(collection, transform, point, event) {
    var selection = collection.selection ? collection.selection() : collection;
    selection.property("__zoom", defaultTransform);
    if (collection !== selection) {
      schedule(collection, transform, point, event);
    } else {
      selection.interrupt().each(function() {
        gesture(this, arguments)
          .event(event)
          .start()
          .zoom(null, typeof transform === "function" ? transform.apply(this, arguments) : transform)
          .end();
      });
    }
  };

  zoom.scaleBy = function(selection, k, p, event) {
    zoom.scaleTo(selection, function() {
      var k0 = this.__zoom.k,
          k1 = typeof k === "function" ? k.apply(this, arguments) : k;
      return k0 * k1;
    }, p, event);
  };

  zoom.scaleTo = function(selection, k, p, event) {
    zoom.transform(selection, function() {
      var e = extent.apply(this, arguments),
          t0 = this.__zoom,
          p0 = p == null ? centroid(e) : typeof p === "function" ? p.apply(this, arguments) : p,
          p1 = t0.invert(p0),
          k1 = typeof k === "function" ? k.apply(this, arguments) : k;
      return constrain(translate(scale(t0, k1), p0, p1), e, translateExtent);
    }, p, event);
  };

  zoom.translateBy = function(selection, x, y, event) {
    zoom.transform(selection, function() {
      return constrain(this.__zoom.translate(
        typeof x === "function" ? x.apply(this, arguments) : x,
        typeof y === "function" ? y.apply(this, arguments) : y
      ), extent.apply(this, arguments), translateExtent);
    }, null, event);
  };

  zoom.translateTo = function(selection, x, y, p, event) {
    zoom.transform(selection, function() {
      var e = extent.apply(this, arguments),
          t = this.__zoom,
          p0 = p == null ? centroid(e) : typeof p === "function" ? p.apply(this, arguments) : p;
      return constrain(transform_identity.translate(p0[0], p0[1]).scale(t.k).translate(
        typeof x === "function" ? -x.apply(this, arguments) : -x,
        typeof y === "function" ? -y.apply(this, arguments) : -y
      ), e, translateExtent);
    }, p, event);
  };

  function scale(transform, k) {
    k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], k));
    return k === transform.k ? transform : new Transform(k, transform.x, transform.y);
  }

  function translate(transform, p0, p1) {
    var x = p0[0] - p1[0] * transform.k, y = p0[1] - p1[1] * transform.k;
    return x === transform.x && y === transform.y ? transform : new Transform(transform.k, x, y);
  }

  function centroid(extent) {
    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];
  }

  function schedule(transition, transform, point, event) {
    transition
        .on("start.zoom", function() { gesture(this, arguments).event(event).start(); })
        .on("interrupt.zoom end.zoom", function() { gesture(this, arguments).event(event).end(); })
        .tween("zoom", function() {
          var that = this,
              args = arguments,
              g = gesture(that, args).event(event),
              e = extent.apply(that, args),
              p = point == null ? centroid(e) : typeof point === "function" ? point.apply(that, args) : point,
              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),
              a = that.__zoom,
              b = typeof transform === "function" ? transform.apply(that, args) : transform,
              i = interpolate(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));
          return function(t) {
            if (t === 1) t = b; // Avoid rounding error on end.
            else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }
            g.zoom(null, t);
          };
        });
  }

  function gesture(that, args, clean) {
    return (!clean && that.__zooming) || new Gesture(that, args);
  }

  function Gesture(that, args) {
    this.that = that;
    this.args = args;
    this.active = 0;
    this.sourceEvent = null;
    this.extent = extent.apply(that, args);
    this.taps = 0;
  }

  Gesture.prototype = {
    event: function(event) {
      if (event) this.sourceEvent = event;
      return this;
    },
    start: function() {
      if (++this.active === 1) {
        this.that.__zooming = this;
        this.emit("start");
      }
      return this;
    },
    zoom: function(key, transform) {
      if (this.mouse && key !== "mouse") this.mouse[1] = transform.invert(this.mouse[0]);
      if (this.touch0 && key !== "touch") this.touch0[1] = transform.invert(this.touch0[0]);
      if (this.touch1 && key !== "touch") this.touch1[1] = transform.invert(this.touch1[0]);
      this.that.__zoom = transform;
      this.emit("zoom");
      return this;
    },
    end: function() {
      if (--this.active === 0) {
        delete this.that.__zooming;
        this.emit("end");
      }
      return this;
    },
    emit: function(type) {
      var d = src_select(this.that).datum();
      listeners.call(
        type,
        this.that,
        new ZoomEvent(type, {
          sourceEvent: this.sourceEvent,
          target: zoom,
          type,
          transform: this.that.__zoom,
          dispatch: listeners
        }),
        d
      );
    }
  };

  function wheeled(event, ...args) {
    if (!filter.apply(this, arguments)) return;
    var g = gesture(this, args).event(event),
        t = this.__zoom,
        k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], t.k * Math.pow(2, wheelDelta.apply(this, arguments)))),
        p = pointer(event);

    // If the mouse is in the same location as before, reuse it.
    // If there were recent wheel events, reset the wheel idle timeout.
    if (g.wheel) {
      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {
        g.mouse[1] = t.invert(g.mouse[0] = p);
      }
      clearTimeout(g.wheel);
    }

    // If this wheel event won’t trigger a transform change, ignore it.
    else if (t.k === k) return;

    // Otherwise, capture the mouse point and location at the start.
    else {
      g.mouse = [p, t.invert(p)];
      interrupt(this);
      g.start();
    }

    d3_zoom_src_noevent(event);
    g.wheel = setTimeout(wheelidled, wheelDelay);
    g.zoom("mouse", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent, translateExtent));

    function wheelidled() {
      g.wheel = null;
      g.end();
    }
  }

  function mousedowned(event, ...args) {
    if (touchending || !filter.apply(this, arguments)) return;
    var currentTarget = event.currentTarget,
        g = gesture(this, args, true).event(event),
        v = src_select(event.view).on("mousemove.zoom", mousemoved, true).on("mouseup.zoom", mouseupped, true),
        p = pointer(event, currentTarget),
        x0 = event.clientX,
        y0 = event.clientY;

    nodrag(event.view);
    src_noevent_nopropagation(event);
    g.mouse = [p, this.__zoom.invert(p)];
    interrupt(this);
    g.start();

    function mousemoved(event) {
      d3_zoom_src_noevent(event);
      if (!g.moved) {
        var dx = event.clientX - x0, dy = event.clientY - y0;
        g.moved = dx * dx + dy * dy > clickDistance2;
      }
      g.event(event)
       .zoom("mouse", constrain(translate(g.that.__zoom, g.mouse[0] = pointer(event, currentTarget), g.mouse[1]), g.extent, translateExtent));
    }

    function mouseupped(event) {
      v.on("mousemove.zoom mouseup.zoom", null);
      yesdrag(event.view, g.moved);
      d3_zoom_src_noevent(event);
      g.event(event).end();
    }
  }

  function dblclicked(event, ...args) {
    if (!filter.apply(this, arguments)) return;
    var t0 = this.__zoom,
        p0 = pointer(event.changedTouches ? event.changedTouches[0] : event, this),
        p1 = t0.invert(p0),
        k1 = t0.k * (event.shiftKey ? 0.5 : 2),
        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, args), translateExtent);

    d3_zoom_src_noevent(event);
    if (duration > 0) src_select(this).transition().duration(duration).call(schedule, t1, p0, event);
    else src_select(this).call(zoom.transform, t1, p0, event);
  }

  function touchstarted(event, ...args) {
    if (!filter.apply(this, arguments)) return;
    var touches = event.touches,
        n = touches.length,
        g = gesture(this, args, event.changedTouches.length === n).event(event),
        started, i, t, p;

    src_noevent_nopropagation(event);
    for (i = 0; i < n; ++i) {
      t = touches[i], p = pointer(t, this);
      p = [p, this.__zoom.invert(p), t.identifier];
      if (!g.touch0) g.touch0 = p, started = true, g.taps = 1 + !!touchstarting;
      else if (!g.touch1 && g.touch0[2] !== p[2]) g.touch1 = p, g.taps = 0;
    }

    if (touchstarting) touchstarting = clearTimeout(touchstarting);

    if (started) {
      if (g.taps < 2) touchfirst = p[0], touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);
      interrupt(this);
      g.start();
    }
  }

  function touchmoved(event, ...args) {
    if (!this.__zooming) return;
    var g = gesture(this, args).event(event),
        touches = event.changedTouches,
        n = touches.length, i, t, p, l;

    d3_zoom_src_noevent(event);
    for (i = 0; i < n; ++i) {
      t = touches[i], p = pointer(t, this);
      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;
      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;
    }
    t = g.that.__zoom;
    if (g.touch1) {
      var p0 = g.touch0[0], l0 = g.touch0[1],
          p1 = g.touch1[0], l1 = g.touch1[1],
          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,
          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;
      t = scale(t, Math.sqrt(dp / dl));
      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];
      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];
    }
    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];
    else return;

    g.zoom("touch", constrain(translate(t, p, l), g.extent, translateExtent));
  }

  function touchended(event, ...args) {
    if (!this.__zooming) return;
    var g = gesture(this, args).event(event),
        touches = event.changedTouches,
        n = touches.length, i, t;

    src_noevent_nopropagation(event);
    if (touchending) clearTimeout(touchending);
    touchending = setTimeout(function() { touchending = null; }, touchDelay);
    for (i = 0; i < n; ++i) {
      t = touches[i];
      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;
      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;
    }
    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;
    if (g.touch0) g.touch0[1] = this.__zoom.invert(g.touch0[0]);
    else {
      g.end();
      // If this was a dbltap, reroute to the (optional) dblclick.zoom handler.
      if (g.taps === 2) {
        t = pointer(t, this);
        if (Math.hypot(touchfirst[0] - t[0], touchfirst[1] - t[1]) < tapDistance) {
          var p = src_select(this).on("dblclick.zoom");
          if (p) p.apply(this, arguments);
        }
      }
    }
  }

  zoom.wheelDelta = function(_) {
    return arguments.length ? (wheelDelta = typeof _ === "function" ? _ : d3_zoom_src_constant(+_), zoom) : wheelDelta;
  };

  zoom.filter = function(_) {
    return arguments.length ? (filter = typeof _ === "function" ? _ : d3_zoom_src_constant(!!_), zoom) : filter;
  };

  zoom.touchable = function(_) {
    return arguments.length ? (touchable = typeof _ === "function" ? _ : d3_zoom_src_constant(!!_), zoom) : touchable;
  };

  zoom.extent = function(_) {
    return arguments.length ? (extent = typeof _ === "function" ? _ : d3_zoom_src_constant([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;
  };

  zoom.scaleExtent = function(_) {
    return arguments.length ? (scaleExtent[0] = +_[0], scaleExtent[1] = +_[1], zoom) : [scaleExtent[0], scaleExtent[1]];
  };

  zoom.translateExtent = function(_) {
    return arguments.length ? (translateExtent[0][0] = +_[0][0], translateExtent[1][0] = +_[1][0], translateExtent[0][1] = +_[0][1], translateExtent[1][1] = +_[1][1], zoom) : [[translateExtent[0][0], translateExtent[0][1]], [translateExtent[1][0], translateExtent[1][1]]];
  };

  zoom.constrain = function(_) {
    return arguments.length ? (constrain = _, zoom) : constrain;
  };

  zoom.duration = function(_) {
    return arguments.length ? (duration = +_, zoom) : duration;
  };

  zoom.interpolate = function(_) {
    return arguments.length ? (interpolate = _, zoom) : interpolate;
  };

  zoom.on = function() {
    var value = listeners.on.apply(listeners, arguments);
    return value === listeners ? zoom : value;
  };

  zoom.clickDistance = function(_) {
    return arguments.length ? (clickDistance2 = (_ = +_) * _, zoom) : Math.sqrt(clickDistance2);
  };

  zoom.tapDistance = function(_) {
    return arguments.length ? (tapDistance = +_, zoom) : tapDistance;
  };

  return zoom;
}

;// CONCATENATED MODULE: ./node_modules/d3-zoom/src/index.js



;// CONCATENATED MODULE: ./node_modules/d3/src/index.js































;// CONCATENATED MODULE: ./node_modules/google-charts/dist/googleCharts.esm.js
/* googleCharts.js Version: 1.5.0 Built On: 2018-12-30 */
const loadScript = Symbol('loadScript');
const instance = Symbol('instance');
let _instance;

class GoogleChartsManager {
    get [instance]() {
        return _instance
    }

    set [instance](value) {
        _instance = value;
    }

    constructor() {
        if (this[instance]) {
            return this[instance]
        }

        this[instance] = this;
    }

    reset() {
        _instance = null;
    }

    [loadScript]() {
        if (!this.scriptPromise) {
            this.scriptPromise = new Promise(resolve => {
                const body = document.getElementsByTagName('body')[0];
                const script = document.createElement('script');
                script.type = 'text/javascript';
                script.onload = function() {
                    GoogleCharts.api = window.google;
                    GoogleCharts.api.charts.load('current', {
                        packages: ['corechart', 'table'],
                    });
                    GoogleCharts.api.charts.setOnLoadCallback(() => {
                        resolve();
                    });
                };
                script.src = 'https://www.gstatic.com/charts/loader.js';
                body.appendChild(script);
            });
        }
        return this.scriptPromise
    }

    load(callback, type) {
        return this[loadScript]().then(() => {
            if (type) {
                let config = {};
                if (type instanceof Object) {
                    config = type;
                } else if (Array.isArray(type)) {
                    config = { packages: type };
                } else {
                    config = { packages: [type] };
                }
                this.api.charts.load('current', config);
                this.api.charts.setOnLoadCallback(callback);
            } else {
                if(typeof callback != 'function') {
                    throw('callback must be a function');
                } else {
                    callback();               
                }
            }
        })
    }
}

const GoogleCharts = new GoogleChartsManager();

/* harmony default export */ const googleCharts_esm = ((/* unused pure expression or super */ null && (GoogleChartsManager)));


;// CONCATENATED MODULE: ./src/components/chatwindow/config/kore-config.ts
// var KoreSDK = KoreSDK || {};
var chatConfig = {};
var botOptions = {};
botOptions.logLevel = 'debug';
botOptions.koreAPIUrl = "https://bots.kore.ai/api/";
botOptions.API_KEY_CONFIG = {
    bootstrapURL: botOptions.koreAPIUrl + 'platform/websdk',
    KEY: 'YOUR_API_KEY'
},
    botOptions.koreSpeechAPIUrl = ""; //deprecated
//botOptions.bearer = "bearer xyz-------------------";
//botOptions.ttsSocketUrl = '';//deprecated
//botOptions.koreAnonymousFn = koreAnonymousFn;
botOptions.JWTUrl = "PLEASE_ENTER_JWTURL_HERE";
botOptions.userIdentity = 'PLEASE_ENTER_USER_EMAIL_ID'; // Provide users email id here
botOptions.botInfo = { name: "PLEASE_ENTER_BOT_NAME", "_id": "PLEASE_ENTER_BOT_ID" }; // bot name is case sensitive
botOptions.clientId = "PLEASE_ENTER_CLIENT_ID";
botOptions.clientSecret = "PLEASE_ENTER_CLIENT_SECRET";
//for webhook based communication use following option 
botOptions.webhookConfig = {
    enable: false,
    webhookURL: 'PLEASE_PROVIDE_WEBHOOK_URL',
    apiVersion: 2
};
// To modify the web socket url use the following option
// botOptions.reWriteSocketURL = {
//     protocol: 'PROTOCOL_TO_BE_REWRITTEN',
//     hostname: 'HOSTNAME_TO_BE_REWRITTEN',
//     port: 'PORT_TO_BE_REWRITTEN'
// };
chatConfig = {
    botOptions: botOptions,
    container: 'body',
    allowIframe: false,
    isSendButton: false,
    allowLocation: true,
    loadHistory: true,
    messageHistoryLimit: 10,
    googleMapsAPIKey: "",
    minimizeMode: true,
    multiPageApp: {
        enable: false,
        userIdentityStore: 'localStorage',
        chatWindowStateStore: 'localStorage' //'localStorage || sessionStorage'
    },
    supportDelayedMessages: true,
    pingPong: {
        interval: 30000 //In milli sec, To keep the websocket alive skd send ping message in this interval      
    },
    enableThemes: true //set true to apply the branding configured    
};
/* harmony default export */ const kore_config = (chatConfig);

;// CONCATENATED MODULE: ./src/libs/kore-graph-adapter/KoreGraphAdapter.js
/* provided dependency */ var jQuery = __webpack_require__(9755);





var KoreGraphAdapter = function ($, d3) {
  var chartColors = ['#75b0fe', '#f78083', '#99ed9e', '#fde296', '#26344a', '#5f6bf7', '#b3bac8', '#99a1fd', '#9cebf9', '#f7c7f4'];
  var available_charts = [];

  function drawD3Pie(msgData, dimens, selection, scaleLegend) {
    var payload = msgData; //msgData.message[0].component.payload

    var widthDivision = 3;
    var legendCenterOffset = 0;

    if (msgData.message) {
      payload = msgData.message[0].component.payload;
    } else {
      fromWidgets = true;
      widthDivision = 4;
      legendCenterOffset = -15;
    }

    var dataset = [];
    var sum = 0;

    for (var i = 0; i < payload.elements.length; i++) {
      dataset[i] = {};
      dataset[i].label = payload.elements[i].title;
      dataset[i].count = payload.elements[i].value;
      dataset[i].dispVal = payload.elements[i].displayValue;

      if (payload.elements[i].hasOwnProperty('subTitle')) {
        dataset[i].subTitle = payload.elements[i].subTitle;
      }

      sum = sum + Number(dataset[i].count);
    }

    var percentAccumulation = 0;

    for (var i = 0; i < payload.elements.length; i++) {
      dataset[i].percentage = Math.round(dataset[i].count / sum * 100);

      if (i === payload.elements.length - 1) {
        dataset[i].percentage = 100 - percentAccumulation;
      }

      percentAccumulation = percentAccumulation + dataset[i].percentage;
    } // chart dimensions


    var width = dimens.width; //dimens.width

    var height = dimens.height; //dimens.height
    // a circle chart needs a radius

    var radius = Math.min(width, height) / 2 - 20; // legend dimensions

    var legendRectSize = dimens.legendRectSize; // defines the size of the colored squares in legend   dimens.legendRectSize

    var legendSpacing = dimens.legendSpacing; // defines spacing between squares                    dimens.legendSpacing
    // define color scale
    // var color = d3.scaleOrdinal(['#75b0fe','#f78083','#99ed9e','#fde296','#26344a','#5f6bf7','#b3bac8','#99a1fd','#9cebf9','#f7c7f4']);

    var color = d3.scaleOrdinal(['#5bc8c4', '#4a9af2', '#8ecb60', '#e7cc61', '#eeaf4b', '#ef7e63', '#8e8eb7', '#6483c3', '#2249ab', '#f352b7']); // more color scales: https://bl.ocks.org/pstuffa/3393ff2711a53975040077b7453781a9

    var svg = d3.select(selection) // select element in the DOM with id 'chart'
    .append('svg') // append an svg element to the element we've selected
    .attr('width', width - 15) // set the width of the svg element we just added
    .attr('height', height) // set the height of the svg element we just added
    .append('g') // append 'g' element to the svg element
    .attr('class', 'pieRegular').attr('transform', 'translate(' + (width / widthDivision + 3) + ',' + height / 2 + ')'); // our reference is now to the 'g' element. centerting the 'g' element to the svg element

    var arc = d3.arc().innerRadius(0) // none for pie chart
    .outerRadius(radius); // size of overall chart

    var outerArc = d3.arc().outerRadius(radius * 1.05).innerRadius(radius * 0.9);
    var pie = d3.pie() // start and end angles of the segments
    .value(function (d) {
      return d.count;
    }) // how to extract the numerical data from each entry in our dataset
    .sort(null); // by default, data sorts in oescending value. this will mess with our animation so we set it to null

    var legendTooltip = d3.select(selection).append("div").attr("class", "legend-tooltip-pie-chart no-show").attr('transform', function (d) {
      console.log(d);
    }).on("mouseleave", function (d) {
      legendTooltip.attr('class', 'legend-tooltip-pie-chart no-show');
      $('.more-legend').removeClass('no-visible');
    });
    $('.listTemplateContainer').on('click', function () {
      $('.legend-tooltip-pie-chart').removeClass('only-show').addClass('no-show');
    });
    var totalHeightLegends = (dataset.length - 4) * (legendRectSize + legendSpacing + 20);
    var legendTooltipSvg = legendTooltip.append("svg").attr("width", "150").attr("height", totalHeightLegends + 23); // define tooltip

    var tooltip = d3.select(selection) // select element in the DOM with id 'chart'
    .append('div') // append a div element to the element we've selected                                    
    .attr('class', 'tooltip') // add class 'tooltip' on the divs we just selected
    .style("display", "none");
    tooltip.append('div') // add divs to the tooltip defined above                            
    .attr('class', 'label'); // add class 'label' on the selection                         

    tooltip.append('div') // add divs to the tooltip defined above                     
    .attr('class', 'count'); // add class 'count' on the selection                  

    tooltip.append('div') // add divs to the tooltip defined above  
    .attr('class', 'percent'); // add class 'percent' on the selection

    dataset.forEach(function (d) {
      d.count = +d.count; // calculate count as we iterate through the data

      d.enabled = true; // add enabled property to track which entries are checked
    }); // creating the chart

    var path = svg.selectAll('path') // select all path elements inside the svg. specifically the 'g' element. they don't exist yet but they will be created below
    .data(pie(dataset)) //associate dataset wit he path elements we're about to create. must pass through the pie function. it magically knows how to extract values and bakes it into the pie
    .enter() //creates placeholder nodes for each of the values
    .append('g').attr('class', 'arcRegular').append('path') // replace placeholders with path elements
    .attr('d', arc) // define d attribute with arc function above
    .attr('fill', function (d) {
      return color(d.data.label);
    }) // use color scale to define fill of each label in dataset
    .each(function (d) {
      this._current - d;
    }); // creates a smooth animation for each track
    //MOUSE HOVER ENABLE
    // mouse event handlers are attached to path so they need to come after its definition

    path.on('mouseover', function (e, d) {
      // when mouse enters div      
      var total = d3.sum(dataset.map(function (d) {
        // calculate the total number of tickets in the dataset         
        return d.enabled ? d.count : 0; // checking to see if the entry is enabled. if it isn't, we return 0 and cause other percentages to increase                                      
      })); //  var percent = Math.round(1000 * d.data.count / total) / 10; // calculate percent
      //  tooltip.select('.label').html(d.data.label); // set current label           

      if ($('#myPreviewModal').css('display') === 'block') {
        if (d.data.dispVal) {
          tooltip.select('#myPreviewModal .count').html(d.data.dispVal); // set current count
        } else {
          tooltip.select('#myPreviewModal .count').html(d.value); // set current count
        }
      } else {
        if (d.data.dispVal) {
          tooltip.select('.count').html(d.data.dispVal); // set current count       
        } else {
          tooltip.select('.count').html(d.value); // set current count       
        }
      } // tooltip.select('.percent').html(percent + '%'); // set percent calculated above          


      tooltip.style('display', 'block'); // set display                     
    });
    path.on('mouseout', function () {
      // when mouse leaves div                        
      tooltip.style('display', 'none'); // hide tooltip for that element
    });
    path.on('mousemove', function (e, d) {
      // when mouse moves                  
      tooltip.style('top', e.layerY + 10 + 'px') // always 10px below the cursor
      .style('left', e.layerX + 10 + 'px'); // always 10px to the right of the mouse
    });
    svg.append("g").attr("class", "labels");
    svg.append("g").attr("class", "lines");
    svg.append('g').classed('labels', true);
    svg.append('g').classed('lines', true);
    var polyline = svg.select('.lines').selectAll('polyline').data(pie(dataset)).enter().append('polyline').attr('points', function (d) {
      // see label transform function for explanations of these three lines.
      var pos = outerArc.centroid(d);
      pos[0] = radius * 0.95 * (midAngle(d) < Math.PI ? 1 : -1);
      return [arc.centroid(d), outerArc.centroid(d), pos];
    });
    var label = svg.select('.labels').selectAll('text').data(pie(dataset)).enter().append('text').attr('dy', '.35em').attr('class', 'chart-disp-val').html(function (d) {
      return d.data.percentage + "%";
    }).attr('transform', function (d) {
      var pos = outerArc.centroid(d);
      pos[0] = radius * 0.95 * (midAngle(d) < Math.PI ? 1 : -1);
      return 'translate(' + pos + ')';
    }).style('text-anchor', function (d) {
      return midAngle(d) < Math.PI ? 'start' : 'end';
    });
    var tt_legend = d3.select(selection).append("div").attr("class", "tooltip-legend no-show"); // define legend

    var legend = legendTooltipSvg.selectAll('.legend' + window.PieChartCount) // selecting elements with class 'legend'
    .data(color.domain().slice(4)) // refers to an array of labels from our dataset
    .enter() // creates placeholder
    .append('g') // replace placeholders with g elements
    .attr('class', 'legend' + window.PieChartCount) // each g is given a legend class
    .attr('transform', function (d, i) {
      var height = legendRectSize + legendSpacing + 25; // height of element is the height of the colored square plus the spacing      

      var offset = height * color.domain().length / 2; // vertical offset of the entire legend = height of a single element & half the total number of elements  

      if (color.domain() < 4) {
        offset = height * color.domain().length / 2; // vertical offset of the entire legend = height of a single element & half the total number of elements  
      } else {
        offset = height * 2;
      }

      var horz = scaleLegend * legendRectSize; // the legend is shifted to the left to make room for the text

      var vert = (i + 6) * height - offset - 135; // the top of the element is hifted up or down from the center using the offset defiend earlier and the index of the current element 'i'               

      return 'translate(10,' + vert + ')'; //return translation   
    }); // adding colored squares to legend

    legend.append('rect') // append rectangle squares to legend                                   
    .attr('width', '7') // width of rect size is defined above                        
    .attr('height', '7') // height of rect size is defined above                    
    .style('fill', color) // each fill is passed a color
    .style('stroke', color); // each stroke is passed a color
    // adding text to legend

    legend.append('text').attr('x', legendRectSize + legendSpacing + 4).attr('y', legendRectSize - legendSpacing).attr('class', 'legend-title').text(function (d) {
      if (d.length > 15) {
        return d.slice(0, 12) + '...';
      } else {
        return d;
      }
    }).on("mouseover", function (e, d) {
      if (d.length > 15) {
        tt_legend.attr('class', 'only-show tooltip-legend');
        tt_legend.html(d).style("left", e.pageX - 1090 + "px").style("top", e.pageY - 164 + "px");
      }
    }).on("mouseout", function (d) {
      if (d.length > 15) {
        tt_legend.attr('class', 'no-show tooltip-legend');
      }
    });
    legend.append('text').attr('x', legendRectSize + legendSpacing + 4).attr('y', legendRectSize - legendSpacing + 16).attr('class', 'legend-value').attr("font-weight", "bold").text(function (d) {
      for (var i = 0; i < payload.elements.length; i++) {
        if (dataset[i].label == d) {
          break;
        }
      }

      if (payload.elements[i].hasOwnProperty('subTitle')) {
        return payload.elements[i].subTitle;
      }

      return dataset[i].count;
    });
    var legend2 = svg.selectAll('.legend' + window.PieChartCount) // selecting elements with class 'legend'
    .data(color.domain().slice(0, 4)) // refers to an array of labels from our dataset
    .enter() // creates placeholder
    .append('g') // replace placeholders with g elements
    .attr('class', 'legend' + window.PieChartCount) // each g is given a legend class
    .attr('transform', function (d, i) {
      // var height = legendRectSize + legendSpacing + 25; // height of element is the height of the colored square plus the spacing      
      // var offset = 0;
      // if(color.domain() < 5) {
      //     offset = height * color.domain().length / 2; // vertical offset of the entire legend = height of a single element & half the total number of elements  
      // }
      // else {
      //     offset = height * 2;
      // }
      // var horz = scaleLegend * legendRectSize; // the legend is shifted to the left to make room for the text
      // var vert = (i + 4) * height - offset-135; // the top of the element is hifted up or down from the center using the offset defiend earlier and the index of the current element 'i'               
      // return 'translate(100,' + vert + ')'; //return translation 
      var vert = -60;

      for (var i = 0; i < dataset.length; i++) {
        if (d == dataset[i].label) {
          // return 'translate(105,'+ vert + ')';
          var horizonta = Number(this.parentElement.getAttribute('transform').slice(10, this.parentElement.getAttribute('transform').indexOf(',')));
          horizonta = horizonta + 15;
          return 'translate(' + horizonta + ',' + vert + ')';
        } else if (dataset[i].hasOwnProperty('subTitle') && dataset[i].subTitle == "") {
          vert = vert + 18;
        } else {
          vert = vert + 33;
        }
      }
    }); // adding colored squares to legend

    legend2.append('rect') // append rectangle squares to legend                                   
    .attr('width', '7') // width of rect size is defined above                        
    .attr('height', '7') // height of rect size is defined above                    
    .style('fill', color) // each fill is passed a color
    .style('stroke', color); // each stroke is passed a color
    // adding text to legend

    legend2.append('text').attr('x', legendRectSize + legendSpacing + 4).attr('y', legendRectSize - legendSpacing).attr('class', 'legend-title').text(function (d) {
      if (d.length > 15) {
        return d.slice(0, 12) + '...';
      } else {
        return d;
      }
    }) // .attr('fill', '#8a959f')
    .on("mouseover", function (e, d) {
      if (d.length > 15) {
        tt_legend.attr('class', 'only-show tooltip-legend');
        tt_legend.html(d).style("left", e.pageX - 1090 + "px").style("top", e.pageY - 164 + "px");
      }
    }).on("mouseout", function (d) {
      if (d.length > 15) {
        tt_legend.attr('class', 'no-show tooltip-legend');
      }
    });
    legend2.append('text').attr('x', legendRectSize + legendSpacing + 4).attr('y', legendRectSize - legendSpacing + 16).attr('class', 'legend-value').attr("font-weight", "bold").text(function (d) {
      for (var i = 0; i < payload.elements.length; i++) {
        if (dataset[i].label == d) {
          break;
        }
      }

      if (payload.elements[i].hasOwnProperty('subTitle')) {
        return payload.elements[i].subTitle;
      }

      return dataset[i].count;
    });

    if (color.domain().length > 4) {
      svg.data(color.domain()).append('g').append('text').text('More...').attr('class', 'more-legend') // .attr('color', '#009dab')
      .attr("fill", "#009dab").attr("font-weight", "bold").attr("cursor", "pointer").attr('transform', function (d) {
        var height = legendRectSize + legendSpacing + 25; // height of element is the height of the colored square plus the spacing      

        var offset = height * color.domain().length / 2; // vertical offset of the entire legend = height of a single element & half the total number of elements  

        offset = height * 2;
        var vert = 7 * height - offset - 115;
        var horz;

        try {
          var sel = $(this).parent().siblings('.legend0')[0].getAttribute('transform');
          horz = sel.slice(10, sel.lastIndexOf(','));
        } catch (e) {
          horz = 110;
        }

        return 'translate(' + horz + ',' + vert + ')';
      }).on("mouseover", function (d) {
        var parTop = $(this).closest('.listViewTmplContentChild').offset().top;
        var parLeft = $(this).closest('.listViewTmplContentChild').offset().left;
        var morTop = $(this).offset().top;
        var morLeft = $(this).offset().left;
        var posTop = morTop - parTop - 87.5;
        var posLef = morLeft - parLeft - 15;
        legendTooltip.attr('class', 'legend-tooltip-pie-chart only-show').style('position', 'absolute').style('left', posLef).style('top', posTop);
        $(this).addClass('no-visible');
      });
    }

    function midAngle(d) {
      return d.startAngle + (d.endAngle - d.startAngle) / 2;
    }
  }

  function drawD3PieDonut(msgData, dimens, selection, scaleLegend, chart_type) {
    var width = dimens.width,
        height = dimens.height,
        radius = Math.min(width, height) / 2 - 10;
    var data = [];
    var sum = 0;
    var payload = msgData; //msgData.message[0].component.payload

    var widthDivision = 3;
    var legendCenterOffset = 0;

    if (msgData.message) {
      payload = msgData.message[0].component.payload;
    } else {
      fromWidgets = true;
      widthDivision = 4;
      legendCenterOffset = -15;
    }

    for (var i = 0; i < payload.elements.length; i++) {
      data[i] = {};
      data[i].label = payload.elements[i].title;
      data[i].count = Number(payload.elements[i].value);
      data[i].dispVal = payload.elements[i].displayValue;

      if (payload.elements[i].hasOwnProperty('subTitle')) {
        data[i].subTitle = payload.elements[i].subTitle;
      }

      sum = sum + Number(payload.elements[i].value);
    }

    var percentAccumulation = 0;

    for (var i = 0; i < payload.elements.length; i++) {
      data[i].percentage = Math.round(data[i].count / sum * 100);

      if (i === payload.elements.length - 1) {
        data[i].percentage = 100 - percentAccumulation;
      }

      percentAccumulation = percentAccumulation + data[i].percentage;
    } // legend dimensions


    var legendRectSize = dimens.legendRectSize; // defines the size of the colored squares in legend   dimens.legendRectSize

    var legendSpacing = dimens.legendSpacing; // defines spacing between squares                    dimens.legendSpacing
    // var color = d3.scaleOrdinal()
    // .range(['#75b0fe','#f78083','#99ed9e','#fde296','#26344a','#5f6bf7','#b3bac8','#99a1fd','#9cebf9','#f7c7f4']);

    var color = d3.scaleOrdinal(['#5bc8c4', '#4a9af2', '#8ecb60', '#e7cc61', '#eeaf4b', '#ef7e63', '#8e8eb7', '#6483c3', '#2249ab', '#f352b7']);
    var arc = d3.arc().outerRadius(radius - 10).innerRadius(radius - 50);
    var outerArc = d3.arc().outerRadius(radius * 0.9).innerRadius(radius * 0.9);
    var pie = d3.pie().sort(null).value(function (d) {
      return d.count;
    });
    var legendTooltip = d3.select(selection).append("div").attr("class", "legend-tooltip-pie-chart no-show").on("mouseleave", function (d) {
      legendTooltip.attr('class', 'legend-tooltip-pie-chart no-show');
      $('.more-legend').removeClass('no-visible');
    });
    var totalHeightLegends = (data.length - 4) * (legendRectSize + legendSpacing + 20);
    var legendTooltipSvg = legendTooltip.append("svg").attr("width", "150").attr("height", totalHeightLegends + 23);
    $('.listTemplateContainer').on('click', function () {
      $('.legend-tooltip-pie-chart').removeClass('only-show').addClass('no-show');
    });
    var svg = d3.select(selection).append("svg").attr("width", width + 5).attr("height", height).append("g").attr("transform", "translate(" + (width / widthDivision + 13) + "," + height / 2 + ")");
    var g = svg.selectAll(".arc").data(pie(data)).enter().append("g").attr("class", "arc");
    g.append("path").attr("d", arc).style("fill", function (d) {
      return color(d.data.label);
    }); // define tooltip

    var tooltip = d3.select(selection) // select element in the DOM with id 'chart'
    .append('div') // append a div element to the element we've selected                                    
    .attr('class', 'tooltipDonut') // add class 'tooltip' on the divs we just selected
    .style("display", "none");
    tooltip.append('div') // add divs to the tooltip defined above                            
    .attr('class', 'label'); // add class 'label' on the selection                         

    tooltip.append('div') // add divs to the tooltip defined above                     
    .attr('class', 'countDonut'); // add class 'count' on the selection                  

    tooltip.append('div') // add divs to the tooltip defined above  
    .attr('class', 'percent'); // add class 'percent' on the selection

    data.forEach(function (d) {
      d.count = +d.count; // calculate count as we iterate through the data

      d.enabled = true; // add enabled property to track which entries are checked
    });
    svg.append("g").attr("class", "labels");
    svg.append("g").attr("class", "lines");
    svg.append('g').classed('labels', true);
    svg.append('g').classed('lines', true);
    var polyline = svg.select('.lines').selectAll('polyline').data(pie(data)).enter().append('polyline').attr('points', function (d) {
      // see label transform function for explanations of these three lines.
      var pos = outerArc.centroid(d);
      pos[0] = radius * 0.95 * (midAngle(d) < Math.PI ? 1 : -1);
      return [arc.centroid(d), outerArc.centroid(d), pos];
    }).style("display", function (d) {
      if (d.data.percentage == 0) {
        return 'none';
      } else {
        return 'block';
      }
    });
    var label = svg.select('.labels').selectAll('text').data(pie(data)).enter().append('text').attr('dy', '.35em').attr('class', 'chart-disp-val').html(function (d) {
      return d.data.percentage + "%";
    }).attr('transform', function (d) {
      var pos = outerArc.centroid(d);
      pos[0] = radius * 0.95 * (midAngle(d) < Math.PI ? 1 : -1);
      pos[0] = pos[0] + 10;
      return 'translate(' + pos + ')';
    }).style('text-anchor', function (d) {
      return midAngle(d) < Math.PI ? 'start' : 'end';
    }).style('display', function (d) {
      if (d.data.percentage == 0) {
        return 'none';
      } else {
        return 'block';
      }
    }); // mouse event handlers are attached to path so they need to come after its definition

    g.on('mouseover', function (d) {
      // when mouse enters div      
      var total = d3.sum(data.map(function (d) {
        // calculate the total number of tickets in the dataset         
        return d.enabled ? d.count : 0; // checking to see if the entry is enabled. if it isn't, we return 0 and cause other percentages to increase                                      
      })); //  var percent = Math.round(1000 * d.data.count / total) / 10; // calculate percent
      //  tooltip.select('.label').html(d.data.label); // set current label           

      if ($('#myPreviewModal').css('display') === 'block') {
        if (d.data && d.data.dispVal) {
          tooltip.select('#myPreviewModal .countDonut').html(d.data.dispVal); // set current count
        } else {
          tooltip.select('#myPreviewModal .countDonut').html(d.value); // set current count
        }
      } else {
        if (d.data && d.data.dispVal) {
          tooltip.select('.countDonut').html(d.data.dispVal); // set current count       
        } else {
          tooltip.select('.countDonut').html(d.value); // set current count       
        }
      } // tooltip.select('.percent').html(percent + '%'); // set percent calculated above          


      tooltip.style('display', 'block'); // set display                     
    });
    g.on('mouseout', function () {
      // when mouse leaves div                        
      tooltip.style('display', 'none'); // hide tooltip for that element
    });
    /*        if($('#myPreviewModal').css('display') === 'block') {
                g.on('mousemove', function(d) { // when mouse moves                  
                tooltip.style('top', (d3.event.layerY + 10) + 'px') // always 10px below the cursor
                .style('left', (d3.event.layerX + 900) + 'px'); // always 10px to the right of the mouse
                });
            }
        else {  */

    g.on('mousemove', function (e, d) {
      // when mouse moves                  
      tooltip.style('top', e.layerY + 10 + 'px') // always 10px below the cursor
      .style('left', e.layerX + 10 + 'px'); // always 10px to the right of the mouse
    }); //    }

    if (chart_type === 'donut_legend' || chart_type === 'donut') {
      var tt_legend = d3.select(selection).append("div").attr("class", "tooltip-legend no-show"); // define legend

      var legend = legendTooltipSvg.selectAll('.legend' + window.PieChartCount) // selecting elements with class 'legend'
      .data(color.domain().slice(4)) // refers to an array of labels from our dataset
      .enter() // creates placeholder
      .append('g') // replace placeholders with g elements
      .attr('class', 'legend' + window.PieChartCount) // each g is given a legend class
      .attr('transform', function (d, i) {
        var height = legendRectSize + legendSpacing + 25; // height of element is the height of the colored square plus the spacing      

        var offset = height * color.domain().length / 2; // vertical offset of the entire legend = height of a single element & half the total number of elements  

        if (color.domain() < 5) {
          offset = height * color.domain().length / 2; // vertical offset of the entire legend = height of a single element & half the total number of elements  
        } else {
          offset = height * 2;
        }

        var horz = scaleLegend * legendRectSize; // the legend is shifted to the left to make room for the text

        var vert = (i + 6) * height - offset - 135; // the top of the element is hifted up or down from the center using the offset defiend earlier and the index of the current element 'i'               

        return 'translate(10,' + vert + ')'; //return translation          
      }); // adding colored squares to legend

      legend.append('rect') // append rectangle squares to legend                                   
      .attr('width', '7') // width of rect size is defined above                        
      .attr('height', '7') // height of rect size is defined above                      
      .style('fill', color) // each fill is passed a color
      .style('stroke', color); // each stroke is passed a color
      // adding text to legend

      legend.append('text').attr('x', legendRectSize + legendSpacing + 4).attr('y', legendRectSize - legendSpacing).attr('class', 'legend-title').text(function (d) {
        if (d.length > 15) {
          return d.slice(0, 12) + '...';
        } else {
          return d;
        }
      }) // .attr('fill', '#8a959f')
      .on("mouseover", function (e, d) {
        if (d.length > 11) {
          tt_legend.attr('class', 'only-show tooltip-legend');
          tt_legend.html(d).style("left", e.pageX - 1090 + "px").style("top", e.pageY - 164 + "px");
        }
      }).on("mouseout", function (d) {
        if (d.length > 15) {
          tt_legend.attr('class', 'no-show tooltip-legend');
        }
      });
      legend.append('text').attr('x', legendRectSize + legendSpacing + 4).attr('y', legendRectSize - legendSpacing + 16).attr('class', 'legend-value').attr("font-weight", "bold").text(function (d) {
        for (var i = 0; i < payload.elements.length; i++) {
          if (data[i].label == d) {
            break;
          }
        }

        if (payload.elements[i].hasOwnProperty('subTitle')) {
          return payload.elements[i].subTitle;
        }

        return payload.elements[i].value;
      });
      var legend2 = svg.selectAll('.legend' + window.PieChartCount) // selecting elements with class 'legend'
      .data(color.domain().slice(0, 4)) // refers to an array of labels from our dataset
      .enter() // creates placeholder
      .append('g') // replace placeholders with g elements
      .attr('class', 'legend' + window.PieChartCount) // each g is given a legend class
      .attr('transform', function (d, i) {
        var vert = -60;

        for (var i = 0; i < data.length; i++) {
          if (d == data[i].label) {
            var horizonta = Number(this.parentElement.getAttribute('transform').slice(10, this.parentElement.getAttribute('transform').indexOf(',')));
            horizonta = horizonta + 15;
            return 'translate(' + horizonta + ',' + vert + ')';
          } else if (data[i].hasOwnProperty('subTitle') && data[i].subTitle == "") {
            vert = vert + 18;
          } else {
            vert = vert + 33;
          }
        }
      }); // adding colored squares to legend

      legend2.append('rect') // append rectangle squares to legend                                   
      .attr('width', '7') // width of rect size is defined above                        
      .attr('height', '7') // height of rect size is defined above                    
      .style('fill', color) // each fill is passed a color
      .style('stroke', color); // each stroke is passed a color
      // adding text to legend

      legend2.append('text').attr('x', legendRectSize + legendSpacing + 4).attr('y', legendRectSize - legendSpacing).attr('class', 'legend-title').text(function (d) {
        if (d.length > 15) {
          return d.slice(0, 12) + '...';
        } else {
          return d;
        }
      }) // .attr('fill', '#8a959f')
      .on("mouseover", function (e, d) {
        if (d.length > 15) {
          tt_legend.attr('class', 'only-show tooltip-legend');
          tt_legend.html(d).style("left", e.pageX - 1090 + "px").style("top", e.pageY - 164 + "px");
        }
      }).on("mouseout", function (d) {
        if (d.length > 15) {
          tt_legend.attr('class', 'no-show tooltip-legend');
        }
      });
      legend2.append('text').attr('x', legendRectSize + legendSpacing + 4).attr('y', legendRectSize - legendSpacing + 16).attr('class', 'legend-value').attr("font-weight", "bold").text(function (d) {
        for (var i = 0; i < payload.elements.length; i++) {
          if (data[i].label == d) {
            break;
          }
        }

        if (payload.elements[i].hasOwnProperty('subTitle')) {
          return payload.elements[i].subTitle;
        }

        return data[i].count;
      });

      if (color.domain().length > 4) {
        svg.data(color.domain()).append('g').append('text').text('More...').attr('class', 'more-legend') // .attr('color', '#009dab')
        .attr("fill", "#009dab").attr("font-weight", "bold").attr("cursor", "pointer").attr('transform', function (d) {
          var height = legendRectSize + legendSpacing + 25; // height of element is the height of the colored square plus the spacing      

          var offset = height * color.domain().length / 2; // vertical offset of the entire legend = height of a single element & half the total number of elements  

          offset = height * 2;
          var vert = 7 * height - offset - 115;
          var horz;

          try {
            var sel = $(this).parent().siblings('.legend0')[0].getAttribute('transform');
            horz = sel.slice(10, sel.lastIndexOf(','));
          } catch (e) {
            horz = 110;
          }

          return 'translate(' + horz + ',' + vert + ')';
        }).on("mouseover", function (d) {
          var parTop = $(this).closest('.listViewTmplContentChild').offset().top;
          var parLeft = $(this).closest('.listViewTmplContentChild').offset().left;
          var morTop = $(this).offset().top;
          var morLeft = $(this).offset().left;
          var posTop = morTop - parTop - 87.5;
          var posLef = morLeft - parLeft - 15;
          legendTooltip.attr('class', 'legend-tooltip-pie-chart only-show').style('position', 'absolute').style('left', posLef).style('top', posTop);
          $(this).addClass('no-visible');
        });
      }
    }

    function midAngle(d) {
      return d.startAngle + (d.endAngle - d.startAngle) / 2;
    }

    function type(d) {
      d.count = +d.count;
      return d;
    }
  }

  function drawD3barVerticalStackedChart(msgData, dimens, selection, scaleLegend) {
    var svg = d3.select(selection).append('svg').attr("width", dimens.outerWidth).attr("height", dimens.outerHeight),
        margin = {
      top: 20,
      right: 20,
      bottom: 30,
      left: 40
    },
        width = dimens.innerWidth,
        height = dimens.innerHeight,
        g = svg.append("g").attr("transform", "translate(" + 20 + "," + margin.top + ")");
    var payload = msgData; //msgData.message[0].component.payload

    var widthDivision = 3;
    var legendCenterOffset = 0;

    if (msgData.message) {
      payload = msgData.message[0].component.payload;
    } else {
      fromWidgets = true;
      widthDivision = 4;
      legendCenterOffset = -15;
    }

    var x = d3.scaleBand().rangeRound([0, width]).paddingInner(0.05).align(0.1);
    var y = d3.scaleLinear().rangeRound([height, 0]);
    var z = d3.scaleOrdinal().range(['#5bc8c4', '#4a9af2', '#8ecb60', '#e7cc61', '#eeaf4b', '#ef7e63', '#8e8eb7', '#6483c3', '#2249ab', '#f352b7']);
    var data = [];
    var cols = [];
    cols.push('xAxis');

    for (var i = 0; i < payload.elements.length; i++) {
      cols.push(payload.elements[i].title);
    }

    for (var i = 0; i < payload.X_axis.length; i++) {
      data[i] = {};
      data[i].dispVal = [];
      data[i][cols[0]] = payload.X_axis[i];
    }

    for (var i = 0; i < payload.elements.length; i++) {
      for (var j = 0; j < payload.elements[i].values.length; j++) {
        data[j][cols[i + 1]] = payload.elements[i].values[j];

        if (payload.elements[i].displayValues) {
          data[j].dispVal[i] = payload.elements[i].displayValues[j];
        }
      }
    }

    var keys = cols.slice(1);

    for (var i = 0; i < data.length; i++) {
      var sum = 0;

      for (key in data[i]) {
        if (key !== 'xAxis' && key !== 'dispVal') {
          sum = sum + data[i][key];
        }
      }

      data[i]['total'] = sum;
    }

    x.domain(data.map(function (d) {
      return d.xAxis;
    }));
    y.domain([0, d3.max(data, function (d) {
      return d.total;
    })]).nice();
    z.domain(keys);
    coordsVal = [];
    g.append("g").selectAll("g").data(d3.stack().keys(keys)(data)).enter().append("g").attr("fill", function (d) {
      return z(d.key);
    }).selectAll("rect").data(function (d, i) {
      coordsVal[i] = [];

      for (var j = 0; j < d.length; j++) {
        coordsVal[i][j] = {
          'x': d[j][0],
          'y': d[j][1],
          'val': d[j].data.dispVal[i]
        };
      }

      return d;
    }).enter().append("rect").attr("x", function (d) {
      return x(d.data.xAxis);
    }).attr("y", function (d) {
      return y(d[1]);
    }).attr("height", function (d) {
      return y(d[0]) - y(d[1]);
    }).attr("width", 0.5 * x.bandwidth()).attr("dispVal", function (d) {
      for (var j = 0; j < coordsVal.length; j++) {
        for (var k = 0; k < coordsVal[j].length; k++) {
          if (coordsVal[j][k].x === d[0] && coordsVal[j][k].y === d[1]) {
            return coordsVal[j][k].val;
          }
        }
      }
    }).attr('transform', 'translate(' + 0.25 * x.bandwidth() + ',0)').on("mouseover", function () {
      tooltip.style("display", null);
    }).on("mouseout", function () {
      tooltip.style("display", "none");
    }).on("mousemove", function (d) {
      var xPosition = d3.pointer(event)[0] - 5;
      var yPosition = d3.pointer(event)[1] - 5;

      if (this.attributes.dispVal) {
        var dispTrack = this.attributes.dispVal.value;
      } else {
        var dispTrack = d[1] - d[0];
      }

      tooltip.attr("transform", "translate(" + xPosition + "," + yPosition + ")");
      tooltip.select("text").text(dispTrack);
    });
    g.append("g").attr("class", "axis").attr("transform", "translate(0," + height + ")").call(d3.axisBottom(x));
    g.selectAll('text').attr("class", "chart-disp-val").attr("transform", "rotate(-65) translate(-30, 0)");
    g.append("g").attr("class", "axis").call(d3.axisLeft(y).ticks(null, "s")).append("text").attr("x", 2).attr("y", y(y.ticks().pop()) - 10).attr("dy", "0.32em").attr("fill", "#000").attr("font-weight", "bold").attr("text-anchor", "start"); // .text("Population");

    g.selectAll('text').attr("class", "chart-disp-val");
    g.selectAll(".axis .domain").classed("chart-axis-line", true);
    g.selectAll(".axis line").classed("chart-axis-line", true); // .attr("class", "domain chart-axis-line");

    var tt_legend = d3.select(selection).append("div").attr("class", "tooltip-legend no-show");
    var legend = g.append("g").attr("font-family", "sans-serif").attr("font-size", 10).attr("text-anchor", "end").selectAll("g").data(keys.slice().reverse()).enter().append("g").attr("transform", function (d, i) {
      return "translate(48," + i * 20 + ")";
    });
    legend.append("rect").attr("x", width - 19).attr("width", 19).attr("height", 19).attr("fill", z);
    legend.append("text").attr("x", width - 24).attr("y", 9.5).attr("dy", "0.32em").attr("class", "chart-disp-val").text(function (d) {
      if (d.length > 10) {
        return d.slice(0, 7) + '...';
      } else {
        return d;
      }
    }).on("mouseover", function (e, d) {
      tt_legend.attr('class', 'only-show tooltip-legend');
      tt_legend.html(d).style("left", e.pageX - 1042 + "px").style("top", e.pageY - 178 + "px");
    }).on("mouseout", function (d) {
      tt_legend.attr('class', 'no-show tooltip-legend');
    });
    var tooltip = svg.append("g").attr("class", "tooltipVSB").style("display", "none");
    tooltip.append("rect").attr("width", 60).attr("height", 20).attr("fill", "white").style("opacity", 0.5);
    tooltip.append("text").attr("x", 30).attr("dy", "1.2em").style("text-anchor", "middle").attr("font-size", "12px").attr("font-weight", "bold");
  }

  function horizontalGroupBarChart(config, dimens) {
    function setReSizeEvent(data) {
      var resizeTimer;
      var interval = 500;
      window.removeEventListener('resize', function () {});
      window.addEventListener('resize', function (event) {
        if (resizeTimer !== false) {
          clearTimeout(resizeTimer);
        }

        resizeTimer = setTimeout(function () {
          $(data.mainDiv).empty();
          drawHorizontalGroupBarChartChart(data, dimens);
          clearTimeout(resizeTimer);
        }, interval);
      });
    }

    drawHorizontalGroupBarChartChart(config, dimens); //setReSizeEvent(config);
  }

  function createhorizontalGroupBarChartLegend(mainDiv, columnsInfo, colorRange) {
    var z = d3.scaleOrdinal().range(colorRange);
    var mainDivName = mainDiv.substr(1, mainDiv.length);
    mainDivName = mainDivName.replace(/ +/g, '').replace(/#/g, '');
    $(mainDiv).before("<div id='Legend_" + mainDivName + "' class='pmd-card-body' style='margin-top:0; margin-bottom:0;'></div>");
    var keys = Object.keys(columnsInfo);
    keys.forEach(function (d) {
      var cloloCode = z(d);
      $("#Legend_" + mainDivName).append("<span class='team-graph team1' style='display: inline-block; margin-right:10px;margin-left: 20px;'>\
        <span style='background:" + cloloCode + ";width: 10px;height: 10px;display: inline-block;vertical-align: middle;'>&nbsp;</span>\
        <span title=" + columnsInfo[d].replace(/[ ]/g, "\xA0") + " style='padding-top: 0;font-family:Source Sans Pro, sans-serif;font-size: 13px;display: inline;'>" + (columnsInfo[d].length > 10 ? columnsInfo[d].slice(0, 7) + "..." : columnsInfo[d]) + " </span>\
    </span>");
    });
  }

  function drawHorizontalGroupBarChartChart(config, dimens) {
    var data = config.data;
    var columnsInfo = config.columnsInfo;
    var xAxis = config.xAxis;
    var yAxis = config.yAxis;
    var colorRange = config.colorRange;
    var mainDiv = config.mainDiv;
    var mainDivName = mainDiv.substr(1, mainDiv.length);
    var label = config.label;
    var requireLegend = config.requireLegend; // d3.select(mainDiv).append("svg").attr("width", $(mainDiv).width()).attr("height", $(mainDiv).height() * 0.80);

    d3.select(mainDiv).append("svg").attr("width", dimens.outerWidth).attr("height", dimens.outerHeight);
    var svg = d3.select(mainDiv + " svg"),
        margin = {
      top: 20,
      right: 20,
      bottom: 40,
      left: 70
    },
        width = dimens.innerWidth,
        height = dimens.innerHeight;
    var g = svg.append("g").attr("transform", "translate(" + margin.left + "," + margin.top + ")");

    if (requireLegend != null && requireLegend != undefined && requireLegend != false) {
      $("#Legend_" + mainDivName).remove();
      createhorizontalGroupBarChartLegend(mainDiv, columnsInfo, colorRange);
    }

    var y0 = d3.scaleBand().rangeRound([height, 0]).paddingInner(0.1);
    var y1 = d3.scaleBand().padding(0.05);
    var x = d3.scaleLinear().rangeRound([0, width]);
    var z = d3.scaleOrdinal().range(colorRange);
    var keys = Object.keys(columnsInfo);
    y0.domain(data.map(function (d) {
      return d[yAxis];
    }));
    y1.domain(keys).rangeRound([0, y0.bandwidth()]);
    x.domain([0, d3.max(data, function (d) {
      return d3.max(keys, function (key) {
        return d[key];
      });
    })]).nice();
    /*        var maxTicks = d3.max(data, function (d) {
                return d3.max(keys, function (key) {
                    return d[key];
                });
            });*/

    maxTicks = 10;
    var element = g.append("g").selectAll("g").data(data).enter().append("g").attr("transform", function (d) {
      return "translate(0," + y0(d[yAxis]) + ")";
    });
    var rect = element.selectAll("rect").data(function (d, i) {
      return keys.map(function (key) {
        return {
          key: key,
          value: d[key],
          index: key + "_" + i + "_" + d[yAxis],
          dispVal: d[key + 'dispVal']
        };
      });
    }).enter().append("rect").attr("y", function (d) {
      return y1(d.key);
    }).attr("width", function (d) {
      return x(d.value);
    }).attr("data-index", function (d, i) {
      return d.index;
    }).attr('displayVal', function (d) {
      return d.dispVal;
    }).attr("height", y1.bandwidth()).on("mouseover", function () {
      tooltip.style("display", null);
    }).on("mouseout", function () {
      tooltip.style("display", "none");
    }).on("mousemove", function (d) {
      // D3 v4
      if ($('#myPreviewModal').css('display') === 'block') {
        var x = e.pageX - document.querySelector('.chartContainerDiv').getBoundingClientRect().x + 10;
        var y = e.pageY - document.querySelector('.chartContainerDiv').getBoundingClientRect().y + 10;
      } else {
        // if(mainDiv.indexOf('.widgetContParent') == 0) {
        //     mainDiv = mainDiv.slice(17);
        // }
        // var x = d3.event.pageX - document.getElementById(mainDiv.slice(1)).getBoundingClientRect().x + 10;
        var x = e.pageX - document.querySelector(mainDiv).getBoundingClientRect().x + 10;
        var y = e.pageY - document.querySelector(mainDiv).getBoundingClientRect().y + 10; // var y = d3.event.pageY - document.getElementById(mainDiv.slice(1)).getBoundingClientRect().y + 10;
      }

      if (this.attributes.displayVal) {
        var ttLabel = this.attributes.displayVal.value;
      } else {
        var ttLabel = d.value;
      }

      var xPosition = d3.pointer(event)[0] - 5;
      var yPosition = d3.pointer(event)[1] - 5;
      tooltip.attr("transform", "translate(" + x + "," + y + ")");
      tooltip.select("text").text(ttLabel);
    }).attr("fill", function (d) {
      return z(d.key);
    }); //CBT:add tooltips

    var self = {};
    self.svg = svg;
    self.cssPrefix = "horgroupBar0_";
    self.data = data;
    self.keys = keys;
    self.height = height;
    self.width = width;
    self.label = label;
    self.yAxis = yAxis;
    self.xAxis = xAxis;
    horBarTooltip.addTooltips(self);
    var tooltip = svg.append("g").attr("class", "tooltipHBC").style("display", "none");
    tooltip.append("rect").attr("width", 60).attr("height", 20).attr("fill", "white").style("opacity", 0.5);
    tooltip.append("text").attr("x", 30).attr("dy", "1.2em").style("text-anchor", "middle").attr("font-size", "12px").attr("font-weight", "bold");
    /*        rect.on("mouseover", function () {
                var currentEl = d3.select(this);
                var index = currentEl.attr("data-index");
                horBarTooltip.showTooltip(self, index);
            });
    
            rect.on("mouseout", function () {
                var currentEl = d3.select(this);
                var index = currentEl.attr("data-index");
                horBarTooltip.hideTooltip(self, index);
            });
    
            rect.on("mousemove", function () {
                horBarTooltip.moveTooltip(self);
            });
    */

    g.append("g").attr("class", "axis").attr("transform", "translate(0," + height + ")").call(d3.axisBottom(x).ticks(maxTicks)).append("text").attr("x", width / 2).attr("y", margin.bottom * 0.7).attr("dx", "0.32em").attr("fill", "#000").attr("font-weight", "bold").attr("text-anchor", "start"); // .text(label.xAxis);

    g.append("g").attr("class", "axis").call(d3.axisLeft(y0).ticks(null, "s")).append("text").attr("x", height * 0.4 * -1).attr("y", margin.left * 0.8 * -1) //y(y.ticks().pop()) + 0.5)
    .attr("dy", "0.71em").attr("fill", "#000").attr("transform", "rotate(-90)").attr("font-weight", "bold"); // .attr("text-anchor", "start")
    //   .text(label.yAxis);

    g.selectAll(".axis text").attr("class", "chart-disp-val");
    g.selectAll(".axis line").attr("class", "chart-axis-line");
    g.selectAll(".axis .domain").classed("chart-axis-line", true);
  }

  var helpers = {
    getDimensions: function getDimensions(id) {
      var el = document.getElementById(id);
      var w = 0,
          h = 0;

      if (el) {
        var dimensions = el.getBBox();
        w = dimensions.width;
        h = dimensions.height;
      } else {
        console.log("error: getDimensions() " + id + " not found.");
      }

      return {
        w: w,
        h: h
      };
    }
  };
  var horBarTooltip = {
    addTooltips: function addTooltips(pie) {
      var keys = pie.keys; // group the label groups (label, percentage, value) into a single element for simpler positioning

      var element = pie.svg.append("g").selectAll("g").data(pie.data).enter().append("g").attr("class", function (d, i) {
        return pie.cssPrefix + "tooltips" + "_" + i;
      });
      tooltips = element.selectAll("g").data(function (d, i) {
        return keys.map(function (key) {
          return {
            key: key,
            value: d[key],
            index: key + "_" + i + "_" + d[pie.yAxis]
          };
        });
      }).enter().append("g").attr("class", pie.cssPrefix + "tooltip").attr("id", function (d, i) {
        return pie.cssPrefix + "tooltip" + d.index;
      }).style("opacity", 0).append("rect").attr("rx", 2).attr("ry", 2).attr("x", -2).attr("opacity", 0.71).style("fill", "#000000");
      element.selectAll("g").data(function (d, i) {
        return keys.map(function (key) {
          return {
            key: key,
            value: d[key],
            index: key + "_" + i + "_" + d[pie.yAxis]
          };
        });
      }).append("text").attr("fill", function (d) {
        return "#efefef";
      }).style("font-size", function (d) {
        return 10;
      }).style("font-family", function (d) {
        return "arial";
      }).text(function (d, i) {
        var caption = "" + pie.label.xAxis + ":{value}";
        return horBarTooltip.replacePlaceholders(pie, caption, i, {
          value: d.value
        });
      });
      element.selectAll("g rect").attr("width", function (d, i) {
        var dims = helpers.getDimensions(pie.cssPrefix + "tooltip" + d.index);
        return dims.w + 2 * 4;
      }).attr("height", function (d, i) {
        var dims = helpers.getDimensions(pie.cssPrefix + "tooltip" + d.index);
        return dims.h + 2 * 4;
      }).attr("y", function (d, i) {
        var dims = helpers.getDimensions(pie.cssPrefix + "tooltip" + d.index);
        return -(dims.h / 2) + 1;
      });
    },
    showTooltip: function showTooltip(pie, index) {
      var fadeInSpeed = 250;

      if (horBarTooltip.currentTooltip === index) {
        fadeInSpeed = 1;
      }

      horBarTooltip.currentTooltip = index;
      d3.select("#" + pie.cssPrefix + "tooltip" + index).transition().duration(fadeInSpeed).style("opacity", function () {
        return 1;
      });
      horBarTooltip.moveTooltip(pie);
    },
    moveTooltip: function moveTooltip(pie) {
      d3.selectAll("#" + pie.cssPrefix + "tooltip" + horBarTooltip.currentTooltip).attr("transform", function (d) {
        var mouseCoords = d3.pointer(this.parentNode);
        var x = mouseCoords[0] + 4 + 2;
        var y = mouseCoords[1] - 2 * 4 - 2;
        return "translate(" + x + "," + y + ")";
      });
    },
    hideTooltip: function hideTooltip(pie, index) {
      d3.select("#" + pie.cssPrefix + "tooltip" + index).style("opacity", function () {
        return 0;
      }); // move the tooltip offscreen. This ensures that when the user next mouseovers the segment the hidden
      // element won't interfere

      d3.select("#" + pie.cssPrefix + "tooltip" + horBarTooltip.currentTooltip).attr("transform", function (d, i) {
        // klutzy, but it accounts for tooltip padding which could push it onscreen
        var x = pie.width + 1000;
        var y = pie.height + 1000;
        return "translate(" + x + "," + y + ")";
      });
    },
    replacePlaceholders: function replacePlaceholders(pie, str, index, replacements) {
      var replacer = function replacer() {
        return function (match) {
          var placeholder = arguments[1];

          if (replacements.hasOwnProperty(placeholder)) {
            return replacements[arguments[1]];
          } else {
            return arguments[0];
          }
        };
      };

      return str.replace(/\{(\w+)\}/g, replacer(replacements));
    }
  };

  function drawD3barHorizontalbarChart(msgData, dimens, selection, scaleLegend) {
    window.addEventListener('resize', function (event) {
      $("#chart").width(window.innerWidth * 0.9);
      $("#chart").height(window.innerHeight);
    });
    var groupChartData = [];
    var payload = msgData; //msgData.message[0].component.payload

    var widthDivision = 3;
    var legendCenterOffset = 0;

    if (msgData.message) {
      payload = msgData.message[0].component.payload;
    } else {
      fromWidgets = true;
      widthDivision = 4;
      legendCenterOffset = -15;
    }

    for (var i = 0; i < payload.X_axis.length; i++) {
      groupChartData[i] = {};
      groupChartData[i].date = payload.X_axis[i];

      for (var j = 0; j < payload.elements.length; j++) {
        groupChartData[i][payload.elements[j].title] = payload.elements[j].values[i];

        if (payload.elements[j].displayValues) {
          groupChartData[i][payload.elements[j].title + 'dispVal'] = payload.elements[j].displayValues[i];
        }
      }
    }

    var columnsInfo = {};

    for (var j = 0; j < payload.elements.length; j++) {
      columnsInfo[payload.elements[j].title] = payload.elements[j].title;
    } //var groupChartData = [{ "2614": 8, "4449": 15, "over": 1 }, { "2614": 7, "4449": 2, "over": 2 }, { "2614": 4, "4449": 5, "over": 3 }, { "2614": 19, "4449": 8, "over": 4 }, { "2614": 3, "4449": 7, "over": 5 }, { "2614": 6, "4449": 1, "over": 6 }, { "2614": 7, "4449": 6, "over": 7 }, { "2614": 13, "4449": 2, "over": 8 }, { "2614": 1, "4449": 8, "over": 9 }, { "2614": 8, "4449": 9, "over": 10 }];
    //var columnsInfo = { "2614": "Team A", "4449": "Team B" };


    $(selection).empty();
    var barChartConfig = {
      mainDiv: selection,
      colorRange: ['#5bc8c4', '#4a9af2', '#8ecb60', '#e7cc61', '#eeaf4b', '#ef7e63', '#8e8eb7', '#6483c3', '#2249ab', '#f352b7'],
      data: groupChartData,
      columnsInfo: columnsInfo,
      xAxis: "value",
      yAxis: "date",
      label: {
        xAxis: "Value",
        yAxis: "Dates"
      },
      requireLegend: true
    };
    var groupChart = new horizontalGroupBarChart(barChartConfig, dimens);
  }

  function drawD3barChart(msgData, dimens, selection, scaleLegend) {
    var svg = d3.select(selection).append('svg').attr("width", dimens.outerWidth).attr("height", dimens.outerHeight),
        margin = {
      top: 20,
      right: 20,
      bottom: 30,
      left: 35
    },
        width = dimens.innerWidth,
        height = dimens.innerHeight,
        g = svg.append("g").attr("transform", "translate(" + margin.left + "," + margin.top + ")");
    var payload = msgData;
    var x0 = d3.scaleBand().rangeRound([0, width]).paddingInner(0.1);
    var x1 = d3.scaleBand().padding(0.05);
    var y = d3.scaleLinear().rangeRound([height, 0]);
    var z = d3.scaleOrdinal().range(['#5bc8c4', '#4a9af2', '#8ecb60', '#e7cc61', '#eeaf4b', '#ef7e63', '#8e8eb7', '#6483c3', '#2249ab', '#f352b7']);

    if (msgData.message) {
      payload = msgData.message[0].component.payload;
    } else {
      fromWidgets = true;
      widthDivision = 4;
      legendCenterOffset = -15;
    }

    var data = [];
    var cols = [];
    cols.push('xAxis');

    for (var i = 0; i < payload.elements.length; i++) {
      cols.push(payload.elements[i].title);
    }

    for (var i = 0; i < payload.X_axis.length; i++) {
      data[i] = {};
      data[i][cols[0]] = payload.X_axis[i];
    }

    for (var i = 0; i < payload.elements.length; i++) {
      for (var j = 0; j < payload.elements[i].values.length; j++) {
        data[j][cols[i + 1]] = payload.elements[i].values[j];

        if (payload.elements[i].displayValues) {
          data[j][cols[i + 1] + 'dispVal'] = payload.elements[i].displayValues[j];
        }
      }
    }

    var keys = cols.slice(1);
    x0.domain(data.map(function (d) {
      return d.xAxis;
    }));
    x1.domain(keys).rangeRound([0, x0.bandwidth()]);
    y.domain([0, d3.max(data, function (d) {
      return d3.max(keys, function (key) {
        return d[key];
      });
    })]).nice();
    g.append("g").selectAll("g").data(data).enter().append("g").attr("transform", function (d) {
      return "translate(" + x0(d.xAxis) + ",0)";
    }).selectAll("rect").data(function (d) {
      return keys.map(function (key) {
        return {
          key: key,
          value: d[key],
          dispVal: d[key + 'dispVal']
        };
      });
    }).enter().append("rect").on("mouseover", function () {
      tooltip.style("display", null);
    }).on("mouseout", function () {
      tooltip.style("display", "none");
    }).on("mousemove", function (d) {
      var xPosition = 1.25 * this.parentNode.transform.baseVal[0].matrix.e; //d3.mouse(this)[0]-5;

      var yPosition = d3.pointer(event)[1] - 5;

      if (d.dispVal) {
        var ttVal = d.dispVal;
      } else {
        var ttVal = d.value;
      }

      tooltip.attr("transform", "translate(" + xPosition + "," + yPosition + ")");
      tooltip.select("text").text(ttVal);
    }).attr("x", function (d) {
      return x1(d.key);
    }).attr("y", function (d) {
      return y(d.value);
    }).attr("width", x1.bandwidth()).attr("height", function (d) {
      return height - y(d.value);
    }).attr("fill", function (d) {
      return z(d.key);
    }); // height = height + 30;

    g.append("g").attr("class", "axis").attr("transform", "translate(0," + height + ")").call(d3.axisBottom(x0));
    g.selectAll('text').attr("transform", "rotate(-65) translate(-30, 0)");
    g.append("g").attr("class", "axis").call(d3.axisLeft(y).ticks(null, "s")).append("text").attr("x", 2).attr("y", y(y.ticks().pop()) + 0.5).attr("dy", "0.12em").attr("fill", "#000").attr("font-weight", "bold").attr("text-anchor", "start");
    g.selectAll(".axis text").attr("class", "chart-disp-val");
    g.selectAll(".axis line").attr("class", "chart-axis-line");
    g.selectAll(".axis .domain").classed("chart-axis-line", true);
    var tt_legend = d3.select(selection).append("div").attr("class", "tooltip-legend no-show");
    var legend = g.append("g").attr("font-family", "sans-serif").attr("font-size", 8).attr("text-anchor", "end").selectAll("g").data(keys.slice().reverse()).enter().append("g").attr("transform", function (d, i) {
      return "translate(60," + i * 20 + ")";
    });
    legend.append("rect").attr("x", width - 19).attr("width", 19).attr("height", 19).attr("fill", z);
    legend.append("text").attr("class", "chart-disp-val").attr("x", width - 24).attr("y", 9.5).attr("dy", "0.32em").text(function (d) {
      if (d.length > 10) {
        return d.slice(0, 7) + '...';
      } else {
        return d;
      }
    }).on("mouseover", function (e, d) {
      tt_legend.attr('class', 'only-show tooltip-legend');
      tt_legend.html(d).style("left", e.pageX - 1042 + "px").style("top", e.pageY - 178 + "px");
    }).on("mouseout", function (d) {
      tt_legend.attr('class', 'no-show tooltip-legend');
    });
    var tooltip = svg.append("g").attr("class", "tooltipBC").style("display", "none");
    tooltip.append("rect").attr("width", 60).attr("height", 20).attr("fill", "white").style("opacity", 0.5);
    tooltip.append("text").attr("x", 30).attr("dy", "1.2em").style("text-anchor", "middle").attr("font-size", "12px").attr("font-weight", "bold");
  }

  function drawD3barStackedChart(msgData, dimens, selection, scaleLegend) {
    var svg = d3.select(selection).append('svg').attr("width", dimens.outerWidth).attr("height", dimens.outerHeight),
        margin = {
      top: 20,
      right: 20,
      bottom: 30,
      left: 40
    },
        width = dimens.innerWidth,
        height = dimens.innerHeight,
        g = svg.append("g").attr("transform", "translate(" + 70 + "," + margin.top + ")");
    var payload = msgData; //msgData.message[0].component.payload

    var widthDivision = 3;
    var legendCenterOffset = 0;

    if (msgData.message) {
      payload = msgData.message[0].component.payload;
    } else {
      fromWidgets = true;
      widthDivision = 4;
      legendCenterOffset = -15;
    }

    var y = d3.scaleBand() // x = d3.scaleBand()   
    .rangeRound([0, height]) // .rangeRound([0, width])
    .paddingInner(0.05).align(0.1);
    var x = d3.scaleLinear() // y = d3.scaleLinear()
    .rangeRound([0, width]); // .rangeRound([height, 0]);

    var z = d3.scaleOrdinal().range(['#5bc8c4', '#4a9af2', '#8ecb60', '#e7cc61', '#eeaf4b', '#ef7e63', '#8e8eb7', '#6483c3', '#2249ab', '#f352b7']);
    var data = [];
    var cols = [];
    cols.push('xAxis');

    for (var i = 0; i < payload.elements.length; i++) {
      cols.push(payload.elements[i].title);
    }

    for (var i = 0; i < payload.X_axis.length; i++) {
      data[i] = {};
      data[i].dispVal = [];
      data[i][cols[0]] = payload.X_axis[i];
    }

    for (var i = 0; i < payload.elements.length; i++) {
      for (var j = 0; j < payload.elements[i].values.length; j++) {
        data[j][cols[i + 1]] = payload.elements[i].values[j];

        if (payload.elements[i].displayValues) {
          data[j].dispVal[i] = payload.elements[i].displayValues[j];
        }
      }
    }

    var keys = cols.slice(1);

    for (var i = 0; i < data.length; i++) {
      var sum = 0;

      for (var key in data[i]) {
        if (key !== 'xAxis' && key !== 'dispVal') {
          sum = sum + data[i][key];
        }
      }

      data[i]['total'] = sum;
    }
    /*        data.sort(function(a, b) { 
                return b.total - a.total; 
            });*/


    y.domain(data.map(function (d) {
      return d.xAxis;
    })); // x.domain...

    x.domain([0, d3.max(data, function (d) {
      return d.total;
    })]).nice(); // y.domain...

    z.domain(keys);
    var coordsVal = [];
    g.append("g").selectAll("g").data(d3.stack().keys(keys)(data)).enter().append("g").attr("fill", function (d) {
      return z(d.key);
    }).selectAll("rect").data(function (d, i) {
      coordsVal[i] = [];

      for (var j = 0; j < d.length; j++) {
        coordsVal[i][j] = {
          'x': d[j][0],
          'y': d[j][1],
          'val': d[j].data.dispVal[i]
        };
      }

      return d;
    }).enter().append("rect").attr("y", function (d) {
      return y(d.data.xAxis);
    }) //.attr("x", function(d) { return x(d.data.State); })
    .attr("x", function (d) {
      return x(d[0]);
    }) //.attr("y", function(d) { return y(d[1]); })   
    .attr("width", function (d) {
      return x(d[1]) - x(d[0]);
    }) //.attr("height", function(d) { return y(d[0]) - y(d[1]); })
    .attr("height", 0.5 * y.bandwidth()) //.attr("width", x.bandwidth());
    .attr('transform', 'translate(0,' + 0.25 * y.bandwidth() + ')').attr("dispVal", function (d) {
      for (var j = 0; j < coordsVal.length; j++) {
        for (var k = 0; k < coordsVal[j].length; k++) {
          if (coordsVal[j][k].x === d[0] && coordsVal[j][k].y === d[1]) {
            return coordsVal[j][k].val;
          }
        }
      }
    }).on("mouseover", function () {
      tooltip.style("display", null);
    }).on("mouseout", function () {
      tooltip.style("display", "none");
    }).on("mousemove", function (d) {
      var xPosition = d3.pointer(event)[0] - 5;
      var yPosition = d3.pointer(event)[1] - 5;

      if (this.attributes.dispVal) {
        var dispTrack = this.attributes.dispVal.value;
      } else {
        var dispTrack = d[1] - d[0];
      }

      tooltip.attr("transform", "translate(" + xPosition + "," + yPosition + ")");
      tooltip.select("text").text(dispTrack);
    });
    g.append("g").attr("class", "axis").attr("transform", "translate(0," + height + ")") // New line
    .call(d3.axisBottom(x).ticks(null, "s")) //  .call(d3.axisLeft(y).ticks(null, "s"))
    .append("text").attr("y", 40) //     .attr("y", 2)
    .attr("x", x(x.ticks().pop()) + 0.5) //     .attr("y", y(y.ticks().pop()) + 0.5)
    .attr("dy", "0.32em") //     .attr("dy", "0.32em")
    .attr("fill", "#000").attr("font-weight", "bold").attr("text-anchor", "start") //  .text("Population")
    .attr("transform", "translate(" + -width + ",-10)"); // Newline

    g.append("g").attr("class", "axis").attr("transform", "translate(0,0)") //  .attr("transform", "translate(0," + height + ")")
    .call(d3.axisLeft(y)); //   .call(d3.axisBottom(x));

    g.selectAll(".axis text").attr("class", "chart-disp-val");
    g.selectAll(".axis line").attr("class", "chart-axis-line");
    g.selectAll(".axis .domain").classed("chart-axis-line", true);
    var tt_legend = d3.select(selection).append("div").attr("class", "tooltip-legend no-show");
    var legend = g.append("g").attr("font-family", "sans-serif").attr("font-size", 10).attr("text-anchor", "end").selectAll("g").data(keys.slice().reverse()).enter().append("g") //.attr("transform", function(d, i) { return "translate(0," + i * 20 + ")"; });
    .attr("transform", function (d, i) {
      return "translate(80," + (150 + i * 20) + ")";
    });
    legend.append("rect").attr("x", width - 19).attr("width", 19).attr("height", 19).attr("fill", z);
    legend.append("text").attr("x", width - 24).attr("y", 9.5).attr("dy", "0.32em").attr("class", "chart-disp-val").text(function (d) {
      if (d.length > 10) {
        return d.slice(0, 7) + '...';
      } else {
        return d;
      }
    }).on("mouseover", function (d) {
      tt_legend.attr('class', 'only-show tooltip-legend');
      tt_legend.html(d).style("left", e.pageX - 1042 + "px").style("top", e.pageY - 178 + "px");
    }).on("mouseout", function (d) {
      tt_legend.attr('class', 'no-show tooltip-legend');
    });
    var tooltip = svg.append("g").attr("class", "tooltipHStacked").style("display", "none");
    tooltip.append("rect").attr("width", 60).attr("height", 20).attr("fill", "white").style("opacity", 0.5);
    tooltip.append("text").attr("x", 30).attr("dy", "1.2em").style("text-anchor", "middle").attr("font-size", "12px").attr("font-weight", "bold");
  }

  function drawD3lineChartV2(msgData, dimens, selection, scaleLegend) {
    var margin = {
      top: 35,
      right: 120,
      bottom: 30,
      left: 30
    };
    var width = dimens.innerWidth;
    var height = dimens.innerHeight;
    var colorRange = ['#5bc8c4', '#4a9af2', '#8ecb60', '#e7cc61', '#eeaf4b', '#ef7e63', '#8e8eb7', '#6483c3', '#2249ab', '#f352b7'];
    var z = d3.scaleOrdinal().range(['#5bc8c4', '#4a9af2', '#8ecb60', '#e7cc61', '#eeaf4b', '#ef7e63', '#8e8eb7', '#6483c3', '#2249ab', '#f352b7']);
    var payload = msgData; //msgData.message[0].component.payload

    var widthDivision = 3;
    var legendCenterOffset = 0;

    if (msgData.message) {
      payload = msgData.message[0].component.payload;
    } else {
      fromWidgets = true;
      widthDivision = 4;
      legendCenterOffset = -15;
    }

    var xAxisDisp = payload.X_axis;
    var valsTerm = payload.elements; // Define the scales and tell D3 how to draw the line   

    var x = d3.scaleLinear().domain([0, xAxisDisp.length - 1]).range([0, width]);
    var y = d3.scaleLinear().domain([0, 60]).range([height, 0]);
    var line = d3.line().x(function (d) {
      return x(d.ind);
    }).y(function (d) {
      return y(d.value);
    });
    var svg = d3.select(selection).append('svg').attr("width", dimens.outerWidth).attr("height", dimens.outerHeight);
    var chart = svg.append('g').attr('transform', 'translate(' + margin.left + ',' + margin.top + ')'); // Add the axes and a title

    var xAxis = d3.axisBottom(x).tickFormat(function (d) {
      return xAxisDisp[d];
    });
    var yAxis = d3.axisLeft(y).tickFormat(d3.format('.2s'));
    chart.append('g').attr("class", "axis").call(yAxis);
    chart.append('g').attr('transform', 'translate(0,' + height + ')').call(xAxis).attr('class', 'axis xAxisR');
    chart.selectAll('.xAxisR text').attr("transform", "rotate(-65) translate(-30, 0)"); // Load the data and draw a chart

    var states, tipBox;
    var cols = [];
    var dataset = [];
    var dataMap = [];
    var objDisp = {};
    cols.push('xAxis');

    for (var i = 0; i < payload.elements.length; i++) {
      cols.push(payload.elements[i].title);
    }

    for (var i = 0; i < payload.elements.length; i++) {
      dataset[i] = {};
      dataset[i].valueSet = [];
      dataset[i].name = payload.elements[i].title;
      dataset[i].currentVal = payload.elements[i].values[payload.elements[i].values.length - 1];

      for (var j = 0; j < payload.elements[i].values.length; j++) {
        dataMap[j] = dataMap[j] || {};
        dataMap[j].x_Axis = payload.X_axis[j];
        dataMap[j][cols[i + 1]] = payload.elements[i].values[j];
        dataset[i].valueSet[j] = {};
        dataset[i].valueSet[j].value = payload.elements[i].values[j];

        if (payload.elements[i].displayValues) {
          dataset[i].valueSet[j].dispVal = payload.elements[i].displayValues[j];
          objDisp[payload.elements[i].title] = payload.elements[i].displayValues[j].replace(/[0-9]/g, '');
        }

        dataset[i].valueSet[j].x_Axis = payload.X_axis[j];
        dataset[i].valueSet[j].ind = j;
      }
    }

    var keys = cols.slice(1);
    var cities = cols.slice(1).map(function (id) {
      return {
        id: id,
        values: dataMap.map(function (d) {
          return {
            xAxis: d.xAxis,
            temperature: d[id]
          };
        })
      };
    });
    states = dataset;
    chart.selectAll().data(states).enter().append('path').attr('fill', 'none').attr('stroke', function (d) {
      return z(d.name);
    }).attr('stroke-width', 2).datum(function (d) {
      return d.valueSet;
    }).attr('d', line).attr('class', 'lineC');
    chart.selectAll().data(states).enter().append('text').html(function (d) {//return d.name;
    }).attr('fill', function (d) {
      return d.color;
    }).attr('alignment-baseline', 'middle').attr('x', width).attr('dx', '.5em').attr('y', function (d) {
      return y(d.currentVal);
    });
    var mouseG = svg.append("g").attr("class", "mouse-over-effects");
    /*            mouseG.append("path") // this is the black vertical line to follow mouse
                    .attr("class", "mouse-line"+selection.slice(10))
                    .style("stroke", "black")
                    .style("stroke-width", "1px")
                    .style("opacity", "0")
                    .attr('transform', 'translate(30,35)');*/

    var lines = document.getElementsByClassName('lineC');
    var mousePerLine = mouseG.selectAll('.mouse-per-line').data(cities).enter().append("g").attr("class", "mouse-per-line");
    mousePerLine.append("circle").attr("r", 7).style("stroke", function (d, i) {
      return colorRange[i];
    }).style("fill", "none").style("stroke-width", "3px").style("opacity", "0").attr("transform", "translate(30,35)");
    mousePerLine.append("text").attr("transform", function (d, i) {
      if (i == 0) {
        return 'translate(40,40)';
      } else if (i == 1) {
        return 'translate(20,10)';
      } else {
        return 'translate(0,40)';
      }
    }); //"translate(0,20)");

    mouseG.append('svg:rect') // append a rect to catch mouse movements on canvas
    .attr('width', dimens.innerWidth + 5) // can't catch mouse events on a g element
    .attr('height', dimens.innerHeight).attr('transform', 'translate(30,35)').attr('fill', 'none').attr('pointer-events', 'all').on('mouseout', function () {
      // on mouse out hide line, circles and text
      // d3.select(".mouse-line"+selection.slice(10))
      //      .style("opacity", "0");
      d3.selectAll(".mouse-per-line circle").style("opacity", "0");
      d3.selectAll(".mouse-per-line text").style("opacity", "0"); //.style('font-weight', 'bold');
    }).on('mouseover', function () {
      // on mouse in show line, circles and text
      if ($('#myPreviewModal').css('display') === 'block') {
        $('.lineChartChildDiv .mouse-per-line').hide();
      } else {
        $('.lineChartChildDiv .mouse-per-line').show();
      }
      /*                    d3.select(".mouse-line"+selection.slice(10))
                              .style("opacity", "1");*/


      d3.selectAll(".mouse-per-line circle").style("opacity", "0.5");
      d3.selectAll(".mouse-per-line text").style("opacity", "1");
    }).on('mousemove', function () {
      // mouse moving over canvas
      var mouse = d3.pointer(event);
      /*                    d3.select(".mouse-line"+selection.slice(10))
                              .attr("d", function() {
                                  var d = "M" + mouse[0] + "," + height;
                                  d += " " + mouse[0] + "," + 0;
                                  return d;
                              });*/

      d3.selectAll(".mouse-per-line").attr("transform", function (d, i) {
        var xDate = x.invert(mouse[0]),
            bisect = d3.bisector(function (d) {
          return d.date;
        }).right;
        var idx = bisect(d.values, xDate);
        var pos;
        var xtempLC;
        var beginning = 0,
            end = lines[i].getTotalLength() + 2,
            target = null;

        while (true) {
          target = Math.floor((beginning + end) / 2);
          pos = lines[i].getPointAtLength(target);

          if ((target === end || target === beginning) && pos.x !== mouse[0]) {
            break;
          }

          if (pos.x > mouse[0]) end = target;else if (pos.x < mouse[0]) beginning = target;else break; //position found
        }

        xtempLC = x;
        d3.select(this).select('text').text(function (d, i) {
          var tempList = [];

          for (var j = 0; j < valsTerm.length; j++) {
            if (valsTerm[j].title === d.id) {
              for (var k = 0; k < d.values.length; k++) {
                tempList[k] = d.values[k].temperature;
              }
            }
          }

          if (objDisp[this.__data__.id] !== undefined) {
            var tCompare = y.invert(pos.y).toFixed(2); //+ objDisp[this.__data__.id];

            if (tempList.indexOf(Math.round(tCompare)) !== -1 && tempList.indexOf(Math.round(tCompare)) === Math.round(xtempLC.invert(pos.x))) {
              return y.invert(pos.y).toFixed(2) + "\n" + xAxisDisp[Math.round(xtempLC.invert(pos.x))];
            }

            return y.invert(pos.y).toFixed(2) + objDisp[this.__data__.id];
          } else {
            var tCompare = y.invert(pos.y).toFixed(2); //+ objDisp[this.__data__.id];

            if (tempList.indexOf(Math.round(tCompare)) !== -1 && tempList.indexOf(Math.round(tCompare)) === Math.round(xtempLC.invert(pos.x))) {
              return y.invert(pos.y).toFixed(2) + "\n" + xAxisDisp[Math.round(xtempLC.invert(pos.x))];
            }

            return y.invert(pos.y).toFixed(2);
          }
        });
        return "translate(" + mouse[0] + "," + pos.y + ")";
      });
    });

    function type(d, _, columns) {
      d.date = parseTime(d.date);

      for (var i = 1, n = columns.length, c; i < n; ++i) {
        d[c = columns[i]] = +d[c];
      }

      return d;
    }

    chart.selectAll(".axis text").attr("class", "chart-disp-val");
    chart.selectAll(".axis line").attr("class", "chart-axis-line");
    chart.selectAll(".axis .domain").classed("chart-axis-line", true);
    var tt_legend = d3.select(selection).append("div").attr("class", "tooltip-legend no-show");
    var legend = svg.append("g").attr("font-family", "sans-serif").attr("font-size", 10).attr("text-anchor", "end").selectAll("g").data(keys.slice().reverse()).enter().append("g") //.attr("transform", function(d, i) { return "translate(0," + i * 20 + ")"; });
    .attr("transform", function (d, i) {
      if (dimens.innerWidth === 230) {
        return "translate(100," + (250 + i * 20) + ")";
      } else {
        return "translate(100," + (230 + i * 20) + ")";
      }
    });
    legend.append("rect").attr("x", width - 19).attr("width", 19).attr("height", 19).attr("fill", z);
    legend.append("text").attr("x", width - 24).attr("y", 9.5).attr("dy", "0.32em").attr("class", "chart-disp-val").text(function (d) {
      if (d.length > 10) {
        return d.slice(0, 7) + '...';
      } else {
        return d;
      }
    }).on("mouseover", function (e, d) {
      tt_legend.attr('class', 'only-show tooltip-legend');
      tt_legend.html(d).style("left", e.pageX - 1042 + "px").style("top", e.pageY - 178 + "px");
    }).on("mouseout", function (d) {
      tt_legend.attr('class', 'no-show tooltip-legend');
    });
  }

  function drawlineChartTemplate(msgData, element) {
    var _this = this;

    if (kore_config && kore_config.graphLib === 'google') {
      setTimeout(function () {
        GoogleCharts.charts.load('current', {
          packages: ['corechart', 'line']
        });
        GoogleCharts.charts.setOnLoadCallback(drawChart);

        function drawChart() {
          var customToolTips = false;
          var data = new GoogleCharts.visualization.DataTable();
          data.addColumn('string', 'y'); // adding legend labels

          for (var i = 0; i < msgData.message[0].component.payload.elements.length; i++) {
            var currEle = msgData.message[0].component.payload.elements[i];
            data.addColumn('number', currEle.title); // checking for display values ( custom tooltips)

            if (currEle.displayValues && currEle.displayValues.length) {
              data.addColumn({
                type: 'string',
                role: 'tooltip'
              });
              customToolTips = true;
            }
          } // filling rows


          var totalLines = msgData.message[0].component.payload.elements.length;

          for (var i = 0; i < msgData.message[0].component.payload.X_axis.length; i++) {
            var arr = [];
            arr.push(msgData.message[0].component.payload.X_axis[i]);

            for (var j = 0; j < totalLines; j++) {
              arr.push(parseFloat(msgData.message[0].component.payload.elements[j].values[i]));

              if (customToolTips) {
                arr.push(msgData.message[0].component.payload.elements[j].displayValues[i]);
              }
            }

            data.addRow(arr);
          }

          var options = {
            curveType: 'function',
            chartArea: {
              height: '70%',
              width: '80%'
            },
            legend: {
              position: 'top',
              alignment: 'end',
              maxLines: 3,
              textStyle: {
                color: '#b3bac8'
              }
            },
            hAxis: {
              gridlines: {
                color: 'transparent'
              },
              textStyle: {
                color: '#b3bac8'
              }
            },
            vAxis: {
              gridlines: {
                color: 'transparent'
              },
              textStyle: {
                color: '#b3bac8'
              },
              baselineColor: 'transparent'
            },
            lineWidth: 3,
            animation: {
              duration: 500,
              easing: 'out',
              startup: true
            },
            colors: chartColors
          };
          var lineChartObj = {
            id: "linechart".concat(msgData.messageId),
            data: data,
            options: options,
            type: 'linechart'
          };
          available_charts.push(lineChartObj);
          var container = element;
          var chart = new GoogleCharts.visualization.LineChart(container);
          chart.draw(data, options); // window.linechartCount = window.linechartCount + 1;
        }
      }, 150);
    } else if (kore_config && kore_config.graphLib === 'd3') {
      setTimeout(function () {
        var dimens = {};
        dimens.outerWidth = 380;
        dimens.outerHeight = 350;
        dimens.innerWidth = 230;
        dimens.innerHeight = 250;
        dimens.legendRectSize = 15;
        dimens.legendSpacing = 4;
        var _linechartObj = {
          id: "linechart".concat(msgData.messageId),
          data: msgData,
          type: 'linechart'
        };
        available_charts.push(_linechartObj); //  KoreGraphAdapter.drawD3lineChart(msgData, dimens, '#linechart'+window.linechartCount, 12);

        _this.drawD3lineChartV2(msgData, dimens, "#linechart".concat(msgData.messageId), 12); // window.linechartCount = window.linechartCount + 1;

      }, 250);
      /*                    setTimeout(function(){
                                       $('.chat-container').scrollTop($('.chat-container').prop('scrollHeight'));
                                       handleChartOnClick();
                                   },300); */
    }
  }

  function drawBarChartTemplate(msgData, element) {
    var _this2 = this;

    if (kore_config.graphLib === 'google') {
      setTimeout(function () {
        GoogleCharts.charts.load('current', {
          packages: ['corechart', 'bar']
        });
        GoogleCharts.charts.setOnLoadCallback(drawChart);

        function drawChart() {
          var customToolTips = false;
          var data = new GoogleCharts.visualization.DataTable();
          data.addColumn('string', 'y'); // adding legend labels

          for (var i = 0; i < msgData.message[0].component.payload.elements.length; i++) {
            var currEle = msgData.message[0].component.payload.elements[i];
            data.addColumn('number', currEle.title); // checking for display values ( custom tooltips)

            if (currEle.displayValues && currEle.displayValues.length) {
              data.addColumn({
                type: 'string',
                role: 'tooltip'
              });
              customToolTips = true;
            }
          } // filling rows


          var totalLines = msgData.message[0].component.payload.elements.length;

          for (var i = 0; i < msgData.message[0].component.payload.X_axis.length; i++) {
            var arr = [];
            arr.push(msgData.message[0].component.payload.X_axis[i]);

            for (var j = 0; j < totalLines; j++) {
              arr.push(parseFloat(msgData.message[0].component.payload.elements[j].values[i]));

              if (customToolTips) {
                arr.push(msgData.message[0].component.payload.elements[j].displayValues[i]);
              }
            }

            data.addRow(arr);
          }

          var options = {
            chartArea: {
              height: '70%',
              width: '80%'
            },
            legend: {
              position: 'top',
              alignment: 'end',
              maxLines: 3,
              textStyle: {
                color: '#b3bac8'
              }
            },
            hAxis: {
              gridlines: {
                color: 'transparent'
              },
              textStyle: {
                color: '#b3bac8'
              }
            },
            vAxis: {
              gridlines: {
                color: 'transparent'
              },
              textStyle: {
                color: '#b3bac8'
              },
              baselineColor: 'transparent'
            },
            animation: {
              duration: 500,
              easing: 'out',
              startup: true
            },
            bar: {
              groupWidth: '25%'
            },
            colors: window.chartColors
          }; // horizontal chart, then increase size of bard

          if (msgData.message[0].component.payload.direction !== 'vertical') {
            options.bar.groupWidth = '45%';
            options.hAxis.baselineColor = '#b3bac8';
          } // stacked chart


          if (msgData.message[0].component.payload.stacked) {
            options.isStacked = true;
            options.bar.groupWidth = '25%';
          }

          var _barchartObj = {
            id: "barchart".concat(msgData.messageId),
            direction: msgData.message[0].component.payload.direction,
            data: data,
            options: options,
            type: 'barchart'
          };
          available_charts.push(_barchartObj);
          var container = element;
          var chart = null;

          if (msgData.message[0].component.payload.direction === 'vertical') {
            chart = new GoogleCharts.visualization.ColumnChart(container);
          } else {
            chart = new GoogleCharts.visualization.BarChart(container);
          }

          chart.draw(data, options); // window.barchartCount = window.barchartCount + 1;
        }
      }, 150);
    } else if (kore_config.graphLib === 'd3') {
      var dimens = {};
      dimens.outerWidth = 350;
      dimens.outerHeight = 300;
      dimens.innerHeight = 200;
      dimens.legendRectSize = 15;
      dimens.legendSpacing = 4;

      if (msgData.message[0].component.payload.direction === undefined) {
        msgData.message[0].component.payload.direction = 'horizontal';
      }

      if (msgData.message[0].component.payload.direction === 'horizontal' && !msgData.message[0].component.payload.stacked) {
        setTimeout(function () {
          dimens.innerWidth = 180;
          var _barchartObj = {
            id: "Legend_barchart".concat(msgData.messageId),
            data: msgData,
            type: 'barchart'
          };
          available_charts.push(_barchartObj);

          _this2.drawD3barHorizontalbarChart(msgData, dimens, "#barchart".concat(msgData.messageId), 12); // window.barchartCount = window.barchartCount + 1;

        }, 250);
      } else if (msgData.message[0].component.payload.direction === 'vertical' && msgData.message[0].component.payload.stacked) {
        setTimeout(function () {
          dimens.outerWidth = 350;
          dimens.innerWidth = 270;
          var _barchartObj = {
            id: "barchart".concat(msgData.messageId),
            data: msgData,
            type: 'stackedBarchart'
          };
          available_charts.push(_barchartObj);

          _this2.drawD3barVerticalStackedChart(msgData, dimens, "#barchart".concat(msgData.messageId), 12); // window.barchartCount = window.barchartCount + 1;

        }, 250);
      } else if (msgData.message[0].component.payload.direction === 'horizontal' && msgData.message[0].component.payload.stacked) {
        setTimeout(function () {
          dimens.innerWidth = 180;
          var _barchartObj = {
            id: "barchart".concat(msgData.messageId),
            data: msgData,
            type: 'stackedBarchart'
          };
          available_charts.push(_barchartObj);

          _this2.drawD3barStackedChart(msgData, dimens, "#barchart".concat(msgData.messageId), 12); // window.barchartCount = window.barchartCount + 1;

        }, 250);
      } else if (msgData.message[0].component.payload.direction === 'vertical' && !msgData.message[0].component.payload.stacked) {
        setTimeout(function () {
          dimens.innerWidth = 240;
          var _barchartObj = {
            id: "barchart".concat(msgData.messageId),
            data: msgData,
            type: 'barchart'
          };
          available_charts.push(_barchartObj);

          _this2.drawD3barChart(msgData, dimens, "#barchart".concat(msgData.messageId), 12); // window.barchartCount = window.barchartCount + 1;

        }, 250);
      }
    }
  }

  function drawPieChartTemplate(msgData, element) {
    var _this3 = this;

    if (kore_config.graphLib === 'google') {
      setTimeout(function () {
        GoogleCharts.charts.load('current', {
          packages: ['corechart']
        });
        GoogleCharts.charts.setOnLoadCallback(drawChart);

        function drawChart() {
          var data = new GoogleCharts.visualization.DataTable();
          data.addColumn('string', 'Task');
          data.addColumn('number', 'Hours per Day');

          if (msgData.message[0].component.payload.elements && msgData.message[0].component.payload.elements[0].displayValue) {
            data.addColumn({
              type: 'string',
              role: 'tooltip'
            });
          }

          var pieChartData = [];
          var piechartElements = msgData.message[0].component.payload.elements;

          for (var i = 0; i < piechartElements.length; i++) {
            var arr = ["".concat(piechartElements[i].title, " \n").concat(piechartElements[i].value)];
            arr.push(parseFloat(piechartElements[i].value));

            if (piechartElements[i].displayValue) {
              arr.push(piechartElements[i].displayValue);
            }

            pieChartData.push(arr);
          }

          data.addRows(pieChartData);
          var options = {
            chartArea: {
              left: '3%',
              top: '3%',
              height: '94%',
              width: '94%'
            },
            pieSliceTextStyle: {},
            colors: window.chartColors,
            legend: {
              textStyle: {
                color: '#b3bac8'
              }
            }
          };

          if (piechartElements.length === 1) {
            // if only element, then deault donut chart
            options.pieHole = 0.5;
            options.pieSliceTextStyle.color = 'black';
          }

          if (msgData.message[0].component.payload.pie_type) {
            // chart based on user requireent
            if (msgData.message[0].component.payload.pie_type === 'donut') {
              options.pieHole = 0.6;
              options.pieSliceTextStyle.color = 'black';
              options.legend.position = 'none';
            } else if (msgData.message[0].component.payload.pie_type === 'donut_legend') {
              options.pieHole = 0.6;
              options.pieSliceTextStyle.color = 'black';
            }
          }

          var _piechartObj = {
            id: "piechart".concat(msgData.messageId),
            data: data,
            options: options,
            type: 'piechart'
          };
          available_charts.push(_piechartObj);
          var container = element;
          var chart = new GoogleCharts.visualization.PieChart(container);
          chart.draw(data, options); // window.PieChartCount = window.PieChartCount + 1;
        }
      }, 150);
    } else if (kore_config.graphLib === 'd3') {
      if (msgData.message[0].component.payload.pie_type === undefined) {
        msgData.message[0].component.payload.pie_type = 'regular';
      }

      if (msgData.message[0].component.payload.pie_type) {
        // define data
        var dimens = {};
        dimens.width = 300;
        dimens.height = 200;
        dimens.legendRectSize = 10;
        dimens.legendSpacing = 2.4;

        if (msgData.message[0].component.payload.pie_type === 'regular') {
          setTimeout(function () {
            var _piechartObj = {
              id: "piechart".concat(msgData.messageId),
              data: msgData,
              type: 'regular'
            };
            available_charts.push(_piechartObj);

            _this3.drawD3Pie(msgData, dimens, "#piechart".concat(msgData.messageId), 12); // window.PieChartCount = window.PieChartCount + 1;

          }, 150);
        } else if (msgData.message[0].component.payload.pie_type === 'donut') {
          setTimeout(function () {
            var _piechartObj = {
              id: "piechart".concat(msgData.messageId),
              data: msgData,
              type: 'donut'
            };
            available_charts.push(_piechartObj);

            _this3.drawD3PieDonut(msgData, dimens, "#piechart".concat(msgData.messageId), 12, 'donut'); // window.PieChartCount = window.PieChartCount + 1;

          }, 150);
        } else if (msgData.message[0].component.payload.pie_type === 'donut_legend') {
          setTimeout(function () {
            var _piechartObj = {
              id: "piechart".concat(msgData.messageId),
              data: msgData,
              type: 'donut_legend'
            };
            available_charts.push(_piechartObj);

            _this3.drawD3PieDonut(msgData, dimens, "#piechart".concat(msgData.messageId), 12, 'donut_legend'); // window.PieChartCount = window.PieChartCount + 1;

          }, 150);
        }
      }
    }
  }

  function handleChartOnClick() {
    var _this4 = this;

    $('.piechartDiv,.barchartDiv, .linechartDiv').click(function (e) {
      var firstEleId = e.currentTarget.firstElementChild.getAttribute('id'); // get chart data

      var chart = null;
      var data = null;
      var container = null;

      for (var i = 0; i < available_charts.length; i++) {
        if (available_charts[i].id == firstEleId) {
          data = jQuery.extend({}, available_charts[i]);

          _this4.zoomChart();

          break;
        }
      }

      if (kore_config && kore_config.graphLib === 'd3') {
        _this4.zoomChart();

        if (data.data.message[0].component.payload.pie_type === undefined) {
          data.data.message[0].component.payload.pie_type = 'regular';
        }

        if (data.data.message[0].component.payload.template_type !== 'linechart' && data.data.message[0].component.payload.template_type !== 'piechart') {
          var dimens = {};
          dimens.outerWidth = 650;
          dimens.outerHeight = 460;
          dimens.innerWidth = 450;
          dimens.innerHeight = 350;
          dimens.legendRectSize = 15;
          dimens.legendSpacing = 4;
          $('.chartContainerDiv').html('');

          if (data.data.message[0].component.payload.template_type === 'barchart' && data.data.message[0].component.payload.direction === 'vertical' && data.type === 'barchart') {
            dimens.innerWidth = 500;

            _this4.drawD3barChart(data.data, dimens, '.chartContainerDiv', 12);
          } else if (data.data.message[0].component.payload.template_type === 'barchart' && data.data.message[0].component.payload.direction === 'horizontal' && data.type === 'stackedBarchart') {
            _this4.drawD3barStackedChart(data.data, dimens, '.chartContainerDiv', 12);
          } else if (data.data.message[0].component.payload.template_type === 'barchart' && data.data.message[0].component.payload.direction === 'vertical' && data.type === 'stackedBarchart') {
            dimens.innerWidth = 550;

            _this4.drawD3barVerticalStackedChart(data.data, dimens, '.chartContainerDiv', 12);
          } else if (data.data.message[0].component.payload.template_type === 'barchart' && data.data.message[0].component.payload.direction === 'horizontal' && data.type === 'barchart') {
            dimens.outerWidth = 650;
            dimens.outerHeight = 350;
            dimens.innerWidth = 450;
            dimens.innerHeight = 310;

            _this4.drawD3barHorizontalbarChart(data.data, dimens, '.chartContainerDiv', 12);
          }
        } else if (data.data.message[0].component.payload.template_type === 'linechart') {
          var dimens = {};
          dimens.outerWidth = 650;
          dimens.outerHeight = 450;
          dimens.innerWidth = 480;
          dimens.innerHeight = 350;
          dimens.legendRectSize = 15;
          dimens.legendSpacing = 4;
          $('.chartContainerDiv').html(''); //  KoreGraphAdapter.drawD3lineChart(data.data, dimens, '.chartContainerDiv', 12);

          _this4.drawD3lineChartV2(data.data, dimens, '.chartContainerDiv', 12);
        } else if (data.data.message[0].component.payload.pie_type) {
          var dimens = {};
          dimens.width = 600;
          dimens.height = 400;
          dimens.legendRectSize = 15;
          dimens.legendSpacing = 4;
          $('chartContainerDiv').html('');

          if (data.data.message[0].component.payload.pie_type === 'regular') {
            _this4.drawD3Pie(data.data, dimens, '.chartContainerDiv', 16);
          } else if (data.data.message[0].component.payload.pie_type === 'donut') {
            _this4.drawD3PieDonut(data.data, dimens, '.chartContainerDiv', 16, 'donut');
          } else if (data.data.message[0].component.payload.pie_type === 'donut_legend') {
            $('chartContainerDiv').html('');

            _this4.drawD3PieDonut(data.data, dimens, '.chartContainerDiv', 16, 'donut_legend');
          }
        }
      } else if (kore_config && kore_config.graphLib === 'google') {
        if (data.type === 'piechart') {
          var drawChart = function drawChart() {
            container = document.getElementsByClassName('chartContainerDiv');
            chart = new google.visualization.PieChart(container[0]);
          };

          google.charts.load('current', {
            packages: ['corechart']
          });
          google.charts.setOnLoadCallback(drawChart);
        } else if (data.type === 'linechart') {
          var _drawChart = function _drawChart() {
            container = document.getElementsByClassName('chartContainerDiv');
            chart = new google.visualization.LineChart(container[0]);
          };

          google.charts.load('current', {
            packages: ['corechart', 'line']
          });
          google.charts.setOnLoadCallback(_drawChart);
        } else if (data.type === 'barchart') {
          var _drawChart2 = function _drawChart2() {
            container = document.getElementsByClassName('chartContainerDiv');

            if (data.direction === 'vertical') {
              chart = new google.visualization.ColumnChart(container[0]);
            } else {
              chart = new google.visualization.BarChart(container[0]);
            }
          };

          google.charts.load('current', {
            packages: ['corechart', 'bar']
          });
          google.charts.setOnLoadCallback(_drawChart2);
        }

        setTimeout(function () {
          var chartAreaObj = {
            height: '85%',
            width: '85%'
          };
          data.options.chartArea = chartAreaObj;
          google.visualization.events.addListener(chart, 'ready', function () {
            setTimeout(function () {
              $('.largePreviewContent .chartContainerDiv').css('height', '91%');
            });
          });
          chart.draw(data.data, data.options);
        }, 200);
      }
    });
  }

  function zoomChart() {
    var modal = document.getElementById('myPreviewModal');
    $('.largePreviewContent').empty();
    $('.largePreviewContent').addClass('addheight');
    $('.largePreviewContent').html("<div class='chartContainerDiv'></div>");
    modal.style.display = 'block'; // Get the <span> element that closes the modal

    var span = document.getElementsByClassName('closeElePreview')[0]; // When the user clicks on <span> (x), close the modal

    span.onclick = function () {
      modal.style.display = 'none';
      $('.largePreviewContent').removeClass('addheight');
    };
  }

  return {
    drawD3Pie: drawD3Pie,
    drawD3PieDonut: drawD3PieDonut,
    drawD3barChart: drawD3barChart,
    drawD3barStackedChart: drawD3barStackedChart,
    drawD3barVerticalStackedChart: drawD3barVerticalStackedChart,
    drawD3barHorizontalbarChart: drawD3barHorizontalbarChart,
    drawD3lineChartV2: drawD3lineChartV2,
    drawlineChartTemplate: drawlineChartTemplate,
    drawBarChartTemplate: drawBarChartTemplate,
    drawPieChartTemplate: drawPieChartTemplate,
    handleChartOnClick: handleChartOnClick,
    zoomChart: zoomChart
  };
}(korejquery, d3_src_namespaceObject);

/* harmony default export */ const kore_graph_adapter_KoreGraphAdapter = (KoreGraphAdapter);
// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js
var injectStylesIntoStyleTag = __webpack_require__(3379);
var injectStylesIntoStyleTag_default = /*#__PURE__*/__webpack_require__.n(injectStylesIntoStyleTag);
// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/styleDomAPI.js
var styleDomAPI = __webpack_require__(7795);
var styleDomAPI_default = /*#__PURE__*/__webpack_require__.n(styleDomAPI);
// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/insertBySelector.js
var insertBySelector = __webpack_require__(569);
var insertBySelector_default = /*#__PURE__*/__webpack_require__.n(insertBySelector);
// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js
var setAttributesWithoutAttributes = __webpack_require__(3565);
var setAttributesWithoutAttributes_default = /*#__PURE__*/__webpack_require__.n(setAttributesWithoutAttributes);
// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/insertStyleElement.js
var insertStyleElement = __webpack_require__(9216);
var insertStyleElement_default = /*#__PURE__*/__webpack_require__.n(insertStyleElement);
// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/styleTagTransform.js
var styleTagTransform = __webpack_require__(4589);
var styleTagTransform_default = /*#__PURE__*/__webpack_require__.n(styleTagTransform);
// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./node_modules/postcss-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/templatemanager/templates/lineChartTemplate/lineChartTemplate.scss
var lineChartTemplate = __webpack_require__(2622);
;// CONCATENATED MODULE: ./src/templatemanager/templates/lineChartTemplate/lineChartTemplate.scss

      
      
      
      
      
      
      
      
      

var options = {};

options.styleTagTransform = (styleTagTransform_default());
options.setAttributes = (setAttributesWithoutAttributes_default());

      options.insert = insertBySelector_default().bind(null, "head");
    
options.domAPI = (styleDomAPI_default());
options.insertStyleElement = (insertStyleElement_default());

var update = injectStylesIntoStyleTag_default()(lineChartTemplate/* default */.Z, options);




       /* harmony default export */ const lineChartTemplate_lineChartTemplate = (lineChartTemplate/* default */.Z && lineChartTemplate/* default.locals */.Z.locals ? lineChartTemplate/* default.locals */.Z.locals : undefined);

;// CONCATENATED MODULE: ./src/templatemanager/templates/lineChartTemplate/lineChartTemplate.ts



var LineChartTemplate = /** @class */ (function () {
    function LineChartTemplate() {
    }
    LineChartTemplate.prototype.renderMessage = function (msgData) {
        var _a, _b, _c;
        var me = this;
        var $ = me.hostInstance.$;
        var helpersObj = helpers;
        if (((_c = (_b = (_a = msgData === null || msgData === void 0 ? void 0 : msgData.message[0]) === null || _a === void 0 ? void 0 : _a.component) === null || _b === void 0 ? void 0 : _b.payload) === null || _c === void 0 ? void 0 : _c.template_type) === "linechart") {
            me.messageHtml = $(me.getTemplateString('linechartTemplate')).tmpl({
                'msgData': msgData,
                'helpers': helpersObj.helpers
            });
            me.bindEvents(msgData);
            return me.messageHtml;
        }
    };
    LineChartTemplate.prototype.bindEvents = function (msgData) {
        var me = this;
        var chatWindowInstance = me.hostInstance;
        kore_graph_adapter_KoreGraphAdapter.drawlineChartTemplate(msgData, me.messageHtml);
        setTimeout(function () {
            // $('.chat-container').scrollTop($('.chat-container').prop('scrollHeight'));
            chatWindowInstance.scrollTop();
            kore_graph_adapter_KoreGraphAdapter.handleChartOnClick();
        }, 200);
    };
    LineChartTemplate.prototype.getTemplateString = function () {
        var linechartTemplate = '<script id="chat_message_tmpl" type="text/x-jqury-tmpl"> \
        {{if msgData.message}} \
            <li data-time="${msgData.createdOnTimemillis}" id="${msgData.messageId || msgItem.clientMessageId}"\
                class="{{if msgData.type === "bot_response"}}fromOtherUsers{{else}}fromCurrentUser{{/if}} with-icon linechart"> \
                {{if msgData.createdOn}}<div aria-live="off" class="extra-info">${helpers.formatDate(msgData.createdOn)}</div>{{/if}} \
                {{if msgData.icon}}<div aria-live="off" class="profile-photo extraBottom"> <div class="user-account avtar" style="background-image:url(${msgData.icon})"></div> </div> {{/if}} \
                {{if msgData.message[0].component.payload.text}}<div class="messageBubble linechart">\
                    <span>{{html helpers.convertMDtoHTML(msgData.message[0].component.payload.text, "bot")}}</span>\
                </div>{{/if}}\
                <div class="linechartDiv">\
                    <div class="lineChartChildDiv" id="linechart${msgData.messageId}"></div>\
                </div>\
            </li> \
        {{/if}} \
    </scipt>';
        return linechartTemplate;
    };
    return LineChartTemplate;
}());
/* harmony default export */ const templates_lineChartTemplate_lineChartTemplate = (LineChartTemplate);

// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./node_modules/postcss-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/templatemanager/templates/barChartTemplate/barChartTemplate.scss
var barChartTemplate = __webpack_require__(3265);
;// CONCATENATED MODULE: ./src/templatemanager/templates/barChartTemplate/barChartTemplate.scss

      
      
      
      
      
      
      
      
      

var barChartTemplate_options = {};

barChartTemplate_options.styleTagTransform = (styleTagTransform_default());
barChartTemplate_options.setAttributes = (setAttributesWithoutAttributes_default());

      barChartTemplate_options.insert = insertBySelector_default().bind(null, "head");
    
barChartTemplate_options.domAPI = (styleDomAPI_default());
barChartTemplate_options.insertStyleElement = (insertStyleElement_default());

var barChartTemplate_update = injectStylesIntoStyleTag_default()(barChartTemplate/* default */.Z, barChartTemplate_options);




       /* harmony default export */ const barChartTemplate_barChartTemplate = (barChartTemplate/* default */.Z && barChartTemplate/* default.locals */.Z.locals ? barChartTemplate/* default.locals */.Z.locals : undefined);

;// CONCATENATED MODULE: ./src/templatemanager/templates/barChartTemplate/barChartTemplate.ts



var BarChartTemplate = /** @class */ (function () {
    function BarChartTemplate() {
    }
    BarChartTemplate.prototype.renderMessage = function (msgData) {
        var _a, _b, _c;
        var me = this;
        var $ = me.hostInstance.$;
        var helpersObj = helpers;
        if (((_c = (_b = (_a = msgData === null || msgData === void 0 ? void 0 : msgData.message[0]) === null || _a === void 0 ? void 0 : _a.component) === null || _b === void 0 ? void 0 : _b.payload) === null || _c === void 0 ? void 0 : _c.template_type) === 'barchart') {
            me.messageHtml = $(me.getTemplateString('barchartTemplate')).tmpl({
                msgData: msgData,
                helpers: helpersObj.helpers,
            });
            me.bindEvents(msgData);
            return me.messageHtml;
        }
    };
    BarChartTemplate.prototype.bindEvents = function (msgData) {
        var me = this;
        var chatWindowInstance = me.hostInstance;
        kore_graph_adapter_KoreGraphAdapter.drawBarChartTemplate(msgData, me.messageHtml);
        setTimeout(function () {
            chatWindowInstance.scrollTop();
            // $('.chat-container').scrollTop($('.chat-container').prop('scrollHeight'));
            kore_graph_adapter_KoreGraphAdapter.handleChartOnClick();
        }, 300);
    };
    BarChartTemplate.prototype.getTemplateString = function () {
        var barchartTemplate = '<script id="chat_message_tmpl" type="text/x-jqury-tmpl"> \
        {{if msgData.message}} \
            <li data-time="${msgData.createdOnTimemillis}" id="${msgData.messageId || msgItem.clientMessageId}"\
                class="{{if msgData.type === "bot_response"}}fromOtherUsers{{else}}fromCurrentUser{{/if}} with-icon barchart"> \
                {{if msgData.createdOn}}<div aria-live="off" class="extra-info">${helpers.formatDate(msgData.createdOn)}</div>{{/if}} \
                {{if msgData.icon}}<div aria-live="off" class="profile-photo extraBottom"> <div class="user-account avtar" style="background-image:url(${msgData.icon})"></div> </div> {{/if}} \
                {{if msgData.message[0].component.payload.text}}<div class="messageBubble barchart">\
                    <span>{{html helpers.convertMDtoHTML(msgData.message[0].component.payload.text, "bot")}}</span>\
                </div>{{/if}}\
                <div class="barchartDiv">\
                    <div class="barChartChildDiv" id="barchart${msgData.messageId}"></div>\
                </div>\
            </li> \
        {{/if}} \
    </scipt>';
        return barchartTemplate;
    };
    return BarChartTemplate;
}());
/* harmony default export */ const templates_barChartTemplate_barChartTemplate = (BarChartTemplate);

// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./node_modules/postcss-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/templatemanager/templates/pieChartTemplate/pieChartTemplate.scss
var pieChartTemplate = __webpack_require__(3700);
;// CONCATENATED MODULE: ./src/templatemanager/templates/pieChartTemplate/pieChartTemplate.scss

      
      
      
      
      
      
      
      
      

var pieChartTemplate_options = {};

pieChartTemplate_options.styleTagTransform = (styleTagTransform_default());
pieChartTemplate_options.setAttributes = (setAttributesWithoutAttributes_default());

      pieChartTemplate_options.insert = insertBySelector_default().bind(null, "head");
    
pieChartTemplate_options.domAPI = (styleDomAPI_default());
pieChartTemplate_options.insertStyleElement = (insertStyleElement_default());

var pieChartTemplate_update = injectStylesIntoStyleTag_default()(pieChartTemplate/* default */.Z, pieChartTemplate_options);




       /* harmony default export */ const pieChartTemplate_pieChartTemplate = (pieChartTemplate/* default */.Z && pieChartTemplate/* default.locals */.Z.locals ? pieChartTemplate/* default.locals */.Z.locals : undefined);

;// CONCATENATED MODULE: ./src/templatemanager/templates/pieChartTemplate/pieChartTemplate.ts



var PieChartTemplate = /** @class */ (function () {
    function PieChartTemplate() {
    }
    PieChartTemplate.prototype.renderMessage = function (msgData) {
        var _a, _b, _c;
        var me = this;
        var $ = me.hostInstance.$;
        var helpersObj = helpers;
        if (((_c = (_b = (_a = msgData === null || msgData === void 0 ? void 0 : msgData.message[0]) === null || _a === void 0 ? void 0 : _a.component) === null || _b === void 0 ? void 0 : _b.payload) === null || _c === void 0 ? void 0 : _c.template_type) === "piechart") {
            me.messageHtml = $(me.getTemplateString('pieChartTemplate')).tmpl({
                'msgData': msgData,
                'helpers': helpersObj.helpers
            });
            me.bindEvents(msgData);
            return me.messageHtml;
        }
    };
    PieChartTemplate.prototype.bindEvents = function (msgData) {
        var me = this;
        var chatWindowInstance = me.hostInstance;
        kore_graph_adapter_KoreGraphAdapter.drawPieChartTemplate(msgData, me.messageHtml);
        setTimeout(function () {
            // $('.chat-container').scrollTop($('.chat-container').prop('scrollHeight'));
            chatWindowInstance.scrollTop();
            kore_graph_adapter_KoreGraphAdapter.handleChartOnClick();
        }, 200);
    };
    PieChartTemplate.prototype.getTemplateString = function () {
        var pieChartTemplate = '<script id="chat_message_tmpl" type="text/x-jqury-tmpl"> \
        {{if msgData.message}} \
            <li data-time="${msgData.createdOnTimemillis}" id="${msgData.messageId || msgItem.clientMessageId}"\
                class="{{if msgData.type === "bot_response"}}fromOtherUsers{{else}}fromCurrentUser{{/if}} with-icon piechart"> \
                {{if msgData.createdOn}}<div class="extra-info">${helpers.formatDate(msgData.createdOn)}</div>{{/if}} \
                {{if msgData.icon}}<div class="profile-photo extraBottom"> <div class="user-account avtar" style="background-image:url(${msgData.icon})"></div> </div> {{/if}} \
                {{if msgData.message[0].component.payload.text}}<div class="messageBubble pieChart">\
                    <span>{{html helpers.convertMDtoHTML(msgData.message[0].component.payload.text, "bot")}}</span>\
                </div>{{/if}}\
                <div id="d3Pie">\
                </div>\
                <div class="piechartDiv">\
                    <div class="lineChartChildDiv" id="piechart${msgData.messageId}"></div>\
                </div>\
            </li> \
        {{/if}} \
    </scipt>';
        return pieChartTemplate;
    };
    return PieChartTemplate;
}());
/* harmony default export */ const templates_pieChartTemplate_pieChartTemplate = (PieChartTemplate);

;// CONCATENATED MODULE: ./src/plugins/graphTemplatesPlugin.ts
var __assign = (undefined && undefined.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};



var GraphTemplatesPlugin = /** @class */ (function () {
    function GraphTemplatesPlugin(config) {
        this.name = 'GraphTemplatesPlugin';
        this.config = {};
        config = config || {};
        this.config = __assign(__assign({}, this.config), config);
    }
    GraphTemplatesPlugin.prototype.onHostCreate = function () {
        var me = this;
        var cwInstance = me.hostInstance;
        cwInstance.on("viewInit", function (chatWindowEle) {
            me.onInit();
        });
    };
    GraphTemplatesPlugin.prototype.onInit = function () {
        var me = this;
        me.installPickerTemplates();
    };
    GraphTemplatesPlugin.prototype.installPickerTemplates = function () {
        var me = this;
        var templateManager = me.hostInstance.templateManager;
        templateManager.installTemplate(new templates_lineChartTemplate_lineChartTemplate());
        templateManager.installTemplate(new templates_barChartTemplate_barChartTemplate());
        templateManager.installTemplate(new templates_pieChartTemplate_pieChartTemplate());
    };
    return GraphTemplatesPlugin;
}());
/* harmony default export */ const graphTemplatesPlugin = (GraphTemplatesPlugin);

;// CONCATENATED MODULE: ./src/index_plugins/graphTemplates_umd.ts



})();

/******/ 	return __webpack_exports__;
/******/ })()
;
});