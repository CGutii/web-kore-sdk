var e={d:(t,s)=>{for(var n in s)e.o(s,n)&&!e.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:s[n]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)},t={};e.d(t,{c:()=>n});const s=class{hostInstance;appendPickerHTMLtoChatWindowFooter(e){this.hostInstance.chatEle.find(".kore-chat-footer .footerContainer").append(e)}installTextToSpeechTemplate(){let e=this,t=e.hostInstance.$;e.pickerHTML=t(e.getTextToSpeechTemplateString()),e.appendPickerHTMLtoChatWindowFooter(e.pickerHTML),e.bindEvents()}getTextToSpeechTemplateString(){return'<div class="sdkFooterIcon ttspeakerDiv ttsOff">         <button class="ttspeaker" title="Talk to speak">             <span class="ttsSpeakerEnable"></span>             <span class="ttsSpeakerDisable"></span>             <span style="display:none;"><audio id="ttspeaker" controls="" autoplay="" name="media"><source src="" type="audio/wav"></audio></span>        </button>     </div> '}bindEvents(){let e=this;(0,e.hostInstance.$)(e.pickerHTML).on("click",".ttspeaker",(function(t){e.OnSpeakerButtonClick&&e.OnSpeakerButtonClick()}))}};const n=class extends s{name="BrowserTTS";_ttsConnection;onHostCreate(){let e=this;e.hostInstance.on("viewInit",(t=>{e.onInit()}))}onInit(){this.installTextToSpeechTemplate()}OnSpeakerButtonClick(){let e=this,t=e.hostInstance.$,s=e.hostInstance;t(".ttspeakerDiv").hasClass("ttsOff")?(t(".ttspeakerDiv").removeClass("ttsOff"),s.on("afterRenderMessage",(t=>{var s=t.msgData;if("bot_response"===s?.type&&!e.hostInstance.minimized&&!e.hostInstance.historyLoading){if(s.message[0]&&s.message[0].component&&"template"===s.message[0].component.type)this._txtToSpeak="";else try{this._txtToSpeak=s.message[0].component.payload.text?s.message[0].component.payload.text.replace(/\r?\n/g,". ."):"",this._txtToSpeak=e.hostInstance.helpers.checkMarkdowns(this._txtToSpeak),this._txtToSpeak=this._txtToSpeak.replace("___","<hr/>"),this._txtToSpeak=this._txtToSpeak.replace("---","<hr/>")}catch(e){this._txtToSpeak=""}s.message[0].component&&s.message[0].component.payload.speech_hint&&(this._txtToSpeak=s.message[0].component.payload.speech_hint),this._ttsConnection=e.speakWithWebAPI(this._txtToSpeak)}}))):(window.speechSynthesis.pause(),t(".ttspeakerDiv").addClass("ttsOff"))}speakWithWebAPI=function(e){if(!e)return!1;if("speechSynthesis"in window){window.speechSynthesis.cancel();var t=new SpeechSynthesisUtterance;t.text=e,window.speechSynthesis.speak(t)}else console.warn("KORE:Your browser doesn't support TTS(Speech Synthesiser)")}};var a=t.c;export{a as BrowserTTS};