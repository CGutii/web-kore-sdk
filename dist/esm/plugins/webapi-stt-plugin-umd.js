var n={d:(t,e)=>{for(var i in e)n.o(e,i)&&!n.o(t,i)&&Object.defineProperty(t,i,{enumerable:!0,get:e[i]})},o:(n,t)=>Object.prototype.hasOwnProperty.call(n,t)},t={};n.d(t,{C:()=>i});const e=class{hostInstance;appendPickerHTMLtoChatWindowFooter(n){this.hostInstance.chatEle.find(".kore-chat-footer .footerContainer").append(n)}installSpeechToTextTemplate(){let n=this,t=n.hostInstance.$;n.pickerHTML=t(n.getSpeechToTextTemplateString()),n.appendPickerHTMLtoChatWindowFooter(n.pickerHTML),n.bindEvents()}getSpeechToTextTemplateString(){return'<div class="sdkFooterIcon microphoneBtn">         <button class="notRecordingMicrophone" title="Microphone On">             <i class="microphone"></i>         </button>         <button class="recordingMicrophone" title="Microphone Off" >             <i class="microphone"></i>             <span class="recordingGif"></span>         </button>         <div id="textFromServer"></div>     </div>'}bindEvents(){let n=this,t=n.hostInstance.$;t(n.pickerHTML).on("click",".notRecordingMicrophone",(function(t){n.onRecordButtonClick&&n.onRecordButtonClick()})),t(n.pickerHTML).on("click",".recordingMicrophone",(function(t){n.stop(),setTimeout((function(){n.setCaretEnd(document.getElementsByClassName("chatInputBox"))}),350)}))}};const i=class extends e{name="WebKitSTT";config;recognition;final_transcript;recognizing;two_line=/\n\n/g;one_line=/\n/g;prevRange;constructor(n){super(),this.config=n}onHostCreate(){let n=this;n.hostInstance.on("viewInit",(t=>{n.onInit()}))}onInit(){this.installSpeechToTextTemplate()}onRecordButtonClick(){this.initializeWebKitSpeechRecognition(),this.startWebKitRecognization()}initializeWebKitSpeechRecognition(){let n=this,t=n.hostInstance.$;"webkitSpeechRecognition"in window&&n.isChrome()&&(this.recognition=new window.webkitSpeechRecognition,this.final_transcript="",this.recognition.continuous=!0,this.recognition.interimResults=!0,this.recognition.onstart=function(){this.prevStr="",n.recognizing=!0,t(".recordingMicrophone").css("display","block"),t(".notRecordingMicrophone").css("display","none")},this.recognition.onerror=function(n){console.log(n.error),t(".recordingMicrophone").css("display","none"),t(".notRecordingMicrophone").css("display","block")},this.recognition.onend=function(){n.recognizing=!1,t(".recordingMicrophone").trigger("click"),t(".recordingMicrophone").css("display","none"),t(".notRecordingMicrophone").css("display","block")},this.recognition.onresult=function(e){this.final_transcript="";for(var i="",o=e.resultIndex;o<e.results.length;++o)e.results[o].isFinal?this.final_transcript+=e.results[o][0].transcript:i+=e.results[o][0].transcript;this.final_transcript=n.capitalize(this.final_transcript),this.final_transcript=n.linebreak(this.final_transcript),i=n.linebreak(i),""!==this.final_transcript&&(this.prevStr+=this.final_transcript),n.recognizing&&(t(".chatInputBox").html(this.prevStr+""+i),t(".sendButton").removeClass("disabled")),setTimeout((function(){n.setCaretEnd(document.getElementsByClassName("chatInputBox")),document.getElementsByClassName("chatInputBox")[0].scrollTop=document.getElementsByClassName("chatInputBox")[0].scrollHeight}),350)})}startWebKitRecognization(){this.recognizing?this.recognition.stop():(this.final_transcript="",this.recognition.lang=this.config.lang||"en-US",this.recognition.start())}isChrome(){var n=window.chrome,t=window.navigator,e=t.vendor,i=t.userAgent.indexOf("OPR")>-1,o=t.userAgent.indexOf("Edge")>-1;return!!t.userAgent.match("CriOS")||null!=n&&"Google Inc."===e&&!1===i&&!1===o}linebreak(n){return n.replace(this.two_line,"<p></p>").replace(this.one_line,"<br>")}capitalize(n){return n.replace(n.substr(0,1),(function(n){return n.toUpperCase()}))}setCaretEnd(n){if(n&&n.item(0)&&n.item(0).innerText.length){var t=document.createRange();t.selectNodeContents(n[0]),t.collapse(!1);var e=window.getSelection();e.removeAllRanges(),e.addRange(t),this.prevRange=t}else this.prevRange=!1,n&&n[0]&&n[0].focus()}stop(){let n=this,t=n.hostInstance.$;""!==t(".chatInputBox").text()&&n.hostInstance.config.autoEnableSpeechAndTTS&&window.chatContainerConfig.sendMessage(t(".chatInputBox"));t(".recordingMicrophone").css("display","none"),t(".notRecordingMicrophone").css("display","block"),n.recognizing&&(n.recognition.stop(),n.recognizing=!1)}};var o=t.C;export{o as WebKitSTT};