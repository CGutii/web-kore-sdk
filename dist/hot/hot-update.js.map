{"version":3,"file":"hot/hot-update.js","mappings":"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","sources":["webpack://kore-web-sdk/./src/plugins/desktopNotifications/desktopnotifications.ts","webpack://kore-web-sdk/webpack/runtime/getFullHash"],"sourcesContent":["class KoreDesktopNotificationPlugin {\n    name: string = 'KoreDesktopNotificationPlugin ';\n    config: any = {};\n    isTabActive: boolean = true;\n\n    notificationSound = \"/assets/plugins/KoredesktopNotifications/desktopNotificationAudio/notification.mp3\";\n    constructor() {}\n\n    onHostCreate() {\n        this.onInit();\n    }\n    onInit() {\n        let me: any = this;\n\n        if (Notification.permission === \"default\") {\n            Notification.requestPermission();\n        }\n\n        document.addEventListener(\"visibilitychange\", (event) => {\n            if (document.visibilityState == \"visible\") {\n              me.isTabActive = true;\n            } else {\n              me.isTabActive = false;\n            }\n          });\n\n        me.hostInstance.on('onWSMessage', (event: any) => {\n            // debugger\n            // console.log(me.notificationSound)\n            console.log(this.notificationSound)\n            if (event.messageData?.message?.type === 'agent_connected') {\n                console.log(this.notificationSound)\n                var snd = new Audio(me.notificationSound);\n                console.log('lay')\n                snd.play();\n            }\n\n            if (event.messageData?.type === 'bot_response' && event.messageData?.message[0]?.component?.payload?.payload?.template_type === 'live_agent' && event.messageData?.message[0]?.component?.payload?.payload?.text) {\n                if (Notification.permission !== \"granted\") return;\n\n                const text = event.messageData?.message[0]?.component?.payload?.payload?.text;\n                const options = {\n                    body: text,\n                    sound: this.notificationSound,\n                    requireInteraction: false,\n                    onclick: (event: any) => {\n                        event.target.close();\n                    }\n                }\n                let notification: any;\n                \n                if (!me.isTabActive) {\n\n                    if (event.messageData.author?.firstName) {\n                        const agentName = event.messageData.author.firstName + \" \" + event.messageData.author.lastName;\n                        notification = new Notification(\"New message from \" + agentName, options);\n                    } else {\n                        notification = new Notification(\"You have a new notification.\", options);\n                    }\n                    \n                    var snd = new Audio(this.notificationSound);\n                    snd.play();\n                }\n                if (notification) {\n                    notification.onclick = function (event: any) {\n                        window.parent.focus();\n                        notification.close();\n                    };\n                }\n            }\n        });\n    }\n}\n\nexport default KoreDesktopNotificationPlugin;","__webpack_require__.h = () => (\"99d9b306ec28b46da328\")"],"names":[],"sourceRoot":""}