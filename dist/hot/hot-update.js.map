{"version":3,"file":"hot/hot-update.js","mappings":"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","sources":["webpack://kore-web-sdk/./src/plugins/textToSpeech/GoogleTTS/GoogleTTS.ts","webpack://kore-web-sdk/webpack/runtime/getFullHash"],"sourcesContent":["import { CancellationDetails, CancellationReason, PhraseListGrammar, ResultReason, SpeechConfig, SpeechRecognizer, SpeechSynthesizer } from 'microsoft-cognitiveservices-speech-sdk';\r\nimport $ from 'jquery'\r\nimport BaseTTS from '../BaseTTS';\r\ndeclare const window: any;\r\n\r\nexport interface GoogleVoiceConfig {\r\n    languageCode:string;\r\n    name:string;\r\n    ssmlGender: string;\r\n}\r\nexport interface GoogleAudioConfig {\r\n    audioEncoding:string;\r\n}\r\n\r\nexport interface GoogleTTSConfig {\r\n    key: string;\r\n    region: string;\r\n    voice:GoogleVoiceConfig;\r\n    audioConfig:GoogleAudioConfig;\r\n}\r\n\r\n\r\nclass GoogleTTS extends BaseTTS {\r\n    name = 'GoogleTTS';\r\n\r\n    config: GoogleTTSConfig;\r\n    _txtToSpeak: string = '';\r\n    isPlaying:boolean = false;\r\n    audioInterval:any;\r\n    currentAudio:any;\r\n\r\n    constructor(mainconfig: GoogleTTSConfig) {\r\n        super();\r\n        this.config = mainconfig;\r\n\r\n\r\n\r\n    }\r\n    onHostCreate() {\r\n        this.hostInstance.on(\"viewInit\", (chatWindowEle: any) => {\r\n            this.onInit();\r\n        });\r\n\r\n    }\r\n    onInit() {\r\n        this.installTextToSpeechTemplate();\r\n    }\r\n\r\n\r\n    /* @arr array you want to listen to\r\n @callback function that will be called on any change inside array\r\n*/\r\n    listenChangesinArray(arr:any, callback:any) {\r\n        // Add more methods here if you want to listen to them\r\n        [ 'push'].forEach((m:any) => {\r\n            arr[m] = function () {\r\n                var res = Array.prototype[m].apply(arr, arguments);  // call normal behaviour\r\n                callback.apply(arr,  arguments);  // finally call the callback supplied\r\n                return res;\r\n            }\r\n        });\r\n    }\r\n\r\n    OnSpeakerButtonClick() {\r\n        let audioList: any = [];\r\n\r\n        this.listenChangesinArray(audioList, async (changes:any, index:any)=>{\r\n          this.audioInterval =   setInterval(e=>{\r\n                if(this.isPlaying){\r\n                    return;\r\n                }\r\n                this.currentAudio = audioList.splice(0,1)[0];\r\n                if(this.currentAudio){\r\n                    this.currentAudio.audio.play();\r\n                }\r\n                         clearInterval(this.audioInterval);\r\n\r\n            }, 500)\r\n         \r\n        });\r\n\r\n\r\n        if (!$('.ttspeakerDiv').hasClass('ttsOff')) {\r\n            // var synth = window.speechSynthesis;\r\n            // synth.pause();\r\n            this.stop();\r\n            $('.ttspeakerDiv').addClass('ttsOff');\r\n        } else {\r\n            $('.ttspeakerDiv').removeClass('ttsOff');\r\n\r\n            if(this.isPlaying && this.currentAudio){\r\n                this.currentAudio.audio.play();\r\n            }\r\n        \r\n            this.hostInstance.on(\"afterRenderMessage\", async (chatWindowData: { msgData: any; }) => {\r\n                var msgData = chatWindowData.msgData;\r\n                if (msgData?.type === \"bot_response\" && !this.hostInstance.minimized && !this.hostInstance.historyLoading) {\r\n                    if (msgData.message[0] && msgData.message[0].component && msgData.message[0].component.type === \"template\") {\r\n                        this._txtToSpeak = '';\r\n                    } else if (typeof (msgData.message[0] && msgData.message[0].component && msgData.message[0].component) == 'string') {\r\n                        this._txtToSpeak = msgData.message[0] && msgData.message[0].component && msgData.message[0].component;\r\n                    }\r\n                    else {\r\n                        try {\r\n                            this._txtToSpeak = msgData.message[0].component.payload.text ? msgData.message[0].component.payload.text.replace(/\\r?\\n/g, \". .\") : \"\";\r\n                            this._txtToSpeak = this.hostInstance.helpers.checkMarkdowns(this._txtToSpeak);\r\n                            // replacing extra new line or line characters\r\n                            this._txtToSpeak = this._txtToSpeak.replace('___', '<hr/>');\r\n                            this._txtToSpeak = this._txtToSpeak.replace('---', '<hr/>');\r\n                        } catch (e) {\r\n                            this._txtToSpeak = '';\r\n                        }\r\n                    }\r\n                    if (msgData.message[0].component && msgData.message[0].component.payload && msgData.message[0].component.payload.speech_hint) {\r\n                        this._txtToSpeak = msgData.message[0].component.payload.speech_hint;\r\n                    }\r\n\r\n  \r\n                    const audio: any = await this.textToSpeech(this._txtToSpeak).then(a => a.json());\r\n\r\n                    const audioObj: any = document.createElement('audio');\r\n                    if (!audio.audioContent) {\r\n                        return;\r\n                    }\r\n                    audioObj.setAttribute('src', 'data:audio/wav;base64,' + audio.audioContent);\r\n\r\n\r\n                    audioObj.addEventListener('ended', async (e: any) => {\r\n                        this.isPlaying = false;\r\n                    });\r\n\r\n                    audioObj.addEventListener('playing', async (e: any) => {\r\n                        this.isPlaying = true;\r\n     \r\n                    });\r\n                    audioList.push({ base64: audio.audioContent, audio: audioObj });\r\n                }\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    stop() {\r\n\r\n        clearInterval(this.audioInterval);\r\n        if(this.isPlaying && this.currentAudio){\r\n            this.currentAudio.audio.pause();\r\n        }\r\n\r\n    }\r\n\r\n\r\n    textToSpeech(text: string) {\r\n\r\n        return fetch('https://texttospeech.googleapis.com/v1/text:synthesize/?key=' + this.config.key, {\r\n            body: JSON.stringify({\r\n                'input': {\r\n                    'text': text\r\n                },\r\n                \"voice\":  this.config.voice,\r\n                \"audioConfig\": this.config.audioConfig\r\n            }),\r\n            headers: {\r\n                // Authorization: 'Bearer ' + this.config.key,\r\n                'Content-Type': 'application/json; charset=utf-8'\r\n            },\r\n            method: 'POST'\r\n        })\r\n    }\r\n\r\n    setCaretEnd(_this: any) {\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default GoogleTTS;\r\n\r\n\r\n","__webpack_require__.h = () => (\"74ee39026a68377afb34\")"],"names":[],"sourceRoot":""}